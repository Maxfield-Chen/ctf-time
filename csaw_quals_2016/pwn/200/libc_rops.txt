Gadgets information
============================================================
0x000000000017a5bc : adc ah, 0xf6 ; call rdx
0x0000000000186724 : adc ah, ah ; sti ; call qword ptr [rax]
0x000000000019973c : adc ah, bl ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000179341 : adc ah, dh ; inc dword ptr [rcx] ; sbb ah, dh ; jmp qword ptr [rbx]
0x000000000013959f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139609 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001aa7a8 : adc al, 0 ; add byte ptr [rax], al ; add al, 0xc6 ; add dword ptr [rax], eax ; ret
0x00000000001aa598 : adc al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x00000000001aa718 : adc al, 0 ; add byte ptr [rax], al ; je 0x1aa6ec ; add dword ptr [rax], eax ; ret
0x00000000001aa550 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000019a450 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a3158 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x4f ; add dword ptr [rax], eax ; ret 0xe7da
0x00000000001aa808 : adc al, 0 ; add byte ptr [rax], al ; mov byte ptr fs:[rcx], 0 ; ret
0x000000000019a500 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001a62c0 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x81 ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000000f0ffe : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000001aa928 : adc al, 0 ; add byte ptr [rax], al ; test al, bh ; add dword ptr [rax], eax ; push rax ; ret 0xfff8
0x00000000001aa538 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000001aa7d8 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0xc6 ; add dword ptr [rax], eax ; ret
0x0000000000066ad7 : adc al, 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000003078e : adc al, 0 ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x000000000003608e : adc al, 0 ; orpd xmm0, xmm1 ; ret
0x000000000007e012 : adc al, 0x10 ; add byte ptr [rcx - 0x173fce21], cl ; ret 0xff4f
0x0000000000142925 : adc al, 0x13 ; jmp rdx
0x0000000000097c55 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000005db14 : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000cb63d : adc al, 0x24 ; add rsp, 0x18 ; mov rax, rdx ; ret
0x00000000000bdc0e : adc al, 0x24 ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x0000000000031e1b : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000a0e93 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b28fb : adc al, 0x31 ; add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000b7318 : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000018d7c8 : adc al, 0x45 ; cli ; dec esp ; ret
0x000000000007edf0 : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009e5d0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000009f423 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000096ffb : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000021f3a : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000ffb63 : adc al, 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000018d948 : adc al, 0x68 ; cli ; call rsp
0x00000000001a50bc : adc al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x00000000000d15fa : adc al, 0x74 ; or byte ptr [rax - 0x7d], cl ; ret 0x3901
0x0000000000083e62 : adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000e19e1 : adc al, 0x80 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a63bc : adc al, 0x82 ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rdx]
0x000000000019683c : adc al, 0x85 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000fa58e : adc al, 0x89 ; ret
0x00000000000ebbd7 : adc al, 0x89 ; ret 0xdaf7
0x00000000000fd5b8 : adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000007528e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000dbe4a : adc al, 0x8d ; add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000000b530a : adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000006d295 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x000000000013aa30 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000013915e : adc al, 0x91 ; sub eax, edx ; ret
0x00000000001a73bc : adc al, 0x92 ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001974bc : adc al, 0x93 ; add byte ptr [rax], al ; call 0xffffffffd3195d55
0x0000000000142921 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005ffe4 : adc al, 0x95 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000000b4c6d : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000054b86 : adc al, 0x98 ; add rax, rdx ; jmp rax
0x00000000001a7bbc : adc al, 0x9a ; add dword ptr [rax], eax ; sub byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x0000000000188fb0 : adc al, 0x9b ; out dx, al ; jmp rsp
0x0000000000087027 : adc al, 0xa ; jmp r10
0x0000000000097dc3 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000064801 : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00000000000c286d : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x0000000000034c72 : adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x0000000000083577 : adc al, 0xb8 ; add rax, rdx ; jmp rax
0x0000000000199ebc : adc al, 0xbd ; add byte ptr [rax], al ; mov al, 0x1a ; out dx, al ; call qword ptr [rdi]
0x00000000001aa6bc : adc al, 0xc5 ; add dword ptr [rax], eax ; rcl ch, 1 ; cmc ; jmp qword ptr [rsi]
0x00000000000375b4 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x00000000000375d4 : adc al, 0xc7 ; xor eax, eax ; ret
0x00000000001ab4bc : adc al, 0xd3 ; add dword ptr [rax], eax ; shl ch, 1 ; cmc ; jmp rbx
0x000000000018e13c : adc al, 0xd4 ; add al, byte ptr [rax] ; and al, 0xdb ; std ; jmp rsp
0x000000000018dcf8 : adc al, 0xd6 ; cli ; jmp rsp
0x00000000000b00c2 : adc al, 0xe ; jne 0xb00bd ; ret
0x00000000001356cb : adc al, 0xe ; mov byte ptr [rax + rcx], dl ; ret
0x0000000000137271 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000002b63 : adc al, 0xe7 ; ret
0x00000000000cf306 : adc al, 0xe9 ; ret 0xfffa
0x000000000019cbbc : adc al, 0xea ; add byte ptr [rax], al ; mov al, 0xbf ; out dx, al ; jmp qword ptr [rax]
0x0000000000164c41 : adc al, 0xea ; test rdx, rdx ; je 0x164c51 ; call rdx
0x0000000000199d09 : adc al, 0xee ; jmp qword ptr [rcx]
0x000000000009ef99 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000019d1bc : adc al, 0xf0 ; add byte ptr [rax], al ; nop ; adc bh, dl ; call qword ptr [rax]
0x000000000010a22b : adc al, 0xf7 ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000018c441 : adc al, 0xf8 ; call rsp
0x00000000000ae4a4 : adc al, 0xf8 ; inc dword ptr [rbp + 0x79c789c0] ; ret
0x00000000001a51e9 : adc al, 0xf9 ; call qword ptr [rax]
0x0000000000186225 : adc al, 0xfb ; inc dword ptr [rax + 0x15] ; sti ; call qword ptr [rax]
0x0000000000164048 : adc al, 1 ; add byte ptr [rax], al ; ret
0x0000000000096a86 : adc al, 7 ; cmp edx, ecx ; je 0x96a87 ; ret
0x00000000000969b2 : adc al, 7 ; test dl, dl ; jne 0x969af ; ret
0x00000000001356ce : adc al, 8 ; ret
0x00000000000460ad : adc al, 9 ; ret 0xa274
0x000000000018678c : adc al, bl ; sti ; call qword ptr [rax - 0x3d]
0x0000000000139747 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001397b1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000055a0 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000000c2a2 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000edaa : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000004dd91 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x000000000000fa1c : adc al, byte ptr [rax] ; or al, 0 ; push rax ; call qword ptr [rax]
0x000000000000a1e4 : adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0x10
0x000000000000a9c4 : adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0xb
0x00000000000066bc : adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 7
0x000000000000f8e4 : adc al, byte ptr [rax] ; or al, 0 ; ret 0x10
0x000000000005f8b3 : adc al, byte ptr [rbx - 0x111743] ; call qword ptr [rax]
0x00000000000a74f7 : adc al, byte ptr [rbx - 0x76b3cf05] ; loopne 0xa7517 ; xchg eax, ebp ; ret 0x294c
0x00000000000ac664 : adc al, byte ptr [rbx - 0x76b3cf05] ; loopne 0xac684 ; xchg eax, ebp ; ret 0x294c
0x00000000000f96fa : adc al, byte ptr [rcx + 0x5d5b002c] ; pop r12 ; ret
0x0000000000099ac4 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000001af43d : adc al, byte ptr [rdx] ; add al, ah ; xchg dh, dh ; jmp rdx
0x00000000000b66c8 : adc al, ch ; ret 0x5e
0x00000000000b64c8 : adc al, ch ; ret 0x60
0x0000000000102a28 : adc al, ch ; ret 0xf1ca
0x00000000000f9cc8 : adc al, ch ; ret 0xf257
0x00000000000d1e28 : adc al, ch ; ret 0xf4d6
0x0000000000113253 : adc al, ch ; xchg eax, edi ; ret 0xfff0
0x00000000001866a8 : adc bh, ah ; sti ; call qword ptr [rax]
0x0000000000186219 : adc bh, bl ; call rax
0x0000000000003aaf : adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000a3768 : adc bh, byte ptr [rcx] ; ja 0xa377c ; cmove rax, rcx ; ret
0x000000000007386a : adc bh, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000115956 : adc bh, dh ; ret 0x8080
0x000000000019d1c1 : adc bh, dl ; call qword ptr [rax]
0x0000000000120d6d : adc bl, al ; nop ; mov dword ptr [rsi], 0xb ; ret
0x0000000000186211 : adc bl, bh ; inc dword ptr [rax + 0x11] ; sti ; call qword ptr [rax]
0x0000000000036738 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000008cbb5 : adc bl, ch ; call 0xffffffffc3d9550a
0x0000000000086d05 : adc bl, ch ; call 0xffffffffc400f65a
0x0000000000088505 : adc bl, ch ; call 0xffffffffc4010e5a
0x0000000000188349 : adc bl, ch ; call rsp
0x0000000000038a62 : adc bl, ch ; jno 0x38ab8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000008c4f5 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000009dbb6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009cf26 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009cf97 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009cef7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000f3137 : adc bl, dh ; ret
0x000000000009dbb5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009cf25 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000e346f : adc byte ptr [r13 + rcx*4 + 0x52], cl ; adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x0000000000108161 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x0000000000086932 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000074921 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000076fa3 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000000e23e2 : adc byte ptr [r8 + 0x39], cl ; ret
0x00000000000df25e : adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x00000000000726d2 : adc byte ptr [r8 + 1], cl ; ret 0x3948
0x00000000000bd308 : adc byte ptr [r8 + r9*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000000c3e25 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007901d : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000007994e : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000a0e0c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0e2e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0e6c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0eee : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000003aa0a : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000fbbdf : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000d4ab9 : adc byte ptr [rax + 0x39], cl ; ret 0x574
0x0000000000080254 : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000e3474 : adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x00000000000fbbde : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x000000000003606a : adc byte ptr [rax + 0x48d00148], al ; shr eax, 0x3f ; ret
0x00000000000e3456 : adc byte ptr [rax + 0x63], cl ; ret
0x0000000000187468 : adc byte ptr [rax + 0x7f90fffc], al ; cld ; call qword ptr [rax]
0x0000000000078e88 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f8fd1 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000123b0e : adc byte ptr [rax + 1], bh ; ret
0x00000000000a1efe : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000390de : adc byte ptr [rax + 1], cl ; ret
0x0000000000096ff6 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000726d3 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000003d397 : adc byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x000000000003d396 : adc byte ptr [rax + 1], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00000000000bd309 : adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000000a1014 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a0f12 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0e90 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000018779c : adc byte ptr [rax - 0x586f0004], ch ; cld ; call qword ptr [rax]
0x00000000000fd5b5 : adc byte ptr [rax - 0x73], cl ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000002f953 : adc byte ptr [rax - 0x73], cl ; add al, 0xb2 ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000010298a : adc byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rbp - 0x77] ; ret
0x00000000000916e4 : adc byte ptr [rax - 0x73], cl ; jg 0x91701 ; jne 0x916d8 ; ret
0x00000000000fdde3 : adc byte ptr [rax - 0x73], cl ; or al, 0xb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000fd5b4 : adc byte ptr [rax - 0x73], r9b ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000021f3d : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000002c3d3 : adc byte ptr [rax - 0x75], cl ; jl 0x2c403 ; or al, ch ; ret 0x5ab
0x0000000000091b0a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000009c90c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000074117 : adc byte ptr [rax - 0x77], cl ; jo 0x74135 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000011f49b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00000000000740d7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000070128 : adc byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000000740db : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000080811 : adc byte ptr [rax - 0x77], cl ; ret 0x58b
0x000000000010aef5 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000811da : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000001219e8 : adc byte ptr [rax - 0x77], cl ; ret 0xf9e9
0x0000000000157027 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000157063 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000986b4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x000000000010580c : adc byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000000c3e26 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000007dab3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000083d3c : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000091f86 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000f2151 : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000ebb25 : adc byte ptr [rax - 1], bh ; ret
0x00000000001874ec : adc byte ptr [rax - 4], ch ; call qword ptr [rax + 0x10fffc69]
0x0000000000187540 : adc byte ptr [rax - 4], dh ; call qword ptr [rax + 0x10fffc71]
0x000000000018f1bd : adc byte ptr [rax], al ; add al, ah ; fsubr st(1) ; call qword ptr [rdx]
0x00000000000f05db : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000005d46c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007a1d4 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a8a04 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013b9c1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139951 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000007901e : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000007994f : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000000ffb0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000ecd2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000e451c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000003d1dc : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000120cfa : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000011f3e5 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a1b49 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000017a6ed : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000005dc94 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x5dca9 ; ret
0x00000000001086d9 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000102523 : adc byte ptr [rax], al ; je 0x102536 ; xor eax, eax ; ret
0x0000000000135ee6 : adc byte ptr [rax], al ; jne 0x135f10 ; add rsp, 0x48 ; ret
0x000000000002c114 : adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x000000000006d17e : adc byte ptr [rax], al ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x000000000006d291 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x0000000000046e16 : adc byte ptr [rax], al ; ret
0x00000000001868fc : adc byte ptr [rax], cl ; cld ; inc dword ptr [rax] ; or bh, ah ; call rax
0x0000000000186998 : adc byte ptr [rax], dh ; cld ; push rax ; xor esp, edi ; call rax
0x00000000000a0e0d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0e2f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0e6d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0eef : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a0ff1 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000001086d8 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a3667 : adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x00000000000e3470 : adc byte ptr [rbp + rcx*4 + 0x52], cl ; adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x000000000019e720 : adc byte ptr [rbp - 0x10], dl ; call qword ptr [rsi]
0x0000000000166384 : adc byte ptr [rbp - 0x14], bh ; jmp rax
0x000000000008c678 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x00000000000916e8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000119ca7 : adc byte ptr [rbp - 0x49f0be01], al ; ret 0x48d
0x00000000001877b4 : adc byte ptr [rbp - 0x5b6f0004], ah ; cld ; call qword ptr [rax]
0x000000000005f8ba : adc byte ptr [rbp - 0x6bf001bf], cl ; ret 0xd284
0x00000000000ef121 : adc byte ptr [rbp - 0x7b], cl ; dec dword ptr [rbp - 0x7bf0fea8] ; ret 1
0x00000000000f5287 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000000a4a39 : adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x00000000001a4fb0 : adc byte ptr [rbp - 0xc], ch ; jmp qword ptr [rcx]
0x0000000000108162 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00000000000a3812 : adc byte ptr [rbp - 0xd], dh ; ret
0x00000000001874e4 : adc byte ptr [rbp - 4], ah ; call qword ptr [rax + 0x10fffc66]
0x0000000000187538 : adc byte ptr [rbp - 4], ch ; call qword ptr [rax + 0x10fffc6e]
0x00000000000ed29f : adc byte ptr [rbx + 0x1374a1f8], al ; neg eax ; pop rbx ; ret
0x00000000001aef23 : adc byte ptr [rbx + 0x1990302], al ; ret
0x0000000000108273 : adc byte ptr [rbx + 0x5d], bl ; and eax, 0xc ; pop r12 ; ret
0x000000000006cd4c : adc byte ptr [rbx + 0x5d], bl ; mov rax, r12 ; pop r12 ; ret
0x000000000008130b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000117963 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000034723 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019c393 : adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001903eb : adc byte ptr [rbx + 0xa4c0202], al ; ret
0x00000000001aef2e : adc byte ptr [rbx + 0xa550202], al ; ret
0x000000000012c42e : adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000007c5d2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012e1eb : adc byte ptr [rbx - 0x3d], bl ; nop ; ret
0x0000000000071407 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x71421 ; ret
0x00000000000a385f : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x00000000001ace64 : adc byte ptr [rbx - 0xb], bh ; jmp qword ptr [rdx]
0x0000000000178384 : adc byte ptr [rbx - 0xe], cl ; jmp qword ptr [rax]
0x00000000001874f4 : adc byte ptr [rbx - 4], ch ; call qword ptr [rax + 0x10fffc6c]
0x0000000000172980 : adc byte ptr [rbx], ah ; in al, dx ; call qword ptr [rax]
0x00000000000c2d46 : adc byte ptr [rbx], al ; add cl, ch ; ret 0xfffe
0x0000000000186880 : adc byte ptr [rbx], cl ; cld ; jmp rax
0x0000000000038639 : adc byte ptr [rcx + 0x29], cl ; ret
0x00000000000a366b : adc byte ptr [rcx + 0x39], al ; ret
0x00000000000a366a : adc byte ptr [rcx + 0x39], r8b ; ret
0x0000000000111a93 : adc byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x000000000011929b : adc byte ptr [rcx + 0x58b4838], cl ; ret
0x00000000000a60fa : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf983
0x000000000012c586 : adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x000000000006c982 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a0f72 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a0f52 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000004a5aa : adc byte ptr [rcx - 0x73], al ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000001641f7 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000acd24 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00000000001372f3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000013ae97 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000187460 : adc byte ptr [rcx - 0x7f6f0004], al ; cld ; call qword ptr [rax]
0x0000000000178508 : adc byte ptr [rcx - 0xe], bl ; jmp qword ptr [rax]
0x0000000000187518 : adc byte ptr [rcx - 4], ah ; call qword ptr [rax + 0x10fffc62]
0x0000000000187504 : adc byte ptr [rcx - 4], dh ; call qword ptr [rax + 0x10fffc72]
0x000000000018682c : adc byte ptr [rcx], 0xfc ; call qword ptr [rax]
0x00000000000af0f4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003cdd6 : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007c5d5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000121ab2 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f10e0 : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd6 ; ja 0xf10f9 ; ret
0x0000000000125ddf : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001949bc : adc byte ptr [rdi - 0x13], ch ; jmp qword ptr [rdx]
0x0000000000179f50 : adc byte ptr [rdi - 0x582c000b], ah ; cmc ; call rbx
0x00000000001877a4 : adc byte ptr [rdi - 0x596f0004], ah ; cld ; call qword ptr [rax]
0x00000000001786dc : adc byte ptr [rdi - 0xe], ch ; jmp qword ptr [rax]
0x0000000000178494 : adc byte ptr [rdi - 0xe], dl ; jmp qword ptr [rax]
0x0000000000187528 : adc byte ptr [rdi - 4], ah ; call qword ptr [rax + 0x10fffc68]
0x0000000000187470 : adc byte ptr [rdi - 4], bh ; call qword ptr [rax + 0x10fffc7e]
0x00000000001874d4 : adc byte ptr [rdi - 4], bl ; call qword ptr [rax + 0x10fffc60]
0x0000000000172a58 : adc byte ptr [rdi], ah ; in al, dx ; call qword ptr [rax]
0x0000000000186898 : adc byte ptr [rdi], al ; cld ; push rax ; or ah, bh ; call rax
0x00000000001a7c50 : adc byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x000000000002fe75 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010c5c2 : adc byte ptr [rdi], cl ; mov bh, 0xf6 ; or eax, esi ; bswap eax ; ret
0x0000000000086933 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x000000000012f789 : adc byte ptr [rdi], cl ; test byte ptr [rax + 0x1000001], al ; ret 0x894c
0x000000000015a108 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000000d40c4 : adc byte ptr [rdi], cl ; test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000162173 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001384e1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001385d1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001383f1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013fcfb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013e7ff : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000013f9ff : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f0ff : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f3ff : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013eaf7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138e39 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000138991 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000138121 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000138b71 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000138301 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000138d51 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000138c61 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001385a3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000138693 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001384b3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013eda4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f9a4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013fca4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f3a4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f0a4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013ea9c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000138211 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000013c13d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013bf5d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c935 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013b855 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013c755 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001383c3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001381e3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001382d3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001380f3 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000074922 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000003a3cd : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000ceb45 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x38b
0x0000000000074afe : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000003a3cc : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000000390d : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000142e19 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000018d610 : adc byte ptr [rdx + rdi*8], ah ; jmp rsp
0x0000000000049623 : adc byte ptr [rdx + rdx*8 + 0x394ce875], al ; ret
0x0000000000187988 : adc byte ptr [rdx - 0x5e7f0004], ah ; cld ; call qword ptr [rax]
0x00000000001874dc : adc byte ptr [rdx - 4], ah ; call qword ptr [rax + 0x10fffc63]
0x0000000000187530 : adc byte ptr [rdx - 4], ch ; call qword ptr [rax + 0x10fffc6b]
0x00000000001862e0 : adc byte ptr [rdx - 5], dl ; push rax ; push rbx ; sti ; call rax
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000000ebbdf : adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0xebb9f
0x00000000001ac3ab : adc byte ptr [rdx], al ; ret
0x000000000016085b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000186ac0 : adc byte ptr [rdx], dh ; cld ; jmp rax
0x00000000001a7e90 : adc byte ptr [rdx], dh ; cmc ; call qword ptr [rsi]
0x0000000000186218 : adc byte ptr [rdx], dl ; sti ; call rax
0x000000000016070a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000015fd05 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000087175 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d07b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009d10b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009d10a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a389c : adc byte ptr [rsi + rdi*8 + 0x438d48ff], cl ; cld ; pop rbx ; ret
0x0000000000177194 : adc byte ptr [rsi - 0x12], dh ; call qword ptr [rax]
0x00000000001771b0 : adc byte ptr [rsi - 0x12], dh ; push qword ptr [rax + 0x75] ; out dx, al ; call qword ptr [rax]
0x00000000001931f0 : adc byte ptr [rsi - 0x15], ah ; call qword ptr [rdi]
0x00000000001877ac : adc byte ptr [rsi - 0x5a6f0004], ah ; cld ; call qword ptr [rax]
0x00000000000fcaa5 : adc byte ptr [rsi - 0x7d], ah ; cli ; push qword ptr [rsi + rax - 0x7d] ; ret 0x6601
0x0000000000187478 : adc byte ptr [rsi - 4], bh ; call qword ptr [rax + 0x10fffc7d]
0x00000000001874fc : adc byte ptr [rsi - 4], ch ; call qword ptr [rax + 0x10fffc6f]
0x00000000001ab7b1 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x00000000001998e1 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xedf8
0x000000000019a6d9 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xee68
0x00000000001a0da1 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf17f
0x00000000001ab2a1 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf55b
0x00000000001acb69 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf57a
0x00000000001b2579 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf683
0x000000000018622c : adc byte ptr [rsi], dl ; sti ; jmp rax
0x000000000003d02a : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000187520 : adc byte ptr [rsp + rdi*8 - 1], ah ; nop ; cld ; call qword ptr [rax]
0x0000000000186830 : adc byte ptr [rsp + rdi*8], al ; call rax
0x00000000000b078a : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000039dff : adc byte ptr [rsp - 4], al ; ret
0x0000000000039e45 : adc byte ptr [rsp - 8], al ; ret
0x000000000013eda7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e47c8 : adc byte ptr gs:[rax - 0x77], cl ; ret
0x00000000001866a4 : adc ch, ah ; sti ; call qword ptr [rax]
0x00000000001991a0 : adc ch, bh ; in eax, dx ; call qword ptr [rax]
0x00000000001a6930 : adc ch, bl ; hlt ; call qword ptr [rdx]
0x000000000018e1c9 : adc ch, cl ; call rax
0x000000000019ab65 : adc ch, dh ; jmp qword ptr [rdx]
0x00000000001aa600 : adc ch, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000186778 : adc cl, 0xfb ; call rax
0x00000000000b14ed : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000b1472 : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000bd30d : adc cl, byte ptr [rax + 1] ; ret
0x0000000000038f74 : adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000097efd : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000850dc : adc cl, byte ptr [rax - 0x77] ; ret 0x348
0x00000000000f25d8 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000d19ed : adc cl, byte ptr [rax - 0x77] ; shr cl, 1 ; ret 0xfffd
0x00000000000ff8e4 : adc cl, byte ptr [rax - 0x7d] ; ret
0x0000000000086cf5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000028f41 : adc cl, byte ptr [rbp - 0x77] ; ret
0x00000000000d3d60 : adc cl, ch ; ret 0xfffc
0x000000000008b2e8 : adc cl, ch ; ret 0xfffd
0x00000000001a1110 : adc dh, 0xf1 ; call rsp
0x0000000000186728 : adc dh, ah ; sti ; call qword ptr [rax]
0x000000000008c594 : adc dh, bh ; ret
0x0000000000165e24 : adc dh, cl ; jmp 0x165e2a
0x0000000000165e28 : adc dh, cl ; jmp 0x165e2e
0x000000000011fc1e : adc dh, dh ; ret 0x7401
0x00000000000022d3 : adc dh, dl ; ret
0x00000000001b6440 : adc dl, dh ; cli ; call rcx
0x00000000000810f2 : adc dword ptr [rax + 0x29], ecx ; ret 0x3948
0x000000000008234f : adc dword ptr [rax + 0x29], ecx ; ror byte ptr [rax + 0x39], 1 ; ret
0x000000000008ae3b : adc dword ptr [rax + 0x39], ecx ; ret
0x000000000007e4d5 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000010836b : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x0000000000086937 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x00000000000d1b31 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4401
0x000000000013d34b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000018f395 : adc dword ptr [rax], eax ; add byte ptr [rax + 0x58], cl ; std ; jmp qword ptr [rax]
0x00000000001398e7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b859 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000016513b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x0000000000023feb : adc dword ptr [rax], eax ; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000002396a : adc dword ptr [rax], eax ; mov rdi, rbx ; call r15
0x000000000005f05e : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r13 ; jmp rax
0x000000000006465e : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000005e53e : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000647fd : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x000000000003d1b4 : adc dword ptr [rbp], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011bf56 : adc dword ptr [rbx - 0x75], eax ; adc r8d, dword ptr [rbx + rax*4] ; ret
0x000000000003ca66 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000046581 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000036154 : adc dword ptr [rdi], ecx ; ret
0x000000000003611d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000036482 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x0000000000032f9b : adc dword ptr [rdx + 5], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006f7fe : adc dword ptr [rip - 0x766b1500], esi ; ret 0x8b48
0x000000000011b04c : adc dword ptr [rsi], 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001398e6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a1efa : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x0000000000186229 : adc eax, 0x1610fffb ; sti ; jmp rax
0x00000000001335a7 : adc eax, 0x28c2e4 ; add rsp, 8 ; ret
0x000000000012ab19 : adc eax, 0x298d62 ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001211d2 : adc eax, 0x29c9a9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000010acd9 : adc eax, 0x2b7ae2 ; pop rbp ; ret
0x00000000000f38ce : adc eax, 0x2cdd5d ; add rsp, 8 ; ret
0x0000000000085d31 : adc eax, 0x33ae5a ; add rsp, 0x18 ; ret
0x000000000002ed91 : adc eax, 0x37ba0015 ; add dword ptr [rax], eax ; add al, ch ; ret 0xe
0x0000000000037bdd : adc eax, 0x3864be ; ret
0x000000000002ef89 : adc eax, 0x390cef ; ret
0x00000000000a2b8a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000266f1 : adc eax, 0x3d8d4800 ; ret
0x0000000000097b97 : adc eax, 0x48ffff49 ; mov eax, ebx ; pop rbx ; ret
0x0000000000021a18 : adc eax, 0x5b000001 ; pop rbp ; pop r12 ; ret
0x000000000009d8b8 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x000000000009efcc : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x0000000000139471 : adc eax, 0x83480000 ; ret 0xe910
0x00000000000c2977 : adc eax, 0x89000289 ; ret 0xc748
0x000000000010e3fc : adc eax, 0x8948002b ; ret 0xb9
0x00000000001955ed : adc eax, 0x98a00000 ; in eax, dx ; jmp rsi
0x0000000000022644 : adc eax, 0xd89003a ; ret
0x00000000000a2e8a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000f9cc2 : adc eax, dword ptr [rax] ; add bl, bl ; jl 0xf9cf4 ; adc al, ch ; ret 0xf257
0x000000000006eb8a : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000013d0ae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b679 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000034ed7 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000034c6e : adc eax, dword ptr [rax] ; movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x000000000011bf5a : adc eax, dword ptr [rbx + rax*4] ; ret
0x00000000000cb50d : adc eax, dword ptr [rcx + rcx*8 + 0x63480f75] ; ret 0x8948
0x000000000018955d : adc eax, dword ptr [rcx] ; add byte ptr [rdx + rcx - 0x11], dh ; jmp rsp
0x00000000001af535 : adc eax, dword ptr [rdx] ; add al, cl ; mov esi, esi ; jmp qword ptr [rdi]
0x000000000018bf75 : adc eax, dword ptr [rdx] ; add byte ptr [rdi], ah ; jp 0x18bf78 ; jmp rsp
0x0000000000099ac8 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000013ea9f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f9cc1 : adc eax, dword ptr gs:[rax] ; add bl, bl ; jl 0xf9cf5 ; adc al, ch ; ret 0xf257
0x00000000000383a9 : adc eax, eax ; ret
0x00000000000384e6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000174905 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000010bd60 : adc ebp, ebx ; ret
0x000000000019abad : adc ebp, esi ; jmp qword ptr [rdx]
0x000000000007394d : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001655d9 : adc ebx, dword ptr [rdi + 0x1f0fffeb] ; add bl, dh ; ret
0x0000000000186215 : adc ebx, edi ; call qword ptr [rax]
0x000000000003de40 : adc ecx, dword ptr [rax - 0x73] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e92fa : adc ecx, dword ptr [rax - 0x77] ; ret
0x000000000007c57c : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000a394c : adc ecx, dword ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001261cd : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011104a : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000031973 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000049a2b : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4c10
0x00000000000a354c : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000001adbce : adc ecx, dword ptr [rbx + 0xd1cfff5] ; mov r13d, esi ; jmp qword ptr [rdx]
0x000000000002bdb4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000004bdfe : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r11 + rax*8]
0x0000000000061616 : adc ecx, dword ptr [rcx + rax - 0xe] ; call qword ptr [r11 + rax*8]
0x00000000000a5c51 : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4104
0x00000000000b6fdb : adc ecx, dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0x8941
0x0000000000099c94 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x0000000000099cb4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x0000000000099cd4 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x0000000000099b1e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000018cea1 : adc edi, ecx ; call rsp
0x000000000018fcf5 : adc edx, ebp ; jmp qword ptr [rdx]
0x00000000000a5470 : adc esi, dword ptr [rbp + rcx - 0x77] ; ret 0xc9eb
0x0000000000175e1e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001ad299 : adc esi, esi ; jmp rbx
0x000000000007c0d1 : adc esi, esi ; ret 0xf02
0x000000000018682d : adc esp, edi ; call qword ptr [rax]
0x0000000000186ad1 : adc esp, edi ; call rax
0x000000000018684d : adc esp, edi ; jmp rax
0x000000000013ec82 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000008c4f4 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000013b7e0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011bf59 : adc r8d, dword ptr [rbx + rax*4] ; ret
0x00000000000384e5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008c593 : adc sil, r15b ; ret
0x00000000001a488b : add ah, ah ; add word ptr [rax], ax ; shl rdi, 1 ; jmp qword ptr [rax]
0x00000000001a1c8b : add ah, ah ; cmp al, byte ptr [rcx] ; add byte ptr [rax], al ; out dx, al ; int1 ; call qword ptr [rdx]
0x00000000001abb8b : add ah, ah ; fld dword ptr [rcx] ; add al, al ; out dx, eax ; cmc ; call qword ptr [rax]
0x000000000018a31f : add ah, ah ; iretd ; int1 ; jmp rsp
0x000000000018d0bf : add ah, ah ; jno 0x18d0c0 ; jmp rsp
0x00000000001a538b : add ah, ah ; jno 0x1a5398 ; add byte ptr [rax], dh ; jnp 0x1a538f ; jmp qword ptr [rcx]
0x000000000018db97 : add ah, ah ; mov bh, 0xfa ; call rsp
0x00000000001a9a8b : add ah, ah ; mov eax, 0x71700001 ; cmc ; call rsp
0x0000000000194a63 : add ah, ah ; or dword ptr [rax], eax ; add byte ptr [rax - 0x72], ch ; in eax, dx ; call qword ptr [rax]
0x000000000019d18b : add ah, ah ; out dx, eax ; add byte ptr [rax], al ; add cl, bl ; stc ; call qword ptr [rax]
0x00000000001898f7 : add ah, ah ; push rsp ; out dx, eax ; jmp rsp
0x00000000001a7e8b : add ah, ah ; pushfq ; add dword ptr [rax], eax ; adc byte ptr [rdx], dh ; cmc ; call qword ptr [rsi]
0x000000000018a047 : add ah, ah ; ret
0x000000000019a48b : add ah, ah ; ret 0
0x000000000018ae3f : add ah, ah ; sal ah, cl ; jmp rsp
0x00000000001888af : add ah, ah ; sbb esp, ebp ; jmp rsp
0x000000000018969f : add ah, ah ; xor ebp, edi ; call rsp
0x0000000000188f8f : add ah, al ; cdq ; out dx, al ; jmp rsp
0x000000000018d2cf : add ah, al ; lodsb al, byte ptr [rsi] ; stc ; jmp rsp
0x00000000001a6a6b : add ah, al ; mov byte ptr [rcx], al ; add al, ah ; fcompi st(4) ; jmp qword ptr [rcx]
0x0000000000187f47 : add ah, al ; mov edx, ebp ; jmp rsp
0x000000000018a7ff : add ah, al ; pop rbx ; jmp rsp
0x0000000000189287 : add ah, al ; ret
0x000000000019a46b : add ah, al ; ret 0
0x000000000019a36b : add ah, al ; rol dword ptr [rax], 0 ; mov al, 0x25 ; out dx, al ; jmp qword ptr [rax]
0x000000000018d67f : add ah, al ; sub edi, edx ; jmp rsp
0x00000000001a7d6b : add ah, al ; wait ; add dword ptr [rax], eax ; nop ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000000a1abe : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a1ae1 : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000a1b98 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a1a9d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001a50a3 : add ah, bh ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; or byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x0000000000193ea3 : add ah, bh ; pop rsp ; add byte ptr [rax], al ; call 0x22192b51
0x00000000001ab4a3 : add ah, bh ; rol byte ptr [rcx], cl ; add al, bl ; in eax, -0xb ; call qword ptr [rax]
0x00000000001a0aa3 : add ah, bh ; sub byte ptr [rcx], al ; add byte ptr [rax - 0x33], ch ; int1 ; jmp qword ptr [rax]
0x000000000019b9a3 : add ah, bh ; xlatb ; add byte ptr [rax], al ; xor rbp, rsi ; call qword ptr [rsi]
0x00000000001b0283 : add ah, bl ; and byte ptr [rdx], al ; add byte ptr [rax + 0x51], bl ; sti ; call rsi
0x00000000001b4e83 : add ah, bl ; insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; fadd dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x0000000000194e83 : add ah, bl ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cwde ; xchg eax, ebp ; in eax, dx ; jmp qword ptr [rax]
0x00000000001aa883 : add ah, bl ; mov byte ptr [rcx], 0 ; js 0x1aa868 ; cmc ; jmp qword ptr [rsi]
0x00000000001a6a83 : add ah, bl ; mov byte ptr [rcx], al ; add al, bh ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a5183 : add ah, bl ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; sub byte ptr [rsi - 0xc], dh ; jmp qword ptr [rcx]
0x00000000001aa583 : add ah, bl ; ret
0x00000000001a7d83 : add ah, bl ; wait ; add dword ptr [rax], eax ; test al, 0x30 ; cmc ; jmp qword ptr [rcx]
0x000000000019e237 : add ah, byte ptr [rdi + 0xa] ; ret
0x0000000000099b1b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000018f393 : add ah, ch ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x58], cl ; std ; jmp qword ptr [rax]
0x0000000000192393 : add ah, ch ; add byte ptr [r8], al ; call 0x11190e5e
0x0000000000192693 : add ah, ch ; add byte ptr [rax], r8b ; mov byte ptr [rdi], cl ; jmp 0x1926a3
0x00000000001aba93 : add ah, ch ; fadd dword ptr [rcx] ; add byte ptr [rax - 0x13], cl ; cmc ; jmp qword ptr [rax]
0x00000000001a4b93 : add ah, ch ; imul eax, dword ptr [rcx], 0xf4639800 ; jmp qword ptr [rax]
0x00000000001ad293 : add ah, ch ; lock add dword ptr [rax], eax ; call 0xffffffffe41ac8b8
0x0000000000199293 : add ah, ch ; mov al, 0 ; add byte ptr [rax + 1], bl ; out dx, al ; jmp rax
0x00000000001adfa3 : add ah, ch ; stc ; add dword ptr [rax], eax ; jmp qword ptr [rdi]
0x00000000001a7b73 : add ah, cl ; cdq ; add dword ptr [rax], eax ; or byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a1b73 : add ah, cl ; cmp dword ptr [rcx], eax ; add al, ch ; out -0xf, eax ; jmp rsi
0x000000000019ba73 : add ah, cl ; fadd dword ptr [rax] ; add al, bh ; out dx, al ; call rsp
0x000000000019ce73 : add ah, cl ; in al, dx ; add byte ptr [rax], al ; js 0x19ce6e ; out dx, al ; call qword ptr [rax]
0x00000000001a5073 : add ah, cl ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0x6e ; hlt ; jmp qword ptr [rcx]
0x000000000019a983 : add ah, cl ; ret
0x00000000001afd73 : add ah, cl ; sbb eax, dword ptr [rdx] ; add al, bh ; mov dh, 0xf6 ; call qword ptr [rdi]
0x00000000001882c7 : add ah, dh ; add ch, bl ; jmp rsp
0x000000000018b9f7 : add ah, dh ; and dh, bh ; call rsp
0x000000000018d327 : add ah, dh ; mov al, 0xf9 ; jmp rsp
0x00000000001aa89b : add ah, dh ; mov byte ptr [rcx], 0 ; nop ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001a519b : add ah, dh ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; jbe 0x1a519f ; jmp qword ptr [rcx]
0x000000000018abe7 : add ah, dh ; ret
0x000000000019a8ab : add ah, dh ; ret 0
0x000000000018a03f : add ah, dh ; ret 0xfff0
0x00000000001aa49b : add ah, dh ; ret 1
0x000000000019919b : add ah, dh ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; adc ch, bh ; in eax, dx ; call qword ptr [rax]
0x000000000018baaf : add ah, dh ; sub al, 0xf7 ; jmp rsp
0x00000000001b227b : add ah, dl ; add al, byte ptr [rax] ; push rax ; and esi, edi ; call qword ptr [rdx]
0x0000000000192b7b : add ah, dl ; add byte ptr [r8], al ; add byte ptr [rcx - 0x15], al ; call rdx
0x0000000000192e7b : add ah, dl ; add byte ptr [rax], r8b ; loopne 0x192ee4 ; jmp 0x192e8b
0x00000000001a4d7b : add ah, dl ; imul eax, dword ptr [rcx], 0 ; xor byte ptr [rsi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000018a467 : add ah, dl ; jb 0x18a461 ; jmp rsp
0x00000000001a5f7b : add ah, dl ; jge 0x1a5f88 ; add byte ptr [rax - 0x44], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001a5d7b : add ah, dl ; jnp 0x1a5d88 ; add byte ptr [rax - 0x49], dh ; hlt ; call rdi
0x000000000018b407 : add ah, dl ; mov esi, esi ; jmp rsp
0x0000000000188a2f : add ah, dl ; push rdi ; in eax, dx ; call rsp
0x000000000018a36f : add ah, dl ; sal cl, 1 ; call rsp
0x000000000018c5ff : add ah, dl ; sub edi, eax ; call rsp
0x000000000006f855 : add al, 0 ; add bl, dh ; ret
0x00000000000273ba : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x000000000012642d : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000048e08 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000059e7f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000113ae8 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000137a2d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c579 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137a51 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000004a00 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x00000000000f5c6c : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000011ffef : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000a2f13 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000003aa16 : add al, 0 ; add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret
0x0000000000127107 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005d21f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000110e26 : add al, 0 ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call rax
0x0000000000042c79 : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc801
0x0000000000102189 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00000000000c09d5 : add al, 0 ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000096964 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000968c4 : add al, 0 ; mov rax, rdi ; ret
0x00000000001089c9 : add al, 0 ; ret
0x0000000000046e15 : add al, 0x10 ; add bl, dh ; ret
0x0000000000125d70 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x00000000000a1b1d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000b0712 : add al, 0x16 ; add rsp, 0x18 ; ret
0x00000000000fd5bb : add al, 0x16 ; ret
0x0000000000023169 : add al, 0x17 ; add al, ch ; jmp rsp
0x0000000000097c51 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000883ba : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000023968 : add al, 0x23 ; adc dword ptr [rax], eax ; mov rdi, rbx ; call r15
0x000000000012ceda : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000010a0cd : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x3875
0x0000000000133a25 : add al, 0x24 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000124f15 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f09f8 : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000fd484 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fd4e5 : add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000001203e9 : add al, 0x24 ; call qword ptr [r11]
0x0000000000027943 : add al, 0x24 ; call qword ptr [rbx]
0x00000000000cc9d8 : add al, 0x24 ; call rbx
0x00000000000a35c3 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002276a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fa373 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000021f61 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000036b51 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000196b84 : add al, 0x2b ; add byte ptr [rax], al ; call 0x12195943
0x0000000000117ddf : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x00000000000a0cc9 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0cdb : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008a89e : add al, 0x31 ; ret
0x0000000000113741 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000007e2ba : add al, 0x34 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000008a79a : add al, 0x37 ; ret
0x000000000001f5f3 : add al, 0x3a ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000750ff : add al, 0x3a ; ret
0x00000000001a20ac : add al, 0x3f ; add dword ptr [rax], eax ; xor dh, bh ; int1 ; jmp qword ptr [rcx]
0x00000000000a177d : add al, 0x41 ; pop rsp ; ret
0x00000000001220ab : add al, 0x48 ; add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000e4164 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000096975 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000096985 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009f26b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x0000000000096925 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000011810e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000015c879 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000015c88b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000074663 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000776d8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000745be : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000014ccda : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000780fc : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000782b2 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000074454 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000968e5 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000096885 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000088b74 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000021fda : add al, 0x49 ; lea edi, dword ptr [rsi + rdx] ; call rax
0x000000000018c7d0 : add al, 0x4a ; clc ; call rsp
0x00000000001079f4 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000116a1a : add al, 0x5b ; ret
0x000000000018a034 : add al, 0x5c ; add dword ptr [rax], eax ; ret 0xfff0
0x000000000018ca54 : add al, 0x5f ; add al, byte ptr [rax] ; ret 0xf880
0x000000000015c887 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000099bac : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000188cb8 : add al, 0x6b ; out dx, al ; call rsp
0x00000000001a4fac : add al, 0x6e ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], ch ; jmp qword ptr [rcx]
0x000000000002f96d : add al, 0x72 ; or bl, dh ; ret
0x00000000000dbc59 : add al, 0x74 ; add al, 0xa8 ; add dword ptr [rbx + rcx*4 - 0xa], esi ; ret 0x7408
0x00000000000800d9 : add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x00000000000d1e55 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xd1e69 ; xor eax, eax ; ret
0x00000000000d2744 : add al, 0x75 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d1cfb : add al, 0x75 ; jb 0xd1cf9 ; ret 0x7408
0x000000000002bdb2 : add al, 0x77 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000084042 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000efcb2 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002fe50 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002fe70 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002fdb0 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002fe30 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002fd50 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002fdf0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002fd90 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002fdd0 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002fef0 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002fd70 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002fe10 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002fd30 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000d62de : add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x000000000006c75c : add al, 0x80 ; add rax, r8 ; jmp rax
0x0000000000054a57 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000000a1ca5 : add al, 0x81 ; je 0xa1c85 ; ret
0x000000000013915b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000a1ca1 : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xa1c89 ; ret
0x000000000013aa33 : add al, 0x81 ; sub eax, edx ; ret
0x000000000009679a : add al, 0x82 ; add r10, rax ; jmp r10
0x000000000002de6e : add al, 0x82 ; add r8, rdx ; jmp r8
0x0000000000022b6e : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000a1c5a : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa1c48 ; ret
0x000000000008eec7 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000034edb : add al, 0x83 ; add rax, rbx ; jmp rax
0x00000000000285e1 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000000000735f4 : add al, 0x83 ; loopne 0x735fd ; ret
0x00000000000712a2 : add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x000000000011bf5b : add al, 0x83 ; ret
0x00000000000d0f9f : add al, 0x83 ; ret 0x4101
0x0000000000037403 : add al, 0x83 ; rol byte ptr [rcx], 0xf7 ; ret 0
0x00000000000a1d82 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xa1d80 ; ret
0x00000000000a380e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x000000000004727e : add al, 0x86 ; add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x000000000006c81c : add al, 0x86 ; add rsi, rax ; jmp rsi
0x000000000006d0ba : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000127096 : add al, 0x87 ; add rdi, rax ; jmp rdi
0x00000000000a3566 : add al, 0x87 ; test r8d, r8d ; jne 0xa3540 ; ret
0x000000000015c876 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000099b8b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000967f7 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x00000000000373b1 : add al, 0x89 ; enter 0xf44, 0x45 ; ret 0x8d48
0x0000000000048c8a : add al, 0x89 ; ret
0x00000000000e4bc3 : add al, 0x89 ; ret 0xeeeb
0x00000000000a1c5d : add al, 0x8a ; je 0xa1c45 ; ret
0x00000000000a4a37 : add al, 0x8b ; adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x0000000000099b74 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000018cb10 : add al, 0x8b ; clc ; jmp rsp
0x000000000006d361 : add al, 0x8b ; cmp byte ptr [rax - 0x77], cl ; ret 0x778d
0x000000000006d22b : add al, 0x8b ; cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x00000000000a3550 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x0000000000053810 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000d7982 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000010c6e9 : add al, 0x8d ; je 0x10c725 ; ror byte ptr [rax - 0x7d], 1 ; ret 0xf01
0x00000000001aa2ad : add al, 0x8e ; add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x000000000004dd95 : add al, 0x90 ; add rax, r12 ; jmp rax
0x000000000005f062 : add al, 0x90 ; add rax, r13 ; jmp rax
0x00000000001a7cac : add al, 0x9b ; add dword ptr [rax], eax ; jo 0x1a7ce8 ; cmc ; jmp qword ptr [rcx]
0x00000000000fdde9 : add al, 0xa ; ret
0x000000000018d248 : add al, 0xa0 ; stc ; jmp rsp
0x0000000000030792 : add al, 0xa2 ; add rdx, rax ; jmp rdx
0x00000000000dbc5b : add al, 0xa8 ; add dword ptr [rbx + rcx*4 - 0xa], esi ; ret 0x7408
0x000000000002f956 : add al, 0xb2 ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000012e5c3 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000300d8 : add al, 0xb8 ; ret
0x00000000000a1a69 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x00000000001211d9 : add al, 0xc2 ; jmp rax
0x00000000000a3783 : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000054f2f : add al, 0xc6 ; add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000001aa7ac : add al, 0xc6 ; add dword ptr [rax], eax ; ret
0x00000000000c7636 : add al, 0xce ; jmp 0xc7600
0x00000000000bcb33 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001653a4 : add al, 0xd4 ; and eax, 0 ; add bl, dh ; ret
0x00000000000375f7 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000002d1fb : add al, 0xd8 ; test rax, rax ; je 0x2d20b ; call rax
0x000000000003843d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x38499
0x0000000000039bcd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x39c29
0x00000000001ac4ac : add al, 0xe3 ; add dword ptr [rax], eax ; cmp ch, 0xf5 ; call qword ptr [rax]
0x00000000001a8fa4 : add al, 0xe3 ; hlt ; jmp qword ptr [rdx]
0x00000000001ac5ac : add al, 0xe4 ; add dword ptr [rax], eax ; add ch, bh ; cmc ; jmp rsp
0x00000000000aebc7 : add al, 0xe8 ; ret
0x0000000000028f6c : add al, 0xe9 ; mov esp, 0x89fffffc ; ret 0xe283
0x00000000000e42d7 : add al, 0xeb ; ret 0xf66
0x000000000002fd55 : add al, 0xf ; mov bh, 0xc0 ; ret
0x0000000000097a61 : add al, 0xf ; mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000013726d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000013cd05 : add al, 0xf ; sub rax, rdx ; ret
0x0000000000133412 : add al, 0xf ; test byte ptr [rcx - 0x7d000000], bl ; ret 0x8380
0x00000000000a2a95 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000009d68b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000dc8e9 : add al, 0xf ; xchg dword ptr [rax - 0x76fffff4], esi ; ret 0x8d48
0x00000000000dfbc6 : add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000000af502 : add al, 0xf ; xchg eax, ebp ; ret 0xc0e9
0x00000000000af356 : add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x0000000000110ced : add al, 0xf ; xchg eax, esi ; ret
0x00000000001a2231 : add al, 0xf2 ; call rdi
0x000000000014d043 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000005dc9b : add al, 0xf3 ; ret
0x0000000000179145 : add al, 0xf4 ; call qword ptr [rdi]
0x0000000000179141 : add al, 0xf4 ; dec edx ; add al, 0xf4 ; call qword ptr [rdi]
0x00000000001887d8 : add al, 0xf6 ; jmp 0x1887de
0x0000000000037671 : add al, 0xf6 ; ret 0x7402
0x000000000008c639 : add al, 0xf6 ; ret 0x7408
0x000000000018b8e9 : add al, 0xf7 ; jmp rsp
0x000000000018c309 : add al, 0xf8 ; jmp rsp
0x00000000001b51d9 : add al, 0xfb ; jmp qword ptr [rdx]
0x00000000001867f1 : add al, 0xfc ; call qword ptr [rax]
0x0000000000186831 : add al, 0xfc ; call rax
0x00000000001867d1 : add al, 0xfc ; jmp qword ptr [rax]
0x000000000007084b : add al, 0xff ; or dh, byte ptr [rbp + 0x23] ; mov eax, r8d ; pop rbx ; ret
0x000000000007119a : add al, 0xff ; or dh, byte ptr [rbp + 0x3f] ; ret
0x0000000000071294 : add al, 0xff ; or dh, byte ptr [rbp + 0x43] ; mov eax, esi ; ret
0x000000000007205f : add al, 0xff ; or dh, byte ptr [rbp + 0x60] ; pop rbx ; ret
0x00000000000704ff : add al, 0xff ; or dh, byte ptr [rbp + 0x63] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005dce4 : add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x00000000001147db : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000a2ac8 : add al, 1 ; add byte ptr [rax], al ; ret
0x000000000018df98 : add al, 1 ; cld ; call rsp
0x000000000005dc3a : add al, 1 ; ret
0x000000000005dcba : add al, 1 ; xor eax, eax ; ret
0x0000000000160f67 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x0000000000054f31 : add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000009d7d8 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000056dc5 : add al, 7 ; add dword ptr [rax - 0x77], ecx ; dec byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000086d8d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000002f959 : add al, 7 ; ret
0x0000000000096a56 : add al, 7 ; test r8b, r8b ; jne 0x96a48 ; ret
0x0000000000072ed3 : add al, 8 ; add byte ptr [rax], al ; ret
0x0000000000097dbf : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001b18bf : add al, ah ; add dh, bh ; call qword ptr [rdi]
0x000000000019d0ff : add al, ah ; cld ; stc ; call qword ptr [rax]
0x00000000001a7c1f : add al, ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a6a6f : add al, ah ; fcompi st(4) ; jmp qword ptr [rcx]
0x000000000018f1bf : add al, ah ; fsubr st(1) ; call qword ptr [rdx]
0x00000000001a1dff : add al, ah ; int1 ; jmp qword ptr [rdx]
0x000000000019215f : add al, ah ; mov al, 0xea ; call qword ptr [rsi]
0x00000000001b402f : add al, ah ; mov dh, bh ; call qword ptr [rdx]
0x0000000000192e7f : add al, ah ; pop rdx ; jmp 0x192e87
0x000000000001b40f : add al, ah ; ret
0x000000000001b127 : add al, ah ; ret 0x3b
0x00000000001af43f : add al, ah ; xchg dh, dh ; jmp rdx
0x0000000000194eff : add al, ah ; xchg eax, ebp ; in eax, dx ; call qword ptr [rax]
0x00000000001a752f : add al, al ; and ch, dh ; jmp qword ptr [rsi]
0x00000000001add3f : add al, al ; and dh, dh ; call rdi
0x00000000001a830f : add al, al ; cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000001a1c0f : add al, al ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x00000000001aae2f : add al, al ; loopne 0x1aae2c ; call qword ptr [rax]
0x00000000001afbbf : add al, al ; mov bl, 0xf6 ; call qword ptr [rcx]
0x000000000019221f : add al, al ; mov cl, 0xea ; call qword ptr [rdx]
0x0000000000008957 : add al, al ; or byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001abb8f : add al, al ; out dx, eax ; cmc ; call qword ptr [rax]
0x000000000001b3af : add al, al ; ret
0x000000000001b0c7 : add al, al ; ret 0x3b
0x00000000001aa8cf : add al, al ; salc ; cmc ; jmp qword ptr [rsi]
0x000000000019fb4f : add al, al ; sbb cl, dh ; jmp qword ptr [rcx]
0x00000000001a7eef : add al, al ; xor dh, ch ; jmp qword ptr [rcx]
0x00000000001a7c37 : add al, bh ; cmc ; jmp qword ptr [rcx]
0x000000000019eff7 : add al, bh ; fcompi st(0) ; jmp rax
0x00000000001a6a87 : add al, bh ; fcompi st(4) ; jmp qword ptr [rcx]
0x0000000000194807 : add al, bh ; jle 0x1947fc ; jmp rcx
0x00000000001afd77 : add al, bh ; mov dh, 0xf6 ; call qword ptr [rdi]
0x00000000001b44d7 : add al, bh ; nop ; idiv edi ; ret
0x000000000019ba77 : add al, bh ; out dx, al ; call rsp
0x000000000001b16f : add al, bh ; ret 0x3b
0x000000000019a457 : add al, bh ; sub ch, dh ; call qword ptr [rsi]
0x00000000001a8327 : add al, bl ; cmp esi, ebp ; jmp rbx
0x00000000001b5d67 : add al, bl ; fdivrp st(7) ; call rdi
0x00000000001ab4a7 : add al, bl ; in eax, -0xb ; call qword ptr [rax]
0x000000000019dee7 : add al, bl ; lahf ; out dx, eax ; call qword ptr [rdi]
0x00000000001a4bc7 : add al, bl ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x000000000009dadb : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000001b3f7 : add al, bl ; ret
0x000000000001b10f : add al, bl ; ret 0x3b
0x00000000001affa7 : add al, bl ; ret 0xfff6
0x00000000001aa8e7 : add al, bl ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001a7f07 : add al, bl ; xor dh, ch ; jmp qword ptr [rcx]
0x000000000018c7cd : add al, byte ptr [r8] ; add al, 0x4a ; clc ; call rsp
0x000000000013fb82 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001b2b55 : add al, byte ptr [r8] ; cmp byte ptr [rbx - 9], cl ; call qword ptr [rbx]
0x00000000001b2ac5 : add al, byte ptr [r8] ; or byte ptr [rbx - 9], cl ; jmp qword ptr [rax]
0x0000000000086cf1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000018d7c6 : add al, byte ptr [rax] ; adc al, 0x45 ; cli ; dec esp ; ret
0x000000000018d946 : add al, byte ptr [rax] ; adc al, 0x68 ; cli ; call rsp
0x000000000018dcf6 : add al, byte ptr [rax] ; adc al, 0xd6 ; cli ; jmp rsp
0x000000000018d60e : add al, byte ptr [rax] ; adc byte ptr [rdx + rdi*8], ah ; jmp rsp
0x00000000001b643e : add al, byte ptr [rax] ; adc dl, dh ; cli ; call rcx
0x000000000018c7ce : add al, byte ptr [rax] ; add al, 0x4a ; clc ; call rsp
0x000000000018cb0e : add al, byte ptr [rax] ; add al, 0x8b ; clc ; jmp rsp
0x000000000018d246 : add al, byte ptr [rax] ; add al, 0xa0 ; stc ; jmp rsp
0x000000000007f5b5 : add al, byte ptr [rax] ; add al, ch ; ret
0x000000000002fea7 : add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000028e94 : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000fa376 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x000000000008bb93 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000042937 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d7dd6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000857b2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000b3c87 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e6a91 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x4c6
0x000000000008b85e : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000347e6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f2aaa : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000137bcd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a7f1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137bf1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000035a5f : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000011b140 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001245ff : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000127ecf : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000012761f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000132ed2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012abbd : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000f60dc : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f5e4f : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000000f5d1b : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000000f5c93 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000129751 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x000000000012cedc : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000fc725 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a2ef3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bcde7 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095356 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x000000000007235f : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000038109 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000030f93 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7af0fa08], al ; ret 0xfffa
0x0000000000163774 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000a7828 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000c0f00 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000018dc6e : add al, byte ptr [rax] ; add ecx, eax ; cli ; call rsp
0x000000000018d7ce : add al, byte ptr [rax] ; and al, 0x45 ; cli ; jmp rsp
0x000000000018d066 : add al, byte ptr [rax] ; and al, 0x69 ; stc ; call rsp
0x000000000018d076 : add al, byte ptr [rax] ; and al, 0x6a ; stc ; jmp rsp
0x000000000018d9fe : add al, byte ptr [rax] ; and al, 0x6e ; cli ; jmp rsp
0x000000000018dbbe : add al, byte ptr [rax] ; and al, 0xbb ; cli ; jmp rsp
0x000000000018e13e : add al, byte ptr [rax] ; and al, 0xdb ; std ; jmp rsp
0x000000000018d50e : add al, byte ptr [rax] ; and al, 0xfc ; stc ; jmp rsp
0x000000000018c6de : add al, byte ptr [rax] ; clc ; jmp rsp
0x00000000001afd76 : add al, byte ptr [rax] ; clc ; mov dh, 0xf6 ; call qword ptr [rdi]
0x00000000001b44d6 : add al, byte ptr [rax] ; clc ; nop ; idiv edi ; ret
0x000000000018d7ae : add al, byte ptr [rax] ; cli ; call rsp
0x000000000018d666 : add al, byte ptr [rax] ; cli ; jmp rsp
0x00000000001b2b56 : add al, byte ptr [rax] ; cmp byte ptr [rbx - 9], cl ; call qword ptr [rbx]
0x00000000001aeab6 : add al, byte ptr [rax] ; cmp byte ptr [rdx - 0xa], bl ; call qword ptr [rdi]
0x00000000001b4f56 : add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x000000000018c92e : add al, byte ptr [rax] ; cwde ; push 0xf8 ; jmp rsp
0x00000000001b1586 : add al, byte ptr [rax] ; div rsi ; call qword ptr [rbx]
0x00000000001b4e86 : add al, byte ptr [rax] ; fadd dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x000000000018d326 : add al, byte ptr [rax] ; hlt ; mov al, 0xf9 ; jmp rsp
0x000000000018cd56 : add al, byte ptr [rax] ; idiv al ; jmp rsp
0x000000000018dcde : add al, byte ptr [rax] ; in al, -0x2c ; cli ; jmp rsp
0x000000000018db96 : add al, byte ptr [rax] ; in al, -0x49 ; cli ; call rsp
0x000000000018d0be : add al, byte ptr [rax] ; in al, 0x71 ; stc ; jmp rsp
0x000000000018c34e : add al, byte ptr [rax] ; in al, 5 ; clc ; call rsp
0x000000000018bf2e : add al, byte ptr [rax] ; jae 0x18bf2f ; call rsp
0x000000000018ca66 : add al, byte ptr [rax] ; je 0x18c9f2 ; clc ; call rsp
0x0000000000096945 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000018d136 : add al, byte ptr [rax] ; mov ah, 0x7f ; stc ; call rsp
0x000000000018d17e : add al, byte ptr [rax] ; mov ah, 0x87 ; stc ; jmp rsp
0x000000000018cc26 : add al, byte ptr [rax] ; mov ah, 0xa6 ; clc ; jmp rsp
0x000000000018dd4e : add al, byte ptr [rax] ; mov ah, 0xdb ; cli ; jmp rsp
0x000000000018db6e : add al, byte ptr [rax] ; mov bl, 0xfa ; call rsp
0x00000000001b3436 : add al, byte ptr [rax] ; mov byte ptr [rbp - 9], ah ; jmp qword ptr [rbx]
0x00000000001b3466 : add al, byte ptr [rax] ; mov byte ptr [rsi - 9], ah ; call rdi
0x00000000000968a5 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000018cdf6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; add ecx, edi ; jmp rsp
0x000000000018da3e : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x18da42 ; jmp rsp
0x000000000018c4c6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0xf8 ; jmp rsp
0x000000000015fc7b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018c37e : add al, byte ptr [rax] ; or al, bh ; jmp rsp
0x00000000001b2ac6 : add al, byte ptr [rax] ; or byte ptr [rbx - 9], cl ; jmp qword ptr [rax]
0x00000000001b1d06 : add al, byte ptr [rax] ; or byte ptr [rdi + rsi*8], cl ; call qword ptr [rsi]
0x000000000018cd0e : add al, byte ptr [rax] ; out -8, eax ; call rsp
0x0000000000111063 : add al, byte ptr [rax] ; pop r12 ; ret
0x000000000018c876 : add al, byte ptr [rax] ; pop rax ; clc ; call rsp
0x00000000001b0286 : add al, byte ptr [rax] ; pop rax ; push rcx ; sti ; call rsi
0x00000000000733d7 : add al, byte ptr [rax] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f7ec2 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000018c9ae : add al, byte ptr [rax] ; pop rsp ; je 0x18c9b0 ; jmp rsp
0x00000000001b227e : add al, byte ptr [rax] ; push rax ; and esi, edi ; call qword ptr [rdx]
0x000000000018c83e : add al, byte ptr [rax] ; push rax ; clc ; call rsp
0x00000000001afd0e : add al, byte ptr [rax] ; push rax ; mov ch, 0xf6 ; call qword ptr [rax]
0x000000000018c236 : add al, byte ptr [rax] ; push rdi ; jmp rsp
0x000000000018ce9e : add al, byte ptr [rax] ; push rsp ; adc edi, ecx ; call rsp
0x000000000018cdc6 : add al, byte ptr [rax] ; push rsp ; cld ; clc ; jmp rsp
0x000000000018c5d6 : add al, byte ptr [rax] ; push rsp ; sub al, bh ; jmp rsp
0x000000000018d41e : add al, byte ptr [rax] ; rcl esp, 1 ; stc ; jmp rsp
0x000000000018c48e : add al, byte ptr [rax] ; ret 0xf81a
0x000000000018ca56 : add al, byte ptr [rax] ; ret 0xf880
0x000000000018cafe : add al, byte ptr [rax] ; ret 0xf88a
0x00000000001aff86 : add al, byte ptr [rax] ; ret 0xfff6
0x00000000001b634e : add al, byte ptr [rax] ; sal ch, 0xf7 ; call rdx
0x00000000001b51d6 : add al, byte ptr [rax] ; sbb byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x00000000001b0e8e : add al, byte ptr [rax] ; sbb dh, 0xf6 ; jmp qword ptr [rcx]
0x000000000018ca16 : add al, byte ptr [rax] ; stc ; js 0x18ca18 ; call rsp
0x000000000018c61e : add al, byte ptr [rax] ; test byte ptr [rax], dh ; clc ; call rsp
0x000000000018be3e : add al, byte ptr [rax] ; test byte ptr [rbx - 9], ah ; jmp rsp
0x000000000018bd56 : add al, byte ptr [rax] ; test byte ptr [rcx - 9], cl ; jmp rsp
0x000000000018cd3e : add al, byte ptr [rax] ; test dh, al ; clc ; call rsp
0x000000000018c43e : add al, byte ptr [rax] ; xchg eax, esp ; adc al, 0xf8 ; call rsp
0x000000000018ceee : add al, byte ptr [rax] ; xor al, 0x2a ; stc ; jmp rsp
0x000000000018cb86 : add al, byte ptr [rax] ; xor al, 0x96 ; clc ; call rsp
0x000000000018db0e : add al, byte ptr [rax] ; xor al, 0xa9 ; cli ; jmp rsp
0x000000000018ddd6 : add al, byte ptr [rax] ; xor al, 0xe4 ; cli ; call rsp
0x000000000018c286 : add al, byte ptr [rax] ; xor al, 1 ; clc ; call rsp
0x000000000018c306 : add al, byte ptr [rax] ; xor al, 4 ; clc ; jmp rsp
0x00000000001080ae : add al, byte ptr [rcx + 0x39] ; ret
0x000000000011d51e : add al, byte ptr [rcx + 0x5c] ; sub eax, 1 ; pop r13 ; ret
0x0000000000197870 : add al, byte ptr [rcx + 0xa] ; ret
0x000000000010409f : add al, byte ptr [rcx - 0x77] ; call 0xffffffffc3554ff3
0x0000000000104bd2 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000114832 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000000373a2 : add al, byte ptr [rdi + rcx + 0x45] ; ret 0x8944
0x000000000019b685 : add al, byte ptr [rdx] ; clc ; ret
0x0000000000117ad2 : add al, byte ptr [rdx] ; cmp rcx, rax ; sbb eax, eax ; ret
0x000000000019c5cd : add al, byte ptr [rdx] ; ret
0x00000000001960d5 : add al, byte ptr [rdx] ; xchg eax, edi ; ret
0x000000000009d8da : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000018c34d : add al, byte ptr cs:[rax] ; in al, 5 ; clc ; call rsp
0x000000000018c5d5 : add al, byte ptr ds:[rax] ; push rsp ; sub al, bh ; jmp rsp
0x00000000000b3c86 : add al, byte ptr es:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018cb0d : add al, byte ptr fs:[rax] ; add al, 0x8b ; clc ; jmp rsp
0x000000000018cafd : add al, byte ptr fs:[rax] ; ret 0xf88a
0x000000000018c48d : add al, byte ptr ss:[rax] ; ret 0xf81a
0x00000000001ad297 : add al, ch ; adc esi, esi ; jmp rbx
0x0000000000048769 : add al, ch ; add dword ptr [rbp - 0x76b7fffb], esi ; ret 0xffb8
0x0000000000025515 : add al, ch ; add eax, 0xe9fffff4 ; ret
0x0000000000023860 : add al, ch ; cli ; ret
0x00000000001a8237 : add al, ch ; cmp dh, ch ; jmp qword ptr [rcx]
0x00000000000c0f8e : add al, ch ; fdivr qword ptr [rax - 0x76b70005] ; ret
0x00000000001246c8 : add al, ch ; imul edi, ebp, 0x89c085ff ; ret
0x000000000010bc7d : add al, ch ; int 0xc3
0x0000000000092c7c : add al, ch ; jle 0x92c50 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000129e4b : add al, ch ; jmp rcx
0x000000000002316b : add al, ch ; jmp rsp
0x00000000001273c1 : add al, ch ; jns 0x12735f ; lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000002eccd : add al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x00000000001a5cd7 : add al, ch ; mov ah, 0xf4 ; call qword ptr [rsi]
0x00000000001a5b47 : add al, ch ; mov al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a5c37 : add al, ch ; mov bl, 0xf4 ; jmp qword ptr [rcx]
0x00000000001974bf : add al, ch ; mov eax, ebp ; call rdx
0x000000000008abef : add al, ch ; mov ebx, 0x39fffacf ; ret
0x00000000001a28b7 : add al, ch ; mov edx, esi ; jmp qword ptr [rcx]
0x00000000000488dc : add al, ch ; mov esi, 0x5b0005b5 ; ret
0x00000000001948c7 : add al, ch ; mov gs, ebp ; call qword ptr [rdx]
0x0000000000048826 : add al, ch ; mov spl, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000b39b6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff7
0x00000000001a1b77 : add al, ch ; out -0xf, eax ; jmp rsi
0x00000000001232a4 : add al, ch ; out 0xc1, al ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000123289 : add al, ch ; push rcx ; ret 0xffef
0x0000000000193ea7 : add al, ch ; pushfq ; in al, dx ; jmp qword ptr [rcx]
0x000000000001b427 : add al, ch ; ret
0x000000000001b13f : add al, ch ; ret 0x3b
0x00000000000bf3b8 : add al, ch ; ret 0x48c
0x00000000000afcb8 : add al, ch ; ret 0x583
0x000000000003a1b8 : add al, ch ; ret 0xcde
0x000000000002ed98 : add al, ch ; ret 0xe
0x0000000000088878 : add al, ch ; ret 0xfa7d
0x0000000000083a18 : add al, ch ; ret 0xfb99
0x0000000000129378 : add al, ch ; ret 0xffd9
0x0000000000081248 : add al, ch ; ret 0xffdb
0x00000000000b32a7 : add al, ch ; ret 0xfff6
0x00000000000438bc : add al, ch ; sahf ; ret
0x0000000000196b87 : add al, ch ; scasd eax, dword ptr [rdi] ; in eax, dx ; call qword ptr [rcx]
0x00000000000f7e61 : add al, ch ; sub r9b, dil ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d8c57 : add al, ch ; xchg eax, ebx ; fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x000000000011f4b8 : add al, ch ; xchg eax, edx ; ret 0
0x000000000008ab65 : add al, ch ; xor eax, 0x39fffad0 ; ret
0x00000000001aa297 : add al, cl ; cdq ; cmc ; call rsp
0x00000000001946e7 : add al, cl ; clc ; in al, dx ; call qword ptr [rax]
0x00000000001a7c07 : add al, cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8447 : add al, cl ; cmc ; jmp rdi
0x00000000001a6a57 : add al, cl ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001b3bb7 : add al, cl ; jl 0x1b3bb6 ; call qword ptr [rdx]
0x00000000001aae17 : add al, cl ; loopne 0x1aae14 ; call qword ptr [rax]
0x00000000001afbd7 : add al, cl ; mov bl, 0xf6 ; jmp qword ptr [rcx]
0x0000000000192207 : add al, cl ; mov cl, 0xea ; call qword ptr [rax]
0x00000000001af537 : add al, cl ; mov esi, esi ; jmp qword ptr [rdi]
0x000000000001b3c7 : add al, cl ; ret
0x000000000001b0df : add al, cl ; ret 0x3b
0x00000000001962c7 : add al, cl ; test al, 0xed ; jmp rbx
0x00000000001a7e47 : add al, cl ; xor ebp, esi ; jmp qword ptr [rcx]
0x00000000001a69af : add al, dh ; fdivrp st(4) ; jmp qword ptr [rcx]
0x0000000000192cdf : add al, dh ; jmp 0x192ce7
0x00000000001a5cef : add al, dh ; mov ah, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a4bdf : add al, dh ; movsxd rsi, esp ; jmp qword ptr [rbx]
0x0000000000006e3f : add al, dh ; ret
0x000000000001b157 : add al, dh ; ret 0x3b
0x00000000001aa8ff : add al, dh ; salc ; cmc ; jmp qword ptr [rsi]
0x000000000018f6df : add al, dl ; add ebp, edx ; call qword ptr [rdi]
0x00000000001ab4bf : add al, dl ; in eax, -0xb ; jmp rbx
0x000000000017825f : add al, dl ; jl 0x178267 ; push rax ; jge 0x17826b ; call qword ptr [rax]
0x00000000001a532f : add al, dl ; jp 0x1a532b ; jmp qword ptr [rcx]
0x00000000001a5b2f : add al, dl ; mov al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a289f : add al, dl ; mov edx, esi ; jmp qword ptr [rcx]
0x000000000001b3df : add al, dl ; ret
0x000000000001b0f7 : add al, dl ; ret 0x3b
0x0000000000129371 : add ax, 0xbe00 ; mov ebp, 0xe8000186 ; ret 0xffd9
0x000000000001a2df : add bh, ah ; ret 0x17
0x00000000001b7557 : add bh, al ; add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x000000000019b686 : add bh, al ; ret
0x000000000001e29f : add bh, al ; ret 0x17
0x0000000000165c5f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001b66f7 : add bh, bh ; inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x0000000000123a4c : add bh, bh ; loope 0x1239e5 ; ret
0x00000000000b0065 : add bh, bh ; ret
0x000000000007a3ad : add bh, bh ; xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000001866d8 : add bh, bl ; sti ; jmp rax
0x00000000000e4e02 : add bh, byte ptr [rax + 0x16] ; jbe 0xe4e19 ; ret
0x0000000000039d94 : add bh, byte ptr [rax + 1] ; ret
0x00000000000f2375 : add bh, byte ptr [rax - 1] ; ret
0x0000000000163b42 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000000f09cf : add bh, dh ; fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x00000000000c0991 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, rdi ; ret
0x00000000000c361d : add bh, dh ; ret
0x000000000001e317 : add bh, dh ; ret 0x17
0x0000000000036477 : add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x000000000019a6e4 : add bh, dl ; in eax, dx ; jmp qword ptr [rdx]
0x000000000001a2af : add bh, dl ; ret 0x17
0x00000000001866c0 : add bl, ah ; sti ; call rax
0x00000000000a2c10 : add bl, al ; lea rax, qword ptr [rip + 0xbc9c7] ; ret
0x00000000000a37d4 : add bl, al ; lea rax, qword ptr [rip + 0xc0383] ; ret
0x000000000008be84 : add bl, al ; lea rax, qword ptr [rip + 0xd6563] ; ret
0x00000000000d0abe : add bl, al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x0000000000114828 : add bl, al ; mov eax, 0x100 ; nop ; ret
0x00000000000c355c : add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000097a11 : add bl, al ; mov r10, r8 ; jmp 0x97a0d
0x00000000000c24ac : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000f05dd : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000123c59 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000135c3a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000a4a15 : add bl, al ; ret
0x000000000012779e : add bl, al ; xor eax, eax ; ret
0x0000000000179c77 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00000000000f9cc4 : add bl, bl ; jl 0xf9cf2 ; adc al, ch ; ret 0xf257
0x00000000000c632b : add bl, byte ptr [r11 + 0x5d] ; ret
0x00000000001aa4ad : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000c632c : add bl, byte ptr [rbx + 0x5d] ; ret
0x00000000001ab1dc : add bl, byte ptr [rbx - 0xb] ; jmp qword ptr [rdx]
0x00000000000c72f2 : add bl, byte ptr [rcx - 0x7c0608bf] ; ret 0x8d01
0x000000000018e724 : add bl, byte ptr [rsi - 0x17] ; jmp qword ptr [rdx]
0x00000000000218f4 : add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x0000000000046e44 : add bl, ch ; ret
0x00000000000ba0c6 : add bl, ch ; ret 0x1f0f
0x0000000000044ee3 : add bl, ch ; ret 0x2e66
0x00000000000265b5 : add bl, ch ; ret 0x8b48
0x0000000000133c29 : add bl, ch ; ror dword ptr [rdi], 0x1f ; add bl, sil ; ret
0x000000000009de8f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009de9f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000021c82 : add bl, dh ; ret
0x00000000000800a4 : add bl, dl ; loopne 0x80035 ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000189467 : add bl, dl ; std ; out dx, al ; jmp rsp
0x00000000000979c6 : add bl, sil ; ret
0x00000000001946e3 : add byte ptr [0xfffffffff8c80000], bh ; in al, dx ; call qword ptr [rax]
0x00000000001948c5 : add byte ptr [eax], al ; call 0x13193661
0x00000000000c2647 : add byte ptr [r13 + rbp - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000bd9ae : add byte ptr [r13 - 0x77], 0x64 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000059c70 : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000011a623 : add byte ptr [r8 - 0x7d], r9b ; ret 0x3108
0x0000000000029e99 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x0000000000192b7d : add byte ptr [r8], al ; add byte ptr [rcx - 0x15], al ; call rdx
0x0000000000192365 : add byte ptr [r8], al ; call 0x11190e2c
0x0000000000192395 : add byte ptr [r8], al ; call 0x11190e5c
0x0000000000192b4d : add byte ptr [r8], al ; cmp byte ptr [rdx], 0xfa ; jmp qword ptr [rcx]
0x0000000000198a05 : add byte ptr [r8], al ; fdiv st(0) ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000e3662 : add byte ptr [r9], r15b ; ret 0x870f
0x000000000011482e : add byte ptr [rax + 0x102b8c3], dl ; add byte ptr [rax], al ; ret
0x000000000018620f : add byte ptr [rax + 0x10], dh ; sti ; inc dword ptr [rax + 0x11] ; sti ; call qword ptr [rax]
0x000000000003640b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000c256f : add byte ptr [rax + 0x20], bh ; ret
0x00000000001a75d7 : add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rdx]
0x000000000019b7e7 : add byte ptr [rax + 0x26], ch ; out dx, al ; jmp rcx
0x0000000000028e84 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000d4012 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b55f5 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000514d2 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000000273bc : add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x000000000007d4d5 : add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000001a783f : add byte ptr [rax + 0x2a], al ; cmc ; jmp qword ptr [rcx]
0x000000000019a507 : add byte ptr [rax + 0x2b], bh ; out dx, al ; call qword ptr [rdx]
0x00000000001a7987 : add byte ptr [rax + 0x2b], ch ; cmc ; call qword ptr [rax]
0x00000000001a7957 : add byte ptr [rax + 0x2b], cl ; cmc ; jmp qword ptr [rcx]
0x000000000019a4cf : add byte ptr [rax + 0x2b], dh ; out dx, al ; call qword ptr [rdx]
0x00000000001a7acf : add byte ptr [rax + 0x2d], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ae7 : add byte ptr [rax + 0x2d], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7c97 : add byte ptr [rax + 0x2f], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7caf : add byte ptr [rax + 0x2f], dh ; cmc ; jmp qword ptr [rcx]
0x000000000000b447 : add byte ptr [rax + 0x2f], dl ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a7dff : add byte ptr [rax + 0x31], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ebf : add byte ptr [rax + 0x32], ah ; cmc ; jmp qword ptr [rcx]
0x000000000019b9a7 : add byte ptr [rax + 0x33], cl ; out dx, al ; call qword ptr [rsi]
0x00000000001a8027 : add byte ptr [rax + 0x35], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a803f : add byte ptr [rax + 0x35], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a811f : add byte ptr [rax + 0x38], dh ; cmc ; jmp qword ptr [rax]
0x0000000000076f79 : add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x000000000002748b : add byte ptr [rax + 0x39], cl ; ret
0x000000000002c234 : add byte ptr [rax + 0x39], cl ; ret 0x7773
0x000000000007e2bc : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007896f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000e5392 : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000108240 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000007ffc7 : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x00000000001a8233 : add byte ptr [rax + 0x3ae80001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a824b : add byte ptr [rax + 0x3b000001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a8263 : add byte ptr [rax + 0x3b180001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a82c7 : add byte ptr [rax + 0x3b], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000c25bf : add byte ptr [rax + 0x40], bh ; ret
0x000000000019ffe7 : add byte ptr [rax + 0x42], bh ; int1 ; jmp qword ptr [rcx]
0x00000000001860fd : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a8497 : add byte ptr [rax + 0x45], ch ; cmc ; jmp rax
0x000000000019d2bf : add byte ptr [rax + 0x49], ah ; out dx, eax ; jmp qword ptr [rsi]
0x00000000001a00d7 : add byte ptr [rax + 0x49], bl ; int1 ; call qword ptr [rdx]
0x00000000001b0287 : add byte ptr [rax + 0x51], bl ; sti ; call rsi
0x000000000018f397 : add byte ptr [rax + 0x58], cl ; std ; jmp qword ptr [rax]
0x000000000001f5f5 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000eb36f : add byte ptr [rax + 0x5f], bh ; syscall ; ret
0x00000000000fa378 : add byte ptr [rax + 0x5f], bl ; call rax
0x00000000000b5307 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000006d292 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000c2bc2 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000034c6f : add byte ptr [rax + 0x63], cl ; adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x0000000000083574 : add byte ptr [rax + 0x63], cl ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x000000000006465f : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000005e53f : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000034ed8 : add byte ptr [rax + 0x63], cl ; add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000006d0b7 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000127093 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rdi, rax ; jmp rdi
0x000000000004dd92 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r12 ; jmp rax
0x000000000005f05f : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r13 ; jmp rax
0x00000000000a1a66 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000006d17f : add byte ptr [rax + 0x63], cl ; or al, 0x8e ; add rsi, rcx ; jmp rsi
0x0000000000034c07 : add byte ptr [rax + 0x63], cl ; ret
0x0000000000130937 : add byte ptr [rax + 0x63], cl ; ret 0x14c
0x000000000005e63a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000210d2 : add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000d6306 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000447fe : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000000c8b84 : add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x000000000013cb43 : add byte ptr [rax + 0x63], cl ; ret 0xf66
0x0000000000047d3d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000c1d0f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x0000000000193267 : add byte ptr [rax + 0x67], cl ; jmp 0x19326f
0x00000000000c1d2f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000c1d1f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000c1d3f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x0000000000188aef : add byte ptr [rax + 0x6cffed65], ch ; mov byte ptr [rax], 0 ; ret
0x000000000019bd67 : add byte ptr [rax + 0x6d], bh ; out dx, al ; call qword ptr [rdi]
0x00000000001a502f : add byte ptr [rax + 0x6e], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a5047 : add byte ptr [rax + 0x6e], bh ; hlt ; jmp qword ptr [rcx]
0x00000000000c1cff : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000001a5017 : add byte ptr [rax + 0x6e], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000c1f3f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x00000000001a9a8f : add byte ptr [rax + 0x71], dh ; cmc ; call rsp
0x00000000001a3d3f : add byte ptr [rax + 0x72], dl ; jmp rax
0x0000000000086cef : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000046ff7 : add byte ptr [rax + 0x752fff78], al ; xor cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x00000000001a519f : add byte ptr [rax + 0x76], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a51b7 : add byte ptr [rax + 0x76], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001b392f : add byte ptr [rax + 0x76], dl ; idiv edi ; ret 0
0x000000000009e3df : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000001a53bf : add byte ptr [rax + 0x7b], ah ; hlt ; jmp qword ptr [rcx]
0x000000000016637f : add byte ptr [rax + 0x7d], al ; in al, dx ; call qword ptr [rax]
0x00000000000c24a7 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000c23fa : add byte ptr [rax + 0x7f], bh ; ret
0x000000000019f987 : add byte ptr [rax + 0xb], bl ; int1 ; jmp rcx
0x00000000001ad0de : add byte ptr [rax + 0xd1cfff5], al ; fdivr dword ptr [rbp - 0xb] ; jmp qword ptr [rdx]
0x00000000001a72ff : add byte ptr [rax + 0xd], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a72e7 : add byte ptr [rax + 0xd], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000fa7ef : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x00000000001903e8 : add byte ptr [rax + 0xe], dl ; adc byte ptr [rbx + 0xa4c0202], al ; ret
0x000000000002fdf4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000007a723 : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a705 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000079022 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00000000000867f7 : add byte ptr [rax + 0xf], cl ; ret 0x4b80
0x000000000008c452 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000004fd94 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000b2bc4 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000011a072 : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c24bf : add byte ptr [rax + 0xfc17], bh ; ret
0x000000000002c04f : add byte ptr [rax + 1], bh ; ret
0x0000000000199297 : add byte ptr [rax + 1], bl ; out dx, al ; jmp rax
0x000000000008bb95 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003e04e : add byte ptr [rax + 1], cl ; ret
0x00000000000a54ef : add byte ptr [rax + 1], cl ; ret 0x1a75
0x0000000000095c9f : add byte ptr [rax + 1], cl ; ret 0x8348
0x00000000000b0487 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000df0a9 : add byte ptr [rax + 1], cl ; ret 0x8d4c
0x000000000012144f : add byte ptr [rax + 2], bh ; ret
0x00000000001b52bf : add byte ptr [rax + 3], ah ; sti ; jmp qword ptr [rdx]
0x0000000000046e3f : add byte ptr [rax + 3], bh ; jmp 0x46e11
0x00000000001a222b : add byte ptr [rax + rax*2 + 0x4a00001], al ; call rdi
0x0000000000192203 : add byte ptr [rax + rax*2], bl ; add al, cl ; mov cl, 0xea ; call qword ptr [rax]
0x000000000019221b : add byte ptr [rax + rax*2], dh ; add al, al ; mov cl, 0xea ; call qword ptr [rdx]
0x00000000001ac12b : add byte ptr [rax + rax*4 - 0x78fffff], ch ; cmc ; call qword ptr [rcx]
0x000000000003196f : add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000c0397 : add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x000000000009da5c : add byte ptr [rax + rax], 0 ; ret
0x000000000000733f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001adf9f : add byte ptr [rax + rax], al ; add ah, ch ; stc ; add dword ptr [rax], eax ; jmp qword ptr [rdi]
0x000000000019a97f : add byte ptr [rax + rax], al ; add ah, cl ; ret
0x000000000019a8a7 : add byte ptr [rax + rax], al ; add ah, dh ; ret 0
0x00000000000049ff : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x000000000005d21e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001aa497 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; ret 1
0x00000000001aa507 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret
0x0000000000081161 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000081321 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000000fa1d : add byte ptr [rax + rax], cl ; push rax ; call qword ptr [rax]
0x000000000000a1e5 : add byte ptr [rax + rax], cl ; push rax ; ret 0x10
0x000000000000452d : add byte ptr [rax + rax], cl ; push rax ; ret 0xb
0x00000000000066bd : add byte ptr [rax + rax], cl ; push rax ; ret 7
0x000000000000f8e5 : add byte ptr [rax + rax], cl ; ret 0x10
0x00000000001aa597 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; ret
0x00000000001aa54f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000019a44f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000019a4ff : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001aa537 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000018c5d7 : add byte ptr [rax + rbp - 8], dl ; jmp rsp
0x000000000018ba1f : add byte ptr [rax + rbp - 9], al ; jmp rsp
0x00000000000a34a5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000018d947 : add byte ptr [rax + rbp*2], dl ; cli ; call rsp
0x000000000018c877 : add byte ptr [rax + rbx*2 - 8], al ; call rsp
0x000000000018aaa7 : add byte ptr [rax + rbx*4 - 0xd], dh ; jmp rsp
0x00000000001979eb : add byte ptr [rax + rbx*4], al ; add byte ptr [rax], dh ; ret
0x00000000000ffb2d : add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000c3b2a : add byte ptr [rax + rcx + 0xf], dh ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000018c37f : add byte ptr [rax + rcx - 8], ah ; jmp rsp
0x00000000000f3c7d : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x00000000001a2a53 : add byte ptr [rax + rcx*2 - 0x72c7ffff], ch ; call qword ptr [rcx]
0x0000000000047596 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001a29db : add byte ptr [rax + rcx*2], dh ; add dword ptr [rax], eax ; mov edx, dr0 ; jmp qword ptr [rdi]
0x00000000001a69f3 : add byte ptr [rax + rcx*4 + 1], cl ; add byte ptr [rax - 0x21], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a6a53 : add byte ptr [rax + rcx*4 - 0x2037ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a6a3b : add byte ptr [rax + rcx*4 - 0x204fffff], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001a69c3 : add byte ptr [rax + rcx*4], bl ; add dword ptr [rax], eax ; or bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001891a7 : add byte ptr [rax + rdi*4 - 0x12], ah ; call rsp
0x0000000000193263 : add byte ptr [rax + rdx*2 + 0x67480000], bh ; jmp 0x193273
0x000000000018c83f : add byte ptr [rax + rdx*2 - 8], ah ; call rsp
0x00000000001931eb : add byte ptr [rax + rdx*2], al ; add byte ptr [rax], dl ; jmp 0x1931fb
0x0000000000193203 : add byte ptr [rax + rdx*2], bl ; add byte ptr [rax], bl ; jmp 0x193213
0x00000000001a51e3 : add byte ptr [rax + rsi*2], bh ; add dword ptr [rax], eax ; mov byte ptr [rcx + rdi*8], dl ; call qword ptr [rax]
0x00000000001b51d3 : add byte ptr [rax + rsi*2], ch ; add al, byte ptr [rax] ; sbb byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x00000000001a51b3 : add byte ptr [rax + rsi*2], cl ; add dword ptr [rax], eax ; pop rax ; jbe 0x1a51b7 ; jmp qword ptr [rcx]
0x000000000019d1bb : add byte ptr [rax + rsi*8], dl ; add byte ptr [rax], al ; nop ; adc bh, dl ; call qword ptr [rax]
0x00000000001aba97 : add byte ptr [rax - 0x13], cl ; cmc ; jmp qword ptr [rax]
0x0000000000188a6f : add byte ptr [rax - 0x13], dh ; dec esp ; ret
0x000000000019ce77 : add byte ptr [rax - 0x14], bh ; out dx, al ; call qword ptr [rax]
0x00000000001a3017 : add byte ptr [rax - 0x15], bh ; jmp rdx
0x00000000001261dd : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x000000000011231c : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x894c
0x0000000000031cbe : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b4c
0x00000000001ab927 : add byte ptr [rax - 0x17], bh ; cmc ; call qword ptr [rax]
0x00000000001ab8f7 : add byte ptr [rax - 0x17], ch ; cmc ; call qword ptr [rax]
0x00000000001ab93f : add byte ptr [rax - 0x17], dh ; cmc ; call qword ptr [rax]
0x00000000000e6ad3 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b49
0x00000000001ab6bf : add byte ptr [rax - 0x18], ah ; cmc ; call qword ptr [rax]
0x00000000001ab6d7 : add byte ptr [rax - 0x18], bl ; cmc ; call qword ptr [rbx]
0x00000000001ab6a7 : add byte ptr [rax - 0x18], ch ; cmc ; call qword ptr [rax]
0x00000000001a1967 : add byte ptr [rax - 0x1d], ch ; int1 ; call rsp
0x00000000001a69f7 : add byte ptr [rax - 0x21], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a68cf : add byte ptr [rax - 0x24], dh ; hlt ; call qword ptr [rax]
0x000000000019cc4f : add byte ptr [rax - 0x26], ah ; out dx, al ; jmp rdx
0x00000000001aa86f : add byte ptr [rax - 0x2a], ah ; cmc ; jmp qword ptr [rsi]
0x00000000001aa887 : add byte ptr [rax - 0x2a], bh ; cmc ; jmp qword ptr [rsi]
0x00000000001aa857 : add byte ptr [rax - 0x2a], cl ; cmc ; jmp qword ptr [rsi]
0x00000000001aa62f : add byte ptr [rax - 0x2b], al ; cmc ; jmp qword ptr [rsi]
0x00000000001aa647 : add byte ptr [rax - 0x2b], bl ; cmc ; jmp qword ptr [rsi]
0x0000000000197e87 : add byte ptr [rax - 0x2b], ch ; in eax, dx ; call rcx
0x00000000001aa65f : add byte ptr [rax - 0x2b], dh ; cmc ; jmp qword ptr [rsi]
0x0000000000037791 : add byte ptr [rax - 0x2d], cl ; loopne 0x377e7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001a0aa7 : add byte ptr [rax - 0x33], ch ; int1 ; jmp qword ptr [rax]
0x00000000001a641f : add byte ptr [rax - 0x34], dh ; hlt ; jmp qword ptr [rcx]
0x0000000000035537 : add byte ptr [rax - 0x39], cl ; ret
0x00000000000b13d4 : add byte ptr [rax - 0x39], cl ; ret 0
0x00000000000b1324 : add byte ptr [rax - 0x39], cl ; ret 0x400
0x0000000000070186 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000a2eff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a2edf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a2f3f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000a2eef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a2f2f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001aa71f : add byte ptr [rax - 0x3d], al ; clc ; jmp qword ptr [rsi]
0x00000000001a62c7 : add byte ptr [rax - 0x3d], bl ; hlt ; jmp qword ptr [rsi]
0x0000000000036715 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000001784ef : add byte ptr [rax - 0x3f000da8], dh ; pop rax ; call rax
0x000000000003666e : add byte ptr [rax - 0x3f28f09a], dl ; and eax, 8 ; ret
0x00000000000f2cf6 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003646a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x00000000000ff6e1 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000beb8f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000001a6057 : add byte ptr [rax - 0x42], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a5f7f : add byte ptr [rax - 0x44], dh ; hlt ; jmp qword ptr [rcx]
0x000000000019ca6f : add byte ptr [rax - 0x45], dh ; out dx, al ; jmp qword ptr [rdx]
0x00000000000b5194 : add byte ptr [rax - 0x46], cl ; ret
0x00000000001a5e07 : add byte ptr [rax - 0x47], cl ; hlt ; call rdi
0x000000000003e824 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001a5d7f : add byte ptr [rax - 0x49], dh ; hlt ; call rdi
0x0000000000196337 : add byte ptr [rax - 0x57], cl ; in eax, dx ; call rcx
0x000000000019c5df : add byte ptr [rax - 0x68], ah ; out dx, al ; call qword ptr [rdx]
0x00000000000c42e8 : add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x000000000017abe8 : add byte ptr [rax - 0x6fef0006], dl ; cli ; jmp qword ptr [rax]
0x0000000000194a67 : add byte ptr [rax - 0x72], ch ; in eax, dx ; call qword ptr [rax]
0x00000000000c7633 : add byte ptr [rax - 0x73], cl ; add al, 0xce ; jmp 0xc7603
0x000000000002202f : add byte ptr [rax - 0x73], cl ; add eax, 0x15a154 ; ret
0x000000000002203f : add byte ptr [rax - 0x73], cl ; add eax, 0x15c12b ; ret
0x00000000000f94fe : add byte ptr [rax - 0x73], cl ; add eax, 0x2c82b2 ; ret
0x00000000000f933e : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8472 ; ret
0x0000000000023042 : add byte ptr [rax - 0x73], cl ; and qword ptr [rax - 0x77], rcx ; ret 0x8948
0x00000000000a34ef : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000a34ff : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000001120af : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2b0ec9 ; call rax
0x00000000000a34df : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000f540f : add byte ptr [rax - 0x73], cl ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000046333 : add byte ptr [rax - 0x73], cl ; xor eax, 0x195 ; call rax
0x000000000006f7e8 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007c488 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe480 ; call rax
0x000000000007c088 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe880 ; call rax
0x000000000007add8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffb30 ; call rax
0x000000000006fb44 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcd4 ; call rax
0x000000000007ab70 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd98 ; call rax
0x00000000001a29df : add byte ptr [rax - 0x74], al ; jmp qword ptr [rdi]
0x00000000000e23df : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; ret
0x000000000007daaf : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001211d6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000000e538f : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000487a1 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000b2fe7 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000001336ff : add byte ptr [rax - 0x75], cl ; add eax, 0x2883f9 ; jmp rax
0x0000000000135224 : add byte ptr [rax - 0x75], cl ; add eax, 0x28a664 ; call qword ptr [rax]
0x0000000000133760 : add byte ptr [rax - 0x75], cl ; add eax, 0x28c128 ; call qword ptr [rax]
0x000000000007c84f : add byte ptr [rax - 0x75], cl ; add eax, 0x342949 ; ret
0x000000000002c15f : add byte ptr [rax - 0x75], cl ; add eax, 0x393959 ; ret
0x00000000000237df : add byte ptr [rax - 0x75], cl ; add eax, 0x3a0461 ; ret
0x00000000000237cf : add byte ptr [rax - 0x75], cl ; add eax, 0x3a0481 ; ret
0x00000000000f240e : add byte ptr [rax - 0x75], cl ; and al, 0x98 ; ret
0x0000000000075ff0 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000007b686 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000023768 : add byte ptr [rax - 0x75], cl ; jnp 0x2378a ; call rax
0x0000000000075386 : add byte ptr [rax - 0x75], cl ; js 0x753d1 ; jmp 0x75356
0x0000000000069f48 : add byte ptr [rax - 0x75], cl ; lea ebp, dword ptr [rax - 0x76000002] ; ret
0x0000000000070b7f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000f829f : add byte ptr [rax - 0x75], cl ; or al, 0 ; add byte ptr [rax], al ; ret
0x000000000012e007 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000d651c : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000135d56 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000f8297 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007fee7 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000014424f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000fcabe : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000065aa9 : add byte ptr [rax - 0x75], cl ; xor eax, 0x3584af ; call rax
0x00000000000641b1 : add byte ptr [rax - 0x75], cl ; xor eax, 0x359da7 ; call rax
0x000000000005ed35 : add byte ptr [rax - 0x75], cl ; xor eax, 0x35f223 ; call rax
0x0000000000055fcb : add byte ptr [rax - 0x75], cl ; xor eax, 0x367f8d ; call rax
0x000000000004efc1 : add byte ptr [rax - 0x75], cl ; xor eax, 0x36ef97 ; call rax
0x0000000000049e8d : add byte ptr [rax - 0x75], cl ; xor eax, 0x3740cb ; call rax
0x00000000000f335a : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000007032f : add byte ptr [rax - 0x76b80000], al ; ret 0x2d75
0x000000000006e871 : add byte ptr [rax - 0x76b80000], al ; ret 0x3675
0x000000000010a0cf : add byte ptr [rax - 0x76b80000], al ; ret 0x3875
0x00000000000f354f : add byte ptr [rax - 0x76b80000], al ; ret 0x5e9
0x00000000001203e6 : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [r11]
0x000000000008aa80 : add byte ptr [rax - 0x77], cl ; add eax, 0x3361e8 ; ret
0x00000000000867be : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000010bfcf : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003c8df : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x00000000000f3228 : add byte ptr [rax - 0x77], cl ; clc ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000108e4f : add byte ptr [rax - 0x77], cl ; clc ; pop rbx ; ret
0x000000000007c87f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000399fc : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000a4a07 : add byte ptr [rax - 0x77], cl ; enter 0x31c3, -0x40 ; nop ; ret
0x0000000000079d47 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005d46e : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000082ad1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000000797a3 : add byte ptr [rax - 0x77], cl ; fild word ptr [rbp + 0x4f0f48c9] ; ret 0x8948
0x00000000000e3ad0 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x1e8
0x0000000000074826 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007462b : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000000d89f7 : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000c81e7 : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000135811 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x0000000000120999 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 8 ; call rcx
0x00000000000857b4 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000001115c5 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x201
0x0000000000113afb : add byte ptr [rax - 0x77], cl ; inc byte ptr [rbx + 0x394101c0] ; ret 0xd975
0x0000000000080957 : add byte ptr [rax - 0x77], cl ; iretd ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x00000000000708cf : add byte ptr [rax - 0x77], cl ; jmp 0x48f59228
0x00000000000b7053 : add byte ptr [rax - 0x77], cl ; jmp 0x49cdf9a9
0x00000000000b74c8 : add byte ptr [rax - 0x77], cl ; jmp 0x49cdfe1e
0x000000000006e355 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000078853 : add byte ptr [rax - 0x77], cl ; mov edx, 0x140 ; pop rbx ; ret
0x000000000008632b : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000011fff2 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000121708 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000f60eb : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000107666 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r14 ; call rax
0x000000000012e2a2 : add byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x0000000000082be9 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000026473 : add byte ptr [rax - 0x77], cl ; ret
0x000000000011b984 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000d1a1b : add byte ptr [rax - 0x77], cl ; ret 0x1de9
0x00000000000a718f : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000048e0a : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000105b94 : add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000070332 : add byte ptr [rax - 0x77], cl ; ret 0x2d75
0x000000000007e215 : add byte ptr [rax - 0x77], cl ; ret 0x2fe9
0x000000000006e874 : add byte ptr [rax - 0x77], cl ; ret 0x3675
0x000000000010a0d2 : add byte ptr [rax - 0x77], cl ; ret 0x3875
0x000000000006eb8c : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000046ea4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x000000000005b955 : add byte ptr [rax - 0x77], cl ; ret 0x42e8
0x00000000000e6a93 : add byte ptr [rax - 0x77], cl ; ret 0x4c6
0x00000000000f3552 : add byte ptr [rax - 0x77], cl ; ret 0x5e9
0x00000000000c5339 : add byte ptr [rax - 0x77], cl ; ret 0x775
0x0000000000033f2f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000ea4f6 : add byte ptr [rax - 0x77], cl ; ret 0x8845
0x000000000005e51c : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000005030d : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002e9ef : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006f6c8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b4e5f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000f24da : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000f9225 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x00000000000602cd : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000001005e2 : add byte ptr [rax - 0x77], cl ; ret 0xb9
0x00000000000bf56e : add byte ptr [rax - 0x77], cl ; ret 0xbae9
0x000000000008b860 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000fc7d3 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000f38eb : add byte ptr [rax - 0x77], cl ; ret 0xcfeb
0x00000000000bc478 : add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x000000000004759a : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000bd79a : add byte ptr [rax - 0x77], cl ; ret 0xeee9
0x000000000009284b : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000e2395 : add byte ptr [rax - 0x77], cl ; ret 0xf7e9
0x0000000000086702 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000004876e : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000057351 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000002ad19 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000e22ef : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000096bc2 : add byte ptr [rax - 0x77], cl ; stc ; mov qword ptr [rdx], rcx ; ret
0x000000000004dd1e : add byte ptr [rax - 0x77], cl ; test dword ptr [rax - 0x16000006], ebx ; ret
0x00000000001276ec : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x127704 ; ret
0x0000000000127704 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x12771c ; ret
0x0000000000127f4c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x127f64 ; ret
0x0000000000127f64 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x127f7c ; ret
0x0000000000127f94 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x127fac ; ret
0x000000000010c4c7 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x0000000000074e7a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x000000000011d1f5 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x00000000000dde3f : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000009a383 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000012b863 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x000000000003044c : add byte ptr [rax - 0x7bf0ffc1], al ; ret 0
0x000000000003e5fe : add byte ptr [rax - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret 0x15
0x000000000015e437 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000082afc : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002fbb3 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000080ad1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000004e1c0 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004b9cf : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000006033e : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000011621f : add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000001653b6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x1653c7 ; ret
0x0000000000023297 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000801bf : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000011a624 : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000a11ff : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000f2993 : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000026921 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000113aea : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000006f8c4 : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000064c54 : add byte ptr [rax - 0x7d], cl ; ret 0x4504
0x000000000002364e : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e6f95 : add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000074d86 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000038fe7 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000016572f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000fbffa : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000096ebf : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000029e9a : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000b3eef : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x00000000001372ef : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002929f : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000068277 : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000007d47c : add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000008bd8f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008bd1f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000042bff : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000a71c7 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000025394 : add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x0000000000116d90 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000008b142 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001392d3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000117aef : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x0000000000058ebf : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000137313 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000035a61 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007494c : add byte ptr [rax - 0x7d], cl ; ret 0xf301
0x0000000000097cff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000002bcd6 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000472af : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x000000000002d2bf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x00000000001019cf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000006768f : add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], -0x17 ; ret 0xfff0
0x0000000000095dc8 : add byte ptr [rax - 0x7d], cl ; stc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000000b148c : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x0000000000129e44 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; jmp rcx
0x000000000007c980 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000003a1b1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xcde
0x0000000000073ced : add byte ptr [rax - 0x7f], cl ; ret
0x00000000000301b4 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000014a86b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000019dc0f : add byte ptr [rax - 0x80], dh ; cld ; jmp qword ptr [rax]
0x0000000000134382 : add byte ptr [rax - 0x9ffffff], al ; ret
0x00000000001784c0 : add byte ptr [rax - 0xe], bl ; jmp qword ptr [rax]
0x00000000001785e0 : add byte ptr [rax - 0xe], ch ; jmp qword ptr [rax]
0x0000000000132eba : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000357dd : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000036c8d : add byte ptr [rax - 1], bh ; ret
0x000000000007cbfe : add byte ptr [rax - 1], dil ; ret
0x00000000001a213f : add byte ptr [rax - 2], ah ; int1 ; jmp qword ptr [rcx]
0x00000000001a2157 : add byte ptr [rax - 2], bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a20c7 : add byte ptr [rax - 2], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001ac4c7 : add byte ptr [rax - 3], bh ; cmc ; call qword ptr [rax]
0x000000000019d147 : add byte ptr [rax - 5], bh ; out dx, al ; jmp qword ptr [rsi]
0x000000000019d03f : add byte ptr [rax - 6], al ; out dx, al ; call qword ptr [rcx]
0x00000000001a432f : add byte ptr [rax - 7], dl ; jmp qword ptr [rax]
0x00000000001ac12f : add byte ptr [rax - 8], dh ; cmc ; call qword ptr [rcx]
0x00000000001aa6d3 : add byte ptr [rax*8 - 0x2a17ffff], ch ; cmc ; jmp qword ptr [rsi]
0x00000000001aa6bb : add byte ptr [rax*8 - 0x2a2fffff], dl ; cmc ; jmp qword ptr [rsi]
0x000000000010bc7a : add byte ptr [rax], 0 ; add al, ch ; int 0xc3
0x0000000000129e48 : add byte ptr [rax], 0 ; add al, ch ; jmp rcx
0x000000000007c984 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bf3b5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x48c
0x00000000000afcb5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x583
0x000000000003a1b5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xcde
0x00000000000c9015 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d6b24 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000df0a6 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d4c
0x00000000000dc442 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007a3b0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000165c5b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000012e5db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000014d04b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000f8293 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000a3773 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000f6a7b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a033 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002dd63 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000ed2ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000009399b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000e0dea : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x3978244c], cl ; ret 0x1372
0x000000000005ffe6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x000000000015ff81 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000031f0d : add byte ptr [rax], 0 ; add cl, ch ; ret
0x00000000000369bf : add byte ptr [rax], 0 ; ret
0x00000000001a852f : add byte ptr [rax], ah ; cmc ; jmp rax
0x000000000002fe34 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001a50bf : add byte ptr [rax], ah ; outsd dx, dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000001b1e7 : add byte ptr [rax], ah ; ret
0x000000000000dcf7 : add byte ptr [rax], ah ; ret 0x10
0x000000000001aee7 : add byte ptr [rax], ah ; ret 0x3b
0x00000000001a63bf : add byte ptr [rax], ah ; retf ; hlt ; jmp qword ptr [rdx]
0x0000000000186258 : add byte ptr [rax], ah ; sti ; push rax ; and bl, bh ; jmp rax
0x00000000001aa596 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x00000000001aa54e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000019a44e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000019a4fe : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001a50ba : add byte ptr [rax], al ; adc al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x00000000001a63ba : add byte ptr [rax], al ; adc al, 0x82 ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rdx]
0x00000000001a73ba : add byte ptr [rax], al ; adc al, 0x92 ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001974ba : add byte ptr [rax], al ; adc al, 0x93 ; add byte ptr [rax], al ; call 0xffffffffd3195d57
0x00000000001a7bba : add byte ptr [rax], al ; adc al, 0x9a ; add dword ptr [rax], eax ; sub byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x0000000000188fae : add byte ptr [rax], al ; adc al, 0x9b ; out dx, al ; jmp rsp
0x0000000000199eba : add byte ptr [rax], al ; adc al, 0xbd ; add byte ptr [rax], al ; mov al, 0x1a ; out dx, al ; call qword ptr [rdi]
0x00000000001aa6ba : add byte ptr [rax], al ; adc al, 0xc5 ; add dword ptr [rax], eax ; rcl ch, 1 ; cmc ; jmp qword ptr [rsi]
0x00000000001ab4ba : add byte ptr [rax], al ; adc al, 0xd3 ; add dword ptr [rax], eax ; shl ch, 1 ; cmc ; jmp rbx
0x000000000019cbba : add byte ptr [rax], al ; adc al, 0xea ; add byte ptr [rax], al ; mov al, 0xbf ; out dx, al ; jmp qword ptr [rax]
0x000000000019d1ba : add byte ptr [rax], al ; adc al, 0xf0 ; add byte ptr [rax], al ; nop ; adc bh, dl ; call qword ptr [rax]
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000000fa1a : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; call qword ptr [rax]
0x000000000000a1e2 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0x10
0x000000000000a9c2 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0xb
0x00000000000066ba : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 7
0x000000000000f8e2 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; ret 0x10
0x000000000017297e : add byte ptr [rax], al ; adc byte ptr [rbx], ah ; in al, dx ; call qword ptr [rax]
0x00000000001931ee : add byte ptr [rax], al ; adc byte ptr [rsi - 0x15], ah ; call qword ptr [rdi]
0x000000000019919e : add byte ptr [rax], al ; adc ch, bh ; in eax, dx ; call qword ptr [rax]
0x000000000019a489 : add byte ptr [rax], al ; add ah, ah ; ret 0
0x00000000001aa569 : add byte ptr [rax], al ; add ah, al ; ret
0x000000000019a469 : add byte ptr [rax], al ; add ah, al ; ret 0
0x00000000001aa581 : add byte ptr [rax], al ; add ah, bl ; ret
0x00000000001adfa1 : add byte ptr [rax], al ; add ah, ch ; stc ; add dword ptr [rax], eax ; jmp qword ptr [rdi]
0x000000000019a981 : add byte ptr [rax], al ; add ah, cl ; ret
0x00000000001aa599 : add byte ptr [rax], al ; add ah, dh ; ret
0x000000000019a8a9 : add byte ptr [rax], al ; add ah, dh ; ret 0
0x00000000001aa499 : add byte ptr [rax], al ; add ah, dh ; ret 1
0x0000000000196b82 : add byte ptr [rax], al ; add al, 0x2b ; add byte ptr [rax], al ; call 0x12195945
0x00000000001a20aa : add byte ptr [rax], al ; add al, 0x3f ; add dword ptr [rax], eax ; xor dh, bh ; int1 ; jmp qword ptr [rcx]
0x0000000000188cb6 : add byte ptr [rax], al ; add al, 0x6b ; out dx, al ; call rsp
0x00000000001a4faa : add byte ptr [rax], al ; add al, 0x6e ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], ch ; jmp qword ptr [rcx]
0x00000000001a7caa : add byte ptr [rax], al ; add al, 0x9b ; add dword ptr [rax], eax ; jo 0x1a7cea ; cmc ; jmp qword ptr [rcx]
0x00000000001aa7aa : add byte ptr [rax], al ; add al, 0xc6 ; add dword ptr [rax], eax ; ret
0x00000000001ac4aa : add byte ptr [rax], al ; add al, 0xe3 ; add dword ptr [rax], eax ; cmp ch, 0xf5 ; call qword ptr [rax]
0x00000000001ac5aa : add byte ptr [rax], al ; add al, 0xe4 ; add dword ptr [rax], eax ; add ch, bh ; cmc ; jmp rsp
0x00000000001887d6 : add byte ptr [rax], al ; add al, 0xf6 ; jmp 0x1887e0
0x000000000001b40d : add byte ptr [rax], al ; add al, ah ; ret
0x000000000001b125 : add byte ptr [rax], al ; add al, ah ; ret 0x3b
0x000000000001b3ad : add byte ptr [rax], al ; add al, al ; ret
0x000000000001b0c5 : add byte ptr [rax], al ; add al, al ; ret 0x3b
0x000000000001b16d : add byte ptr [rax], al ; add al, bh ; ret 0x3b
0x000000000001b3f5 : add byte ptr [rax], al ; add al, bl ; ret
0x000000000001b10d : add byte ptr [rax], al ; add al, bl ; ret 0x3b
0x0000000000104bd0 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000002385e : add byte ptr [rax], al ; add al, ch ; cli ; ret
0x000000000010bc7b : add byte ptr [rax], al ; add al, ch ; int 0xc3
0x0000000000129e49 : add byte ptr [rax], al ; add al, ch ; jmp rcx
0x000000000002eccb : add byte ptr [rax], al ; add al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x000000000001b425 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000001b13d : add byte ptr [rax], al ; add al, ch ; ret 0x3b
0x00000000000bf3b6 : add byte ptr [rax], al ; add al, ch ; ret 0x48c
0x00000000000afcb6 : add byte ptr [rax], al ; add al, ch ; ret 0x583
0x000000000003a1b6 : add byte ptr [rax], al ; add al, ch ; ret 0xcde
0x0000000000088876 : add byte ptr [rax], al ; add al, ch ; ret 0xfa7d
0x0000000000083a16 : add byte ptr [rax], al ; add al, ch ; ret 0xfb99
0x0000000000081246 : add byte ptr [rax], al ; add al, ch ; ret 0xffdb
0x00000000000b32a5 : add byte ptr [rax], al ; add al, ch ; ret 0xfff6
0x000000000011f4b6 : add byte ptr [rax], al ; add al, ch ; xchg eax, edx ; ret 0
0x000000000008ab63 : add byte ptr [rax], al ; add al, ch ; xor eax, 0x39fffad0 ; ret
0x000000000001b3c5 : add byte ptr [rax], al ; add al, cl ; ret
0x000000000001b0dd : add byte ptr [rax], al ; add al, cl ; ret 0x3b
0x000000000001b43d : add byte ptr [rax], al ; add al, dh ; ret
0x000000000001b155 : add byte ptr [rax], al ; add al, dh ; ret 0x3b
0x000000000001b3dd : add byte ptr [rax], al ; add al, dl ; ret
0x000000000001b0f5 : add byte ptr [rax], al ; add al, dl ; ret 0x3b
0x000000000001a2dd : add byte ptr [rax], al ; add bh, ah ; ret 0x17
0x000000000001e29d : add byte ptr [rax], al ; add bh, al ; ret 0x17
0x0000000000165c5d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000123a4a : add byte ptr [rax], al ; add bh, bh ; loope 0x1239e7 ; ret
0x00000000000d1cd7 : add byte ptr [rax], al ; add bh, dh ; ret
0x000000000001e315 : add byte ptr [rax], al ; add bh, dh ; ret 0x17
0x0000000000036475 : add byte ptr [rax], al ; add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x000000000001a2ad : add byte ptr [rax], al ; add bh, dl ; ret 0x17
0x00000000000c355a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x000000000012805b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000a4a13 : add byte ptr [rax], al ; add bl, al ; ret
0x000000000012779c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000000000046e42 : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000ba0c4 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000044ee1 : add byte ptr [rax], al ; add bl, ch ; ret 0x2e66
0x00000000000265b3 : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x000000000009de8d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009de9d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002dd65 : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000095b93 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d4010 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b55f3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000514d0 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000007d4d3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x0000000000076f77 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x0000000000027489 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000007896d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000001860fb : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x0000000000130935 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x14c
0x00000000000210d0 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000db9d7 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000daac1 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000009e3dd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000016637d : add byte ptr [rax], al ; add byte ptr [rax + 0x7d], al ; in al, dx ; call qword ptr [rax]
0x00000000000c23f8 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x0000000000079020 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000135172 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000079951 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011a070 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c24bd : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x000000000002c04d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000a1e30 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003e04c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000a54ed : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x0000000000095c9d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8348
0x00000000000d6b25 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000df0a7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d4c
0x000000000012144d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000046e3d : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; jmp 0x46e13
0x000000000003196d : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000c0395 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x000000000019a97d : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, cl ; ret
0x000000000019a8a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, dh ; ret 0
0x00000000001aa495 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; ret 1
0x00000000001aa505 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret
0x00000000001aa595 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; ret
0x00000000001aa54d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000019a44d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000019a4fd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000000a34a3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001979e9 : add byte ptr [rax], al ; add byte ptr [rax + rbx*4], al ; add byte ptr [rax], dh ; ret
0x00000000000ffb2b : add byte ptr [rax], al ; add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000035535 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000036468 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002c12b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000beb8d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000c4516 : add byte ptr [rax], al ; add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x00000000000a34ed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000a34fd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000a34dd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007daad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f240c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0x98 ; ret
0x000000000007b684 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000075384 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x753d3 ; jmp 0x75358
0x00000000000f8295 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007fee5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x00000000001203e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [r11]
0x000000000007c87d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d89f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x0000000000086329 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000011fff0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000121706 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000f60e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012e2a0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x000000000003ff46 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d1a19 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1de9
0x00000000000a718d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x000000000005b953 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x42e8
0x00000000000cf16d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000cca93 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006f6c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b4e5d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000bc476 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x000000000007a3b1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000e22ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000012b861 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x000000000003044a : add byte ptr [rax], al ; add byte ptr [rax - 0x7bf0ffc1], al ; ret 0
0x000000000002eb1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000801bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000a11fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000026a4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000006f8c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000002364c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004386d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000016572d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000fbff8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000b3eed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x0000000000138e13 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002929d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000008bd8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008bd1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000042bfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000a99bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000013a991 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000059035 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000138e3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000097cfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000472ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x000000000002d2bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x000000000006768d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], -0x17 ; ret 0xfff0
0x000000000014c064 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000357db : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000036c8b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000001b1e5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000001aee5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x3b
0x00000000001aa594 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x00000000001aa54c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000019a44c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000019a4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000017297c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rbx], ah ; in al, dx ; call qword ptr [rax]
0x000000000001b40b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x000000000001b123 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x3b
0x000000000001b3ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x000000000001b0c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x3b
0x000000000001b16b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x3b
0x000000000001b3f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x000000000001b10b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret 0x3b
0x000000000001b423 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000001b13b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x3b
0x000000000001b3c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x000000000001b0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x3b
0x000000000001b43b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001b153 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x3b
0x000000000001b3db : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x000000000001b0f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x3b
0x000000000001a2db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, ah ; ret 0x17
0x000000000001e29b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, al ; ret 0x17
0x000000000001e313 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0x17
0x000000000001a2ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dl ; ret 0x17
0x000000000009de9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000711ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007896b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000016637b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x7d], al ; in al, dx ; call qword ptr [rax]
0x000000000013233b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000a34eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000a34fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000a34db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007c87b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000005b951 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x42e8
0x00000000000cf16b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000df22b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b4e5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000002eb1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000801bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000a11fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000026a4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000004386b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000016572b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000b3eeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x000000000008bd8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008bd1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000042bfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000a99bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000597fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000001b1e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000001aee3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x3b
0x000000000017297a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rbx], ah ; in al, dx ; call qword ptr [rax]
0x000000000001a2d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, ah ; ret 0x17
0x000000000001e299 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, al ; ret 0x17
0x000000000001e311 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0x17
0x000000000001a2a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dl ; ret 0x17
0x0000000000176e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffd
0x00000000001b8bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000001580 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000001a381 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x00000000001785ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi - 0xe], ah ; jmp qword ptr [rax]
0x000000000001e3a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], ah ; ret
0x000000000001a321 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], al ; ret
0x000000000001a351 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; ret
0x0000000000017f21 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; ret
0x000000000001e20a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret 0x17
0x000000000016637a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jge 0x166378 ; call qword ptr [rax]
0x00000000001785bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [eax]
0x0000000000165e1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or ch, 0xeb ; call qword ptr [rax]
0x00000000001858ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000001e432 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret
0x000000000000158a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000a132 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x000000000001ac22 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17c5
0x000000000001befa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17c6
0x0000000000018762 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17cf
0x000000000001071a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x000000000016ee02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000004b0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x00000000000055a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000000ffb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000f3e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000000078e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x35
0x00000000000059c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x0000000000004a02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x00000000000098aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x47
0x000000000000fb62 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x48
0x0000000000005842 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c
0x0000000000176e1e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffd
0x00000000001b8782 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001b8bbe : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000001582 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000001a2aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xlatb ; ret 0x17
0x000000000001a383 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000000000001af2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x3b
0x000000000001b1cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x000000000001aecb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x3b
0x000000000001b1fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x000000000001aefb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x3b
0x000000000001b19b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000000000001aeb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x3b
0x0000000000179ebb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rbx
0x00000000000a0c5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001b213 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001af13 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x3b
0x000000000017297b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; and ebp, esp ; call qword ptr [rax]
0x000000000001b1b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000019a97c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; ret
0x000000000019a8a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; ret 0
0x0000000000047eeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x0000000000083e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000093f4f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001b7fe7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 6], bl ; add byte ptr [rax], al ; ret 5
0x0000000000048909 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000f976b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000a143b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000007e84b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000001372cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008712b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001858eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000001785bc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi - 0xe], ah ; jmp qword ptr [rax]
0x000000000001e3a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], ah ; ret
0x000000000001a323 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], al ; ret
0x000000000001a353 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; ret
0x00000000000bd339 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x0000000000017f23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; ret
0x000000000006e25b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000000a2ebc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000bca4c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f3939 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000012e9a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x12ac66
0x000000000011f95e : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000165c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000170e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000016ffdc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000001e20c : add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret 0x17
0x000000000001b16c : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x3b
0x000000000001b34c : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x000000000001b04c : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x3b
0x00000000001b8678 : add byte ptr [rax], al ; add byte ptr [rax], al ; inc dword ptr [rdi] ; add byte ptr [rax], al ; ret 3
0x000000000017a550 : add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sal esi, cl ; call rdx
0x000000000016637c : add byte ptr [rax], al ; add byte ptr [rax], al ; jge 0x166376 ; call qword ptr [rax]
0x00000000001785bd : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [eax]
0x000000000004ec6a : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000016239c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001623ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001623bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001623cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001623dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016231c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016232c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016233c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016234c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016235c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016236c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016237c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016238c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a34dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000a34fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000a34ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016230c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000015a4bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x0000000000037644 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x000000000009e3dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009cddc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009ddac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000001b7988 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ch, 5 ; add byte ptr [rax], al ; ret
0x000000000009daac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015a4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015a51c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015a4ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e44dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009ddcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009ddec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009dddc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000c24bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007c7fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002c04c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012144c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000012e5dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000010c53c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x000000000010bd5b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10bd2d
0x000000000014d04c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015a52c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000012e978 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009de0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009de1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000120dda : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f8294 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000007c86c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000097adc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000007c87c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000011fee6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x000000000015a4cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009ddbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009de8c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009de9c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000014d19c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000bd33a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000001b334 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000001b034 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x3b
0x0000000000165e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; or ch, 0xeb ; call qword ptr [rax]
0x000000000001b28c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x000000000001af8c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x3b
0x00000000000fc777 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000004890a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007b9fb : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002cb0a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001858ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000001e434 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000001860fa : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000001b274 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x000000000001af74 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x3b
0x000000000000158c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000edac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000a134 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x000000000001ac24 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17c5
0x000000000001befc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17c6
0x0000000000018764 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17cf
0x000000000001071c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x000000000016fdfc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000170594 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000016ee04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000004b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x00000000000055a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000000ffb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000f3e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000000078e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x35
0x00000000000059c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x0000000000004a04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x00000000000098ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x47
0x000000000000fb64 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x48
0x0000000000005844 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c
0x0000000000176e20 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffd
0x000000000000895c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001b8bc0 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000000ecd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000001584 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000001aa494 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret 1
0x00000000001aa504 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret
0x000000000001a2ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xlatb ; ret 0x17
0x00000000000a0c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000048812 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000046d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009399c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000001a385 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000000000001af2d : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x3b
0x000000000001b1cd : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x000000000001aecd : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x3b
0x000000000001b1fd : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x000000000001aefd : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x3b
0x000000000001b19d : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000000000001aeb5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x3b
0x0000000000179ebd : add byte ptr [rax], al ; add byte ptr [rax], dh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rbx
0x00000000000a0c5d : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001b215 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001af15 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x3b
0x000000000017297d : add byte ptr [rax], al ; add byte ptr [rax], dl ; and ebp, esp ; call qword ptr [rax]
0x000000000001b1b5 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000019a97e : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; ret
0x000000000019a8a6 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; ret 0
0x0000000000078890 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000b81b0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000047eed : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x000000000012e8e4 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; ret
0x00000000001250d6 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x48 ; ret
0x00000000000a3f67 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; call rbx
0x00000000000f7fec : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x00000000000589da : add byte ptr [rax], al ; add byte ptr [rbp - 0x4c7af02e], al ; ret 0xffff
0x0000000000095406 : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; dec dword ptr [r13 - 0x77] ; ret
0x0000000000083e8d : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000d0efd : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000005dc95 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000000a1adc : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000e0deb : add byte ptr [rax], al ; add byte ptr [rbx + 0x3978244c], cl ; ret 0x1372
0x000000000010ac56 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000014c92d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000037f20 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002c26d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001f58f : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007a34d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000004ef54 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; ret
0x00000000000a546b : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa5449
0x00000000000a7c0b : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa7be9
0x00000000000aa20b : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xaa1e9
0x00000000001b7fe9 : add byte ptr [rax], al ; add byte ptr [rbx + 6], bl ; add byte ptr [rax], al ; ret 5
0x00000000001620b8 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000012ff38 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x000000000017a551 : add byte ptr [rax], al ; add byte ptr [rbx + rdx*8 - 0xa], ch ; call rdx
0x000000000005f94c : add byte ptr [rax], al ; add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x000000000005fc60 : add byte ptr [rax], al ; add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x00000000000b6fd6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x50f0ec18], al ; ret 0x8941
0x000000000004890b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000205e0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76ff4783], al ; ret
0x000000000006fe72 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; call 0xffffffffc3633fe2
0x00000000000ba185 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x00000000000d0dcd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x0000000000113b7d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x00000000000f976d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000cc616 : add byte ptr [rax], al ; add byte ptr [rbx - 0x9f43], al ; jmp qword ptr [rdx]
0x0000000000042f68 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000015a51d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000001143f5 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x000000000004934c : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000f476f : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000015a4fd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009dded : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000000739d2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000005386f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x00000000000537a1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x00000000000e0d90 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1372
0x00000000000a143d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000005ffe7 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000001a62c1 : add byte ptr [rax], al ; add byte ptr [rcx + rax*4], bl ; add dword ptr [rax], eax ; pop rax ; ret
0x000000000006b0fb : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000011fee7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x00000000000f66b5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000000a4196 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000a4791 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000f5e5f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000007655e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x0000000000074c82 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x70f18
0x000000000011fcdf : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x00000000000f5c94 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000010595e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x101c58
0x00000000000f5ca3 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000192b7e : add byte ptr [rax], al ; add byte ptr [rcx - 0x15], al ; call rdx
0x00000000000e44dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000e365d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add byte ptr [r9], r15b ; ret 0x870f
0x00000000000e278d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x000000000010556e : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000000477b4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000059577 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x00000000000210db : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000003fefa : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000004b72c : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b44
0x0000000000062125 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000008b481 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000004554f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000952e7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000007e84d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000d40c8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000001372cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008712d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001858ed : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000008beb0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008bed6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000485ec : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000d0c93 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd0c24
0x00000000000fce87 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000e1e87 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000008ac07 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000ce97a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x850f
0x00000000000b9245 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000b92df : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000b7927 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000f0fff : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000a5491 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa5446
0x00000000000a7c31 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa7be6
0x00000000000aa231 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xaa1e6
0x000000000003c3fa : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000888c4 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x0000000000026196 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000001365ad : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000000a2bd2 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000164162 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000001785be : add byte ptr [rax], al ; add byte ptr [rdi - 0xe], ah ; jmp qword ptr [rax]
0x000000000001e3a5 : add byte ptr [rax], al ; add byte ptr [rdi], ah ; ret
0x000000000001a325 : add byte ptr [rax], al ; add byte ptr [rdi], al ; ret
0x000000000014d12d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000014d19d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000279f1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x0000000000027a3b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000006d4bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000008bdcd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000a1a35 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000048145 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x2ce9
0x000000000010adad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x00000000000cbb0e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x84e9
0x00000000001330b4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x0000000000047a91 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000d762e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc931
0x00000000000b8e9b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d44
0x00000000000cd96c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000e2d1e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000000c599a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x45e9
0x00000000000c4ee4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000001a355 : add byte ptr [rax], al ; add byte ptr [rdi], dl ; ret
0x000000000019cc19 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*8], dh ; add byte ptr [rax], al ; ret 0xffee
0x000000000015ff82 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000006ac32 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret
0x000000000008bce2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000f5c6d : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000e4e05 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000001aa7a9 : add byte ptr [rax], al ; add byte ptr [rsi + rax*8], al ; add dword ptr [rax], eax ; ret
0x00000000001aa7d9 : add byte ptr [rax], al ; add byte ptr [rsi + rax*8], dh ; add dword ptr [rax], eax ; ret
0x00000000000bd33b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x0000000000017f25 : add byte ptr [rax], al ; add byte ptr [rsi], cl ; ret
0x00000000000e44b7 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000192e0a : add byte ptr [rax], al ; add byte ptr fs:[rax], r8b ; nop ; pop rdx ; jmp 0x192e1c
0x000000000019d18e : add byte ptr [rax], al ; add cl, bl ; stc ; call qword ptr [rax]
0x0000000000058a39 : add byte ptr [rax], al ; add cl, ch ; push rdi ; ret 0xffff
0x000000000002c342 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000060a8d : add byte ptr [rax], al ; add cl, ch ; ret 0xffec
0x00000000000b7e9f : add byte ptr [rax], al ; add cl, ch ; ret 0xfff3
0x000000000010386d : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000081de4 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001356b0 : add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x000000000006e25d : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000001635d1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000072ea4 : add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x00000000000eb67d : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000df84f : add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0x0000000000098360 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000000000098369 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000d0c94 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000d4eb4 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x0000000000026ff7 : add byte ptr [rax], al ; add qword ptr [rdi], 1 ; jmp 0x26fc9
0x00000000000a2ebe : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000008bb94 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000124601 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000127ed1 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000127621 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000123a44 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000bca4e : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bca76 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000003719a : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000036bd8 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000012d444 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e44fe : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000fba30 : add byte ptr [rax], al ; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x000000000003699a : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000000000010c4bb : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000000ebb99 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000036e90 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x00000000000475a1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008ab0a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000023837 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036392 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000019f8ca : add byte ptr [rax], al ; and al, 0x17 ; add dword ptr [rax], eax ; nop ; cld ; jmp qword ptr [rbx]
0x0000000000188396 : add byte ptr [rax], al ; and al, 0x21 ; jmp 0x1883a0
0x00000000001884f6 : add byte ptr [rax], al ; and al, 0x4c ; jmp 0x188500
0x00000000001a68ca : add byte ptr [rax], al ; and al, 0x87 ; add dword ptr [rax], eax ; jo 0x1a68b7 ; hlt ; call qword ptr [rax]
0x000000000019a4ca : add byte ptr [rax], al ; and al, 0xc3 ; add byte ptr [rax], al ; jo 0x19a506 ; out dx, al ; call qword ptr [rdx]
0x00000000001aa5ca : add byte ptr [rax], al ; and al, 0xc4 ; add dword ptr [rax], eax ; loopne 0x1aa5af ; cmc ; jmp qword ptr [rsi]
0x00000000001aa8ca : add byte ptr [rax], al ; and al, 0xc7 ; add dword ptr [rax], eax ; rcl dh, 0xf5 ; jmp qword ptr [rsi]
0x000000000000452a : add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0xb
0x00000000000fa4df : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000003010b : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000008bdce : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000088c17 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008a704 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000192366 : add byte ptr [rax], al ; call 0x11190e2b
0x0000000000192396 : add byte ptr [rax], al ; call 0x11190e5b
0x00000000001923c6 : add byte ptr [rax], al ; call 0x11190e8b
0x00000000001923c5 : add byte ptr [rax], al ; call 0x11190e8c
0x0000000000196b86 : add byte ptr [rax], al ; call 0x12195941
0x000000000012e9a6 : add byte ptr [rax], al ; call 0x12ac64
0x000000000011f4b7 : add byte ptr [rax], al ; call 0x12b754
0x00000000001948c6 : add byte ptr [rax], al ; call 0x13193660
0x00000000000b131e : add byte ptr [rax], al ; call 0x136529
0x0000000000123288 : add byte ptr [rax], al ; call 0x1f4e4
0x00000000000b32a6 : add byte ptr [rax], al ; call 0x1f4f4
0x0000000000193ea6 : add byte ptr [rax], al ; call 0x22192b4e
0x00000000000b39b5 : add byte ptr [rax], al ; call 0x2fc64
0x000000000011ff66 : add byte ptr [rax], al ; call 0x3c1e4
0x00000000000eee18 : add byte ptr [rax], al ; call 0xeb084
0x00000000000e493e : add byte ptr [rax], al ; call 0xf0c04
0x00000000001974be : add byte ptr [rax], al ; call 0xffffffffd3195d53
0x000000000011f960 : add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000165c5e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000016e2c2 : add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000021f65 : add byte ptr [rax], al ; call rax
0x00000000000f5c73 : add byte ptr [rax], al ; call rbx
0x0000000000170e2e : add byte ptr [rax], al ; call rdi
0x0000000000031e1f : add byte ptr [rax], al ; call rdx
0x000000000016ffde : add byte ptr [rax], al ; call rsp
0x000000000001e20e : add byte ptr [rax], al ; cdq ; ret 0x17
0x0000000000194806 : add byte ptr [rax], al ; clc ; jle 0x1947fd ; jmp rcx
0x0000000000194805 : add byte ptr [rax], al ; clc ; jle 0x1947fe ; jmp rcx
0x000000000019ba76 : add byte ptr [rax], al ; clc ; out dx, al ; call rsp
0x000000000001b16e : add byte ptr [rax], al ; clc ; ret 0x3b
0x000000000019a456 : add byte ptr [rax], al ; clc ; sub ch, dh ; call qword ptr [rsi]
0x00000000001a50a2 : add byte ptr [rax], al ; cld ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; or byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x0000000000193ea2 : add byte ptr [rax], al ; cld ; pop rsp ; add byte ptr [rax], al ; call 0x22192b52
0x00000000001ab4a2 : add byte ptr [rax], al ; cld ; rol byte ptr [rcx], cl ; add al, bl ; in eax, -0xb ; call qword ptr [rax]
0x00000000001a0aa2 : add byte ptr [rax], al ; cld ; sub byte ptr [rcx], al ; add byte ptr [rax - 0x33], ch ; int1 ; jmp qword ptr [rax]
0x000000000019b9a2 : add byte ptr [rax], al ; cld ; xlatb ; add byte ptr [rax], al ; xor rbp, rsi ; call qword ptr [rsi]
0x000000000019dc0a : add byte ptr [rax], al ; cli ; add byte ptr [rax], al ; jo 0x19db9b ; cld ; jmp qword ptr [rax]
0x000000000019d03e : add byte ptr [rax], al ; cli ; out dx, al ; call qword ptr [rcx]
0x00000000001147bf : add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000018fee2 : add byte ptr [rax], al ; cmp al, 0x1d ; add byte ptr [rax], al ; pop rax ; and dl, ch ; call qword ptr [rsi]
0x000000000019ffe2 : add byte ptr [rax], al ; cmp al, 0x1e ; add dword ptr [rax], eax ; js 0x1a0035 ; int1 ; jmp qword ptr [rcx]
0x00000000001a51e2 : add byte ptr [rax], al ; cmp al, 0x70 ; add dword ptr [rax], eax ; mov byte ptr [rcx + rdi*8], dl ; call qword ptr [rax]
0x00000000001a6ae2 : add byte ptr [rax], al ; cmp al, 0x89 ; add dword ptr [rax], eax ; or al, ah ; hlt ; jmp rsp
0x00000000001a7ae2 : add byte ptr [rax], al ; cmp al, 0x99 ; add dword ptr [rax], eax ; js 0x1a7b20 ; cmc ; jmp qword ptr [rcx]
0x00000000001a7de2 : add byte ptr [rax], al ; cmp al, 0x9c ; add dword ptr [rax], eax ; cmp byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001aa8e2 : add byte ptr [rax], al ; cmp al, 0xc7 ; add dword ptr [rax], eax ; fcom st(6) ; cmc ; jmp qword ptr [rsi]
0x00000000001a1c0a : add byte ptr [rax], al ; cmp al, byte ptr fs:[rcx] ; add al, al ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x000000000019d12e : add byte ptr [rax], al ; cmp bl, 0xee ; call qword ptr [rax]
0x000000000019bdc6 : add byte ptr [rax], al ; cmp byte ptr [rax - 0x12], dh ; call qword ptr [rsi]
0x000000000015e436 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000192b4e : add byte ptr [rax], al ; cmp byte ptr [rdx], 0xfa ; jmp qword ptr [rcx]
0x00000000000a546c : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa5488 ; mov edx, eax ; jmp 0xa5448
0x00000000000a7c0c : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa7c28 ; mov edx, eax ; jmp 0xa7be8
0x00000000000aa20c : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xaa228 ; mov edx, eax ; jmp 0xaa1e8
0x00000000000769c7 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x769d8 ; pop rbx ; ret
0x00000000000c1160 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xc1173 ; ret
0x00000000000b9f3e : add byte ptr [rax], al ; cmp esi, 1 ; je 0xb9f59 ; xor eax, eax ; ret
0x00000000001a824f : add byte ptr [rax], al ; cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000000c2538 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xc2578 ; ret
0x000000000001b34e : add byte ptr [rax], al ; cwde ; ret
0x000000000001b04e : add byte ptr [rax], al ; cwde ; ret 0x3b
0x0000000000194e86 : add byte ptr [rax], al ; cwde ; xchg eax, ebp ; in eax, dx ; jmp qword ptr [rax]
0x000000000019e882 : add byte ptr [rax], al ; fadd qword ptr [rsi] ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0x10], bl ; jmp rsi
0x00000000001aa882 : add byte ptr [rax], al ; fadd st(6), st(0) ; add dword ptr [rax], eax ; js 0x1aa869 ; cmc ; jmp qword ptr [rsi]
0x00000000001a7982 : add byte ptr [rax], al ; fcom qword ptr [rdi + 0x2b680001] ; cmc ; call qword ptr [rax]
0x000000000019f982 : add byte ptr [rax], al ; fcom qword ptr [rdi] ; add dword ptr [rax], eax ; pop rax ; or esi, ecx ; jmp rcx
0x00000000001a7a82 : add byte ptr [rax], al ; fcomp qword ptr [rax + 0x2d380001] ; cmc ; jmp qword ptr [rcx]
0x0000000000197e82 : add byte ptr [rax], al ; fcomp qword ptr [rax + rax - 0x122a9800] ; call rcx
0x00000000001a7d82 : add byte ptr [rax], al ; fcomp qword ptr [rbx + 0x30a80001] ; cmc ; jmp qword ptr [rcx]
0x00000000001a0082 : add byte ptr [rax], al ; fcomp qword ptr [rsi] ; add dword ptr [rax], eax ; mov byte ptr [rbx - 0xf], al ; call rsi
0x00000000001b1582 : add byte ptr [rax], al ; fdiv qword ptr [rbx] ; add al, byte ptr [rax] ; div rsi ; call qword ptr [rbx]
0x0000000000198a06 : add byte ptr [rax], al ; fdiv st(0) ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b6a8a : add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000001a6a82 : add byte ptr [rax], al ; fmul qword ptr [rax - 0x2007ffff] ; hlt ; jmp qword ptr [rcx]
0x0000000000187ab6 : add byte ptr [rax], al ; fnstcw word ptr [rdi - 0x17] ; jmp rsp
0x000000000003694e : add byte ptr [rax], al ; fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000368fe : add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000001b0282 : add byte ptr [rax], al ; fsub qword ptr [rax] ; add al, byte ptr [rax] ; pop rax ; push rcx ; sti ; call rsi
0x0000000000194e82 : add byte ptr [rax], al ; fsubr qword ptr [rax + rax] ; cwde ; xchg eax, ebp ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a5182 : add byte ptr [rax], al ; fsubr qword ptr [rdi + 1] ; add byte ptr [rax], ch ; jbe 0x1a5188 ; jmp qword ptr [rcx]
0x00000000001b4e82 : add byte ptr [rax], al ; fsubr qword ptr [rdx + rax] ; fadd dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x000000000019d18f : add byte ptr [rax], al ; fyl2xp1 ; call qword ptr [rax]
0x00000000001882c6 : add byte ptr [rax], al ; hlt ; add ch, bl ; jmp rsp
0x00000000001aa89a : add byte ptr [rax], al ; hlt ; mov byte ptr [rcx], 0 ; nop ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001a519a : add byte ptr [rax], al ; hlt ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; jbe 0x1a51a0 ; jmp qword ptr [rcx]
0x00000000001aa59a : add byte ptr [rax], al ; hlt ; ret
0x000000000019a8aa : add byte ptr [rax], al ; hlt ; ret 0
0x00000000001aa49a : add byte ptr [rax], al ; hlt ; ret 1
0x000000000019919a : add byte ptr [rax], al ; hlt ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; adc ch, bh ; in eax, dx ; call qword ptr [rax]
0x000000000019d18a : add byte ptr [rax], al ; in al, -0x11 ; add byte ptr [rax], al ; add cl, bl ; stc ; call qword ptr [rax]
0x00000000001abb8a : add byte ptr [rax], al ; in al, -0x27 ; add dword ptr [rax], eax ; shr bh, 0xf5 ; call qword ptr [rax]
0x00000000001a9a8a : add byte ptr [rax], al ; in al, -0x48 ; add dword ptr [rax], eax ; jo 0x1a9b0c ; cmc ; call rsp
0x00000000001a7e8a : add byte ptr [rax], al ; in al, -0x64 ; add dword ptr [rax], eax ; adc byte ptr [rdx], dh ; cmc ; call qword ptr [rsi]
0x00000000001888ae : add byte ptr [rax], al ; in al, 0x19 ; in al, dx ; jmp rsp
0x00000000001b0e8a : add byte ptr [rax], al ; in al, 0x2c ; add al, byte ptr [rax] ; sbb dh, 0xf6 ; jmp qword ptr [rcx]
0x00000000001a1c8a : add byte ptr [rax], al ; in al, 0x3a ; add dword ptr [rax], eax ; add dh, ch ; int1 ; call qword ptr [rdx]
0x00000000001a488a : add byte ptr [rax], al ; in al, 0x66 ; add dword ptr [rax], eax ; shl rdi, 1 ; jmp qword ptr [rax]
0x00000000001a538a : add byte ptr [rax], al ; in al, 0x71 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xc], bh ; jmp qword ptr [rcx]
0x000000000018f392 : add byte ptr [rax], al ; in al, dx ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x58], cl ; std ; jmp qword ptr [rax]
0x0000000000192392 : add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], al ; call 0x11190e5f
0x0000000000192692 : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], r8b ; mov byte ptr [rdi], cl ; jmp 0x1926a4
0x00000000001aba92 : add byte ptr [rax], al ; in al, dx ; fadd dword ptr [rcx] ; add byte ptr [rax - 0x13], cl ; cmc ; jmp qword ptr [rax]
0x00000000001a4b92 : add byte ptr [rax], al ; in al, dx ; imul eax, dword ptr [rcx], 0xf4639800 ; jmp qword ptr [rax]
0x00000000001ad292 : add byte ptr [rax], al ; in al, dx ; lock add dword ptr [rax], eax ; call 0xffffffffe41ac8b9
0x0000000000199292 : add byte ptr [rax], al ; in al, dx ; mov al, 0 ; add byte ptr [rax + 1], bl ; out dx, al ; jmp rax
0x00000000001adfa2 : add byte ptr [rax], al ; in al, dx ; stc ; add dword ptr [rax], eax ; jmp qword ptr [rdi]
0x00000000001b867a : add byte ptr [rax], al ; inc dword ptr [rdi] ; add byte ptr [rax], al ; ret 3
0x00000000001955ea : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc eax, 0x98a00000 ; in eax, dx ; jmp rsi
0x00000000001a2b12 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add qword ptr [r8], rax ; test al, 0x8c ; call qword ptr [rdi]
0x00000000001a3012 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add qword ptr [rax], r8 ; js 0x1a300e ; jmp rdx
0x00000000001a7b12 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cdq ; add dword ptr [rax], eax ; test al, 0x2d ; cmc ; jmp qword ptr [rcx]
0x00000000001aa912 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov dword ptr [rcx], 0xf5d70800 ; jmp qword ptr [rsi]
0x00000000001a5012 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000017a552 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sal esi, cl ; call rdx
0x0000000000176bbe : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x00000000000e4e06 : add byte ptr [rax], al ; jbe 0xe4e15 ; ret
0x00000000001250d7 : add byte ptr [rax], al ; je 0x1250e8 ; add rsp, 0x48 ; ret
0x0000000000188536 : add byte ptr [rax], al ; je 0x18858d ; jmp 0x188540
0x0000000000188a6e : add byte ptr [rax], al ; je 0x188ad9 ; in eax, dx ; dec esp ; ret
0x000000000019e01a : add byte ptr [rax], al ; je 0x19e025 ; add byte ptr [rax], al ; shr byte ptr [rax - 5], 1 ; call qword ptr [rax]
0x000000000019e61a : add byte ptr [rax], al ; je 0x19e62b ; add dword ptr [rax], eax ; rcl byte ptr [rcx - 0x10], 1 ; jmp qword ptr [rdi]
0x000000000019e71a : add byte ptr [rax], al ; je 0x19e72c ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0x10], dl ; call qword ptr [rsi]
0x00000000001a611a : add byte ptr [rax], al ; je 0x1a61a6 ; add dword ptr [rax], eax ; rol al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a641a : add byte ptr [rax], al ; je 0x1a63a9 ; add dword ptr [rax], eax ; jo 0x1a63f7 ; hlt ; jmp qword ptr [rcx]
0x00000000001a7c1a : add byte ptr [rax], al ; je 0x1a7bc1 ; add dword ptr [rax], eax ; loopne 0x1a7c59 ; cmc ; jmp qword ptr [rcx]
0x00000000001a811a : add byte ptr [rax], al ; je 0x1a80c6 ; add dword ptr [rax], eax ; jo 0x1a8163 ; cmc ; jmp qword ptr [rax]
0x00000000001aa71a : add byte ptr [rax], al ; je 0x1aa6ea ; add dword ptr [rax], eax ; ret
0x000000000008479a : add byte ptr [rax], al ; je 0x847a4 ; ret
0x00000000000863f6 : add byte ptr [rax], al ; je 0x86404 ; ret
0x0000000000093ee2 : add byte ptr [rax], al ; je 0x93ef8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a34a4 : add byte ptr [rax], al ; je 0xa3518 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000e44b8 : add byte ptr [rax], al ; je 0xe44c5 ; ret
0x00000000000ffb2c : add byte ptr [rax], al ; je 0xffb40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000164163 : add byte ptr [rax], al ; jg 0x164176 ; neg eax ; ret
0x00000000000a2bd3 : add byte ptr [rax], al ; jg 0xa2bdf ; neg eax ; ret
0x000000000016637e : add byte ptr [rax], al ; jge 0x166374 ; call qword ptr [rax]
0x00000000001620b9 : add byte ptr [rax], al ; jl 0x1620c6 ; neg eax ; ret
0x00000000001a5922 : add byte ptr [rax], al ; jl 0x1a59a6 ; add dword ptr [rax], eax ; test al, 0xac ; hlt ; call qword ptr [rbx]
0x00000000001a7822 : add byte ptr [rax], al ; jl 0x1a77c5 ; add dword ptr [rax], eax ; sub byte ptr [rdx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7922 : add byte ptr [rax], al ; jl 0x1a78c6 ; add dword ptr [rax], eax ; sbb byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8322 : add byte ptr [rax], al ; jl 0x1a82d0 ; add dword ptr [rax], eax ; fdivr dword ptr [rbx] ; cmc ; jmp rbx
0x00000000001aa822 : add byte ptr [rax], al ; jl 0x1aa7f5 ; add dword ptr [rax], eax ; sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab722 : add byte ptr [rax], al ; jl 0x1ab704 ; add dword ptr [rax], eax ; mov al, ch ; cmc ; call qword ptr [rax]
0x00000000001ab922 : add byte ptr [rax], al ; jl 0x1ab906 ; add dword ptr [rax], eax ; js 0x1ab91c ; cmc ; call qword ptr [rax]
0x0000000000192b7f : add byte ptr [rax], al ; jmp 0x192b87
0x0000000000193266 : add byte ptr [rax], al ; jmp 0x193270
0x00000000000265b4 : add byte ptr [rax], al ; jmp 0x2657d
0x0000000000044ee2 : add byte ptr [rax], al ; jmp 0x44eab
0x0000000000046e43 : add byte ptr [rax], al ; jmp 0x46e0d
0x000000000004df82 : add byte ptr [rax], al ; jmp 0x4a1b7
0x0000000000058a3a : add byte ptr [rax], al ; jmp 0x54c9c
0x0000000000069fb3 : add byte ptr [rax], al ; jmp 0x66240
0x000000000007a9f2 : add byte ptr [rax], al ; jmp 0x7aa0a
0x000000000009749c : add byte ptr [rax], al ; jmp 0x97466
0x00000000000ba0c5 : add byte ptr [rax], al ; jmp 0xba08e
0x00000000000c4d59 : add byte ptr [rax], al ; jmp 0xc40f8
0x00000000000d475d : add byte ptr [rax], al ; jmp 0xd43ce
0x00000000001785bf : add byte ptr [rax], al ; jmp qword ptr [eax]
0x0000000000036b55 : add byte ptr [rax], al ; jmp rax
0x0000000000123a4b : add byte ptr [rax], al ; jmp rcx
0x000000000010fad6 : add byte ptr [rax], al ; jne 0x10fa9f ; jmp 0x10fa97
0x000000000012e8e5 : add byte ptr [rax], al ; jne 0x12e8f4 ; ret
0x000000000012e925 : add byte ptr [rax], al ; jne 0x12e934 ; ret
0x00000000001a535f : add byte ptr [rax], al ; jnp 0x1a535b ; jmp qword ptr [rcx]
0x00000000001a5cea : add byte ptr [rax], al ; jnp 0x1a5cf9 ; add al, dh ; mov ah, 0xf4 ; jmp qword ptr [rcx]
0x000000000018620e : add byte ptr [rax], al ; jo 0x18622b ; sti ; inc dword ptr [rax + 0x11] ; sti ; call qword ptr [rax]
0x000000000019a4ce : add byte ptr [rax], al ; jo 0x19a502 ; out dx, al ; call qword ptr [rdx]
0x000000000019ca6e : add byte ptr [rax], al ; jo 0x19ca32 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019dc0e : add byte ptr [rax], al ; jo 0x19db97 ; cld ; jmp qword ptr [rax]
0x00000000001b8916 : add byte ptr [rax], al ; jp 0x1b8922 ; add byte ptr [rax], al ; ret 6
0x000000000019a506 : add byte ptr [rax], al ; js 0x19a53a ; out dx, al ; call qword ptr [rdx]
0x000000000019bd66 : add byte ptr [rax], al ; js 0x19bddc ; out dx, al ; call qword ptr [rdi]
0x000000000019ce76 : add byte ptr [rax], al ; js 0x19ce6b ; out dx, al ; call qword ptr [rax]
0x000000000019d146 : add byte ptr [rax], al ; js 0x19d14a ; out dx, al ; jmp qword ptr [rsi]
0x00000000001aa6ea : add byte ptr [rax], al ; lds r8d, ptr [rcx] ; add byte ptr [rax], al ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000000a3f68 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x000000000016239e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001623ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001623be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001623ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001623de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001622fd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016231e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016232e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016233e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016234e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016235e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016236e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000001622aa : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016237e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016238e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a337b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a34de : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000a34fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000a34ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016230e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000002202e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x15a154] ; ret
0x000000000002203e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x15c12b] ; ret
0x00000000000c7632 : add byte ptr [rax], al ; lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc7604
0x00000000001120ae : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2b0ec9] ; call rax
0x0000000000046332 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x195] ; call rax
0x000000000006f7e7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007c087 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1780] ; call rax
0x000000000007c487 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1b80] ; call rax
0x000000000007ab6f : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x268] ; call rax
0x000000000006fb43 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x32c] ; call rax
0x000000000007add7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x4d0] ; call rax
0x000000000019d1ea : add byte ptr [rax], al ; lock add byte ptr [rax], al ; mov al, 0x1d ; out dx, eax ; call qword ptr [rax]
0x00000000001b2b52 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; cmp byte ptr [rbx - 9], cl ; call qword ptr [rbx]
0x00000000001ac12a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [rcx], 0 ; jo 0x1ac133 ; cmc ; call qword ptr [rcx]
0x0000000000192052 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr ds:[rax], al ; pop rax ; mov al, 0xea ; jmp qword ptr [rdx]
0x00000000001b4f52 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001a6052 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x1a6061 ; add byte ptr [rax - 0x42], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001b5a52 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; js 0x1b5a62 ; add byte ptr [rax], bh ; fcomi st(7) ; jmp qword ptr [rcx]
0x00000000001aa852 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov byte ptr [rcx], 0 ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001a6a52 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov byte ptr [rcx], al ; add al, cl ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001aa552 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000019a452 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a7952 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; add dword ptr [rax], eax ; sub rsi, rbp ; jmp qword ptr [rcx]
0x0000000000192e7e : add byte ptr [rax], al ; loopne 0x192ee1 ; jmp 0x192e88
0x0000000000194efe : add byte ptr [rax], al ; loopne 0x194e9c ; in eax, dx ; call qword ptr [rax]
0x000000000019d0fe : add byte ptr [rax], al ; loopne 0x19d103 ; stc ; call qword ptr [rax]
0x0000000000188346 : add byte ptr [rax], al ; mov ah, 0x10 ; jmp 0x188350
0x00000000001a315a : add byte ptr [rax], al ; mov ah, 0x4f ; add dword ptr [rax], eax ; ret 0xe7da
0x00000000001a505a : add byte ptr [rax], al ; mov ah, 0x6e ; add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a535a : add byte ptr [rax], al ; mov ah, 0x71 ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001890be : add byte ptr [rax], al ; mov ah, 0xa9 ; out dx, al ; jmp rsp
0x00000000001aa65a : add byte ptr [rax], al ; mov ah, 0xc4 ; add dword ptr [rax], eax ; jo 0x1aa640 ; cmc ; jmp qword ptr [rsi]
0x0000000000199ebe : add byte ptr [rax], al ; mov al, 0x1a ; out dx, al ; call qword ptr [rdi]
0x000000000019d1ee : add byte ptr [rax], al ; mov al, 0x1d ; out dx, eax ; call qword ptr [rax]
0x000000000019a36e : add byte ptr [rax], al ; mov al, 0x25 ; out dx, al ; jmp qword ptr [rax]
0x000000000019dfee : add byte ptr [rax], al ; mov al, 0x47 ; sti ; call qword ptr [rax]
0x00000000001784ee : add byte ptr [rax], al ; mov al, 0x58 ; inc eax ; pop rax ; call rax
0x00000000001973ee : add byte ptr [rax], al ; mov al, 0xba ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019cbbe : add byte ptr [rax], al ; mov al, 0xbf ; out dx, al ; jmp qword ptr [rax]
0x000000000015c81e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000001584ee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000190b36 : add byte ptr [rax], al ; mov byte ptr [rcx - 0x16], ch ; jmp qword ptr [rcx]
0x00000000001aa7f2 : add byte ptr [rax], al ; mov byte ptr [rcx], 0 ; sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x000000000015a4be : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000001a69f2 : add byte ptr [rax], al ; mov byte ptr [rcx], r8b ; add byte ptr [rax - 0x21], ch ; hlt ; jmp qword ptr [rcx]
0x000000000009686e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000037646 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x0000000000192696 : add byte ptr [rax], al ; mov byte ptr [rdi], cl ; jmp 0x1926a0
0x000000000009e3de : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009cdde : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009ddae : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000011a106 : add byte ptr [rax], al ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000001aa80a : add byte ptr [rax], al ; mov byte ptr fs:[rcx], 0 ; ret
0x00000000001b798a : add byte ptr [rax], al ; mov ch, 5 ; add byte ptr [rax], al ; ret
0x00000000001a5b5f : add byte ptr [rax], al ; mov cl, 0xf4 ; jmp qword ptr [rcx]
0x0000000000176e9e : add byte ptr [rax], al ; mov dh, 0xb ; add byte ptr [rax], al ; ret 0xfffd
0x00000000001a28cf : add byte ptr [rax], al ; mov dh, dl ; jmp qword ptr [rcx]
0x000000000009daae : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000020c6e : add byte ptr [rax], al ; mov dword ptr [r9 + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x000000000015a4fe : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015a51e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015a50e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000015a4ee : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e44de : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009ddce : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000968ae : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009ddee : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009ddfe : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009ddde : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000542a5 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000039ce4 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x0000000000120d7e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x0000000000120dbe : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000120dae : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000e4d24 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000be6c8 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000fa6f6 : add byte ptr [rax], al ; mov dword ptr fs:[rsi], 0x16 ; ret
0x000000000009cdee : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000c256e : add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000eb36e : add byte ptr [rax], al ; mov eax, 0x5f ; syscall ; ret
0x00000000000c1d0e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000c1d2e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000c1d1e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000c1d3e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000c1cfe : add byte ptr [rax], al ; mov eax, 0x6e ; syscall ; ret
0x00000000000c1f3e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000c23f9 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000fa7ee : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000c24be : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x0000000000132eb9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000357dc : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000036c8c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002c04e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012144e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000046e3e : add byte ptr [rax], al ; mov eax, 3 ; jmp 0x46e12
0x000000000015fc0e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007c59e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000120cec : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000012e5de : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000e44ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000072efe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00000000000753ce : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x0000000000037bae : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x3864da] ; ret
0x00000000000f4770 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085d9a : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000010c53e : add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x0000000000022cba : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000103f5e : add byte ptr [rax], al ; mov eax, edi ; sub eax, esi ; ret
0x0000000000100163 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x000000000004934d : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005de59 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000005e19e : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000001094e0 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000199eea : add byte ptr [rax], al ; mov ebp, 0x1ba00000 ; out dx, al ; call qword ptr [rcx]
0x00000000001aa732 : add byte ptr [rax], al ; mov ebp, es ; add dword ptr [rax], eax ; sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x000000000009ce1e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000123283 : add byte ptr [rax], al ; mov edi, 0xa00 ; call 0x1f4e9
0x000000000010bd5d : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10bd2b
0x000000000014c92e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009ce0e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000070a7c : add byte ptr [rax], al ; mov edx, eax ; jmp 0x70a3d
0x00000000000714e7 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x714ab
0x0000000000071acc : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71a94
0x0000000000071c38 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71bf6
0x0000000000071f27 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71eeb
0x00000000000f5c6e : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000001a4d62 : add byte ptr [rax], al ; mov esp, 0x1800016b ; hlt ; jmp qword ptr [rcx]
0x00000000001a8262 : add byte ptr [rax], al ; mov esp, 0x180001a0 ; cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000001aa762 : add byte ptr [rax], al ; mov esp, 0x180001c5 ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001ac362 : add byte ptr [rax], al ; mov esp, 0x280001e1 ; sti ; cmc ; call qword ptr [rax]
0x00000000001a0b62 : add byte ptr [rax], al ; mov esp, 0x38000129 ; sal ecx, cl ; call rsi
0x0000000000193262 : add byte ptr [rax], al ; mov esp, 0x48000050 ; jmp 0x193274
0x00000000001a1962 : add byte ptr [rax], al ; mov esp, 0x68000137 ; jrcxz 0x1a1965 ; call rsp
0x000000000019bd62 : add byte ptr [rax], al ; mov esp, 0x780000db ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rdi]
0x00000000001a2b62 : add byte ptr [rax], al ; mov esp, 0x98000149 ; mov edx, dr0 ; call qword ptr [rdx]
0x00000000001b5d62 : add byte ptr [rax], al ; mov esp, 0xd800027b ; fdivrp st(7) ; call rdi
0x0000000000107665 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r14 ; call rax
0x000000000015a53e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015a55e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015a56e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015a57e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015a58e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015a59e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015a5ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015a54e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000015a52e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000012e2a1 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000091e56 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000012e97a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009de0e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009de2e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009de4e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009de5e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009de6e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009de7e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009de3e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009de1e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000071cfc : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001276eb : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000120d2c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003d2d3 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000e43fc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000120cfc : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000007d4f8 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x000000000010c4c6 : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000001203e5 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x00000000000301ba : add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012abbf : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000ba0bf : add byte ptr [rax], al ; mov r11d, 1 ; jmp 0xba094
0x0000000000036bf4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000a2ede : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000a2eee : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000a2efe : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000a2f0e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000a2f1e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000a2f2e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000a2f3e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007b139 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000769e0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007b685 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000f8296 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000487a0 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000bd23e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000070b7e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007c86e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000135223 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28a664] ; call qword ptr [rax]
0x000000000013375f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28c128] ; call qword ptr [rax]
0x000000000007c84e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x342949] ; ret
0x00000000000237de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a0461] ; ret
0x00000000000237ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a0481] ; ret
0x00000000000f240d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x68] ; ret
0x000000000007e469 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x0000000000114bb6 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079d46 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005d46d : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003ca68 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000003576c : add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x0000000000035776 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000010bfce : add byte ptr [rax], al ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000007c87e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000133886 : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000082be8 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ebe3 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000000a4792 : add byte ptr [rax], al ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000075385 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x40] ; jmp 0x75357
0x0000000000023767 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000f5e60 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000011fee8 : add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x00000000000f66b6 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000010595f : add byte ptr [rax], al ; mov rdi, r14 ; call 0x101c57
0x00000000000f5ca4 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000074c83 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x70f17
0x000000000011fce0 : add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f5c95 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000129594 : add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x000000000011fff1 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000121707 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000000f60ea : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006d76d : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006cdf2 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000857b3 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000012cede : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000009ce4e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000085510 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000a4197 : add byte ptr [rax], al ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000007655f : add byte ptr [rax], al ; mov rdx, r14 ; mov rdi, rbx ; call rax
0x0000000000110e27 : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call rax
0x0000000000065aa8 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3584af] ; call rax
0x00000000000641b0 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x359da7] ; call rax
0x000000000005ed34 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35f223] ; call rax
0x0000000000055fca : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367f8d] ; call rax
0x000000000004efc0 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x36ef97] ; call rax
0x0000000000049e8c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3740cb] ; call rax
0x0000000000085300 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000085092 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x000000000008632a : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000001a8232 : add byte ptr [rax], al ; mov word ptr [rax + 0x3ae80001], fs ; cmc ; jmp qword ptr [rcx]
0x0000000000192232 : add byte ptr [rax], al ; mov word ptr [rax], es ; add al, cl ; mov cl, 0xea ; call qword ptr [rax]
0x00000000001a7f32 : add byte ptr [rax], al ; mov word ptr [rbp + 0x33080001], ds ; cmc ; jmp qword ptr [rcx]
0x0000000000196332 : add byte ptr [rax], al ; mov word ptr [rcx - 0x56b80000], es ; in eax, dx ; call rcx
0x000000000015a4de : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015a4ce : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x0000000000190b32 : add byte ptr [rax], al ; mov word ptr [rcx], gs ; add byte ptr [rax], al ; mov byte ptr [rcx - 0x16], ch ; jmp qword ptr [rcx]
0x000000000009ddbe : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009692e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009688e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000001a7c32 : add byte ptr [rax], al ; mov word ptr [rdx + 0x2ef80001], ds ; cmc ; jmp qword ptr [rcx]
0x00000000001a5c32 : add byte ptr [rax], al ; mov word ptr [rdx + 1], dr1 ; add al, ch ; mov bl, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a6432 : add byte ptr [rax], al ; mov word ptr [rdx - 0x3377ffff], es ; hlt ; jmp qword ptr [rcx]
0x000000000003d31d : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003d364 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001a2032 : add byte ptr [rax], al ; mov word ptr [rsi], dr1 ; add dword ptr [rax], eax ; sbb ch, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a0832 : add byte ptr [rax], al ; mov word ptr [rsi], fs ; add dword ptr [rax], eax ; sbb dl, cl ; int1 ; call qword ptr [rsi]
0x000000000009de8e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009de9e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000192b4a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], al ; cmp byte ptr [rdx], 0xfa ; jmp qword ptr [rcx]
0x00000000001b634a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rdx], 0xf7f5c000 ; call rdx
0x00000000001a084a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr es:[rax], eax ; and dl, cl ; int1 ; call qword ptr [rbx]
0x00000000001a484a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add word ptr [rax], ax ; xor byte ptr [rcx], cl ; hlt ; jmp rdx
0x00000000001aa44a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001aad4a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add dword ptr [rax], eax ; sbb ah, 0xf5 ; call qword ptr [rax]
0x000000000019fb4a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rcx], eax ; add al, al ; sbb cl, dh ; jmp qword ptr [rcx]
0x000000000006d0b6 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000014cabe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000014d19e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000014d12e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000019d1be : add byte ptr [rax], al ; nop ; adc bh, dl ; call qword ptr [rax]
0x00000000000bd33c : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000010c54d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x0000000000192e0e : add byte ptr [rax], al ; nop ; pop rdx ; jmp 0x192e18
0x000000000001b336 : add byte ptr [rax], al ; nop ; ret
0x000000000001b036 : add byte ptr [rax], al ; nop ; ret 0x3b
0x00000000000ffdf9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000001a28b2 : add byte ptr [rax], al ; or al, 0x47 ; add dword ptr [rax], eax ; call 0x221a1b4f
0x00000000001a4cb2 : add byte ptr [rax], al ; or al, 0x6b ; add dword ptr [rax], eax ; test al, 0x65 ; hlt ; jmp qword ptr [rcx]
0x00000000001a51b2 : add byte ptr [rax], al ; or al, 0x70 ; add dword ptr [rax], eax ; pop rax ; jbe 0x1a51b8 ; jmp qword ptr [rcx]
0x00000000001a7db2 : add byte ptr [rax], al ; or al, 0x9c ; add dword ptr [rax], eax ; or byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001aa8b2 : add byte ptr [rax], al ; or al, 0xc7 ; add dword ptr [rax], eax ; test al, 0xd6 ; cmc ; jmp qword ptr [rsi]
0x00000000001aeab2 : add byte ptr [rax], al ; or al, 9 ; add al, byte ptr [rax] ; cmp byte ptr [rdx - 0xa], bl ; call qword ptr [rdi]
0x0000000000192dc6 : add byte ptr [rax], al ; or byte ptr [rdx - 0x15], bl ; jmp qword ptr [rsi]
0x00000000000f08b6 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9e75
0x0000000000165e1e : add byte ptr [rax], al ; or ch, 0xeb ; call qword ptr [rax]
0x000000000007a61e : add byte ptr [rax], al ; or eax, 0x20 ; jmp 0x7a5ed
0x0000000000036ec9 : add byte ptr [rax], al ; or eax, 0xffffffff ; ret
0x0000000000188486 : add byte ptr [rax], al ; out 0x45, al ; jmp 0x188490
0x00000000001a1c8f : add byte ptr [rax], al ; out dx, al ; int1 ; call qword ptr [rdx]
0x00000000000739d3 : add byte ptr [rax], al ; pop r12 ; ret
0x0000000000053870 : add byte ptr [rax], al ; pop r13 ; ret
0x00000000000537a2 : add byte ptr [rax], al ; pop r14 ; ret
0x0000000000199296 : add byte ptr [rax], al ; pop rax ; add esi, ebp ; jmp rax
0x000000000018fee6 : add byte ptr [rax], al ; pop rax ; and dl, ch ; call qword ptr [rsi]
0x0000000000192056 : add byte ptr [rax], al ; pop rax ; mov al, 0xea ; jmp qword ptr [rdx]
0x00000000000fa377 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x000000000001b28e : add byte ptr [rax], al ; pop rax ; ret
0x000000000001af8e : add byte ptr [rax], al ; pop rax ; ret 0x3b
0x000000000018f396 : add byte ptr [rax], al ; pop rax ; std ; jmp qword ptr [rax]
0x00000000000a17ca : add byte ptr [rax], al ; pop rbp ; lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x00000000000fc727 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a1add : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x000000000004890c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000006fe73 : add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000006f48f : add byte ptr [rax], al ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000010ac57 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000070665 : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000001ff71 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021a1a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f590 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000007a34e : add byte ptr [rax], al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000002cb0c : add byte ptr [rax], al ; pop rbx ; ret
0x00000000001858ee : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000018888e : add byte ptr [rax], al ; pop rdi ; sbb esp, ebp ; call rsp
0x000000000001e436 : add byte ptr [rax], al ; pop rdx ; ret
0x0000000000194802 : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; clc ; jle 0x194801 ; jmp rcx
0x00000000001b1d02 : add byte ptr [rax], al ; pop rsp ; cmp eax, dword ptr [rdx] ; add byte ptr [rax], cl ; or al, 0xf7 ; call qword ptr [rsi]
0x00000000001a5e02 : add byte ptr [rax], al ; pop rsp ; jl 0x1a5e11 ; add byte ptr [rax - 0x47], cl ; hlt ; call rdi
0x0000000000199d02 : add byte ptr [rax], al ; pop rsp ; mov ebx, 0x14180000 ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a7f02 : add byte ptr [rax], al ; pop rsp ; popfq ; add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x0000000000193202 : add byte ptr [rax], al ; pop rsp ; push rax ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x15], ah ; jmp qword ptr [rbx]
0x000000000019a502 : add byte ptr [rax], al ; pop rsp ; ret
0x000000000019a402 : add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a7eea : add byte ptr [rax], al ; popfq ; add dword ptr [rax], eax ; sal byte ptr [rdx], 0xf5 ; jmp qword ptr [rcx]
0x0000000000188596 : add byte ptr [rax], al ; push r9 ; jmp 0x1885a0
0x00000000001931ea : add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; adc byte ptr [rsi - 0x15], ah ; call qword ptr [rdi]
0x00000000001860fc : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000001b276 : add byte ptr [rax], al ; push rax ; ret
0x000000000001af76 : add byte ptr [rax], al ; push rax ; ret 0x3b
0x000000000012e98e : add byte ptr [rax], al ; push rbx ; call 0x12ac35
0x00000000001885ee : add byte ptr [rax], al ; push rsi ; jmp 0x1885f8
0x00000000001b62fa : add byte ptr [rax], al ; push rsp ; add dword ptr [rdx], 0xf7f43000 ; call rcx
0x00000000001a1dfa : add byte ptr [rax], al ; push rsp ; cmp al, 1 ; add al, ah ; int1 ; jmp qword ptr [rdx]
0x0000000000194efa : add byte ptr [rax], al ; push rsp ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; loopne 0x194ea0 ; in eax, dx ; call qword ptr [rax]
0x00000000001886de : add byte ptr [rax], al ; push rsp ; jmp 0x1886e8
0x00000000001aa8fa : add byte ptr [rax], al ; push rsp ; mov dword ptr [rcx], 0xf5d6f000 ; jmp qword ptr [rsi]
0x000000000019d0fa : add byte ptr [rax], al ; push rsp ; out dx, eax ; add byte ptr [rax], al ; loopne 0x19d107 ; stc ; call qword ptr [rax]
0x00000000001a7dfa : add byte ptr [rax], al ; push rsp ; pushfq ; add dword ptr [rax], eax ; push rax ; xor ebp, esi ; jmp qword ptr [rcx]
0x00000000001aa3fa : add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001a5b42 : add byte ptr [rax], al ; pushfq ; jns 0x1a5b51 ; add al, ch ; mov al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001aa942 : add byte ptr [rax], al ; pushfq ; mov dword ptr [rcx], 0xf5d70800 ; jmp qword ptr [rdi]
0x000000000019d142 : add byte ptr [rax], al ; pushfq ; out dx, eax ; add byte ptr [rax], al ; js 0x19d14e ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a5042 : add byte ptr [rax], al ; pushfq ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; js 0x1a50c1 ; hlt ; jmp qword ptr [rcx]
0x00000000001aa642 : add byte ptr [rax], al ; pushfq ; vaddps xmm10, xmm15, xmm13 ; cmc ; jmp qword ptr [rsi]
0x00000000001a7342 : add byte ptr [rax], al ; pushfq ; xchg eax, ecx ; add dword ptr [rax], eax ; test al, 0xd ; cmc ; jmp qword ptr [rcx]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x000000000000edae : add byte ptr [rax], al ; ret 0
0x000000000016e3c6 : add byte ptr [rax], al ; ret 0x12
0x000000000000a136 : add byte ptr [rax], al ; ret 0x15
0x000000000001ac26 : add byte ptr [rax], al ; ret 0x17c5
0x000000000001befe : add byte ptr [rax], al ; ret 0x17c6
0x0000000000018766 : add byte ptr [rax], al ; ret 0x17cf
0x000000000001071e : add byte ptr [rax], al ; ret 0x19
0x000000000016fdfe : add byte ptr [rax], al ; ret 0x1d4
0x0000000000170596 : add byte ptr [rax], al ; ret 0x1d5
0x000000000016ee06 : add byte ptr [rax], al ; ret 0x24
0x0000000000004b0e : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x00000000000055a6 : add byte ptr [rax], al ; ret 0x31
0x000000000000ffb6 : add byte ptr [rax], al ; ret 0x33
0x000000000000f3e6 : add byte ptr [rax], al ; ret 0x34
0x00000000000078e6 : add byte ptr [rax], al ; ret 0x35
0x00000000000059c6 : add byte ptr [rax], al ; ret 0x37
0x0000000000004a06 : add byte ptr [rax], al ; ret 0x3b
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x00000000000098ae : add byte ptr [rax], al ; ret 0x47
0x000000000000fb66 : add byte ptr [rax], al ; ret 0x48
0x0000000000005846 : add byte ptr [rax], al ; ret 0x4c
0x000000000016dbc6 : add byte ptr [rax], al ; ret 0xc
0x000000000016dfc6 : add byte ptr [rax], al ; ret 0xf
0x000000000019cc1f : add byte ptr [rax], al ; ret 0xffee
0x0000000000176e22 : add byte ptr [rax], al ; ret 0xfffd
0x0000000000000e1e : add byte ptr [rax], al ; ret 1
0x000000000000100e : add byte ptr [rax], al ; ret 2
0x000000000000ecd6 : add byte ptr [rax], al ; ret 3
0x00000000001717c2 : add byte ptr [rax], al ; ret 4
0x0000000000001586 : add byte ptr [rax], al ; ret 5
0x0000000000001726 : add byte ptr [rax], al ; ret 6
0x0000000000171dc2 : add byte ptr [rax], al ; ret 7
0x0000000000171fc2 : add byte ptr [rax], al ; ret 8
0x000000000016d7c6 : add byte ptr [rax], al ; ret 9
0x00000000001717be : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001aa6ef : add byte ptr [rax], al ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001aa496 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret 1
0x00000000001923c2 : add byte ptr [rax], al ; sbb al, 0x42 ; add byte ptr [rax], al ; call 0x11190e8f
0x00000000001b2ac2 : add byte ptr [rax], al ; sbb al, 0x49 ; add al, byte ptr [rax] ; or byte ptr [rbx - 9], cl ; jmp qword ptr [rax]
0x0000000000192dc2 : add byte ptr [rax], al ; sbb al, 0x4c ; add byte ptr [rax], al ; or byte ptr [rdx - 0x15], bl ; jmp qword ptr [rsi]
0x00000000001a45c2 : add byte ptr [rax], al ; sbb al, 0x64 ; add dword ptr [rax], eax ; call 0x171a39d4
0x00000000001948c2 : add byte ptr [rax], al ; sbb al, 0x67 ; add byte ptr [rax], al ; call 0x13193664
0x00000000001a4bc2 : add byte ptr [rax], al ; sbb al, 0x6a ; add dword ptr [rax], eax ; fsub dword ptr [rbx - 0xc] ; jmp qword ptr [rcx]
0x00000000001a62c2 : add byte ptr [rax], al ; sbb al, 0x81 ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000001a69c2 : add byte ptr [rax], al ; sbb al, 0x88 ; add dword ptr [rax], eax ; or bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a7cc2 : add byte ptr [rax], al ; sbb al, 0x9b ; add dword ptr [rax], eax ; mov byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a82c2 : add byte ptr [rax], al ; sbb al, 0xa1 ; add dword ptr [rax], eax ; js 0x1a830e ; cmc ; jmp qword ptr [rcx]
0x00000000001aa7c2 : add byte ptr [rax], al ; sbb al, 0xc6 ; add dword ptr [rax], eax ; sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x000000000019bdc2 : add byte ptr [rax], al ; sbb al, 0xdc ; add byte ptr [rax], al ; cmp byte ptr [rax - 0x12], dh ; call qword ptr [rsi]
0x00000000001ac3c2 : add byte ptr [rax], al ; sbb al, 0xe2 ; add dword ptr [rax], eax ; cwde ; cld ; cmc ; call qword ptr [rax]
0x00000000001ac4c2 : add byte ptr [rax], al ; sbb al, 0xe3 ; add dword ptr [rax], eax ; js 0x1ac4d0 ; cmc ; call qword ptr [rax]
0x000000000003739e : add byte ptr [rax], al ; sbb byte ptr [rax + 0x450f4402], ch ; ret 0x8944
0x0000000000199d06 : add byte ptr [rax], al ; sbb byte ptr [rsi + rbp*8], dl ; jmp qword ptr [rcx]
0x0000000000193206 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0x15], ah ; jmp qword ptr [rbx]
0x00000000001a8fea : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; mov al, 0x63 ; cmc ; call rsp
0x000000000019e01e : add byte ptr [rax], al ; shr byte ptr [rax - 5], 1 ; call qword ptr [rax]
0x000000000018d247 : add byte ptr [rax], al ; stc ; jmp rsp
0x00000000001ac5af : add byte ptr [rax], al ; std ; cmc ; jmp rsp
0x00000000001aa506 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret
0x00000000001a00d2 : add byte ptr [rax], al ; sub al, 0x1f ; add dword ptr [rax], eax ; pop rax ; int1 ; call qword ptr [rdx]
0x00000000001a22d2 : add byte ptr [rax], al ; sub al, 0x41 ; add dword ptr [rax], eax ; sub byte ptr [rdi], al ; jmp rdx
0x00000000001a36d2 : add byte ptr [rax], al ; sub al, 0x55 ; add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; call qword ptr [rcx]
0x00000000001b51d2 : add byte ptr [rax], al ; sub al, 0x70 ; add al, byte ptr [rax] ; sbb byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x00000000001a5cd2 : add byte ptr [rax], al ; sub al, 0x7b ; add dword ptr [rax], eax ; call 0x171a519a
0x00000000001aa6d2 : add byte ptr [rax], al ; sub al, 0xc5 ; add dword ptr [rax], eax ; call 0x271a9cbb
0x000000000018879e : add byte ptr [rax], al ; sub ch, ah ; jmp 0x1887a8
0x0000000000187a86 : add byte ptr [rax], al ; sub dword ptr [rbx - 0x17], edi ; call rsp
0x00000000001609cc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000f1000 : add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000000366fd : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000103d0a : add byte ptr [rax], al ; sub ecx, eax ; mov eax, ecx ; ret
0x00000000001a790f : add byte ptr [rax], al ; sub esi, ebp ; jmp qword ptr [rcx]
0x000000000007be06 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000103d9e : add byte ptr [rax], al ; sub r8d, eax ; mov eax, r8d ; ret
0x00000000000885d1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000011621e : add byte ptr [rax], al ; sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000cb60b : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000108095 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000c1d03 : add byte ptr [rax], al ; syscall ; ret
0x00000000001aa92a : add byte ptr [rax], al ; test al, bh ; add dword ptr [rax], eax ; push rax ; ret 0xfff8
0x0000000000188a76 : add byte ptr [rax], al ; test byte ptr [rax - 0x13], ah ; jmp rsp
0x00000000001a752a : add byte ptr [rax], al ; test byte ptr [rbx + 0x20c00001], dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a852a : add byte ptr [rax], al ; test byte ptr [rbx + 0x47200001], ah ; cmc ; jmp rax
0x000000000019752a : add byte ptr [rax], al ; test byte ptr [rbx - 0x42800000], dl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a7b2a : add byte ptr [rax], al ; test byte ptr [rcx + 0x2dc00001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a432a : add byte ptr [rax], al ; test byte ptr [rcx + 1], ah ; add byte ptr [rax - 7], dl ; jmp qword ptr [rax]
0x00000000001a5b2a : add byte ptr [rax], al ; test byte ptr [rcx + 1], bh ; add al, dl ; mov al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a532a : add byte ptr [rax], al ; test byte ptr [rcx + 1], dh ; add al, dl ; jp 0x1a5330 ; jmp qword ptr [rcx]
0x00000000001a692a : add byte ptr [rax], al ; test byte ptr [rdi - 0x22efffff], al ; hlt ; call qword ptr [rdx]
0x00000000001a942a : add byte ptr [rax], al ; test byte ptr [rdx + 0x69e00001], dh ; cmc ; call rcx
0x00000000001b65ea : add byte ptr [rax], al ; test byte ptr [rdx], r8b ; add byte ptr [rax], dl ; push rdi ; call qword ptr [rcx]
0x00000000001a502a : add byte ptr [rax], al ; test byte ptr [rsi + 1], ch ; add byte ptr [rax + 0x6e], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b402a : add byte ptr [rax], al ; test byte ptr [rsi + 2], bl ; add al, ah ; mov dh, bh ; call qword ptr [rdx]
0x000000000019d12a : add byte ptr [rax], al ; test ch, bh ; add byte ptr [rax], al ; cmp bl, 0xee ; call qword ptr [rax]
0x00000000001aae2a : add byte ptr [rax], al ; test cl, ah ; add dword ptr [rax], eax ; shl al, 0xf5 ; call qword ptr [rax]
0x00000000000a832c : add byte ptr [rax], al ; test ebp, ebp ; mov rbx, r15 ; setne dl ; jmp 0xa8350
0x000000000005dc96 : add byte ptr [rax], al ; test ecx, ecx ; je 0x5dca7 ; ret
0x00000000000f7fed : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; ret
0x000000000012b862 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x12b858 ; pop rbx ; ret
0x0000000000187efe : add byte ptr [rax], al ; xchg dl, r13b ; call rsp
0x00000000001a790a : add byte ptr [rax], al ; xchg eax, edi ; add dword ptr [rax], eax ; add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001973ea : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; mov al, 0xba ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001af43a : add byte ptr [rax], al ; xchg eax, esp ; adc al, byte ptr [rdx] ; add al, ah ; xchg dh, dh ; jmp rdx
0x000000000019d03a : add byte ptr [rax], al ; xchg eax, esp ; out dx, al ; add byte ptr [rax], al ; cli ; out dx, al ; call qword ptr [rcx]
0x00000000001a3d3a : add byte ptr [rax], al ; xchg eax, esp ; pop rbx ; add dword ptr [rax], eax ; push rax ; jb 0x1a3d3f ; jmp rax
0x00000000001aa53a : add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000001a803a : add byte ptr [rax], al ; xchg eax, esp ; sahf ; add dword ptr [rax], eax ; jo 0x1a8080 ; cmc ; jmp qword ptr [rcx]
0x00000000001add3a : add byte ptr [rax], al ; xchg eax, esp ; sti ; add dword ptr [rax], eax ; shl byte ptr [rdx], 0xf6 ; call rdi
0x00000000001a7d3a : add byte ptr [rax], al ; xchg eax, esp ; wait ; add dword ptr [rax], eax ; xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a793a : add byte ptr [rax], al ; xchg eax, esp ; xchg eax, edi ; add dword ptr [rax], eax ; xor byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a783a : add byte ptr [rax], al ; xchg eax, esp ; xchg eax, esi ; add dword ptr [rax], eax ; sub sil, bpl ; jmp qword ptr [rcx]
0x00000000001ab93a : add byte ptr [rax], al ; xchg eax, esp ; xlatb ; add dword ptr [rax], eax ; jo 0x1ab934 ; cmc ; call qword ptr [rax]
0x000000000001a2ae : add byte ptr [rax], al ; xlatb ; ret 0x17
0x00000000001a0eda : add byte ptr [rax], al ; xor al, 0x2d ; add dword ptr [rax], eax ; rcl ah, 1 ; int1 ; jmp qword ptr [rbx]
0x00000000001a1cda : add byte ptr [rax], al ; xor al, 0x3b ; add dword ptr [rax], eax ; mov al, 0xee ; int1 ; jmp qword ptr [rcx]
0x00000000001a29da : add byte ptr [rax], al ; xor al, 0x48 ; add dword ptr [rax], eax ; mov edx, dr0 ; jmp qword ptr [rdi]
0x00000000001a6eda : add byte ptr [rax], al ; xor al, 0x8d ; add dword ptr [rax], eax ; sar dh, 1 ; hlt ; jmp rax
0x00000000001a82da : add byte ptr [rax], al ; xor al, 0xa1 ; add dword ptr [rax], eax ; nop ; cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000001aa7da : add byte ptr [rax], al ; xor al, 0xc6 ; add dword ptr [rax], eax ; ret
0x00000000001ac3da : add byte ptr [rax], al ; xor al, 0xe2 ; add dword ptr [rax], eax ; nop ; cld ; cmc ; call qword ptr [rax]
0x00000000001ad6da : add byte ptr [rax], al ; xor al, 0xf5 ; add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf6 ; call rdi
0x00000000000e4e14 : add byte ptr [rax], al ; xor al, al ; ret
0x000000000018eaee : add byte ptr [rax], al ; xor byte ptr [rax - 3], ah ; jmp qword ptr [rdx]
0x00000000000f067a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x0000000000179ebe : add byte ptr [rax], al ; xor byte ptr [rsi - 0x582c000b], ah ; cmc ; call rbx
0x00000000000a0c5e : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000841dc : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000001365ae : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000008347e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000001214fe : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x00000000001214b7 : add byte ptr [rax], al ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000003c3fb : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013513f : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003bf9a : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000038526 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003d00b : add byte ptr [rax], al ; xor eax, edx ; ret
0x00000000000a5492 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa5445
0x00000000000a7c32 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa7be5
0x00000000000aa232 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xaa1e5
0x000000000008aa61 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000f5be0 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000f5c05 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f5c29 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000f5c49 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f5bbb : add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x000000000008bd7d : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000019b9a6 : add byte ptr [rax], al ; xor rbp, rsi ; call qword ptr [rsi]
0x00000000001b5a57 : add byte ptr [rax], bh ; fcomi st(7) ; jmp qword ptr [rcx]
0x00000000001b10d7 : add byte ptr [rax], bh ; in eax, -0xa ; call qword ptr [rdi]
0x000000000019bdc7 : add byte ptr [rax], bh ; jo 0x19bdbd ; call qword ptr [rsi]
0x0000000000192027 : add byte ptr [rax], bh ; mov al, 0xea ; jmp qword ptr [rdx]
0x000000000001a387 : add byte ptr [rax], bh ; ret
0x000000000001af2f : add byte ptr [rax], bh ; ret 0x3b
0x00000000001a0b67 : add byte ptr [rax], bh ; sal ecx, cl ; call rsi
0x00000000001a7de7 : add byte ptr [rax], bh ; xor ebp, esi ; jmp qword ptr [rcx]
0x0000000000199d07 : add byte ptr [rax], bl ; adc al, 0xee ; jmp qword ptr [rcx]
0x00000000001b51d7 : add byte ptr [rax], bl ; add al, 0xfb ; jmp qword ptr [rdx]
0x00000000001a36d7 : add byte ptr [rax], bl ; call qword ptr cs:[rcx]
0x00000000001a8267 : add byte ptr [rax], bl ; cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000001a4d67 : add byte ptr [rax], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000193207 : add byte ptr [rax], bl ; jmp 0x19320f
0x0000000000191ff7 : add byte ptr [rax], bl ; mov al, 0xea ; jmp qword ptr [rbx]
0x00000000001a28e7 : add byte ptr [rax], bl ; mov dh, dl ; jmp qword ptr [rcx]
0x00000000001945f7 : add byte ptr [rax], bl ; movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; call rdx
0x00000000001b1117 : add byte ptr [rax], bl ; out 0xf6, al ; jmp rdx
0x00000000001898d7 : add byte ptr [rax], bl ; push rcx ; out dx, eax ; call rsp
0x000000000019de07 : add byte ptr [rax], bl ; pushfq ; out dx, eax ; jmp rdi
0x000000000001b1cf : add byte ptr [rax], bl ; ret
0x000000000001aecf : add byte ptr [rax], bl ; ret 0x3b
0x00000000001aa707 : add byte ptr [rax], bl ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001a2037 : add byte ptr [rax], bl ; std ; int1 ; jmp qword ptr [rcx]
0x00000000001a7927 : add byte ptr [rax], bl ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001aac27 : add byte ptr [rax], ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x00000000001a5187 : add byte ptr [rax], ch ; jbe 0x1a5183 ; jmp qword ptr [rcx]
0x000000000001b1ff : add byte ptr [rax], ch ; ret
0x000000000001aeff : add byte ptr [rax], ch ; ret 0x3b
0x00000000001ac367 : add byte ptr [rax], ch ; sti ; cmc ; call qword ptr [rax]
0x00000000001a7827 : add byte ptr [rax], ch ; sub dh, ch ; jmp qword ptr [rcx]
0x0000000000194f47 : add byte ptr [rax], ch ; xchg eax, esi ; in eax, dx ; jmp rsp
0x00000000001867d8 : add byte ptr [rax], cl ; cld ; jmp rax
0x00000000001a7b77 : add byte ptr [rax], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a69c7 : add byte ptr [rax], cl ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a6ae7 : add byte ptr [rax], cl ; loopne 0x1a6ae3 ; jmp rsp
0x000000000002fd94 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001b1d07 : add byte ptr [rax], cl ; or al, 0xf7 ; call qword ptr [rsi]
0x00000000001a50a7 : add byte ptr [rax], cl ; outsd dx, dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x0000000000192dc7 : add byte ptr [rax], cl ; pop rdx ; jmp 0x192dcf
0x000000000001b19f : add byte ptr [rax], cl ; ret
0x000000000001aeb7 : add byte ptr [rax], cl ; ret 0x3b
0x00000000001a4417 : add byte ptr [rax], cl ; sti ; jmp qword ptr [rdi]
0x00000000001aa947 : add byte ptr [rax], cl ; xlatb ; cmc ; jmp qword ptr [rdi]
0x00000000001aa917 : add byte ptr [rax], cl ; xlatb ; cmc ; jmp qword ptr [rsi]
0x00000000001a7db7 : add byte ptr [rax], cl ; xor ebp, esi ; jmp qword ptr [rcx]
0x00000000001a7f37 : add byte ptr [rax], cl ; xor esi, ebp ; jmp qword ptr [rcx]
0x00000000000bf8c4 : add byte ptr [rax], dh ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001869b8 : add byte ptr [rax], dh ; cld ; jmp rax
0x00000000001a827f : add byte ptr [rax], dh ; cmp esi, ebp ; jmp qword ptr [rcx]
0x0000000000179ebf : add byte ptr [rax], dh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rbx
0x00000000001a4d7f : add byte ptr [rax], dh ; hlt ; jmp qword ptr [rcx]
0x00000000000a0c5f : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000019bfcf : add byte ptr [rax], dh ; jl 0x19bfc5 ; jmp qword ptr [rcx]
0x00000000001a538f : add byte ptr [rax], dh ; jnp 0x1a538b ; jmp qword ptr [rcx]
0x000000000019200f : add byte ptr [rax], dh ; mov al, 0xea ; jmp qword ptr [rax]
0x00000000001a28ff : add byte ptr [rax], dh ; mov dh, dl ; jmp qword ptr [rcx]
0x00000000001a484f : add byte ptr [rax], dh ; or esp, esi ; jmp rdx
0x000000000001b217 : add byte ptr [rax], dh ; ret
0x000000000000b477 : add byte ptr [rax], dh ; ret 0x10
0x000000000001af17 : add byte ptr [rax], dh ; ret 0x3b
0x00000000001a793f : add byte ptr [rax], dh ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a7d3f : add byte ptr [rax], dh ; xor ch, dh ; jmp qword ptr [rcx]
0x000000000005d5b5 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000005d5c3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000018d60f : add byte ptr [rax], dl ; and al, 0xfa ; jmp rsp
0x000000000017297f : add byte ptr [rax], dl ; and ebp, esp ; call qword ptr [rax]
0x00000000001b643f : add byte ptr [rax], dl ; cli ; call rcx
0x00000000001a4faf : add byte ptr [rax], dl ; insd dword ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001931ef : add byte ptr [rax], dl ; jmp 0x1931f7
0x000000000002fe74 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001b65ef : add byte ptr [rax], dl ; push rdi ; call qword ptr [rcx]
0x000000000001b1b7 : add byte ptr [rax], dl ; ret
0x000000000000d9af : add byte ptr [rax], dl ; ret 0x10
0x000000000019794f : add byte ptr [rax], dl ; ret 0xffed
0x000000000019919f : add byte ptr [rax], dl ; std ; in eax, dx ; call qword ptr [rax]
0x00000000001a7e8f : add byte ptr [rax], dl ; xor dh, ch ; call qword ptr [rsi]
0x00000000001adfa0 : add byte ptr [rax], r8b ; add ah, ch ; stc ; add dword ptr [rax], eax ; jmp qword ptr [rdi]
0x000000000019a980 : add byte ptr [rax], r8b ; add ah, cl ; ret
0x000000000019a8a8 : add byte ptr [rax], r8b ; add ah, dh ; ret 0
0x00000000000368fd : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x0000000000192e7d : add byte ptr [rax], r8b ; loopne 0x192ee2 ; jmp 0x192e89
0x0000000000192695 : add byte ptr [rax], r8b ; mov byte ptr [rdi], cl ; jmp 0x1926a1
0x000000000011a105 : add byte ptr [rax], r8b ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000968ad : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000c256d : add byte ptr [rax], r8b ; mov eax, 0x20 ; ret
0x0000000000074535 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000037be5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000c3555 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000012b86d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x00000000000753cd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x0000000000103f5d : add byte ptr [rax], r8b ; mov eax, edi ; sub eax, esi ; ret
0x000000000009ce0d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000091e55 : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000010c4c5 : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000bd23d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000047025 : add byte ptr [rax], r8b ; mov rax, rbx ; pop rbx ; ret
0x0000000000035775 : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x0000000000091615 : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x000000000009ce4d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009688d : add byte ptr [rax], r8b ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x0000000000192e0d : add byte ptr [rax], r8b ; nop ; pop rdx ; jmp 0x192e19
0x0000000000192dc5 : add byte ptr [rax], r8b ; or byte ptr [rdx - 0x15], bl ; jmp qword ptr [rsi]
0x000000000007a61d : add byte ptr [rax], r8b ; or eax, 0x20 ; jmp 0x7a5ee
0x00000000000d262d : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004701d : add byte ptr [rax], r8b ; pop rbx ; ret
0x000000000012e98d : add byte ptr [rax], r8b ; push rbx ; call 0x12ac36
0x000000000002efd5 : add byte ptr [rax], r8b ; ret
0x0000000000103d9d : add byte ptr [rax], r8b ; sub r8d, eax ; mov eax, r8d ; ret
0x00000000000e315d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000d232d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004883d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000038525 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000a2bdd : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x0000000000135ee7 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x48 ; ret
0x0000000000165bfb : add byte ptr [rbp + 0x1e], dh ; ret
0x0000000000133b47 : add byte ptr [rbp + 0x23], dh ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000135db9 : add byte ptr [rbp + 0x24], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000078892 : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000b81b2 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000478de : add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x000000000018c6df : add byte ptr [rbp + 0x40], al ; clc ; jmp rsp
0x000000000008aade : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000005d54e : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000a17cb : add byte ptr [rbp + 0x49], bl ; lea eax, dword ptr [rcx + 1] ; pop r12 ; ret
0x0000000000188597 : add byte ptr [rbp + 0x51], cl ; jmp 0x18859f
0x0000000000053935 : add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000118057 : add byte ptr [rbp + 0x63], cl ; ret
0x00000000001188f5 : add byte ptr [rbp + 0x6f], dh ; add rsp, 8 ; ret
0x0000000000135e73 : add byte ptr [rbp + 0xa], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000196b66 : add byte ptr [rbp + 0xd1cffed], al ; lodsd eax, dword ptr [rsi] ; test ch, ch ; jmp qword ptr [rdx]
0x0000000000038bcf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000038abf : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000000ea4f : add byte ptr [rbp + 1], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004874a : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000105dfd : add byte ptr [rbp + 7], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e8e6 : add byte ptr [rbp + 7], dh ; ret
0x00000000001250d8 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x48 ; ret
0x00000000001aa6eb : add byte ptr [rbp + rax*8 + 1], al ; add byte ptr [rax], al ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001aa703 : add byte ptr [rbp + rax*8 + 1], bl ; add byte ptr [rax], bl ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001aa71b : add byte ptr [rbp + rax*8 + 1], dh ; add byte ptr [rax - 0x3d], al ; clc ; jmp qword ptr [rsi]
0x00000000001aa763 : add byte ptr [rbp + rax*8 - 0x29e7ffff], bh ; cmc ; jmp qword ptr [rsi]
0x00000000001aa733 : add byte ptr [rbp + rax*8 - 0x29e7ffff], cl ; cmc ; jmp qword ptr [rsi]
0x00000000001aa74b : add byte ptr [rbp + rax*8 - 0x3cbfffff], ah ; clc ; jmp qword ptr [rsi]
0x00000000000c2648 : add byte ptr [rbp + rbp - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001b4f53 : add byte ptr [rbp + rbp*2 + 0x6380002], ch ; sti ; jmp qword ptr [rdx]
0x0000000000194f43 : add byte ptr [rbp + rbp*2 - 0x69d80000], bl ; in eax, dx ; jmp rsp
0x0000000000194efb : add byte ptr [rbp + rbp*2], dl ; add al, ah ; xchg eax, ebp ; in eax, dx ; call qword ptr [rax]
0x00000000001a7f33 : add byte ptr [rbp + rbx*4 + 0x33080001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7eeb : add byte ptr [rbp + rbx*4 + 1], al ; add al, al ; xor dh, ch ; jmp qword ptr [rcx]
0x00000000001a7f03 : add byte ptr [rbp + rbx*4 + 1], bl ; add al, bl ; xor dh, ch ; jmp qword ptr [rcx]
0x0000000000035a03 : add byte ptr [rbp + rcx*4 + 0x1c], cl ; sbb byte ptr [rax - 0x77], cl ; ret 0x394d
0x00000000000a3f69 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; call rbx
0x00000000000d4a17 : add byte ptr [rbp + rcx*4 + 0x65], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000011065e : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2b27
0x000000000010e60e : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2b44
0x00000000001a5f2b : add byte ptr [rbp + rdi*2 - 0x43dfffff], al ; hlt ; jmp qword ptr [rcx]
0x000000000018ae97 : add byte ptr [rbp + rdi*8 - 0xc], dl ; call rsp
0x00000000001ab75b : add byte ptr [rbp + rdx*8 - 0x176fffff], dh ; cmc ; call qword ptr [rax]
0x00000000001a0edb : add byte ptr [rbp - 0x2b2fffff], dh ; int1 ; jmp qword ptr [rbx]
0x0000000000165118 : add byte ptr [rbp - 0x3b], dh ; add rsp, 8 ; ret
0x00000000000f7fee : add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x000000000010fad7 : add byte ptr [rbp - 0x3e], dh ; jmp 0x10fa96
0x00000000000a832d : add byte ptr [rbp - 0x476b313], al ; setne dl ; jmp 0xa834f
0x00000000000589dc : add byte ptr [rbp - 0x4c7af02e], al ; ret 0xffff
0x0000000000187584 : add byte ptr [rbp - 0x536f0004], ch ; cld ; jmp qword ptr [rax]
0x00000000001782b0 : add byte ptr [rbp - 0x698f0004], dl ; cld ; jmp rax
0x0000000000095408 : add byte ptr [rbp - 0x73], cl ; dec dword ptr [r13 - 0x77] ; ret
0x00000000000bd9af : add byte ptr [rbp - 0x77], 0x64 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000047360 : add byte ptr [rbp - 0x77], cl ; ret
0x0000000000095358 : add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x0000000000049577 : add byte ptr [rbp - 0x77], cl ; ret 0xf41
0x000000000012e9db : add byte ptr [rbp - 0x7b], al ; div byte ptr [rbp + 0xf] ; call 0x12ac38
0x00000000000a5bf0 : add byte ptr [rbp - 0x7b], al ; in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xa5c11
0x00000000000aa950 : add byte ptr [rbp - 0x7b], al ; in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xaa971
0x00000000000789ef : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x95 ; ret 0x8445
0x000000000003aa18 : add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret
0x00000000000d0eff : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000083ae5 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000036b35 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000005dc97 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000018ab5f : add byte ptr [rbp - 0xd], ah ; jmp rsp
0x0000000000178678 : add byte ptr [rbp - 0xe], ch ; jmp qword ptr [rax]
0x0000000000178438 : add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rax]
0x0000000000186b60 : add byte ptr [rbp - 4], ah ; call qword ptr [rax + 0x20fffc64]
0x00000000001874c0 : add byte ptr [rbp - 4], bh ; push qword ptr [rax + 0x7c] ; cld ; jmp rax
0x00000000001a4ec3 : add byte ptr [rbp*2 + 0x68980001], bl ; hlt ; jmp qword ptr [rcx]
0x00000000000059bf : add byte ptr [rbp], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x0000000000139159 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000072eff : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000a1ade : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000769c8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000fc7cd : add byte ptr [rbx + 0x2c51cc0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000007c8d5 : add byte ptr [rbx + 0x3440e705], al ; add byte ptr [rcx], al ; ret
0x0000000000032196 : add byte ptr [rbx + 0x391ed30d], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000031dc8 : add byte ptr [rbx + 0x3922a13d], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d3f13 : add byte ptr [rbx + 0x394104c0], al ; ret 0x697e
0x00000000000e0ded : add byte ptr [rbx + 0x3978244c], cl ; ret 0x1372
0x00000000000c1ed0 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000010ac58 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00000000001a852b : add byte ptr [rbx + 0x47200001], al ; cmc ; jmp rax
0x000000000009ce1f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000015c85f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000015fc0f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x0000000000036fc5 : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x18 ; ret
0x00000000000c0b63 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x28 ; ret
0x000000000009f23f : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000006e24f : add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000018ca4f : add byte ptr [rbx + 0x4fff880], ah ; pop rdi ; add al, byte ptr [rax] ; ret 0xf880
0x000000000014c92f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000116a16 : add byte ptr [rbx + 0x5b04d044], cl ; ret
0x0000000000070666 : add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x000000000002487d : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001ff72 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021a1b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001f591 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007a34f : add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x00000000000735ff : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000012384e : add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x000000000009d509 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000e44cf : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000004ef56 : add byte ptr [rbx + 0x7501046a], al ; ret
0x0000000000072ecf : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000b9f3f : add byte ptr [rbx + 0xb7401fe], al ; xor eax, eax ; ret
0x00000000000a546d : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa5447
0x00000000000a7c0d : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa7be7
0x00000000000aa20d : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xaa1e7
0x000000000019c390 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001aef20 : add byte ptr [rbx + 0xe], dl ; adc byte ptr [rbx + 0x1990302], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001b7feb : add byte ptr [rbx + 6], bl ; add byte ptr [rax], al ; ret 5
0x00000000001620ba : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000018ca67 : add byte ptr [rbx + rax*4 - 8], dh ; call rsp
0x000000000019a4cb : add byte ptr [rbx + rax*8], ah ; add byte ptr [rax], al ; jo 0x19a505 ; out dx, al ; call qword ptr [rdx]
0x000000000019a503 : add byte ptr [rbx + rax*8], bl ; add byte ptr [rax + 0x2b], bh ; out dx, al ; call qword ptr [rdx]
0x000000000019e4cb : add byte ptr [rbx + rax], ah ; add dword ptr [rax], eax ; or byte ptr [rdx - 0x10], 0xff ; ret
0x00000000001a4d63 : add byte ptr [rbx + rbp*2 + 0x66180001], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000188cb7 : add byte ptr [rbx + rbp*2], al ; out dx, al ; call rsp
0x00000000001a4cb3 : add byte ptr [rbx + rbp*2], cl ; add dword ptr [rax], eax ; test al, 0x65 ; hlt ; jmp qword ptr [rcx]
0x0000000000196b83 : add byte ptr [rbx + rbp], al ; add byte ptr [rax], al ; call 0x12195944
0x00000000001a3d3b : add byte ptr [rbx + rbx*2 + 0x72500001], dl ; jmp rax
0x00000000001a7d3b : add byte ptr [rbx + rbx*4 + 0x30300001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7cab : add byte ptr [rbx + rbx*4], al ; add dword ptr [rax], eax ; jo 0x1a7ce9 ; cmc ; jmp qword ptr [rcx]
0x00000000001a7cc3 : add byte ptr [rbx + rbx*4], bl ; add dword ptr [rax], eax ; mov byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018a5cf : add byte ptr [rbx + rbx*4], dh ; call rsp
0x0000000000188faf : add byte ptr [rbx + rbx*4], dl ; out dx, al ; jmp rsp
0x000000000019bd63 : add byte ptr [rbx + rbx*8 + 0x6d780000], bh ; out dx, al ; call qword ptr [rdi]
0x000000000018e13f : add byte ptr [rbx + rbx*8], ah ; std ; jmp rsp
0x0000000000074e12 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000010038e : add byte ptr [rbx + rcx*4 + 0x2d], cl ; ret 0x2bf5
0x000000000012ff3a : add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x0000000000039c67 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000384d7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000da19f : add byte ptr [rbx + rcx*4 + 0x78], cl ; or byte ptr [rax + 0x63], cl ; ret 0xc148
0x000000000018cb0f : add byte ptr [rbx + rcx*4], al ; clc ; jmp rsp
0x00000000001aad4b : add byte ptr [rbx + rcx*8 - 0x237fffff], ah ; cmc ; call qword ptr [rax]
0x00000000001b1d03 : add byte ptr [rbx + rdi + 2], bl ; add byte ptr [rax], cl ; or al, 0xf7 ; call qword ptr [rsi]
0x000000000018bc9f : add byte ptr [rbx + rdi - 9], dh ; jmp rsp
0x00000000001a5ceb : add byte ptr [rbx + rdi*2 + 1], al ; add al, dh ; mov ah, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a5cd3 : add byte ptr [rbx + rdi*2], ch ; add dword ptr [rax], eax ; call 0x171a5199
0x000000000018dbbf : add byte ptr [rbx + rdi*4], ah ; cli ; jmp rsp
0x0000000000199d03 : add byte ptr [rbx + rdi*4], bl ; add byte ptr [rax], bl ; adc al, 0xee ; jmp qword ptr [rcx]
0x00000000001a1cdb : add byte ptr [rbx + rdi], dh ; add dword ptr [rax], eax ; mov al, 0xee ; int1 ; jmp qword ptr [rcx]
0x000000000018ce9f : add byte ptr [rbx + rdx - 7], dl ; call rsp
0x00000000001a752b : add byte ptr [rbx + rdx*4 + 0x20c00001], al ; cmc ; jmp qword ptr [rsi]
0x000000000019752b : add byte ptr [rbx + rdx*4 - 0x42800000], al ; in eax, dx ; jmp qword ptr [rax]
0x00000000001974bb : add byte ptr [rbx + rdx*4], dl ; add byte ptr [rax], al ; call 0xffffffffd3195d56
0x000000000017a553 : add byte ptr [rbx + rdx*8 - 0xa], ch ; call rdx
0x00000000001ab4bb : add byte ptr [rbx + rdx*8], dl ; add dword ptr [rax], eax ; shl ch, 1 ; cmc ; jmp rbx
0x000000000018db6f : add byte ptr [rbx + rsi*4 - 6], ah ; call rsp
0x000000000005f94e : add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x000000000005fc62 : add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x00000000000c1cc7 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xc1cda ; ret
0x000000000002ea7f : add byte ptr [rbx - 0x387cfe40], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x0000000000076947 : add byte ptr [rbx - 0x3b7cb7fe], cl ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a1b68 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000a1b61 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000a1b5a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000a1b53 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000a1b4c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000a1b6f : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000002cb0d : add byte ptr [rbx - 0x3d], bl ; test esi, esi ; je 0x2cae1 ; pop rbx ; ret
0x000000000011c136 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x11c148 ; ret
0x000000000010815f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x108179 ; ret
0x000000000011c49c : add byte ptr [rbx - 0x3fce000a], ch ; ret
0x00000000000b6fd8 : add byte ptr [rbx - 0x50f0ec18], al ; ret 0x8941
0x00000000001877c4 : add byte ptr [rbx - 0x5d8f0004], ah ; cld ; jmp rax
0x00000000000efa59 : add byte ptr [rbx - 0x6117c385], cl ; ret
0x00000000000ab5ca : add byte ptr [rbx - 0x71f0e708], al ; ret
0x00000000001194f0 : add byte ptr [rbx - 0x71f0f905], al ; ret 1
0x0000000000047e0f : add byte ptr [rbx - 0x73], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000064c4f : add byte ptr [rbx - 0x73], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret 0x4504
0x00000000000487a4 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000002227c : add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x00000000000fa58a : add byte ptr [rbx - 0x76ebdbb4], cl ; ret
0x00000000000205e2 : add byte ptr [rbx - 0x76ff4783], al ; ret
0x000000000011c7f7 : add byte ptr [rbx - 0x77], al ; scasd eax, dword ptr [rdi] ; or bl, ch ; ret 0x4890
0x000000000006fe74 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc3633fe0
0x0000000000021e7f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00000000000eea2a : add byte ptr [rbx - 0x7acfdb84], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x7c83
0x0000000000030f95 : add byte ptr [rbx - 0x7af0fa08], al ; ret 0xfffa
0x0000000000075d60 : add byte ptr [rbx - 0x7af0fe08], al ; ret
0x000000000004daa4 : add byte ptr [rbx - 0x7af0fe40], al ; ret 0xfffc
0x00000000000ed4a3 : add byte ptr [rbx - 0x7bf0cfbd], cl ; ret
0x0000000000163776 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000115820 : add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x00000000000ba187 : add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x00000000000d0dcf : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x0000000000079fdf : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0xc601
0x0000000000113b7f : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x00000000000ca267 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4408
0x000000000002284f : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0xc601
0x00000000000803d8 : add byte ptr [rbx - 0x7d], cl ; cmp al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000802ef : add byte ptr [rbx - 0x7d], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000f976f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000cc618 : add byte ptr [rbx - 0x9f43], al ; jmp qword ptr [rdx]
0x00000000001ac9a4 : add byte ptr [rbx - 0xb], dh ; jmp qword ptr [rdx]
0x00000000001a5360 : add byte ptr [rbx - 0xc], bh ; jmp qword ptr [rcx]
0x0000000000178380 : add byte ptr [rbx - 0xe], cl ; call qword ptr [rax]
0x00000000001783f8 : add byte ptr [rbx - 0xe], dl ; jmp qword ptr [rax]
0x0000000000178168 : add byte ptr [rbx - 0xf], ch ; jmp qword ptr [rax + 0x10fff14c]
0x00000000001a7ebb : add byte ptr [rbx*4 + 0x32600001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001ac4ab : add byte ptr [rbx], al ; add dword ptr [rax], eax ; cmp ch, 0xf5 ; call qword ptr [rax]
0x00000000001a8250 : add byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001933af : add byte ptr [rbx], bh ; ret
0x00000000001ac4c3 : add byte ptr [rbx], bl ; add dword ptr [rax], eax ; js 0x1ac4cf ; cmc ; call qword ptr [rax]
0x00000000001b44d3 : add byte ptr [rbx], ch ; add al, byte ptr [rax] ; clc ; nop ; idiv edi ; ret
0x00000000001a7910 : add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000542a6 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x0000000000042f6a : add byte ptr [rcx + 0x29], cl ; ret
0x000000000015a51f : add byte ptr [rcx + 0x3518911], cl ; ret
0x0000000000113be2 : add byte ptr [rcx + 0x39], al ; ret
0x00000000001143f7 : add byte ptr [rcx + 0x39], al ; ret 0x840f
0x0000000000045b21 : add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x000000000008c776 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000006412c : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x000000000004934e : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x000000000010002d : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f4771 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000070912 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000015a4ff : add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009ddef : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007ba96 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000008008c : add byte ptr [rcx + 0x548d48cf], cl ; ret
0x00000000000e19c5 : add byte ptr [rcx + 0x5bc03128], cl ; pop rbp ; pop r12 ; ret
0x0000000000133656 : add byte ptr [rcx + 0x5c], al ; jmp rax
0x0000000000021b20 : add byte ptr [rcx + 0x5c], al ; ret
0x0000000000053871 : add byte ptr [rcx + 0x5d], al ; ret
0x00000000000537a3 : add byte ptr [rcx + 0x5e], al ; ret
0x000000000018c88f : add byte ptr [rcx + 0x60], ch ; clc ; call rsp
0x000000000014291e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fc7c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009cc98 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000c752f : add byte ptr [rcx + 0x63], cl ; ret
0x000000000002ff3f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00000000000e0d92 : add byte ptr [rcx + 0xf], al ; mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1372
0x0000000000049022 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8348
0x00000000000cf2f5 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8d47
0x000000000007d52d : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8348
0x00000000000b1c13 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x894c
0x0000000000105c52 : add byte ptr [rcx + 0xf], cl ; sub byte ptr [rcx], r13b ; ret 0x8941
0x00000000001a830b : add byte ptr [rcx + 1], ah ; add al, al ; cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000001a8323 : add byte ptr [rcx + 1], bh ; add al, bl ; cmp esi, ebp ; jmp rbx
0x00000000000a143f : add byte ptr [rcx + 1], cl ; ret
0x000000000005ffe9 : add byte ptr [rcx + 1], cl ; ret 0x3145
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000838c3 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000018d7af : add byte ptr [rcx + rax*2 - 6], ah ; call rsp
0x00000000001a22d3 : add byte ptr [rcx + rax*2], ch ; add dword ptr [rax], eax ; sub byte ptr [rdi], al ; jmp rdx
0x0000000000196333 : add byte ptr [rcx + rax*4 - 0x56b80000], cl ; in eax, dx ; call rcx
0x00000000001a62c3 : add byte ptr [rcx + rax*4], bl ; add dword ptr [rax], eax ; pop rax ; ret
0x000000000018df97 : add byte ptr [rcx + rax], al ; cld ; call rsp
0x000000000018c287 : add byte ptr [rcx + rax], dh ; clc ; call rsp
0x00000000001a0b63 : add byte ptr [rcx + rbp - 0x2cc7ffff], bh ; int1 ; call rsi
0x00000000000a307f : add byte ptr [rcx + rbp - 0x40], al ; ret
0x000000000018d067 : add byte ptr [rcx + rbp*2], ah ; stc ; call rsp
0x000000000018db0f : add byte ptr [rcx + rbp*4], dh ; cli ; jmp rsp
0x000000000019fb4b : add byte ptr [rcx + rbx + 0x18c00001], ah ; int1 ; jmp qword ptr [rcx]
0x00000000001a7b2b : add byte ptr [rcx + rbx*4 + 0x2dc00001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a7b43 : add byte ptr [rcx + rbx*4 + 0x2dd80001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7b5b : add byte ptr [rcx + rbx*4 + 0x2df00001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ae3 : add byte ptr [rcx + rbx*4], bh ; add dword ptr [rax], eax ; js 0x1a7b1f ; cmc ; jmp qword ptr [rcx]
0x00000000001abb43 : add byte ptr [rcx + rbx*8 - 0x1057ffff], bl ; cmc ; call qword ptr [rdi]
0x000000000016d7bf : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x0000000000107a1c : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000192b4b : add byte ptr [rcx + rcx*2 + 0x3a800000], ah ; cli ; jmp qword ptr [rcx]
0x00000000001a2b63 : add byte ptr [rcx + rcx*2 - 0x7367ffff], bh ; call qword ptr [rdx]
0x0000000000198a03 : add byte ptr [rcx + rcx*2 - 0xf280000], al ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b2ac3 : add byte ptr [rcx + rcx*2], bl ; add al, byte ptr [rax] ; or byte ptr [rbx - 9], cl ; jmp qword ptr [rax]
0x000000000006b0fd : add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000be6c9 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000be777 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x0000000000091e57 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000018caf7 : add byte ptr [rcx + rcx*4 + 0x64f4fff8], al ; add al, byte ptr [rax] ; ret 0xf88a
0x0000000000080807 : add byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x28 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000022220 : add byte ptr [rcx + rcx*4 + 5], al ; fcomp dword ptr [rcx] ; cmp al, byte ptr [rax] ; pop rbx ; ret
0x000000000011fee9 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x00000000000f66b7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000000a4198 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000a4793 : add byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000f5e61 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000085301 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000085511 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000007e46a : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000085093 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000076560 : add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x000000000006fbb0 : add byte ptr [rcx + rcx*4 - 1], al ; call 0xebe0f
0x0000000000074c84 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x70f16
0x000000000011fce1 : add byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x00000000000f5c96 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000110e28 : add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call rax
0x0000000000105960 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x101c56
0x00000000000f5ca5 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000023fec : add byte ptr [rcx + rcx*4 - 9], cl ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000001a6ae3 : add byte ptr [rcx + rcx*4], bh ; add dword ptr [rax], eax ; or al, ah ; hlt ; jmp rsp
0x00000000000f37ef : add byte ptr [rcx + rcx*8 - 0x7cb78e8c], al ; ret
0x00000000001aeab3 : add byte ptr [rcx + rcx], cl ; add al, byte ptr [rax] ; cmp byte ptr [rdx - 0xa], bl ; call qword ptr [rdi]
0x000000000018acbf : add byte ptr [rcx + rdi - 0xc], ah ; call rsp
0x0000000000086084 : add byte ptr [rcx + rdi*2 + 0x48], dh ; mov esi, ebx ; mov rdi, r13 ; call rdx
0x00000000001a5b5b : add byte ptr [rcx + rdi*2 - 0x4effffff], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001a5b43 : add byte ptr [rcx + rdi*2 - 0x4f17ffff], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a5b2b : add byte ptr [rcx + rdi*2 - 0x4f2fffff], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a7343 : add byte ptr [rcx + rdx*4 + 0xda80001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a72fb : add byte ptr [rcx + rdx*4 + 1], dl ; add byte ptr [rax + 0xd], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018ad77 : add byte ptr [rcx + rdx*4], dh ; hlt ; jmp rsp
0x0000000000189b97 : add byte ptr [rcx + rdx*8 + 0x3394ffef], ah ; add dword ptr [rax], eax ; ret
0x00000000001a532b : add byte ptr [rcx + rsi*2 + 0x7ad00001], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a535b : add byte ptr [rcx + rsi*2 + 0x7b000001], dh ; hlt ; jmp qword ptr [rcx]
0x0000000000192b80 : add byte ptr [rcx - 0x15], al ; call rdx
0x000000000007e014 : add byte ptr [rcx - 0x173fce21], cl ; ret 0xff4f
0x000000000000245f : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x00000000000bcdd1 : add byte ptr [rcx - 0x3b7cb739], cl ; or cl, ch ; ret
0x00000000000e1b6f : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x4d11186
0x00000000000ee38a : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x4d1d9a1
0x00000000000e44df : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000044e65 : add byte ptr [rcx - 0x43], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ba0c0 : add byte ptr [rcx - 0x45], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xba093
0x0000000000097497 : add byte ptr [rcx - 0x48], al ; cmp eax, 0xeb000000 ; ret
0x00000000001ac363 : add byte ptr [rcx - 0x4d7ffff], bh ; cmc ; call qword ptr [rax]
0x000000000018775c : add byte ptr [rcx - 0x4f6f0004], dh ; cld ; jmp qword ptr [rax]
0x0000000000034325 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x00000000001a432b : add byte ptr [rcx - 0x6afffff], al ; jmp qword ptr [rax]
0x00000000000e365f : add byte ptr [rcx - 0x75], al ; add byte ptr [r9], r15b ; ret 0x870f
0x00000000000e278f : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000105570 : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x000000000013126f : add byte ptr [rcx - 0x75], cl ; push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x000000000012f7e7 : add byte ptr [rcx - 0x75], cl ; push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000000477b6 : add byte ptr [rcx - 0x75], cl ; ret
0x00000000000b367a : add byte ptr [rcx - 0x76dbdbbc], cl ; ret
0x00000000000968af : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000c643b : add byte ptr [rcx - 0x77], al ; ret
0x0000000000020c6f : add byte ptr [rcx - 0x77], al ; xor al, 0x89 ; inc dword ptr [rdi + 4] ; ret
0x000000000004bf2f : add byte ptr [rcx - 0x77], cl ; add bl, ch ; ret
0x0000000000059579 : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x00000000000210dd : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000047264 : add byte ptr [rcx - 0x77], cl ; ret 0x18b9
0x0000000000033d75 : add byte ptr [rcx - 0x77], cl ; ret 0x65e9
0x000000000003fefc : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000004b72e : add byte ptr [rcx - 0x77], cl ; ret 0x8b44
0x0000000000062127 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000008b483 : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000005c2e2 : add byte ptr [rcx - 0x77], cl ; ret 0x92e9
0x0000000000045551 : add byte ptr [rcx - 0x7d], al ; ret
0x0000000000022997 : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x0000000000024a4e : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d1f9f : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000000000007e84f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000d40ca : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000001372cf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008712f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000801fd : add byte ptr [rcx - 0x7d], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000e9db7 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000e9d27 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x00000000000804cc : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000c1cca : add byte ptr [rcx - 0xcfd8130], cl ; ret
0x00000000001858ef : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000178504 : add byte ptr [rcx - 0xe], bl ; call qword ptr [rax]
0x00000000001784e0 : add byte ptr [rcx - 0xe], bl ; jmp qword ptr [rax]
0x000000000018630c : add byte ptr [rcx - 5], cl ; jmp rax
0x000000000008beb2 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000008bed8 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000001a6edb : add byte ptr [rcx*4 - 0x12fffff], dh ; hlt ; jmp rax
0x0000000000094304 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000012f78c : add byte ptr [rcx], 0 ; add byte ptr [rcx], al ; ret 0x894c
0x0000000000134383 : add byte ptr [rcx], 0 ; add dh, dh ; ret
0x00000000001ac12d : add byte ptr [rcx], 0 ; jo 0x1ac130 ; cmc ; call qword ptr [rcx]
0x000000000018a5cd : add byte ptr [rcx], 0 ; xor al, 0x9b ; call rsp
0x00000000001ab7ae : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x00000000001998de : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xedf8
0x000000000019a6d6 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xee68
0x00000000001a0d9e : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf17f
0x00000000001ab29e : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf55b
0x00000000001acb66 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf57a
0x00000000001b2576 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf683
0x0000000000188397 : add byte ptr [rcx], ah ; jmp 0x18839f
0x000000000017a6eb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000b32a3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfff6
0x0000000000085acf : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000002c340 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000030109 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000069fb1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; jmp 0x66242
0x000000000011482b : add byte ptr [rcx], al ; add byte ptr [rax], al ; nop ; ret
0x000000000012a043 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b9e1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000885cf : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000010d630 : add byte ptr [rcx], al ; jmp 0x10d403
0x000000000010d9e8 : add byte ptr [rcx], al ; jmp 0x10d7d3
0x000000000002fe54 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000007d346 : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000012e5cf : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007c8db : add byte ptr [rcx], al ; ret
0x0000000000132155 : add byte ptr [rcx], al ; ret 0x59e9
0x000000000012f78f : add byte ptr [rcx], al ; ret 0x894c
0x00000000000485ee : add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000d0c95 : add byte ptr [rcx], al ; setg dl ; jmp 0xd0c22
0x00000000000c0f02 : add byte ptr [rcx], bh ; ret
0x00000000000e3663 : add byte ptr [rcx], bh ; ret 0x870f
0x00000000000e1e89 : add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000080bc1 : add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000b24c5 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000001a82c3 : add byte ptr [rcx], bl ; add dword ptr [rax], eax ; js 0x1a830d ; cmc ; jmp qword ptr [rcx]
0x0000000000187a87 : add byte ptr [rcx], ch ; jnp 0x187a78 ; call rsp
0x00000000000888cd : add byte ptr [rcx], ch ; ret
0x00000000000b2310 : add byte ptr [rcx], ch ; ret 0x428d
0x00000000000ce97c : add byte ptr [rcx], ch ; ret 0x850f
0x00000000000b9247 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000b92e1 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000b7929 : add byte ptr [rcx], ch ; rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000f1001 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000366ac : add byte ptr [rcx], cl ; ret 0xd089
0x00000000001a82db : add byte ptr [rcx], dh ; add dword ptr [rax], eax ; nop ; cmp esi, ebp ; jmp qword ptr [rcx]
0x0000000000186a5c : add byte ptr [rcx], dh ; cld ; jmp rax
0x00000000000b28fd : add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000007deef : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; and al, 8 ; call qword ptr [rax]
0x000000000007de9e : add byte ptr [rcx], dh ; dec dword ptr [rcx - 0x77] ; salc ; call qword ptr [rax]
0x0000000000111e15 : add byte ptr [rcx], dh ; fild dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000000a5493 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa5444
0x00000000000a7c33 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa7be4
0x00000000000aa233 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xaa1e4
0x000000000012a476 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003c3fc : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000888c6 : add byte ptr [rcx], dh ; ret
0x000000000002ff4f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x0000000000026198 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000000a5507 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000003c23b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001365af : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000001347fa : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000008aa62 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000001176e2 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000d1d6f : add byte ptr [rcx], dh ; sal dh, 0xc1 ; add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x00000000000f5bbc : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call rbx
0x000000000018888f : add byte ptr [rdi + 0x19], bl ; in al, dx ; call rsp
0x000000000014a77a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000123284 : add byte ptr [rdi + 0xa00], bh ; call 0x1f4e8
0x00000000000a2bd4 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000164164 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000001b6ed3 : add byte ptr [rdi + rax + 0x3160000], ch ; add byte ptr [rax], al ; ret 7
0x00000000001a28fb : add byte ptr [rdi + rax*2 + 1], dl ; add byte ptr [rax], dh ; mov dh, dl ; jmp qword ptr [rcx]
0x00000000001a28b3 : add byte ptr [rdi + rax*2], cl ; add dword ptr [rax], eax ; call 0x221a1b4e
0x00000000001a692b : add byte ptr [rdi + rax*4 - 0x22efffff], al ; hlt ; call qword ptr [rdx]
0x00000000001a68cb : add byte ptr [rdi + rax*4], ah ; add dword ptr [rax], eax ; jo 0x1a68b6 ; hlt ; call qword ptr [rax]
0x000000000018a1c7 : add byte ptr [rdi + rax*4], ah ; int1 ; jmp rsp
0x00000000001aa913 : add byte ptr [rdi + rax*8 + 1], ch ; add byte ptr [rax], cl ; xlatb ; cmc ; jmp qword ptr [rsi]
0x00000000001aa8fb : add byte ptr [rdi + rax*8 + 1], dl ; add al, dh ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001aa943 : add byte ptr [rdi + rax*8 - 0x28f7ffff], bl ; cmc ; jmp qword ptr [rdi]
0x00000000001aa8cb : add byte ptr [rdi + rax*8], ah ; add dword ptr [rax], eax ; rcl dh, 0xf5 ; jmp qword ptr [rsi]
0x00000000001aa8e3 : add byte ptr [rdi + rax*8], bh ; add dword ptr [rax], eax ; fcom st(6) ; cmc ; jmp qword ptr [rsi]
0x00000000001aa8b3 : add byte ptr [rdi + rax*8], cl ; add dword ptr [rax], eax ; test al, 0xd6 ; cmc ; jmp qword ptr [rsi]
0x00000000001b1113 : add byte ptr [rdi + rbp + 2], ch ; add byte ptr [rax], bl ; out 0xf6, al ; jmp rdx
0x00000000001a50bb : add byte ptr [rdi + rbp*2], dl ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x000000000019d12b : add byte ptr [rdi + rbp*8 - 0x4800000], al ; out dx, al ; call qword ptr [rax]
0x000000000019d143 : add byte ptr [rdi + rbp*8 - 0x4880000], bl ; out dx, al ; jmp qword ptr [rsi]
0x000000000019d0fb : add byte ptr [rdi + rbp*8], dl ; add al, ah ; cld ; stc ; call qword ptr [rax]
0x00000000001a0153 : add byte ptr [rdi + rbx + 0x7f880001], ch ; int1 ; call qword ptr [rax]
0x00000000001a811b : add byte ptr [rdi + rbx*4 + 1], dh ; add byte ptr [rax + 0x38], dh ; cmc ; jmp qword ptr [rax]
0x00000000001a00d3 : add byte ptr [rdi + rbx], ch ; add dword ptr [rax], eax ; pop rax ; int1 ; call qword ptr [rdx]
0x000000000004f59e : add byte ptr [rdi + rcx + 0x44], cl ; jmp 0xffffffffc24904fb
0x000000000016dfbf : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x00000000000c4b1c : add byte ptr [rdi + rcx - 0x7b], bl ; xor ah, 0xff ; push rsi ; ret
0x000000000002fd54 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x00000000001a2123 : add byte ptr [rdi + rdi + 1], bh ; add byte ptr [rax - 2], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001a2153 : add byte ptr [rdi + rdi - 0x187ffff], ch ; int1 ; jmp qword ptr [rcx]
0x00000000001a213b : add byte ptr [rdi + rdi - 0x19fffff], dl ; int1 ; jmp qword ptr [rcx]
0x000000000018a987 : add byte ptr [rdi + rdi*2 - 0x632b000d], al ; add dword ptr [rax], eax ; ret 0xf380
0x000000000018c237 : add byte ptr [rdi + rdi*8 - 9], al ; jmp rsp
0x00000000001a20ab : add byte ptr [rdi + rdi], al ; add dword ptr [rax], eax ; xor dh, bh ; int1 ; jmp qword ptr [rcx]
0x000000000019f92b : add byte ptr [rdi + rdx + 0x7a00001], al ; int1 ; call qword ptr [rax]
0x00000000001b392b : add byte ptr [rdi + rdx*2 + 0x76500002], al ; idiv edi ; ret 0
0x00000000001a793b : add byte ptr [rdi + rdx*4 + 0x2b300001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7953 : add byte ptr [rdi + rdx*4 + 0x2b480001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a790b : add byte ptr [rdi + rdx*4 + 1], ah ; add byte ptr [rax], al ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a7923 : add byte ptr [rdi + rdx*4 + 1], bh ; add byte ptr [rax], bl ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001ab923 : add byte ptr [rdi + rdx*8 + 1], bh ; add byte ptr [rax - 0x17], bh ; cmc ; call qword ptr [rax]
0x00000000001ab8f3 : add byte ptr [rdi + rdx*8 + 1], cl ; add byte ptr [rax - 0x17], ch ; cmc ; call qword ptr [rax]
0x00000000001ab93b : add byte ptr [rdi + rdx*8 - 0x168fffff], dl ; cmc ; call qword ptr [rax]
0x00000000001ab953 : add byte ptr [rdi + rdx*8 - 0x1697ffff], ch ; cmc ; call qword ptr [rax]
0x000000000019f8cb : add byte ptr [rdi + rdx], ah ; add dword ptr [rax], eax ; nop ; cld ; jmp qword ptr [rbx]
0x00000000001a1963 : add byte ptr [rdi + rsi - 0x1c97ffff], bh ; int1 ; call rsp
0x000000000018ac77 : add byte ptr [rdi + rsi - 0xc], dh ; jmp rsp
0x00000000001785c0 : add byte ptr [rdi - 0xe], ah ; jmp qword ptr [rax]
0x00000000001786d8 : add byte ptr [rdi - 0xe], ch ; call qword ptr [rax]
0x0000000000178490 : add byte ptr [rdi - 0xe], dl ; call qword ptr [rax]
0x000000000018cd0f : add byte ptr [rdi - 8], al ; call rsp
0x00000000001a5ecb : add byte ptr [rdi*2 - 0x443fffff], ah ; hlt ; jmp qword ptr [rbx]
0x0000000000199ebb : add byte ptr [rdi*4 + 0x1ab00000], dl ; out dx, al ; call qword ptr [rdi]
0x000000000019dee3 : add byte ptr [rdi*8 - 0x60280000], bh ; out dx, eax ; call qword ptr [rdi]
0x000000000018bf77 : add byte ptr [rdi], ah ; jp 0x18bf76 ; jmp rsp
0x000000000001e3a7 : add byte ptr [rdi], ah ; ret
0x000000000001a327 : add byte ptr [rdi], al ; ret
0x00000000000365ee : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000001948c3 : add byte ptr [rdi], bl ; add byte ptr [rax], al ; call 0x13193663
0x0000000000176bbb : add byte ptr [rdi], bl ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x000000000017c114 : add byte ptr [rdi], ch ; sti ; call qword ptr [rax]
0x000000000014c0f6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000014d12f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000fbbb1 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002feed : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2fe7e ; loopne 0x2fefe ; ret
0x00000000000fd7ec : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xfd77d ; loopne 0xfd7fd ; ret
0x000000000007b1d7 : add byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000014d19f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000c448a : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000279f3 : add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x0000000000027a3d : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000033af0 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006d4bf : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000883cf : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015fc8f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008bf5f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000096f7f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000096f8f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000096f6f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000009395f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008bdef : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008bddf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008bdcf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000a1a37 : add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000036427 : add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000048147 : add byte ptr [rdi], cl ; ret 0x2ce9
0x000000000010adaf : add byte ptr [rdi], cl ; ret 0x8348
0x00000000000cbb10 : add byte ptr [rdi], cl ; ret 0x84e9
0x00000000001330b6 : add byte ptr [rdi], cl ; ret 0x8941
0x0000000000047a93 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000031cdb : add byte ptr [rdi], cl ; ret 0x8d49
0x0000000000042c7b : add byte ptr [rdi], cl ; ret 0xc801
0x00000000000d7630 : add byte ptr [rdi], cl ; ret 0xc931
0x00000000001147c0 : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001147fb : add byte ptr [rdi], cl ; ret 0xff83
0x00000000000a18a2 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000b8e9d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d44
0x000000000011ad51 : add byte ptr [rdi], cl ; shr r9b, 1 ; ret 0xfffe
0x00000000000e54c9 : add byte ptr [rdi], cl ; test byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000a4c5e : add byte ptr [rdi], cl ; test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a50fe : add byte ptr [rdi], cl ; test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c4595 : add byte ptr [rdi], cl ; test byte ptr [rdi*8 - 0x7cb70001], al ; ret 0xeb02
0x000000000007c911 : add byte ptr [rdi], cl ; test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x000000000006f851 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0xcfffffc], esp ; ret
0x000000000007de45 : add byte ptr [rdi], cl ; test dword ptr [rsi], ebx ; imul eax, dword ptr [rax], 0 ; ret
0x000000000005c29e : add byte ptr [rdi], cl ; xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000059e7b : add byte ptr [rdi], cl ; xchg dword ptr [rsp + rax], ebp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000cd96e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000b185f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x000000000004902c : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x0000000000112599 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd120
0x00000000000e2d20 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000000b1be7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf749
0x000000000008869a : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x144
0x000000000001f541 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000df85f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x00000000000c599d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x45e9
0x00000000000c4ee7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000005356c : add byte ptr [rdi], cl ; xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001899ef : add byte ptr [rdi], dh ; out dx, eax ; call rsp
0x000000000001a357 : add byte ptr [rdi], dl ; ret
0x00000000000b39b1 : add byte ptr [rdx + 0x1dd], bh ; call 0x2fc68
0x00000000001a8443 : add byte ptr [rdx + 0x43c80001], bl ; cmc ; jmp rdi
0x000000000015c81f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x00000000001584ef : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000009f1ff : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00000000000794e6 : add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x00000000000e7278 : add byte ptr [rdx + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x00000000000647fe : add byte ptr [rdx + 0x63], cl ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x000000000003078f : add byte ptr [rdx + 0x63], cl ; add al, 0xa2 ; add rdx, rax ; jmp rdx
0x00000000001a4413 : add byte ptr [rdx + 1], ch ; add byte ptr [rax], cl ; sti ; jmp qword ptr [rdi]
0x00000000001b8917 : add byte ptr [rdx + 2], bh ; add byte ptr [rax], al ; ret 6
0x00000000001923c3 : add byte ptr [rdx + rax*2], bl ; add byte ptr [rax], al ; call 0x11190e8e
0x00000000001a641b : add byte ptr [rdx + rax*4 + 1], dh ; add byte ptr [rax - 0x34], dh ; hlt ; jmp qword ptr [rcx]
0x0000000000187e07 : add byte ptr [rdx + rax*4 - 0x16], al ; call rsp
0x00000000001a6433 : add byte ptr [rdx + rax*4 - 0x3377ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001b643b : add byte ptr [rdx + rax*4 - 0xdeffffe], dl ; cli ; call rcx
0x00000000001a63bb : add byte ptr [rdx + rax*4], dl ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rdx]
0x000000000019a453 : add byte ptr [rdx + rax*8 + 0x2af80000], ch ; out dx, al ; call qword ptr [rsi]
0x000000000018afa7 : add byte ptr [rdx + rax*8], dh ; cmc ; call rsp
0x000000000018d077 : add byte ptr [rdx + rbp*2], ah ; stc ; jmp rsp
0x00000000001a4bc3 : add byte ptr [rdx + rbp*2], bl ; add dword ptr [rax], eax ; fsub dword ptr [rbx - 0xc] ; jmp qword ptr [rcx]
0x000000000019cc4b : add byte ptr [rdx + rbp*8 - 0x25a00000], ah ; out dx, al ; jmp rdx
0x000000000019cc1b : add byte ptr [rdx + rbp*8], dh ; add byte ptr [rax], al ; ret 0xffee
0x000000000019cbbb : add byte ptr [rdx + rbp*8], dl ; add byte ptr [rax], al ; mov al, 0xbf ; out dx, al ; jmp qword ptr [rax]
0x000000000018ceef : add byte ptr [rdx + rbp], dh ; stc ; jmp rsp
0x00000000001a7c33 : add byte ptr [rdx + rbx*4 + 0x2ef80001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7c4b : add byte ptr [rdx + rbx*4 + 0x2f100001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a7c03 : add byte ptr [rdx + rbx*4 + 1], bl ; add al, cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7c1b : add byte ptr [rdx + rbx*4 + 1], dh ; add al, ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a7bbb : add byte ptr [rdx + rbx*4], dl ; add dword ptr [rax], eax ; sub byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a25a7 : add byte ptr [rdx + rbx*8 - 0x19], dl ; jmp qword ptr [rdx]
0x0000000000093ee3 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000018955f : add byte ptr [rdx + rcx - 0x11], dh ; jmp rsp
0x000000000018c7cf : add byte ptr [rdx + rcx*2], al ; clc ; call rsp
0x00000000001aac23 : add byte ptr [rdx + rcx*8 + 1], bh ; add byte ptr [rax], ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x00000000001a1c0b : add byte ptr [rdx + rdi + 1], ah ; add al, al ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x00000000001a5c33 : add byte ptr [rdx + rdi*2 - 0x4c17ffff], cl ; hlt ; jmp qword ptr [rcx]
0x000000000019dc0b : add byte ptr [rdx + rdi*8], ah ; add byte ptr [rax - 0x80], dh ; cld ; jmp qword ptr [rax]
0x000000000016e3bf : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x0000000000189f57 : add byte ptr [rdx + rdx*2 - 0x10], dl ; call rsp
0x00000000001a73bb : add byte ptr [rdx + rdx*4], dl ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a942b : add byte ptr [rdx + rsi*4 + 0x69e00001], al ; cmc ; call rcx
0x00000000001879c8 : add byte ptr [rdx - 0x5e8f0004], ah ; cld ; call rax
0x0000000000187264 : add byte ptr [rdx - 0x766f0004], cl ; cld ; jmp qword ptr [rax]
0x000000000010016f : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000010016e : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x0000000000186d78 : add byte ptr [rdx - 4], ah ; call qword ptr [rax + 0x20fffc61]
0x000000000017abb4 : add byte ptr [rdx - 6], ah ; jmp rax
0x00000000001a36d3 : add byte ptr [rdx*2 + 0x2e180001], ch ; call qword ptr [rcx]
0x00000000001ab6bb : add byte ptr [rdx*8 - 0x179fffff], dl ; cmc ; call qword ptr [rax]
0x00000000001ab6d3 : add byte ptr [rdx*8 - 0x17a7ffff], ch ; cmc ; call qword ptr [rbx]
0x000000000018ceed : add byte ptr [rdx], 0 ; xor al, 0x2a ; stc ; jmp rsp
0x000000000000452b : add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; push rax ; ret 0xb
0x00000000000301b8 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000002fea6 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000011bcb6 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000010218b : add byte ptr [rdx], al ; call rax
0x000000000002fdb4 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x00000000001a47b7 : add byte ptr [rdx], al ; shl bh, cl ; jmp qword ptr [rax]
0x000000000000258f : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001ac3c3 : add byte ptr [rdx], bl ; add dword ptr [rax], eax ; cwde ; cld ; cmc ; call qword ptr [rax]
0x000000000000583f : add byte ptr [rdx], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c
0x000000000018879f : add byte ptr [rdx], ch ; in al, dx ; jmp 0x1887a7
0x00000000001a476f : add byte ptr [rdx], ch ; shl bh, cl ; jmp qword ptr [rax]
0x0000000000010717 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x0000000000123286 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; call 0x1f4e6
0x0000000000186900 : add byte ptr [rdx], cl ; cld ; call rax
0x00000000000f6d8f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ac3db : add byte ptr [rdx], dh ; add dword ptr [rax], eax ; nop ; cld ; cmc ; call qword ptr [rax]
0x000000000000fa1b : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; call qword ptr [rax]
0x000000000000a1e3 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret 0x10
0x000000000000a9c3 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret 0xb
0x00000000000066bb : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret 7
0x000000000000f8e3 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; ret 0x10
0x00000000000107a7 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006ebe0 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00000000000fa4e0 : add byte ptr [rip - 0x1000], ah ; or eax, edi ; ret
0x00000000000c1161 : add byte ptr [rip - 0xfff], bh ; jae 0xc1172 ; ret
0x00000000001ac843 : add byte ptr [rsi + 0x2880001], bl ; idiv bh ; ret 3
0x00000000001a484b : add byte ptr [rsi + 0x9300001], ah ; hlt ; jmp rdx
0x000000000012a667 : add byte ptr [rsi + 0xe], bh ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000015ff84 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000006ac34 : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret
0x00000000000f9ae6 : add byte ptr [rsi + 0xf], ah ; ret
0x0000000000096e8c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008bce4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000f5c6f : add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f5e5c : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x00000000000f5d28 : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00000000000f5ca0 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000000f60da : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x00000000000f5e4d : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x00000000000f5d19 : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00000000000f5c91 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000011ffed : add byte ptr [rsi + 4], bh ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000004b07 : add byte ptr [rsi + 5], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00000000000e4e07 : add byte ptr [rsi + 6], dh ; ret
0x000000000000171f : add byte ptr [rsi + rax + 0x6bf0000], bh ; add byte ptr [rax], al ; ret 6
0x000000000018a6af : add byte ptr [rsi + rax - 0xd], dh ; jmp rsp
0x00000000001a2853 : add byte ptr [rsi + rax*2 - 0x7677ffff], ch ; jmp qword ptr [rcx]
0x00000000001a283b : add byte ptr [rsi + rax*2 - 0x767fffff], dl ; jmp qword ptr [rax]
0x0000000000187eff : add byte ptr [rsi + rax*4 - 0x16], al ; call rsp
0x00000000001aa80b : add byte ptr [rsi + rax*8 + 1], ah ; add byte ptr [rax - 0x3d], al ; clc ; jmp qword ptr [rsi]
0x00000000001aa823 : add byte ptr [rsi + rax*8 + 1], bh ; add byte ptr [rax], bl ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001aa7f3 : add byte ptr [rsi + rax*8 + 1], cl ; add byte ptr [rax], bl ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001aa853 : add byte ptr [rsi + rax*8 - 0x29b7ffff], ch ; cmc ; jmp qword ptr [rsi]
0x00000000001aa7ab : add byte ptr [rsi + rax*8], al ; add dword ptr [rax], eax ; ret
0x00000000001aa7c3 : add byte ptr [rsi + rax*8], bl ; add dword ptr [rax], eax ; sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001aa7db : add byte ptr [rsi + rax*8], dh ; add dword ptr [rax], eax ; ret
0x00000000001a502b : add byte ptr [rsi + rbp*2 + 0x6e600001], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a5043 : add byte ptr [rsi + rbp*2 + 0x6e780001], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a505b : add byte ptr [rsi + rbp*2 + 0x6e900001], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001a5013 : add byte ptr [rsi + rbp*2 + 1], ch ; add byte ptr [rax + 0x6e], cl ; hlt ; jmp qword ptr [rcx]
0x000000000018d9ff : add byte ptr [rsi + rbp*2], ah ; cli ; jmp rsp
0x00000000001a4fab : add byte ptr [rsi + rbp*2], al ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], ch ; jmp qword ptr [rcx]
0x000000000019d03b : add byte ptr [rsi + rbp*8 - 0x5c00000], dl ; out dx, al ; call qword ptr [rcx]
0x00000000000f4b11 : add byte ptr [rsi + rbx + 0x5b], dh ; ret
0x00000000001a803b : add byte ptr [rsi + rbx*4 + 0x35700001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8023 : add byte ptr [rsi + rbx*4 + 1], bh ; add byte ptr [rax + 0x35], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019ffe3 : add byte ptr [rsi + rbx], bh ; add dword ptr [rax], eax ; js 0x1a0034 ; int1 ; jmp qword ptr [rcx]
0x000000000019eff3 : add byte ptr [rsi + rcx + 1], cl ; add al, bh ; fcompi st(0) ; jmp rax
0x00000000001a3013 : add byte ptr [rsi + rcx*2 + 1], ch ; add byte ptr [rax - 0x15], bh ; jmp rdx
0x0000000000189827 : add byte ptr [rsi + rcx*2 - 0x11], dh ; jmp rsp
0x0000000000188537 : add byte ptr [rsi + rcx*2 - 0x15], dh ; call rsp
0x00000000001a2033 : add byte ptr [rsi + rdi - 0x2e7ffff], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001a6053 : add byte ptr [rsi + rdi*2 - 0x4197ffff], ch ; hlt ; jmp qword ptr [rcx]
0x000000000019200b : add byte ptr [rsi + rdi], ah ; add byte ptr [rax], dh ; mov al, 0xea ; jmp qword ptr [rax]
0x0000000000192023 : add byte ptr [rsi + rdi], bh ; add byte ptr [rax], bh ; mov al, 0xea ; jmp qword ptr [rdx]
0x0000000000191ff3 : add byte ptr [rsi + rdi], cl ; add byte ptr [rax], bl ; mov al, 0xea ; jmp qword ptr [rbx]
0x00000000001885ef : add byte ptr [rsi + rdx*2 - 0x15], al ; jmp rsp
0x00000000001a783b : add byte ptr [rsi + rdx*4 + 0x2a400001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7823 : add byte ptr [rsi + rdx*4 + 1], bh ; add byte ptr [rax], ch ; sub dh, ch ; jmp qword ptr [rcx]
0x000000000018cb87 : add byte ptr [rsi + rdx*4], dh ; clc ; call rsp
0x00000000000e3b23 : add byte ptr [rsi + rdx*8 + 0x5b], dh ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000018dcf7 : add byte ptr [rsi + rdx*8], dl ; cli ; jmp rsp
0x000000000018cd57 : add byte ptr [rsi + rsi*8 - 8], ah ; jmp rsp
0x00000000001887d7 : add byte ptr [rsi + rsi*8], al ; jmp 0x1887df
0x0000000000177f38 : add byte ptr [rsi - 0x11], dl ; call qword ptr [rax]
0x00000000001886df : add byte ptr [rsi - 0x15], dl ; call rsp
0x00000000001a0863 : add byte ptr [rsi - 0x35d7ffff], bh ; int1 ; call qword ptr [rbx]
0x00000000001a084b : add byte ptr [rsi - 0x35dfffff], ah ; int1 ; call qword ptr [rbx]
0x00000000001a0833 : add byte ptr [rsi - 0x35e7ffff], cl ; int1 ; call qword ptr [rsi]
0x00000000000237bd : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000746fd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000bd33d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x0000000000037b9d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x3864fa] ; ret
0x000000000018d667 : add byte ptr [rsi - 6], al ; jmp rsp
0x00000000001ab7b3 : add byte ptr [rsi], 0xd ; ret
0x00000000001998e3 : add byte ptr [rsi], 0xd ; ret 0xedf8
0x000000000019a6db : add byte ptr [rsi], 0xd ; ret 0xee68
0x00000000001a0da3 : add byte ptr [rsi], 0xd ; ret 0xf17f
0x00000000001ab2a3 : add byte ptr [rsi], 0xd ; ret 0xf55b
0x00000000001acb6b : add byte ptr [rsi], 0xd ; ret 0xf57a
0x00000000001b257b : add byte ptr [rsi], 0xd ; ret 0xf683
0x00000000001969d3 : add byte ptr [rsi], 0xd ; xchg byte ptr [rbp + 0xd1cffed], al ; ret 0xed84
0x00000000001ad76b : add byte ptr [rsi], 0xd ; xor rbp, 0xffffffffffffffff ; sbb al, 0xd ; ret 0xf582
0x0000000000194803 : add byte ptr [rsi], bl ; add al, bh ; jle 0x194800 ; jmp rcx
0x00000000001869d4 : add byte ptr [rsi], ch ; cld ; jmp rax
0x0000000000017f27 : add byte ptr [rsi], cl ; ret
0x0000000000060a8b : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add cl, ch ; ret 0xffec
0x00000000000e4bc1 : add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x00000000000e44b9 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000005bdf4 : add byte ptr [rsp + rax*2 - 0x75], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x000000000018b257 : add byte ptr [rsp + rax*2 - 0xa], dl ; call rsp
0x00000000001b65eb : add byte ptr [rsp + rax*4 + 2], al ; add byte ptr [rax], dl ; push rdi ; call qword ptr [rcx]
0x00000000001aa65b : add byte ptr [rsp + rax*8 - 0x2a8fffff], dh ; cmc ; jmp qword ptr [rsi]
0x00000000001aa643 : add byte ptr [rsp + rax*8 - 0x2aa7ffff], bl ; cmc ; jmp qword ptr [rsi]
0x00000000001aa62b : add byte ptr [rsp + rax*8 - 0x2abfffff], al ; cmc ; jmp qword ptr [rsi]
0x00000000001aa5cb : add byte ptr [rsp + rax*8], ah ; add dword ptr [rax], eax ; loopne 0x1aa5ae ; cmc ; jmp qword ptr [rsi]
0x000000000018c307 : add byte ptr [rsp + rax], dh ; clc ; jmp rsp
0x000000000018810f : add byte ptr [rsp + rbp*8 - 0x16], ah ; jmp rsp
0x00000000001a7e43 : add byte ptr [rsp + rbx*4 + 0x31c80001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7dfb : add byte ptr [rsp + rbx*4 + 1], dl ; add byte ptr [rax + 0x31], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7de3 : add byte ptr [rsp + rbx*4], bh ; add dword ptr [rax], eax ; cmp byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7db3 : add byte ptr [rsp + rbx*4], cl ; add dword ptr [rax], eax ; or byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x000000000019bdc3 : add byte ptr [rsp + rbx*8], bl ; add byte ptr [rax], al ; cmp byte ptr [rax - 0x12], dh ; call qword ptr [rsi]
0x000000000016dbbf : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x00000000001884f7 : add byte ptr [rsp + rcx*2], ah ; jmp 0x1884ff
0x0000000000192dc3 : add byte ptr [rsp + rcx*2], bl ; add byte ptr [rax], al ; or byte ptr [rdx - 0x15], bl ; jmp qword ptr [rsi]
0x00000000001aae13 : add byte ptr [rsp + rcx*8 + 1], ch ; add al, cl ; loopne 0x1aae18 ; call qword ptr [rax]
0x00000000001aae2b : add byte ptr [rsp + rcx*8 - 0x1f3fffff], al ; cmc ; call qword ptr [rax]
0x00000000001a1dfb : add byte ptr [rsp + rdi + 1], dl ; add al, ah ; int1 ; jmp qword ptr [rdx]
0x00000000001a5e03 : add byte ptr [rsp + rdi*2 + 1], bl ; add byte ptr [rax - 0x47], cl ; hlt ; call rdi
0x000000000018cc7f : add byte ptr [rsp + rdi*4 - 8], ah ; jmp rsp
0x000000000018cdc7 : add byte ptr [rsp + rdi*8 - 8], dl ; jmp rsp
0x000000000018d50f : add byte ptr [rsp + rdi*8], ah ; stc ; jmp rsp
0x000000000019de03 : add byte ptr [rsp + rdi*8], bl ; add byte ptr [rax], bl ; pushfq ; out dx, eax ; jmp rdi
0x000000000018c9af : add byte ptr [rsp + rsi*2 - 8], bl ; jmp rsp
0x000000000018b587 : add byte ptr [rsp - 0xa], dl ; jmp rsp
0x00000000001ac5ab : add byte ptr [rsp], al ; add dword ptr [rax], eax ; add ch, bh ; cmc ; jmp rsp
0x00000000001a45c3 : add byte ptr [rsp], bl ; add dword ptr [rax], eax ; call 0x171a39d3
0x00000000001945f3 : add byte ptr [rsp], cl ; add byte ptr [rax], bl ; movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; call rdx
0x000000000018ddd7 : add byte ptr [rsp], dh ; cli ; call rsp
0x0000000000192055 : add byte ptr ds:[rax], al ; pop rax ; mov al, 0xea ; jmp qword ptr [rdx]
0x00000000000f4b10 : add byte ptr ds:[rsi + rbx + 0x5b], dh ; ret
0x000000000003784a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f7feb : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x00000000000b6fd5 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x50f0ec18], al ; ret 0x8941
0x0000000000192e0c : add byte ptr fs:[rax], r8b ; nop ; pop rdx ; jmp 0x192e1a
0x000000000007a330 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ce98b : add byte ptr gs:[rax], al ; add byte ptr [rcx], ch ; ret 0x850f
0x0000000000113373 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000053934 : add byte ptr ss:[rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x000000000005d517 : add byte ptr ss:[rbx + 0x5d], bl ; ret
0x000000000005bdf3 : add byte ptr ss:[rsp + rax*2 - 0x75], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000000da8b7 : add ch, al ; ret
0x00000000001ac5b0 : add ch, bh ; cmc ; jmp rsp
0x00000000000c6132 : add ch, bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000368ff : add ch, bl ; fpatan ; ret
0x000000000019985c : add ch, bl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001882c9 : add ch, bl ; jmp rsp
0x00000000000c6072 : add ch, bl ; xchg eax, esi ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000017695c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000017695d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000001a6724 : add ch, byte ptr [rcx - 0xc] ; jmp qword ptr [rdx]
0x00000000000b22fa : add ch, byte ptr [rcx] ; ret 0x48d
0x000000000007522a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000187630 : add ch, byte ptr [rdi - 0x516d0004] ; cld ; jmp qword ptr [rdx]
0x00000000001ac794 : add ch, byte ptr [rsi - 0xb] ; jmp qword ptr [rdx]
0x0000000000058c9f : add ch, cl ; ret
0x000000000010be38 : add ch, cl ; ret 0xf807
0x00000000000c49da : add ch, cl ; xchg eax, edx ; idiv edi ; push rsi ; ret
0x0000000000193447 : add cl, ah ; ret
0x000000000007129f : add cl, al ; out dx, al ; add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x000000000018ca17 : add cl, bh ; js 0x18ca17 ; call rsp
0x0000000000187ab7 : add cl, bl ; jg 0x187aa8 ; jmp rsp
0x00000000000f9ec7 : add cl, bl ; ret 0xcad9
0x000000000019d190 : add cl, bl ; stc ; call qword ptr [rax]
0x00000000000f7eb5 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000099b5c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000a3915 : add cl, byte ptr [rax + 0x29] ; ret 0x6fe9
0x00000000000a3889 : add cl, byte ptr [rax + 0x29] ; ret 0x8548
0x00000000000b0321 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000a38fd : add cl, byte ptr [rax + 0x29] ; ret 0x8aeb
0x000000000003e87f : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000117ad3 : add cl, byte ptr [rax + 0x39] ; rcr dword ptr [rcx], -0x40 ; ret
0x000000000007709d : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000073e9a : add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000085496 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000061999 : add cl, byte ptr [rax + 0x39] ; ret 0x8f0f
0x00000000000f7eb6 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x000000000002c6f7 : add cl, byte ptr [rax + 1] ; ret 0x3b48
0x0000000000050434 : add cl, byte ptr [rax + 1] ; ret 0x8348
0x000000000007fe51 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x0000000000099b5d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000000967d7 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000187138 : add cl, byte ptr [rax - 0x786d0004] ; cld ; jmp qword ptr [rdx]
0x000000000007c582 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000f38c2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000027cdb : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000086c80 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000ae40d : add cl, byte ptr [rax - 0x7d] ; ret 0x491e
0x00000000000c3b30 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000001fc6b : add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x00000000000c360d : add cl, byte ptr [rax - 0x7d] ; ret 0x8401
0x000000000012e299 : add cl, byte ptr [rax - 0x7d] ; ret 0xb804
0x000000000006cca9 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x0000000000086ce3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000012e2c5 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000001232bb : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; ret 1
0x000000000004977c : add cl, byte ptr [rbp + 0x39] ; ret
0x000000000014cf72 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000003e859 : add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000a633c : add cl, byte ptr [rcx + 0x39] ; ret
0x00000000000494d8 : add cl, byte ptr [rcx + rcx*4 - 0x3e] ; jmp 0x494f4
0x00000000001252e2 : add cl, byte ptr [rcx - 0x77] ; ret 0xc148
0x00000000000d7c0a : add cl, byte ptr [rcx - 0x7d] ; ret 0x4510
0x0000000000047f00 : add cl, byte ptr [rcx - 0x7d] ; ret 0xe901
0x00000000000475f9 : add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x000000000002fd74 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000ebbe0 : add cl, byte ptr [rdi] ; ret 0xb5eb
0x0000000000114815 : add cl, byte ptr [rdi] ; ret 0xf3c3
0x00000000000ebad0 : add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000cd91f : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000006d6a4 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000013caab : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000050433 : add cl, byte ptr es:[rax + 1] ; ret 0x8348
0x00000000000b41bf : add cl, ch ; int 0xfa
0x0000000000058a3b : add cl, ch ; push rdi ; ret 0xffff
0x000000000002c344 : add cl, ch ; ret
0x0000000000060a8f : add cl, ch ; ret 0xffec
0x00000000000b7ea1 : add cl, ch ; ret 0xfff3
0x000000000010386f : add cl, ch ; ret 0xfffd
0x00000000000c2d48 : add cl, ch ; ret 0xfffe
0x0000000000069fee : add cl, ch ; ret 0xffff
0x000000000003f9f9 : add cl, ch ; xor dl, 0xff ; dec dword ptr [rax + 0x63] ; ret 0x3ce9
0x00000000001780a5 : add cl, dh ; jmp rax
0x0000000000178200 : add dh, ah ; int1 ; call qword ptr [rax]
0x0000000000188487 : add dh, ah ; jmp 0x18848f
0x00000000001790e9 : add dh, ah ; push qword ptr [rbx] ; sti ; call qword ptr [rax]
0x0000000000046e13 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000011a107 : add dh, al ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000010d62a : add dh, al ; add eax, 0x2b52fe ; add ecx, ebp ; ret
0x00000000001b18c1 : add dh, bh ; call qword ptr [rdi]
0x0000000000179c7b : add dh, bh ; jmp rdi
0x0000000000170e27 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000014d123 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000036ee7 : add dh, bl ; ret
0x0000000000186634 : add dh, bl ; sti ; jmp rax
0x00000000000a0c9b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000126832 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001931cd : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000000dbb1d : add dh, byte ptr [rcx] ; imul al ; mov ecx, dword ptr [rcx] ; sti ; call rcx
0x0000000000126831 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a1c90 : add dh, ch ; int1 ; call qword ptr [rdx]
0x00000000000819dc : add dh, dh ; ret
0x00000000001356b2 : add dh, dh ; ret 0x7402
0x000000000008c628 : add dh, dh ; ret 0x7404
0x000000000006e25f : add dh, dh ; ret 0x7420
0x00000000001621a7 : add dh, dh ; ret 0x7501
0x00000000001621b4 : add dh, dh ; ret 0x7502
0x00000000001621c1 : add dh, dh ; ret 0x7504
0x0000000000072ea6 : add dh, dh ; ret 0x7508
0x0000000000162179 : add dh, dh ; ret 0x7510
0x0000000000162186 : add dh, dh ; ret 0x7520
0x00000000000eb65f : add dh, dh ; ret 0x7540
0x00000000000df851 : add dh, dh ; ret 0xf10
0x0000000000098362 : add dh, dh ; ret 0xf20
0x000000000004f675 : add dh, dh ; ret 0xf3f
0x000000000009836b : add dh, dh ; ret 0xf40
0x00000000001aa6f0 : add dh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000b0064 : add dil, r15b ; ret
0x0000000000001587 : add dl, al ; add eax, 0 ; add byte ptr [rax], al ; ret
0x000000000018c48f : add dl, al ; sbb bh, al ; jmp rsp
0x000000000019f999 : add dl, byte ptr [rax + 0x41100e0a] ; ret
0x00000000001aef31 : add dl, byte ptr [rbp + 0xa] ; ret
0x00000000001afe36 : add dl, byte ptr [rsi + 0x41380e0a] ; ret
0x000000000018c9df : add dl, ch ; jbe 0x18c9df ; call rsp
0x0000000000189b67 : add dl, ch ; shr bh, 1 ; jmp rsp
0x000000000019d27c : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000047e3e : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000025970 : add dword ptr [r8 - 0x7d], r9d ; ret 0x4d02
0x0000000000108ebf : add dword ptr [r8], eax ; mov rax, rdi ; pop rbx ; ret
0x00000000001a22d5 : add dword ptr [r8], eax ; sub byte ptr [rdi], al ; jmp rdx
0x00000000001899ed : add dword ptr [r8], eax ; xor al, 0xa7 ; out dx, eax ; call rsp
0x00000000001a28b5 : add dword ptr [r8], r8d ; call 0x221a1b4c
0x00000000000d1f74 : add dword ptr [r9 + 0x39], r8d ; ret
0x00000000000a17cf : add dword ptr [r9 + 0x5c], eax ; ret
0x00000000000285e4 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000000000d0b68 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000015c821 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000004fd43 : add dword ptr [rax + 0x29], ecx ; ret 0x8944
0x0000000000047059 : add dword ptr [rax + 0x39], ecx ; fdiv dword ptr [rbp - 0xf] ; pop rbx ; ret
0x000000000002847e : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000965d1 : add dword ptr [rax + 0x39], ecx ; ret 0x1a75
0x000000000009335e : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000009319d : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x00000000000394dd : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00000000000ae962 : add dword ptr [rax + 0x39], ecx ; ret 0xe877
0x000000000003d82f : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x00000000000ad245 : add dword ptr [rax + 0x39], ecx ; ret 0xed77
0x0000000000098060 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x00000000000381cb : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x0000000000123851 : add dword ptr [rax + 0x63], ecx ; ret 0xd285
0x000000000019401e : add dword ptr [rax + 0xd1cffec], -8 ; jg 0x19401c ; jmp qword ptr [rdx]
0x0000000000101fd7 : add dword ptr [rax + 0xf], eax ; ret 0xc3f3
0x00000000000a6334 : add dword ptr [rax + 0xf], ecx ; ret 0xc148
0x000000000005a172 : add dword ptr [rax + 1], ecx ; ret
0x000000000005baf2 : add dword ptr [rax + 1], ecx ; ret 0x148
0x0000000000035496 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d0ae3 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000031143 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000000f7eb2 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000099b36 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000158482 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000967ae : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x0000000000056dc7 : add dword ptr [rax - 0x77], ecx ; dec byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000ba06b : add dword ptr [rax - 0x77], ecx ; fmul dword ptr [rbx - 0x7cb7fbc0] ; ret
0x000000000007b32b : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000007364d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000088771 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000000c44c0 : add dword ptr [rax - 0x77], ecx ; ret 0x97e9
0x00000000000c4730 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x000000000002c596 : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x0000000000117c30 : add dword ptr [rax - 0x78], eax ; ja 0x117c3b ; ret
0x0000000000082dae : add dword ptr [rax - 0x7b], ecx ; ret 0x2c75
0x0000000000082534 : add dword ptr [rax - 0x7b], ecx ; ret 0x7675
0x000000000007f400 : add dword ptr [rax - 0x7b], ecx ; ret 0x850f
0x00000000000d1b6d : add dword ptr [rax - 0x7cb7e9f4], ecx ; ret 0x4401
0x0000000000110ce9 : add dword ptr [rax - 0x7d], ecx ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x000000000015e43a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00000000000e4bbc : add dword ptr [rax - 0x7d], ecx ; jns 0xe4bc2 ; add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x0000000000097378 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000022fda : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000113b82 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x000000000004796c : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000ca26a : add dword ptr [rax - 0x7d], ecx ; ret 0x4408
0x000000000003a9c9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000936ab : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x000000000003aeff : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000bca09 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x0000000000025971 : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x00000000000a63e7 : add dword ptr [rax - 0x7d], ecx ; ret 0x7901
0x00000000000dcd1f : add dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000002ea85 : add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x00000000000c379c : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000006cbbc : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x000000000006d5bb : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x0000000000022832 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000022852 : add dword ptr [rax - 0x7d], ecx ; ret 0xc601
0x00000000000ef86e : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x0000000000054f33 : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000d3c64 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d9a55 : add dword ptr [rax - 0x7d], r9d ; ret
0x000000000000f3e0 : add dword ptr [rax], 0 ; add byte ptr [rax], al ; ret 0x34
0x00000000001962c5 : add dword ptr [rax], 0xeda8c800 ; jmp rbx
0x0000000000196335 : add dword ptr [rax], 0xeda94800 ; call rcx
0x00000000000fcac4 : add dword ptr [rax], 1 ; ret
0x000000000019e71e : add dword ptr [rax], eax ; adc byte ptr [rbp - 0x10], dl ; call qword ptr [rsi]
0x00000000001a4fae : add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], ch ; jmp qword ptr [rcx]
0x00000000001a7c4e : add dword ptr [rax], eax ; adc byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7e8e : add dword ptr [rax], eax ; adc byte ptr [rdx], dh ; cmc ; call qword ptr [rsi]
0x00000000001a692e : add dword ptr [rax], eax ; adc ch, bl ; hlt ; call qword ptr [rdx]
0x00000000001aa5fe : add dword ptr [rax], eax ; adc ch, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a110e : add dword ptr [rax], eax ; adc dh, 0xf1 ; call rsp
0x000000000018df96 : add dword ptr [rax], eax ; add al, 1 ; cld ; call rsp
0x00000000000b39b4 : add dword ptr [rax], eax ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff7
0x000000000002ed96 : add dword ptr [rax], eax ; add al, ch ; ret 0xe
0x00000000000438ba : add dword ptr [rax], eax ; add al, ch ; sahf ; ret
0x00000000000c361b : add dword ptr [rax], eax ; add bh, dh ; ret
0x000000000011481e : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000006e35a : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000b100c : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x000000000005e638 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000d6304 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000a70c6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000012f1f8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000c42e6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x00000000000c7631 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add al, 0xce ; jmp 0xc7605
0x00000000000e23dd : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; ret
0x00000000000d804a : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000bc857 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e54cd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000094305 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002e9ed : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000092849 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000e2393 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf7e9
0x0000000000074e78 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x0000000000082afa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000005c09a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f2991 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000002691f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000001085cd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e6f93 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000d3dc0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000137d6d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007d47a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000008b140 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000013e20f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137cc1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002bcd4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000095dc6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; stc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000073ceb : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000170e2a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000016ffda : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000016fe02 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016fdfa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000170592 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000000f903a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f262f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000011f4b5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x12b756
0x00000000000b32a4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x1f4f6
0x000000000011ff64 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x3c1e6
0x00000000000eee16 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xeb086
0x00000000000f5c71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000164161 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x164178 ; neg eax ; ret
0x00000000000a2bd1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xa2be1 ; neg eax ; ret
0x00000000001620b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x1620c8 ; neg eax ; ret
0x0000000000058a38 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x54c9e
0x00000000000ba0c3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xba090
0x000000000004baad : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000012e8e3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x12e8f6 ; ret
0x000000000012e923 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x12e936 ; ret
0x00000000000a3f66 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x0000000000039ce2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x0000000000123bcb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000085d98 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000012e29f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000120d2a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f5e5e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f5d2a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000010595d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x101c59
0x00000000000f5ca2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000074c81 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x70f19
0x000000000011fcde : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000129592 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f60e8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006d76b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006cdf0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000739d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x000000000005386e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r13 ; ret
0x00000000000537a0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r14 ; ret
0x0000000000074f0c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101c6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000f8fd3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002c051 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005dcae : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5490 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa5447
0x00000000000a7c30 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa7be7
0x00000000000aa230 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xaa1e7
0x000000000011065c : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2b27
0x000000000010e60c : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2b44
0x00000000000d98b6 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000070664 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x00000000000eb2e4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021a19 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000da19d : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x78], cl ; or byte ptr [rax + 0x63], cl ; ret 0xc148
0x00000000000efa57 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x6117c385], cl ; ret
0x0000000000075d5e : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fe08], al ; ret
0x00000000001a535e : add dword ptr [rax], eax ; add byte ptr [rbx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a824e : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a790e : add dword ptr [rax], eax ; add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000045b1f : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x00000000000852ff : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x000000000008550f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x0000000000085091 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000094684 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000024a4c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000012f78d : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0x894c
0x00000000000b24c3 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000b718e : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000e1898 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001147be : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001147f9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x00000000000df85d : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x000000000000a1e1 : add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret 0x10
0x0000000000096e8a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000001ac5ae : add dword ptr [rax], eax ; add ch, bh ; cmc ; jmp rsp
0x000000000013421b : add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x0000000000069fec : add dword ptr [rax], eax ; add cl, ch ; ret 0xffff
0x00000000001a1c8e : add dword ptr [rax], eax ; add dh, ch ; int1 ; call qword ptr [rdx]
0x0000000000134384 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000001621a5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000001621b2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000001621bf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000162177 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000162184 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000162191 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000001aa6ee : add dword ptr [rax], eax ; add dh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000f0aa4 : add dword ptr [rax], eax ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000f05a1 : add dword ptr [rax], eax ; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000054470 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000018aefe : add dword ptr [rax], eax ; and al, 0x35 ; cmc ; dec esp ; ret 1
0x000000000018acfe : add dword ptr [rax], eax ; and al, 0x3d ; hlt ; jmp rsp
0x000000000018a1c6 : add dword ptr [rax], eax ; and al, 0x87 ; int1 ; jmp rsp
0x00000000001a63be : add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rdx]
0x00000000001a852e : add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], al ; jmp rax
0x00000000001a50be : add dword ptr [rax], eax ; and byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x00000000001a73be : add dword ptr [rax], eax ; and byte ptr [rsi], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a084e : add dword ptr [rax], eax ; and dl, cl ; int1 ; call qword ptr [rbx]
0x00000000001a45c6 : add dword ptr [rax], eax ; call 0x171a39d0
0x00000000001a5cd6 : add dword ptr [rax], eax ; call 0x171a5196
0x00000000001a28b6 : add dword ptr [rax], eax ; call 0x221a1b4b
0x00000000001a5b46 : add dword ptr [rax], eax ; call 0x221a5002
0x00000000001a5c36 : add dword ptr [rax], eax ; call 0x221a50f5
0x00000000001a8236 : add dword ptr [rax], eax ; call 0x221a777c
0x00000000001aa6d6 : add dword ptr [rax], eax ; call 0x271a9cb7
0x00000000001ad296 : add dword ptr [rax], eax ; call 0xffffffffe41ac8b5
0x00000000001a1b76 : add dword ptr [rax], eax ; call 0xffffffffe71a0d69
0x00000000001a7c36 : add dword ptr [rax], eax ; clc ; cmc ; jmp qword ptr [rcx]
0x000000000019eff6 : add dword ptr [rax], eax ; clc ; fcompi st(0) ; jmp rax
0x00000000001a6a86 : add dword ptr [rax], eax ; clc ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a0b66 : add dword ptr [rax], eax ; cmp bl, dl ; int1 ; call rsi
0x00000000001a7de6 : add dword ptr [rax], eax ; cmp byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001ac4ae : add dword ptr [rax], eax ; cmp ch, 0xf5 ; call qword ptr [rax]
0x000000000018acbe : add dword ptr [rax], eax ; cmp esp, esi ; call rsp
0x00000000001ac3c6 : add dword ptr [rax], eax ; cwde ; cld ; cmc ; call qword ptr [rax]
0x00000000001a2b66 : add dword ptr [rax], eax ; cwde ; mov edx, dr0 ; call qword ptr [rdx]
0x00000000001a4b96 : add dword ptr [rax], eax ; cwde ; movsxd rsi, esp ; jmp qword ptr [rax]
0x00000000001aa8e6 : add dword ptr [rax], eax ; fcom st(6) ; cmc ; jmp qword ptr [rsi]
0x00000000001a7f06 : add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x00000000001a8326 : add dword ptr [rax], eax ; fdivr dword ptr [rbx] ; cmc ; jmp rbx
0x00000000001a4bc6 : add dword ptr [rax], eax ; fsub dword ptr [rbx - 0xc] ; jmp qword ptr [rcx]
0x00000000001ab4a6 : add dword ptr [rax], eax ; fsub st(5) ; cmc ; call qword ptr [rax]
0x000000000018b9f6 : add dword ptr [rax], eax ; hlt ; and dh, bh ; call rsp
0x000000000018abe6 : add dword ptr [rax], eax ; hlt ; ret
0x000000000018a03e : add dword ptr [rax], eax ; hlt ; ret 0xfff0
0x000000000018baae : add dword ptr [rax], eax ; hlt ; sub al, 0xf7 ; jmp rsp
0x000000000018de36 : add dword ptr [rax], eax ; in al, -0x15 ; cli ; jmp rsp
0x000000000018ae3e : add dword ptr [rax], eax ; in al, -0x2e ; hlt ; jmp rsp
0x000000000018a31e : add dword ptr [rax], eax ; in al, -0x31 ; int1 ; jmp rsp
0x000000000018969e : add dword ptr [rax], eax ; in al, 0x33 ; out dx, eax ; call rsp
0x00000000001898f6 : add dword ptr [rax], eax ; in al, 0x54 ; out dx, eax ; jmp rsp
0x00000000001aba96 : add dword ptr [rax], eax ; in eax, dx ; cmc ; jmp qword ptr [rax]
0x000000000018952e : add dword ptr [rax], eax ; inc byte ptr [rdi] ; out dx, eax ; jmp rsp
0x00000000001a519e : add dword ptr [rax], eax ; jbe 0x1a519c ; jmp qword ptr [rcx]
0x000000000018955e : add dword ptr [rax], eax ; je 0x189571 ; out dx, eax ; jmp rsp
0x0000000000189826 : add dword ptr [rax], eax ; je 0x18987d ; out dx, eax ; jmp rsp
0x000000000018a6ae : add dword ptr [rax], eax ; je 0x18a6bd ; jmp rsp
0x000000000018aaa6 : add dword ptr [rax], eax ; je 0x18aa47 ; jmp rsp
0x000000000018ac76 : add dword ptr [rax], eax ; je 0x18acb6 ; hlt ; jmp rsp
0x00000000001adfa6 : add dword ptr [rax], eax ; jmp qword ptr [rdi]
0x00000000001a5d7e : add dword ptr [rax], eax ; jo 0x1a5d3e ; hlt ; call rdi
0x00000000001a5f7e : add dword ptr [rax], eax ; jo 0x1a5f43 ; hlt ; jmp qword ptr [rcx]
0x00000000001a641e : add dword ptr [rax], eax ; jo 0x1a63f3 ; hlt ; jmp qword ptr [rcx]
0x00000000001a68ce : add dword ptr [rax], eax ; jo 0x1a68b3 ; hlt ; call qword ptr [rax]
0x00000000001a7cae : add dword ptr [rax], eax ; jo 0x1a7ce6 ; cmc ; jmp qword ptr [rcx]
0x00000000001a803e : add dword ptr [rax], eax ; jo 0x1a807c ; cmc ; jmp qword ptr [rcx]
0x00000000001a811e : add dword ptr [rax], eax ; jo 0x1a815f ; cmc ; jmp qword ptr [rax]
0x00000000001a9a8e : add dword ptr [rax], eax ; jo 0x1a9b08 ; cmc ; call rsp
0x00000000001aa65e : add dword ptr [rax], eax ; jo 0x1aa63c ; cmc ; jmp qword ptr [rsi]
0x00000000001ab93e : add dword ptr [rax], eax ; jo 0x1ab930 ; cmc ; call qword ptr [rax]
0x00000000001ac12e : add dword ptr [rax], eax ; jo 0x1ac12f ; cmc ; call qword ptr [rcx]
0x0000000000189ad6 : add dword ptr [rax], eax ; jrcxz 0x189aad ; out dx, eax ; call rsp
0x000000000019ffe6 : add dword ptr [rax], eax ; js 0x1a0031 ; int1 ; jmp qword ptr [rcx]
0x00000000001a2156 : add dword ptr [rax], eax ; js 0x1a215d ; int1 ; jmp qword ptr [rcx]
0x00000000001a3016 : add dword ptr [rax], eax ; js 0x1a300a ; jmp rdx
0x00000000001a5046 : add dword ptr [rax], eax ; js 0x1a50bd ; hlt ; jmp qword ptr [rcx]
0x00000000001a7ae6 : add dword ptr [rax], eax ; js 0x1a7b1c ; cmc ; jmp qword ptr [rcx]
0x00000000001a82c6 : add dword ptr [rax], eax ; js 0x1a830a ; cmc ; jmp qword ptr [rcx]
0x00000000001aa886 : add dword ptr [rax], eax ; js 0x1aa865 ; cmc ; jmp qword ptr [rsi]
0x00000000001ab926 : add dword ptr [rax], eax ; js 0x1ab918 ; cmc ; call qword ptr [rax]
0x00000000001ac4c6 : add dword ptr [rax], eax ; js 0x1ac4cc ; cmc ; call qword ptr [rax]
0x00000000001a1dfe : add dword ptr [rax], eax ; loopne 0x1a1dfa ; int1 ; jmp qword ptr [rdx]
0x00000000001a6a6e : add dword ptr [rax], eax ; loopne 0x1a6a56 ; hlt ; jmp qword ptr [rcx]
0x00000000001a7c1e : add dword ptr [rax], eax ; loopne 0x1a7c55 ; cmc ; jmp qword ptr [rcx]
0x00000000001a942e : add dword ptr [rax], eax ; loopne 0x1a94a0 ; cmc ; call rcx
0x00000000001aa5ce : add dword ptr [rax], eax ; loopne 0x1aa5ab ; cmc ; jmp qword ptr [rsi]
0x00000000001a6436 : add dword ptr [rax], eax ; mov ah, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a7bee : add dword ptr [rax], eax ; mov al, 0x2e ; cmc ; jmp qword ptr [rcx]
0x00000000001a8fee : add dword ptr [rax], eax ; mov al, 0x63 ; cmc ; call rsp
0x00000000001a6a3e : add dword ptr [rax], eax ; mov al, 0xdf ; hlt ; jmp qword ptr [rcx]
0x00000000001a1cde : add dword ptr [rax], eax ; mov al, 0xee ; int1 ; jmp qword ptr [rcx]
0x00000000001ab726 : add dword ptr [rax], eax ; mov al, ch ; cmc ; call qword ptr [rax]
0x00000000001a0086 : add dword ptr [rax], eax ; mov byte ptr [rbx - 0xf], al ; call rsi
0x00000000001a51e6 : add dword ptr [rax], eax ; mov byte ptr [rcx + rdi*8], dl ; call qword ptr [rax]
0x00000000001a0156 : add dword ptr [rax], eax ; mov byte ptr [rdi - 0xf], bh ; call qword ptr [rax]
0x00000000001a7cc6 : add dword ptr [rax], eax ; mov byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ac846 : add dword ptr [rax], eax ; mov byte ptr [rdx], al ; idiv bh ; ret 3
0x00000000001ac496 : add dword ptr [rax], eax ; mov ch, bh ; cmc ; call qword ptr [rax]
0x00000000001aa676 : add dword ptr [rax], eax ; mov ch, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a29de : add dword ptr [rax], eax ; mov edx, dr0 ; jmp qword ptr [rdi]
0x0000000000096c95 : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000108ec0 : add dword ptr [rax], eax ; mov rax, rdi ; pop rbx ; ret
0x0000000000096bc1 : add dword ptr [rax], eax ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x000000000018b8e6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0xf7 ; jmp rsp
0x000000000018a38e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; fyl2x ; call rsp
0x000000000018a26e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; mov bh, 0xf1 ; jmp rsp
0x000000000018ab5e : add dword ptr [rax], eax ; movsd dword ptr [rdi], dword ptr fs:[rsi] ; jmp rsp
0x00000000001ac3de : add dword ptr [rax], eax ; nop ; cld ; cmc ; call qword ptr [rax]
0x000000000019f8ce : add dword ptr [rax], eax ; nop ; cld ; jmp qword ptr [rbx]
0x00000000001a82de : add dword ptr [rax], eax ; nop ; cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000001a4c9e : add dword ptr [rax], eax ; nop ; hlt ; jmp qword ptr [rcx]
0x000000000019fffe : add dword ptr [rax], eax ; nop ; int1 ; jmp qword ptr [rcx]
0x00000000001a53ee : add dword ptr [rax], eax ; nop ; jnp 0x1a53ec ; jmp qword ptr [rcx]
0x00000000001a505e : add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001aa89e : add dword ptr [rax], eax ; nop ; salc ; cmc ; jmp qword ptr [rsi]
0x0000000000189bd6 : add dword ptr [rax], eax ; nop ; shr bh, cl ; call rsp
0x00000000001ac47e : add dword ptr [rax], eax ; nop ; std ; cmc ; call qword ptr [rax]
0x00000000001a7d6e : add dword ptr [rax], eax ; nop ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000001a6ae6 : add dword ptr [rax], eax ; or al, ah ; hlt ; jmp rsp
0x00000000001a69c6 : add dword ptr [rax], eax ; or bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aa946 : add dword ptr [rax], eax ; or bh, dl ; cmc ; jmp qword ptr [rdi]
0x00000000001aa916 : add dword ptr [rax], eax ; or bh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a4416 : add dword ptr [rax], eax ; or bl, bh ; jmp qword ptr [rdi]
0x00000000001a7f36 : add dword ptr [rax], eax ; or byte ptr [rbx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7db6 : add dword ptr [rax], eax ; or byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a50a6 : add dword ptr [rax], eax ; or byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x000000000019e4ce : add dword ptr [rax], eax ; or byte ptr [rdx - 0x10], 0xff ; ret
0x00000000001a7b76 : add dword ptr [rax], eax ; or byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a5016 : add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a00d6 : add dword ptr [rax], eax ; pop rax ; int1 ; call qword ptr [rdx]
0x00000000001a51b6 : add dword ptr [rax], eax ; pop rax ; jbe 0x1a51b4 ; jmp qword ptr [rcx]
0x000000000019f986 : add dword ptr [rax], eax ; pop rax ; or esi, ecx ; jmp rcx
0x00000000001a62c6 : add dword ptr [rax], eax ; pop rax ; ret
0x00000000001a3d3e : add dword ptr [rax], eax ; push rax ; jb 0x1a3d3b ; jmp rax
0x00000000001aa92e : add dword ptr [rax], eax ; push rax ; ret 0xfff8
0x00000000001a432e : add dword ptr [rax], eax ; push rax ; stc ; jmp qword ptr [rax]
0x00000000001a7dfe : add dword ptr [rax], eax ; push rax ; xor ebp, esi ; jmp qword ptr [rcx]
0x000000000018afae : add dword ptr [rax], eax ; push rsp ; ret 0xfff5
0x000000000018ae96 : add dword ptr [rax], eax ; push rsp ; std ; hlt ; call rsp
0x00000000001a0ede : add dword ptr [rax], eax ; rcl ah, 1 ; int1 ; jmp qword ptr [rbx]
0x000000000019e61e : add dword ptr [rax], eax ; rcl byte ptr [rcx - 0x10], 1 ; jmp qword ptr [rdi]
0x00000000001aa6be : add dword ptr [rax], eax ; rcl ch, 1 ; cmc ; jmp qword ptr [rsi]
0x00000000001aa8ce : add dword ptr [rax], eax ; rcl dh, 0xf5 ; jmp qword ptr [rsi]
0x000000000019fb4e : add dword ptr [rax], eax ; rcr byte ptr [rax], 0xf1 ; jmp qword ptr [rcx]
0x0000000000086b49 : add dword ptr [rax], eax ; ret
0x00000000001a315e : add dword ptr [rax], eax ; ret 0xe7da
0x000000000018a98e : add dword ptr [rax], eax ; ret 0xf380
0x000000000018a036 : add dword ptr [rax], eax ; ret 0xfff0
0x00000000001a611e : add dword ptr [rax], eax ; rol al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a7eee : add dword ptr [rax], eax ; sal byte ptr [rdx], 0xf5 ; jmp qword ptr [rcx]
0x00000000001aa856 : add dword ptr [rax], eax ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001a830e : add dword ptr [rax], eax ; sar byte ptr [rbx], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a532e : add dword ptr [rax], eax ; sar byte ptr [rdx - 0xc], 1 ; jmp qword ptr [rcx]
0x00000000001a6ede : add dword ptr [rax], eax ; sar dh, 1 ; hlt ; jmp rax
0x0000000000189466 : add dword ptr [rax], eax ; sar ebp, cl ; out dx, al ; jmp rsp
0x00000000001aad4e : add dword ptr [rax], eax ; sbb ah, 0xf5 ; call qword ptr [rax]
0x00000000001a6a0e : add dword ptr [rax], eax ; sbb bh, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a8266 : add dword ptr [rax], eax ; sbb byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7926 : add dword ptr [rax], eax ; sbb byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001898d6 : add dword ptr [rax], eax ; sbb byte ptr [rcx - 0x11], dl ; call rsp
0x00000000001ad6de : add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf6 ; call rdi
0x00000000001a4d66 : add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xc], ah ; jmp qword ptr [rcx]
0x00000000001a36d6 : add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; call qword ptr [rcx]
0x00000000001a2036 : add dword ptr [rax], eax ; sbb ch, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001aa706 : add dword ptr [rax], eax ; sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a0836 : add dword ptr [rax], eax ; sbb dl, cl ; int1 ; call qword ptr [rsi]
0x00000000001aae2e : add dword ptr [rax], eax ; shl al, 0xf5 ; call qword ptr [rax]
0x00000000001a752e : add dword ptr [rax], eax ; shl byte ptr [rax], 0xf5 ; jmp qword ptr [rsi]
0x00000000001add3e : add dword ptr [rax], eax ; shl byte ptr [rdx], 0xf6 ; call rdi
0x00000000001ab4be : add dword ptr [rax], eax ; shl ch, 1 ; cmc ; jmp rbx
0x00000000001a488e : add dword ptr [rax], eax ; shl rdi, 1 ; jmp qword ptr [rax]
0x00000000001a1c0e : add dword ptr [rax], eax ; shr ah, 0xf1 ; jmp qword ptr [rcx]
0x00000000001abb8e : add dword ptr [rax], eax ; shr bh, 0xf5 ; call qword ptr [rax]
0x00000000001ac366 : add dword ptr [rax], eax ; sub bl, bh ; cmc ; call qword ptr [rax]
0x000000000019e886 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0x10], bl ; jmp rsi
0x00000000001a22d6 : add dword ptr [rax], eax ; sub byte ptr [rdi], al ; jmp rdx
0x00000000001a7826 : add dword ptr [rax], eax ; sub byte ptr [rdx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a5186 : add dword ptr [rax], eax ; sub byte ptr [rsi - 0xc], dh ; jmp qword ptr [rcx]
0x00000000001a7bbe : add dword ptr [rax], eax ; sub byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x00000000001aa616 : add dword ptr [rax], eax ; sub ch, dl ; cmc ; jmp qword ptr [rsi]
0x000000000018ba1e : add dword ptr [rax], eax ; sub dil, r14b ; jmp rsp
0x00000000001a0866 : add dword ptr [rax], eax ; sub dl, cl ; int1 ; call qword ptr [rbx]
0x00000000001a7956 : add dword ptr [rax], eax ; sub rsi, rbp ; jmp qword ptr [rcx]
0x00000000001a783e : add dword ptr [rax], eax ; sub sil, bpl ; jmp qword ptr [rcx]
0x00000000001a7b16 : add dword ptr [rax], eax ; test al, 0x2d ; cmc ; jmp qword ptr [rcx]
0x00000000001a7d86 : add dword ptr [rax], eax ; test al, 0x30 ; cmc ; jmp qword ptr [rcx]
0x00000000001a82f6 : add dword ptr [rax], eax ; test al, 0x3b ; cmc ; jmp qword ptr [rcx]
0x00000000001a4cb6 : add dword ptr [rax], eax ; test al, 0x65 ; hlt ; jmp qword ptr [rcx]
0x00000000001a5076 : add dword ptr [rax], eax ; test al, 0x6e ; hlt ; jmp qword ptr [rcx]
0x00000000001a2b16 : add dword ptr [rax], eax ; test al, 0x8c ; call qword ptr [rdi]
0x00000000001a5926 : add dword ptr [rax], eax ; test al, 0xac ; hlt ; call qword ptr [rbx]
0x00000000001a5ff6 : add dword ptr [rax], eax ; test al, 0xbd ; hlt ; jmp qword ptr [rcx]
0x00000000001a6106 : add dword ptr [rax], eax ; test al, 0xc0 ; hlt ; jmp qword ptr [rcx]
0x00000000001a7346 : add dword ptr [rax], eax ; test al, 0xd ; cmc ; jmp qword ptr [rcx]
0x00000000001aa8b6 : add dword ptr [rax], eax ; test al, 0xd6 ; cmc ; jmp qword ptr [rsi]
0x00000000001abb46 : add dword ptr [rax], eax ; test al, 0xef ; cmc ; call qword ptr [rdi]
0x000000000018a986 : add dword ptr [rax], eax ; test byte ptr [rdi - 0xd], bh ; call rsp
0x0000000000189d0e : add dword ptr [rax], eax ; test ch, cl ; out dx, eax ; call rsp
0x000000000018af16 : add dword ptr [rax], eax ; xchg eax, esp ; cmc ; call rsp
0x000000000018a77e : add dword ptr [rax], eax ; xchg eax, esp ; push rsi ; call rsp
0x000000000018abde : add dword ptr [rax], eax ; xchg eax, esp ; ret
0x000000000018e0d6 : add dword ptr [rax], eax ; xchg eax, esp ; xlatb ; std ; call rsp
0x0000000000189e7e : add dword ptr [rax], eax ; xchg eax, esp ; xor esi, eax ; call rsp
0x000000000018a586 : add dword ptr [rax], eax ; xor al, 0x8d ; jmp rsp
0x000000000018ad76 : add dword ptr [rax], eax ; xor al, 0x91 ; hlt ; jmp rsp
0x000000000018a5ce : add dword ptr [rax], eax ; xor al, 0x9b ; call rsp
0x00000000001899ee : add dword ptr [rax], eax ; xor al, 0xa7 ; out dx, eax ; call rsp
0x000000000018afa6 : add dword ptr [rax], eax ; xor al, 0xc2 ; cmc ; call rsp
0x00000000001a7d3e : add dword ptr [rax], eax ; xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a538e : add dword ptr [rax], eax ; xor byte ptr [rbx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a827e : add dword ptr [rax], eax ; xor byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a793e : add dword ptr [rax], eax ; xor byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a484e : add dword ptr [rax], eax ; xor byte ptr [rcx], cl ; hlt ; jmp rdx
0x00000000001a4d7e : add dword ptr [rax], eax ; xor byte ptr [rsi - 0xc], ah ; jmp qword ptr [rcx]
0x00000000001a20ae : add dword ptr [rax], eax ; xor dh, bh ; int1 ; jmp qword ptr [rcx]
0x0000000000179344 : add dword ptr [rax], ebx ; hlt ; jmp qword ptr [rbx]
0x0000000000091603 : add dword ptr [rax], edi ; ret 0x4788
0x000000000008b685 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000c869b : add dword ptr [rbp + 0x1441204], ecx ; ret 0xc8d
0x000000000009625b : add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x8305
0x00000000000d8183 : add dword ptr [rbp + 0x39], eax ; ret 0x677e
0x00000000000d3c23 : add dword ptr [rbp + 0x39], eax ; ret 0x8e0f
0x00000000000c83a1 : add dword ptr [rbp + 0x75], ebx ; jmp 0xc83f4
0x000000000003763a : add dword ptr [rbp + 0xb], esi ; xor eax, eax ; nop ; ret
0x0000000000108e9c : add dword ptr [rbp + 0xf], eax ; mov dh, 0x42 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000b8e5e : add dword ptr [rbp + 1], ecx ; ret
0x00000000000a31a7 : add dword ptr [rbp - 0x1a], esi ; mov rax, rbx ; pop rbx ; ret
0x0000000000097bc8 : add dword ptr [rbp - 0x1b], esi ; mov rax, rbx ; pop rbx ; ret
0x00000000000381f4 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x00000000000979c1 : add dword ptr [rbp - 0x3c], esi ; nop dword ptr [rax] ; ret
0x000000000004876b : add dword ptr [rbp - 0x76b7fffb], esi ; ret 0xffb8
0x000000000007d5af : add dword ptr [rbp - 0x77], ecx ; ret
0x00000000000d1d74 : add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x000000000010bdd9 : add dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x17], 0xf3 ; ret
0x000000000009752c : add dword ptr [rbp - 0xf], esi ; ret
0x000000000009737c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000014cfe2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000095ca6 : add dword ptr [rbx + 0x294803e0], eax ; ret
0x00000000000026fe : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x0000000000080bbb : add dword ptr [rbx + 0x33d60e05], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000346a3 : add dword ptr [rbx + 0xf450afa], eax ; ret 0x8348
0x00000000000dbc5d : add dword ptr [rbx + rcx*4 - 0xa], esi ; ret 0x7408
0x0000000000112c41 : add dword ptr [rbx - 0x2037b], ecx ; dec dword ptr [rax + 0x39] ; ret 0x870f
0x000000000002ea82 : add dword ptr [rbx - 0x7cb7fe39], eax ; ret 0x8310
0x00000000000d0e08 : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00000000000d33dd : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x000000000007d347 : add dword ptr [rbx - 0xd], ebx ; ret
0x00000000000bf56b : add dword ptr [rbx], 0x89480030 ; ret 0xbae9
0x00000000001b0fb2 : add dword ptr [rbx], eax ; ret
0x0000000000127711 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00000000000a369f : add dword ptr [rcx + 0x39], eax ; ret
0x00000000000d94be : add dword ptr [rcx + 0x39], eax ; ret 0x267e
0x0000000000113b01 : add dword ptr [rcx + 0x39], eax ; ret 0xd975
0x00000000000d94e4 : add dword ptr [rcx + 0x39], eax ; ret 0xda7f
0x0000000000092188 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000012d07c : add dword ptr [rcx + 0x48], esi ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000a17d0 : add dword ptr [rcx + 0x5c], eax ; ret
0x000000000011d523 : add dword ptr [rcx + 0x5d], eax ; ret
0x00000000000979f3 : add dword ptr [rcx + 0xf], eax ; mov dh, 0x49 ; dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x0000000000040791 : add dword ptr [rcx + 1], ecx ; ret
0x0000000000028e75 : add dword ptr [rcx + rcx*4 + 0x55], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000011a9fa : add dword ptr [rcx + rcx*4 - 0x5c], ecx ; ret
0x0000000000047904 : add dword ptr [rcx - 0x3a], eax ; jmp qword ptr [r8]
0x00000000000b22bd : add dword ptr [rcx - 0x73], eax ; push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x000000000002a7eb : add dword ptr [rcx - 0x75], eax ; or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x0000000000099b76 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000123bb9 : add dword ptr [rcx - 0x77], eax ; add byte ptr [rax + 1], bh ; ret
0x000000000005c662 : add dword ptr [rcx - 0x77], ecx ; ret 0x12e9
0x00000000000475f6 : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x00000000000a8b13 : add dword ptr [rcx - 0x7d], ecx ; jmp 0xffffffffc28dd323
0x000000000002a9e5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000117e4f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000a77c3 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4104
0x00000000000d87ff : add dword ptr [rcx - 0x7d], ecx ; ret 0x4504
0x00000000000d16f9 : add dword ptr [rcx - 0x7d], ecx ; ret 0x6610
0x00000000001a62c5 : add dword ptr [rcx], 0xf4c35800 ; jmp qword ptr [rsi]
0x00000000000a33db : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000114825 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x00000000000d3716 : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add ecx, eax ; jmp 0x4d02d2d
0x00000000000d3718 : add dword ptr [rcx], eax ; add ecx, eax ; jmp 0x4d02d2b
0x00000000000fcdfb : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00000000000e351b : add dword ptr [rcx], edi ; ret
0x00000000000e330c : add dword ptr [rcx], edi ; ret 0x8c0f
0x00000000000472b3 : add dword ptr [rcx], edi ; ret 0xb87f
0x00000000000d776a : add dword ptr [rcx], edi ; ret 0xd675
0x00000000000dc5bb : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0xc339
0x000000000012e5c0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000012e5d0 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000001653ba : add dword ptr [rdi + 3], esi ; ret
0x0000000000092bd7 : add dword ptr [rdi - 0x1a], edi ; ret
0x00000000000940ac : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bd887 : add dword ptr [rdi], 0 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000026ffa : add dword ptr [rdi], 1 ; jmp 0x26fc6
0x00000000001aa2e9 : add dword ptr [rdi], 3 ; add dword ptr [rdx], r9d ; ret
0x0000000000118fa0 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d0c96 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000d4eb6 : add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x000000000002fe55 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x0000000000049b6b : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000011a620 : add dword ptr [rdi], ecx ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000097ac0 : add dword ptr [rdi], ecx ; mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000b731e : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000015a2fe : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000c403f : add dword ptr [rdi], ecx ; xchg byte ptr [rdi - 0xa000000], bh ; ret
0x0000000000111e1b : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000047b71 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000a1ca2 : add dword ptr [rdx + 0x2b], 0xd7748104 ; ret
0x0000000000099b34 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x000000000005dc38 : add dword ptr [rdx + 4], 1 ; ret
0x000000000005dcb8 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000fc80b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000001863f0 : add dword ptr [rdx - 0x557e0003], ebp ; std ; call qword ptr [rcx]
0x00000000001903fd : add dword ptr [rdx], 0x44 ; ret
0x00000000001a04f4 : add dword ptr [rdx], 0x4a ; ret
0x000000000019c14c : add dword ptr [rdx], 0x51 ; ret
0x00000000001aab0d : add dword ptr [rdx], 0x57 ; ret
0x0000000000193074 : add dword ptr [rdx], 0x63 ; ret
0x000000000019c155 : add dword ptr [rdx], 0x65 ; ret
0x00000000001b62fd : add dword ptr [rdx], 0xf7f43000 ; call rcx
0x00000000001b634d : add dword ptr [rdx], 0xf7f5c000 ; call rdx
0x000000000019b684 : add dword ptr [rdx], 2 ; clc ; ret
0x000000000019c5cc : add dword ptr [rdx], 2 ; ret
0x00000000001960d4 : add dword ptr [rdx], 2 ; xchg eax, edi ; ret
0x000000000018e3d0 : add dword ptr [rdx], ecx ; ret
0x000000000012ac83 : add dword ptr [rdx], esi ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000001aa2ec : add dword ptr [rdx], r9d ; ret
0x000000000007d341 : add dword ptr [rip + 0x343738], 1 ; pop rbx ; ret
0x000000000007c8d6 : add dword ptr [rip + 0x3440e7], 1 ; ret
0x00000000000d31e4 : add dword ptr [rip + 0x438d0000], eax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000aaf2e : add dword ptr [rip - 0x47b80000], eax ; ret 0xffff
0x0000000000099ac5 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000013cd89 : add dword ptr [rsi + 0xf], esp ; cmp byte ptr [rax], al ; ret 0xf66
0x000000000018640c : add dword ptr [rsi - 0x51810003], ebp ; std ; call qword ptr [rsi]
0x0000000000099b47 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000019bb08 : add dword ptr [rsi], 2 ; out 0xa, al ; ret
0x000000000019c250 : add dword ptr [rsi], 2 ; ret
0x000000000019d27d : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001ab7af : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x00000000001998df : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xedf8
0x000000000019a6d7 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xee68
0x00000000001a0d9f : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf17f
0x00000000001ab29f : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf55b
0x00000000001acb67 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf57a
0x00000000001b2577 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf683
0x00000000001a2035 : add dword ptr ds:[rax], eax ; sbb ch, bh ; int1 ; jmp qword ptr [rcx]
0x000000000013fca7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a084d : add dword ptr es:[rax], eax ; and dl, cl ; int1 ; call qword ptr [rbx]
0x00000000001a0835 : add dword ptr es:[rax], eax ; sbb dl, cl ; int1 ; call qword ptr [rsi]
0x00000000001a0865 : add dword ptr es:[rax], eax ; sub dl, cl ; int1 ; call qword ptr [rbx]
0x000000000018df95 : add dword ptr fs:[rax], eax ; add al, 1 ; cld ; call rsp
0x00000000001a45c5 : add dword ptr fs:[rax], eax ; call 0x171a39d1
0x00000000000a70c5 : add dword ptr ss:[rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000001589 : add eax, 0 ; add byte ptr [rax], al ; ret
0x0000000000004b09 : add eax, 0 ; add byte ptr [rax], al ; ret 0x26
0x00000000001176c6 : add eax, 0x10 ; ret
0x0000000000088dc6 : add eax, 0x10f35 ; ret
0x0000000000086b46 : add eax, 0x11595 ; ret
0x0000000000022032 : add eax, 0x15a154 ; ret
0x00000000000484e9 : add eax, 0x15b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000022042 : add eax, 0x15c12b ; ret
0x00000000000b4357 : add eax, 0x16e ; ret
0x0000000000035a02 : add eax, 0x1c8d4c00 ; sbb byte ptr [rax - 0x77], cl ; ret 0x394d
0x000000000008be6c : add eax, 0x1f ; ret
0x00000000001918b4 : add eax, 0x2300e44 ; ret
0x0000000000133702 : add eax, 0x2883f9 ; jmp rax
0x00000000001336b2 : add eax, 0x288441 ; pop r12 ; jmp rax
0x0000000000133652 : add eax, 0x288499 ; pop r12 ; jmp rax
0x0000000000135227 : add eax, 0x28a664 ; call qword ptr [rax]
0x0000000000133763 : add eax, 0x28c128 ; call qword ptr [rax]
0x000000000008ac06 : add eax, 0x29000000 ; ret
0x00000000000b7827 : add eax, 0x2907fbc1 ; ret 0x8944
0x000000000012ac82 : add eax, 0x293201 ; add rsp, 8 ; ret
0x000000000012ac52 : add eax, 0x293299 ; add rsp, 8 ; ret
0x000000000012abf2 : add eax, 0x293381 ; add rsp, 8 ; ret
0x000000000012ac22 : add eax, 0x2933c1 ; add rsp, 8 ; ret
0x00000000000b7965 : add eax, 0x2941c229 ; ret
0x000000000002a297 : add eax, 0x29480000 ; ret 0x8b49
0x00000000001b7559 : add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x000000000011c412 : add eax, 0x2a1bd9 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000011fa7a : add eax, 0x2a3cc1 ; add rsp, 8 ; ret
0x000000000011fa61 : add eax, 0x2a3cda ; test eax, eax ; je 0x11fa79 ; ret
0x000000000011ee2a : add eax, 0x2a4871 ; pop rbx ; ret
0x000000000011edf2 : add eax, 0x2a48a9 ; pop rbx ; ret
0x000000000011ed33 : add eax, 0x2a4968 ; pop rbx ; ret
0x000000000011bc9b : add eax, 0x2a7730 ; test eax, eax ; je 0x11bcb1 ; ret
0x00000000001121b2 : add eax, 0x2ad839 ; ret
0x0000000000112030 : add eax, 0x2ad9b3 ; add rsp, 8 ; ret
0x000000000010d62c : add eax, 0x2b52fe ; add ecx, ebp ; ret
0x000000000010c4a7 : add eax, 0x2b6364 ; add rsp, 0x28 ; jmp rax
0x00000000000fd422 : add eax, 0x2c0a39 ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000015a384 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000f9d0f : add eax, 0x2c7b2c ; add rsp, 0x18 ; ret
0x00000000000f9cac : add eax, 0x2c7bcf ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9758 : add eax, 0x2c8093 ; add rsp, 8 ; ret
0x00000000000f96f9 : add eax, 0x2c8112 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9501 : add eax, 0x2c82b2 ; ret
0x00000000000f9341 : add eax, 0x2c8472 ; ret
0x00000000000f916e : add eax, 0x2c8645 ; add rsp, 8 ; ret
0x00000000000f24d6 : add eax, 0x2cd445 ; mov rdx, rax ; jmp 0xf2476
0x00000000000f2440 : add eax, 0x2cd4db ; add rsp, 8 ; ret
0x00000000000f395b : add eax, 0x2cdcd0 ; add rsp, 8 ; ret
0x00000000000f38e7 : add eax, 0x2cdd44 ; mov rdx, rax ; jmp 0xf38c7
0x00000000000ebaf6 : add eax, 0x2d59b1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000019d27b : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000b0668 : add eax, 0x310733 ; add rsp, 0x28 ; ret
0x00000000000b2110 : add eax, 0x311d03 ; add rsp, 8 ; ret
0x000000000008aac5 : add eax, 0x3361a6 ; add rsp, 8 ; ret
0x000000000008aa83 : add eax, 0x3361e8 ; ret
0x0000000000082640 : add eax, 0x33b88b ; mov qword ptr [rax], rdi ; ret
0x0000000000080a69 : add eax, 0x33d34a ; xor edi, edi ; call qword ptr [rax]
0x0000000000082651 : add eax, 0x33e3f6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007c852 : add eax, 0x342949 ; ret
0x000000000007d342 : add eax, 0x343738 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007c936 : add eax, 0x344089 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000005d514 : add eax, 0x363417 ; pop rbx ; pop rbp ; ret
0x0000000000037bf4 : add eax, 0x386497 ; mov eax, edx ; ret
0x0000000000037bb1 : add eax, 0x3864da ; ret
0x0000000000037ba1 : add eax, 0x3864fa ; ret
0x000000000003d122 : add eax, 0x386c6f ; add rsp, 8 ; ret
0x000000000002fa6e : add eax, 0x38e365 ; mov qword ptr [rax], rdx ; ret
0x000000000002c162 : add eax, 0x393959 ; ret
0x0000000000021b1c : add eax, 0x39c70f ; pop r12 ; ret
0x000000000001f5f1 : add eax, 0x3a045a ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000237e2 : add eax, 0x3a0461 ; ret
0x00000000000237d2 : add eax, 0x3a0481 ; ret
0x000000000002246c : add eax, 0x3a178f ; ret
0x0000000000022223 : add eax, 0x3a19d8 ; pop rbx ; ret
0x00000000000e520e : add eax, 0x41000000 ; pop rsp ; ret
0x00000000001089c6 : add eax, 0x41d15 ; ret
0x00000000000d31e5 : add eax, 0x438d0000 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000108a66 : add eax, 0x44745 ; ret
0x000000000006ebe1 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x000000000015c8b8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000158568 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000009cea6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000118fa2 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000001250da : add eax, 0x48c48348 ; ret
0x000000000009680a : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x000000000015c939 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001585a9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000016d3e9 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x00000000001719bd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000000887c3 : add eax, 0x5c415d5b ; ret
0x0000000000091643 : add eax, 0x6878 ; ret
0x000000000008cc42 : add eax, 0x79 ; ret
0x000000000009d6ae : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000ec91b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013795d : add eax, 0x83480000 ; ret 0x4910
0x000000000013a4b1 : add eax, 0x83480000 ; ret 0xe910
0x00000000001378b1 : add eax, 0x83480000 ; ret 0xeb10
0x000000000015c8bb : add eax, 0x8428d48 ; ret
0x000000000013510c : add eax, 0x89480000 ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000e250d : add eax, 0x89489066 ; ret
0x0000000000108973 : add eax, 0x89c78944 ; ret
0x00000000000b21d9 : add eax, 0x89d02944 ; ret
0x000000000009ed52 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x000000000012ac46 : add eax, 0xa0 ; add rsp, 8 ; ret
0x000000000012ac76 : add eax, 0xa8 ; add rsp, 8 ; ret
0x0000000000091657 : add eax, 0xb1174 ; ret
0x000000000008ad53 : add eax, 0xb1f68 ; ret
0x000000000008a9c3 : add eax, 0xb21d8 ; ret
0x0000000000088533 : add eax, 0xb4528 ; ret
0x00000000000aaf2f : add eax, 0xb8480000 ; ret 0xffff
0x00000000000a2c14 : add eax, 0xbc9c7 ; ret
0x00000000000a37d0 : add eax, 0xbdacb ; ret
0x00000000000e7622 : add eax, 0xbe0f4101 ; ret 0xe883
0x000000000013513e : add eax, 0xc0310000 ; pop rbx ; pop rbp ; ret
0x0000000000160cba : add eax, 0xc0310000 ; ret
0x00000000000a37d8 : add eax, 0xc0383 ; ret
0x00000000000d33db : add eax, 0xc0830100 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000008c5e6 : add eax, 0xc0bd5 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x000000000015c93d : add eax, 0xc428d48 ; ret
0x000000000009e4ed : add eax, 0xc478d48 ; ret
0x000000000003292e : add eax, 0xc6834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000000a37bc : add eax, 0xc84f ; ret
0x000000000008a6a6 : add eax, 0xcdf55 ; ret
0x000000000008cad6 : add eax, 0xce6a5 ; ret
0x0000000000088426 : add eax, 0xcea25 ; ret
0x000000000008cbf6 : add eax, 0xcfd95 ; ret
0x000000000008be80 : add eax, 0xd3ddb ; ret
0x000000000009f32d : add eax, 0xd478d48 ; ret
0x00000000000a2c0c : add eax, 0xd48f ; ret
0x000000000008be88 : add eax, 0xd6563 ; ret
0x0000000000086d33 : add eax, 0xdb398 ; ret
0x0000000000088875 : add eax, 0xe8000000 ; ret 0xfa7d
0x00000000000b7e9e : add eax, 0xe9000000 ; ret 0xfff3
0x0000000000025517 : add eax, 0xe9fffff4 ; ret
0x00000000000f610c : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x00000000000f6131 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000000f627a : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x00000000000f6313 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000014cfd3 : add eax, 0xf7f0ff3 ; ret
0x000000000004e1bf : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004b9ce : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000000b23ce : add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x00000000001087ea : add eax, 0xfff0003d ; dec dword ptr [rax - 0x77] ; ret 0x1376
0x0000000000092ba3 : add eax, 0xfffffad8 ; add rsp, 8 ; ret
0x0000000000092b8c : add eax, 0xfffffaef ; ret
0x00000000000472b1 : add eax, 1 ; cmp edx, eax ; jg 0x47278 ; ret
0x000000000008ca7b : add eax, 1 ; ret
0x00000000000a2ea8 : add eax, 2 ; ret
0x00000000000a2ec1 : add eax, 3 ; ret
0x0000000000086f96 : add eax, 5 ; ret
0x000000000008cca5 : add eax, 6 ; ret
0x0000000000117f40 : add eax, 8 ; ret
0x0000000000088e12 : add eax, 9 ; ret
0x0000000000022769 : add eax, dword ptr [0] ; ret
0x00000000001a0d5e : add eax, dword ptr [rax + 0xd1cfff1] ; fidivr word ptr [rsi - 0xf] ; jmp qword ptr [rdx]
0x00000000000aca95 : add eax, dword ptr [rax] ; add al, ch ; ret
0x0000000000028e82 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d651a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000025263 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000113c08 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000137afd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a651 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137b21 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fc416 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000046e41 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x46e0f
0x00000000000f663d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f6694 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000105995 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x101c59
0x00000000000f6714 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000012a9e5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f6814 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000129831 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f83b7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a2f03 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001136c4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000d3f11 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x394104c0], al ; ret 0x697e
0x000000000011581e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x00000000001080a5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000132153 : add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x59e9
0x00000000000c4488 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000a18a0 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000f2227 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a1ac0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a1ae3 : add eax, dword ptr [rax] ; ret
0x00000000000b22d5 : add eax, dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x0000000000028e8a : add eax, dword ptr [rbx + 0x394807e0] ; ret
0x00000000000d0c12 : add eax, dword ptr [rbx - 0x6bf0f903] ; ret 0xfd83
0x000000000003461e : add eax, dword ptr [rbx - 0x6bf0fc08] ; ret 0x70e9
0x0000000000117c2d : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x117c3e ; ret
0x000000000001fc9d : add eax, dword ptr [rbx - 0x7cb70038] ; ret 0xeb04
0x000000000015a349 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000035758 : add eax, dword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000019e212 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rbx + 0xac90204], al ; ret
0x00000000000b22c1 : add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x00000000001365a0 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000135e68 : add eax, dword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x00000000000fdde8 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000015a449 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000000fd5ba : add eax, dword ptr [rsi + rdx] ; ret
0x00000000000a1b85 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000006c75f : add eax, eax ; jmp rax
0x000000000004f210 : add eax, eax ; mov eax, r8d ; ret
0x00000000000970a8 : add eax, eax ; ret
0x000000000005f065 : add eax, ebp ; jmp rax
0x0000000000034ede : add eax, ebx ; jmp rax
0x0000000000091af2 : add eax, ecx ; jmp rax
0x000000000008bb9a : add eax, ecx ; ret
0x00000000000970a5 : add eax, edi ; add rax, r8 ; ret
0x000000000008bb97 : add eax, edi ; add rax, rcx ; ret
0x000000000018c289 : add eax, edi ; call rsp
0x0000000000177124 : add eax, edi ; in eax, dx ; jmp qword ptr [rax + 0x13ffede4]
0x000000000006d0bd : add eax, edi ; jmp rax
0x000000000008a70b : add eax, edi ; ret
0x000000000013caba : add eax, edi ; sub rax, rsi ; ret
0x0000000000121bfd : add eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cb73d : add eax, edx ; cmp rdi, rsi ; ja 0xcb738 ; ret
0x000000000002de71 : add eax, edx ; jmp r8
0x0000000000054b89 : add eax, edx ; jmp rax
0x0000000000121c1e : add eax, edx ; ret
0x000000000003606d : add eax, edx ; shr rax, 0x3f ; ret
0x0000000000088b5e : add eax, edx ; sub rax, rdi ; ret
0x00000000000f2225 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000047281 : add eax, esi ; cmp ecx, 0x2f ; jmp r8
0x00000000001276ab : add eax, esi ; jmp rax
0x00000000000b15d1 : add eax, esi ; ret
0x000000000004dd98 : add eax, esp ; jmp rax
0x0000000000105a70 : add ebp, 0x30 ; call 0x101d05
0x000000000004f13f : add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x00000000000b0955 : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000011f061 : add ebp, dword ptr [rcx] ; ret 0x828d
0x000000000003a23e : add ebp, dword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x00000000000d310b : add ebp, eax ; outsd dx, dword ptr [rsi] ; ret
0x000000000018f6e1 : add ebp, edx ; call qword ptr [rdi]
0x000000000000314e : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000113251 : add ebx, 0x10 ; call 0x1f4f5
0x00000000000c472e : add ebx, 1 ; mov rdx, rax ; jmp 0xc46d5
0x000000000007b4d3 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000fa2f4 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000001079fc : add ebx, eax ; nop ; xor eax, eax ; ret
0x0000000000038521 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000003756 : add ebx, ebp ; in al, -0x12 ; jne 0x373c ; ret 0x975
0x0000000000026ffc : add ebx, ebp ; ret
0x0000000000056514 : add ebx, ebp ; ret 0x9d8b
0x00000000000e2b53 : add ebx, edx ; jmp rbx
0x000000000014d193 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000008c568 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8c559 ; ret
0x000000000010bdd7 : add ecx, 1 ; test r8d, r8d ; jne 0x10bdd1 ; ret
0x0000000000117ef5 : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000099bca : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000012a02d : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000011592a : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007e7d4 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000001044bd : add ecx, dword ptr [rax + 0x29] ; ret 0x394c
0x0000000000116d64 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x00000000000868c5 : add ecx, dword ptr [rax + 1] ; ret 0x6348
0x00000000000a37da : add ecx, dword ptr [rax + rax] ; ret
0x00000000000a1663 : add ecx, dword ptr [rax - 0x2f] ; call 0xffffffffc316a3bf
0x00000000000ecf04 : add ecx, dword ptr [rax - 0x68] ; ret
0x00000000001180dc : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000f3134 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x00000000000967ea : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000093ec9 : add ecx, dword ptr [rax - 0x77] ; fisttp word ptr [rax + 0x29] ; ret 0x2948
0x00000000000f794b : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x000000000006f28a : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003aa36 : add ecx, dword ptr [rax - 0x7d] ; ret 0xf301
0x00000000000f5e81 : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010298f : add ecx, dword ptr [rbp - 0x77] ; ret
0x000000000014cf02 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000001aa2b2 : add ecx, dword ptr [rbx + 1] ; ret
0x00000000000471f8 : add ecx, dword ptr [rcx + 0x29] ; ret
0x000000000009ce44 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000002a9f9 : add ecx, dword ptr [rcx + 0x39] ; ret
0x0000000000086810 : add ecx, dword ptr [rcx + rcx*4 + 0x4b] ; mov rdi, r9 ; call rcx
0x0000000000099bcb : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000055acb : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000e1c7f : add ecx, dword ptr [rcx] ; ret 0xf983
0x00000000001aa2af : add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x000000000009d670 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x0000000000034621 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x000000000007069a : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000019304c : add ecx, dword ptr [rdx - 0x15] ; jmp qword ptr [rdx]
0x000000000018dc70 : add ecx, eax ; cli ; call rsp
0x00000000000d371a : add ecx, eax ; jmp 0x4d02d29
0x0000000000054a5a : add ecx, eax ; jmp rcx
0x0000000000049668 : add ecx, ebp ; ret
0x000000000013625d : add ecx, ebx ; call rax
0x00000000001427eb : add ecx, ebx ; jmp r9
0x000000000015fc82 : add ecx, ebx ; jmp rcx
0x00000000000fa1c4 : add ecx, ebx ; ret
0x000000000018cdf9 : add ecx, edi ; jmp rsp
0x000000000006d298 : add ecx, edx ; jmp rcx
0x00000000000a1b44 : add ecx, esi ; jmp rcx
0x00000000001245dd : add edi, 0x10 ; jmp rcx
0x000000000011f3d0 : add edi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x00000000001214fa : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000001214b3 : add edi, 0x23b0 ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000127ed4 : add edi, 0x58 ; jmp rcx
0x0000000000127624 : add edi, 0x68 ; jmp rcx
0x0000000000123a47 : add edi, 0xc8 ; jmp rcx
0x00000000000967ac : add edi, 1 ; mov rax, rdi ; ret
0x00000000000c5fe2 : add edi, 1 ; test dl, dl ; jne 0xc5fcd ; ret
0x00000000000c600c : add edi, 1 ; test dl, dl ; jne 0xc5ffa ; ret
0x00000000000967d5 : add edi, 2 ; mov rax, rdi ; ret
0x00000000000967e8 : add edi, 3 ; mov rax, rdi ; ret
0x00000000000967f5 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000096808 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000096822 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000127099 : add edi, eax ; jmp rdi
0x00000000001b52c1 : add edi, ebx ; jmp qword ptr [rdx]
0x00000000001427e8 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000117ec5 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000037406 : add edi, esi ; ret 0
0x00000000001868b1 : add edi, esp ; push rax ; add al, 0xfc ; call rax
0x00000000000fccfb : add edx, 1 ; mov dword ptr [rax], edx ; ret
0x00000000000fcaac : add edx, 1 ; mov word ptr [rax], dx ; ret
0x0000000000117e51 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000096fa8 : add edx, eax ; jl 0x97017 ; add rax, rdi ; ret
0x0000000000096fb8 : add edx, eax ; jl 0x97019 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000096fd8 : add edx, eax ; jl 0x97019 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000096ff8 : add edx, eax ; jl 0x97019 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009679d : add edx, eax ; jmp r10
0x0000000000022b71 : add edx, eax ; jmp rdx
0x0000000000039122 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000001f726 : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f700
0x00000000000decd7 : add edx, ecx ; jmp rdx
0x0000000000034c75 : add edx, edi ; jmp rdx
0x0000000000061618 : add edx, esi ; call qword ptr [r11 + rax*8]
0x00000000000a1b04 : add edx, esi ; jmp rdx
0x000000000004be00 : add edx, esp ; call qword ptr [r11 + rax*8]
0x00000000000630d0 : add esi, -1 ; dec dword ptr [rbp + 1] ; loop 0x630ca ; scasb al, byte ptr [rdi] ; ret
0x0000000000126645 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000217fc : add esi, 8 ; jmp 0x217c1
0x00000000000bf56c : add esi, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xbae9
0x00000000000a0cf9 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001180bd : add esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001298f6 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; pop rbp ; ret
0x0000000000129d5e : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000886b6 : add esi, dword ptr [rdi + rbx + 0x40] ; movsx edx, dh ; mov eax, edx ; ret
0x00000000001211c2 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x0000000000096c93 : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000001019d3 : add esi, eax ; jmp qword ptr [rax]
0x000000000006c81f : add esi, eax ; jmp rsi
0x000000000012e263 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000199299 : add esi, ebp ; jmp rax
0x0000000000198fb4 : add esi, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x000000000014d0b3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000006d185 : add esi, ecx ; jmp rsi
0x00000000001620bc : add esi, edi ; fadd st(3) ; ret
0x00000000000a1b9b : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x00000000001427e5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000002e321 : add esi, edx ; jmp r14
0x00000000001ac751 : add esi, esi ; call qword ptr [rcx]
0x000000000008c3a0 : add esi, esi ; ret
0x000000000003762a : add esi, esi ; ret 0xf304
0x00000000000f214f : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000f8fcf : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000085ba4 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000111a91 : add esp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122004 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000f9d4c : add esp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x000000000006ffa7 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000034721 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c60e : add esp, 0x10 ; pop rbx ; ret
0x0000000000121ab0 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c641 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008b9df : add esp, 0x100 ; ret
0x00000000000885cd : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000005d5b3 : add esp, 0x1000 ; pop rbx ; ret
0x000000000005d5c1 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003719d : add esp, 0x108 ; ret
0x00000000000ec75e : add esp, 0x120 ; pop rbx ; ret
0x0000000000037433 : add esp, 0x140 ; pop rbx ; ret
0x0000000000036bdb : add esp, 0x148 ; ret
0x0000000000022129 : add esp, 0x18 ; jmp rax
0x000000000005db17 : add esp, 0x18 ; mov eax, edx ; ret
0x00000000000e4f0e : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000cb640 : add esp, 0x18 ; mov rax, rdx ; ret
0x000000000005db46 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000012e7c9 : add esp, 0x18 ; movzx eax, al ; ret
0x0000000000086978 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003d1b8 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000036fcb : add esp, 0x18 ; ret
0x00000000001201dc : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ebdb7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000f05a4 : add esp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000049b56 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000024310 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036953 : add esp, 0x20 ; pop rbx ; ret
0x00000000000bf706 : add esp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x000000000006e593 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aedc1 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000002217b : add esp, 0x28 ; jmp rax
0x00000000000fa5ca : add esp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fb2fe : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000b1334 : add esp, 0x28 ; mov rax, rdx ; ret
0x000000000012d0d5 : add esp, 0x28 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000021dc9 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000045f26 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000487f2 : add esp, 0x28 ; ret
0x000000000010ad99 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c2c11 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ed0b : add esp, 0x30 ; pop rbx ; ret
0x0000000000112f61 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129bb8 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000bdfda : add esp, 0x38 ; ret
0x00000000000be85d : add esp, 0x40 ; mov eax, esi ; pop rbx ; ret
0x000000000010d018 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000374a9 : add esp, 0x40 ; pop rbx ; ret
0x00000000000fd4e8 : add esp, 0x40 ; ret
0x0000000000125f04 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f72c8 : add esp, 0x408 ; ret
0x00000000000498a9 : add esp, 0x440 ; pop rbx ; ret
0x00000000000ecdf2 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000073558 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000118fa4 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000f231c : add esp, 0x48 ; ret
0x000000000011fefe : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f1cd4 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000135dbf : add esp, 0x58 ; ret
0x00000000000f0cdf : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000c9712 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f6cb : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b09c : add esp, 0x68 ; ret
0x0000000000084807 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb5b2 : add esp, 0x70 ; pop rbx ; ret
0x00000000000848c6 : add esp, 0x70 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003724d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000000372d2 : add esp, 0x88 ; ret
0x00000000000fbc42 : add esp, 0x90 ; pop rbx ; ret
0x000000000001f58c : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000001334f0 : add esp, 0x98 ; ret
0x000000000003801d : add esp, 0xa8 ; ret
0x0000000000129407 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000005e19a : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00000000000b1505 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000036dd1 : add esp, 0xd0 ; ret
0x00000000000f70ce : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000000475a4 : add esp, 0xd8 ; ret
0x0000000000105f4c : add esp, 0xe8 ; pop rbx ; pop rbp ; ret
0x0000000000056512 : add esp, 1 ; jmp 0x564dd
0x0000000000124863 : add esp, 8 ; add eax, 2 ; ret
0x000000000008ab0d : add esp, 8 ; jmp rax
0x0000000000117ddb : add esp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000000c6326 : add esp, 8 ; lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c6226 : add esp, 8 ; lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000004f0c2 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000005e2f0 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e058 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007346c : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003407b : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007e0eb : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000084f94 : add esp, 8 ; mov rax, rdx ; ret
0x000000000003c356 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000012ce6c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000022ca5 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000000465b6 : add esp, 8 ; movzx eax, al ; ret
0x000000000011af8a : add esp, 8 ; movzx eax, ax ; ret
0x000000000007753d : add esp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000122879 : add esp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000121c19 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000074490 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000003cee2 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000237c1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000220a4 : add esp, 8 ; ret
0x0000000000132ce1 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000012e8b4 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000073481 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cb3ac : add esp, 8 ; xor eax, eax ; ret
0x00000000001349eb : add esp, dword ptr [rsi + 0x39] ; ret 0x840f
0x000000000018df99 : add esp, edi ; call rsp
0x0000000000110ce8 : add qword ptr [r8 - 0x7d], r9 ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x00000000000dbe4c : add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000001a315d : add qword ptr [r8], r8 ; ret 0xe7da
0x00000000001a2b65 : add qword ptr [r8], rax ; cwde ; mov edx, dr0 ; call qword ptr [rdx]
0x00000000001a2b15 : add qword ptr [r8], rax ; test al, 0x8c ; call qword ptr [rdi]
0x000000000002691e : add qword ptr [rax], r8 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000001a3015 : add qword ptr [rax], r8 ; js 0x1a300b ; jmp rdx
0x0000000000189d0d : add qword ptr [rax], r8 ; test ch, cl ; out dx, eax ; call rsp
0x000000000009361d : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001a29dd : add qword ptr [rax], rax ; mov edx, dr0 ; jmp qword ptr [rdi]
0x00000000000979c0 : add qword ptr [rbp - 0x3c], rsi ; nop dword ptr [rax] ; ret
0x0000000000026ff9 : add qword ptr [rdi], 1 ; jmp 0x26fc7
0x000000000015a2fd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009679c : add r10, rax ; jmp r10
0x000000000014d192 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000056511 : add r12, 1 ; jmp 0x564de
0x0000000000105a6f : add r13, 0x30 ; call 0x101d06
0x000000000002e320 : add r14, r10 ; jmp r14
0x000000000014d122 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d0b2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000013c6e0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000138b74 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002de70 : add r8, rdx ; jmp r8
0x0000000000047280 : add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x00000000000347e5 : add r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000096944 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000968a4 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000018c875 : add r8b, byte ptr [r8] ; pop rax ; clc ; call rsp
0x000000000018c83d : add r8b, byte ptr [r8] ; push rax ; clc ; call rsp
0x000000000018c6dd : add r8b, byte ptr [rax] ; clc ; jmp rsp
0x0000000000117ad1 : add r8b, byte ptr [rdx] ; cmp rcx, rax ; sbb eax, eax ; ret
0x000000000004f20f : add r8d, eax ; mov eax, r8d ; ret
0x000000000013625c : add r9, r11 ; call rax
0x00000000001427ea : add r9, r11 ; jmp r9
0x00000000000494d7 : add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x494f5
0x000000000013f882 : add rax, -0x7cb80000 ; ret 0xe910
0x00000000000f6279 : add rax, -0x9cf0000 ; mov rdi, r14 ; call rbx
0x000000000015a383 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000472b0 : add rax, 1 ; cmp edx, eax ; jg 0x47279 ; ret
0x00000000000a2eb0 : add rax, 1 ; ret
0x00000000000a2ea7 : add rax, 2 ; ret
0x00000000000a2ec0 : add rax, 3 ; ret
0x0000000000022768 : add rax, qword ptr [0] ; ret
0x0000000000035757 : add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000013659f : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000135e67 : add rax, qword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x0000000000022767 : add rax, qword ptr fs:[0] ; ret
0x000000000004dd97 : add rax, r12 ; jmp rax
0x000000000005f064 : add rax, r13 ; jmp rax
0x000000000006c75e : add rax, r8 ; jmp rax
0x00000000000970a7 : add rax, r8 ; ret
0x0000000000096864 : add rax, r9 ; jmp rax
0x0000000000034edd : add rax, rbx ; jmp rax
0x0000000000091af1 : add rax, rcx ; jmp rax
0x000000000008bb99 : add rax, rcx ; ret
0x00000000000970a4 : add rax, rdi ; add rax, r8 ; ret
0x000000000008bb96 : add rax, rdi ; add rax, rcx ; ret
0x000000000006d0bc : add rax, rdi ; jmp rax
0x000000000008a70a : add rax, rdi ; ret
0x000000000013cab9 : add rax, rdi ; sub rax, rsi ; ret
0x0000000000054b88 : add rax, rdx ; jmp rax
0x000000000003606c : add rax, rdx ; shr rax, 0x3f ; ret
0x0000000000088b5d : add rax, rdx ; sub rax, rdi ; ret
0x00000000001276aa : add rax, rsi ; jmp rax
0x000000000003a23d : add rbp, qword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x0000000000113250 : add rbx, 0x10 ; call 0x1f4f6
0x00000000000c472d : add rbx, 1 ; mov rdx, rax ; jmp 0xc46d6
0x00000000000e2b52 : add rbx, r10 ; jmp rbx
0x000000000002a9f8 : add rcx, qword ptr [r9 + 0x39] ; ret
0x000000000015fc81 : add rcx, r11 ; jmp rcx
0x0000000000054a59 : add rcx, rax ; jmp rcx
0x000000000006d297 : add rcx, rdx ; jmp rcx
0x00000000000a1b43 : add rcx, rsi ; jmp rcx
0x00000000001245dc : add rdi, 0x10 ; jmp rcx
0x000000000011f3cf : add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x00000000001214f9 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000127ed3 : add rdi, 0x58 ; jmp rcx
0x0000000000127623 : add rdi, 0x68 ; jmp rcx
0x0000000000123a46 : add rdi, 0xc8 ; jmp rcx
0x00000000000967ab : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000c5fe1 : add rdi, 1 ; test dl, dl ; jne 0xc5fce ; ret
0x00000000000c600b : add rdi, 1 ; test dl, dl ; jne 0xc5ffb ; ret
0x00000000000967d4 : add rdi, 2 ; mov rax, rdi ; ret
0x00000000000967e7 : add rdi, 3 ; mov rax, rdi ; ret
0x0000000000127098 : add rdi, rax ; jmp rdi
0x00000000001427e7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000117ec4 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000004bdff : add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000061617 : add rdx, r14 ; call qword ptr [r11 + rax*8]
0x0000000000039121 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000096fa7 : add rdx, rax ; jl 0x97018 ; add rax, rdi ; ret
0x0000000000096fa6 : add rdx, rax ; jl 0x97019 ; add rax, rdi ; ret
0x0000000000022b70 : add rdx, rax ; jmp rdx
0x00000000000decd6 : add rdx, rcx ; jmp rdx
0x0000000000034c74 : add rdx, rdi ; jmp rdx
0x00000000000a1b03 : add rdx, rsi ; jmp rdx
0x0000000000126644 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000217fb : add rsi, 8 ; jmp 0x217c2
0x000000000006c81e : add rsi, rax ; jmp rsi
0x000000000012e262 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000006d184 : add rsi, rcx ; jmp rsi
0x0000000000085ba3 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000122003 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000f9d4b : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x000000000006ffa6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000034720 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c60d : add rsp, 0x10 ; pop rbx ; ret
0x000000000007c640 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008b9de : add rsp, 0x100 ; ret
0x000000000005d5b2 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003719c : add rsp, 0x108 ; ret
0x00000000000ec75d : add rsp, 0x120 ; pop rbx ; ret
0x0000000000037432 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000036bda : add rsp, 0x148 ; ret
0x0000000000022128 : add rsp, 0x18 ; jmp rax
0x000000000005db16 : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000e4f0d : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000cb63f : add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000005db45 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000012e7c8 : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003d1b7 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000036fca : add rsp, 0x18 ; ret
0x00000000001201db : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f05a3 : add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000049b55 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x000000000002430f : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036952 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000bf705 : add rsp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x00000000000aedc0 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000002217a : add rsp, 0x28 ; jmp rax
0x00000000000fa5c9 : add rsp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fb2fd : add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000b1333 : add rsp, 0x28 ; mov rax, rdx ; ret
0x000000000012d0d4 : add rsp, 0x28 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000045f25 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000487f1 : add rsp, 0x28 ; ret
0x000000000010ad98 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c2c10 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ed0a : add rsp, 0x30 ; pop rbx ; ret
0x0000000000129bb7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000bdfd9 : add rsp, 0x38 ; ret
0x00000000000be85c : add rsp, 0x40 ; mov eax, esi ; pop rbx ; ret
0x000000000010d017 : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000374a8 : add rsp, 0x40 ; pop rbx ; ret
0x00000000000fd4e7 : add rsp, 0x40 ; ret
0x00000000000f72c7 : add rsp, 0x408 ; ret
0x00000000000498a8 : add rsp, 0x440 ; pop rbx ; ret
0x00000000000ecdf1 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000118fa3 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000f231b : add rsp, 0x48 ; ret
0x00000000000f1cd3 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000135dbe : add rsp, 0x58 ; ret
0x00000000000f0cde : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000c9711 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b09b : add rsp, 0x68 ; ret
0x0000000000084806 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb5b1 : add rsp, 0x70 ; pop rbx ; ret
0x000000000003724c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000000372d1 : add rsp, 0x88 ; ret
0x00000000000fbc41 : add rsp, 0x90 ; pop rbx ; ret
0x000000000001f58b : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000001334ef : add rsp, 0x98 ; ret
0x000000000003801c : add rsp, 0xa8 ; ret
0x0000000000129406 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000000b1504 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000036dd0 : add rsp, 0xd0 ; ret
0x00000000000f70cd : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000000475a3 : add rsp, 0xd8 ; ret
0x0000000000105f4b : add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x0000000000124862 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008ab0c : add rsp, 8 ; jmp rax
0x0000000000117dda : add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000004f0c1 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000005e2ef : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e057 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007346b : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003407a : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007e0ea : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000084f93 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003c355 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000012ce6b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000022ca4 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000000465b5 : add rsp, 8 ; movzx eax, al ; ret
0x000000000011af89 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000007753c : add rsp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000122878 : add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000121c18 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000007448f : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000237c0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000220a3 : add rsp, 8 ; ret
0x0000000000132ce0 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000012e8b3 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000073480 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cb3ab : add rsp, 8 ; xor eax, eax ; ret
0x000000000009169e : add sil, sil ; ret 0x7404
0x00000000000d450e : add sil, sil ; ret 0x7508
0x00000000000fcac3 : add word ptr [rax], 1 ; ret
0x000000000018a1c5 : add word ptr [rax], ax ; and al, 0x87 ; int1 ; jmp rsp
0x00000000001a488d : add word ptr [rax], ax ; shl rdi, 1 ; jmp qword ptr [rax]
0x00000000001a484d : add word ptr [rax], ax ; xor byte ptr [rcx], cl ; hlt ; jmp rdx
0x00000000000fc80a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000186b35 : and ah, bh ; call qword ptr [rax]
0x0000000000186650 : and ah, bl ; sti ; jmp rax
0x000000000009a381 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000002364a : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000007340 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000093efc : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000135ee5 : and al, 0x10 ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x48 ; ret
0x00000000000ebbde : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0xb5eb
0x00000000000aedd6 : and al, 0x10 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000008095e : and al, 0x10 ; call qword ptr [rax]
0x000000000002bfef : and al, 0x10 ; call r15
0x00000000000f544c : and al, 0x10 ; call rax
0x0000000000080a32 : and al, 0x10 ; call rdx
0x0000000000036737 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x000000000011f49a : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000012d0f4 : and al, 0x10 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000a42eb : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000888cb : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x000000000019f8cc : and al, 0x17 ; add dword ptr [rax], eax ; nop ; cld ; jmp qword ptr [rbx]
0x00000000000b100a : and al, 0x18 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000047b6f : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x0000000000022178 : and al, 0x18 ; add rsp, 0x28 ; jmp rax
0x0000000000021f41 : and al, 0x18 ; call rax
0x00000000000a42f0 : and al, 0x18 ; call rbx
0x0000000000123f87 : and al, 0x18 ; call rcx
0x000000000010726e : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000001072ee : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000967c5 : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00000000001231a1 : and al, 0x18 ; mov dword ptr [rsp + 8], r8d ; call 0x1f479
0x0000000000102186 : and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x00000000000af7cd : and al, 0x18 ; mov rdi, qword ptr [r13] ; call r12
0x000000000002bfea : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r15
0x0000000000102089 : and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000008278d : and al, 0x18 ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000029c8b : and al, 0x1c ; jmp 0x29c54
0x0000000000029c8a : and al, 0x1c ; jmp 0x29c55
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x0000000000123d90 : and al, 0x20 ; call rcx
0x0000000000080a2d : and al, 0x20 ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x0000000000188398 : and al, 0x21 ; jmp 0x18839e
0x000000000002ae5b : and al, 0x24 ; jmp 0x2ae24
0x000000000002ae5a : and al, 0x24 ; jmp 0x2ae25
0x0000000000174aa4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000105eff : and al, 0x28 ; call 0x72124
0x0000000000105efe : and al, 0x28 ; call 0x72125
0x0000000000080844 : and al, 0x28 ; call rax
0x00000000000a3f6d : and al, 0x28 ; call rbx
0x00000000000a3ffb : and al, 0x28 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000027042 : and al, 0x28 ; mov qword ptr [rax], rbx ; jmp 0x27011
0x0000000000027041 : and al, 0x28 ; mov qword ptr [rax], rbx ; jmp 0x27012
0x00000000000833b7 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000008080b : and al, 0x28 ; mov rdi, r14 ; call qword ptr [rax]
0x00000000000a3bac : and al, 0x28 ; mov rsi, r13 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000fa158 : and al, 0x29 ; or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x000000000011a9f8 : and al, 0x2c ; add dword ptr [rcx + rcx*4 - 0x5c], ecx ; ret
0x0000000000049020 : and al, 0x30 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8348
0x000000000008083f : and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x0000000000105efa : and al, 0x30 ; mov qword ptr [rsp + 0x28], rax ; call 0x72129
0x000000000012e759 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000007f876 : and al, 0x30 ; xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000135dbb : and al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000018af00 : and al, 0x35 ; cmc ; dec esp ; ret 1
0x000000000004902a : and al, 0x38 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000000000f2317 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000a449f : and al, 0x38 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x000000000018ad00 : and al, 0x3d ; hlt ; jmp rsp
0x0000000000025bdd : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002652c : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025ae4 : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000001203ea : and al, 0x41 ; call qword ptr [rbx]
0x000000000011dac6 : and al, 0x41 ; call rsp
0x00000000000d9a54 : and al, 0x44 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000018d7d0 : and al, 0x45 ; cli ; jmp rsp
0x000000000011fee4 : and al, 0x48 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x0000000000133a26 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000005db15 : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000cb63e : and al, 0x48 ; add esp, 0x18 ; mov rax, rdx ; ret
0x0000000000124f16 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f09f9 : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000002430e : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd485 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000fd4e6 : and al, 0x48 ; add esp, 0x40 ; ret
0x0000000000077f3d : and al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000135dd1 : and al, 0x48 ; jne 0x135dbe ; add rsp, 0x58 ; ret
0x0000000000135dd0 : and al, 0x48 ; jne 0x135dbf ; add rsp, 0x58 ; ret
0x00000000000a3a68 : and al, 0x48 ; lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000029f32 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002851b : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000135c5d : and al, 0x48 ; mov eax, dword ptr [rax + 0xe8] ; jmp rax
0x00000000000a35c4 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bdc0f : and al, 0x48 ; mov edx, dword ptr [rsp + 0x28] ; call rax
0x00000000000ebe30 : and al, 0x48 ; mov edx, eax ; call 0x108106
0x0000000000093d3c : and al, 0x48 ; test esi, esi ; jne 0x93d53 ; jmp 0x93d0d
0x00000000001884f8 : and al, 0x4c ; jmp 0x1884fe
0x0000000000027f29 : and al, 0x50 ; call rax
0x0000000000028ba0 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r12
0x00000000000295b6 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002a55e : and al, 0x50 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000027814 : and al, 0x58 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000028742 : and al, 0x58 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000018d068 : and al, 0x69 ; stc ; call rsp
0x000000000018d078 : and al, 0x6a ; stc ; jmp rsp
0x000000000018da00 : and al, 0x6e ; cli ; jmp rsp
0x000000000002793f : and al, 0x70 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000043bbd : and al, 0x73 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000ffb61 : and al, 0x74 ; adc al, 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000136c1b : and al, 0x74 ; ficomp dword ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000003544b : and al, 0x74 ; ret 0x8d48
0x00000000001a0534 : and al, 0x76 ; int1 ; jmp qword ptr [rdx]
0x0000000000028141 : and al, 0x78 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000c9014 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d6b23 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000dc441 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001306ad : and al, 0x85 ; ror byte ptr [rdi], 0x89 ; ret
0x00000000001a68cc : and al, 0x87 ; add dword ptr [rax], eax ; jo 0x1a68b5 ; hlt ; call qword ptr [rax]
0x000000000018a1c8 : and al, 0x87 ; int1 ; jmp rsp
0x00000000000b367e : and al, 0x89 ; ret
0x00000000001145a9 : and al, 0x89 ; ret 0xc148
0x0000000000044edf : and al, 0x90 ; add byte ptr [rax], al ; add bl, ch ; ret 0x2e66
0x000000000004554d : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000485ea : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000ebace : and al, 0x98 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000f2412 : and al, 0x98 ; ret
0x00000000000e1e85 : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000165bf8 : and al, 0xaf ; and eax, 0xf31e7500 ; ret
0x00000000000eadb3 : and al, 0xb0 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000027487 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000003ffc8 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018dbc0 : and al, 0xbb ; cli ; jmp rsp
0x000000000003cad9 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000c0b66 : and al, 0xc ; add rsp, 0x28 ; ret
0x0000000000135f18 : and al, 0xc ; add rsp, 0x48 ; ret
0x000000000019a4cc : and al, 0xc3 ; add byte ptr [rax], al ; jo 0x19a504 ; out dx, al ; call qword ptr [rdx]
0x00000000001aa5cc : and al, 0xc4 ; add dword ptr [rax], eax ; loopne 0x1aa5ad ; cmc ; jmp qword ptr [rsi]
0x00000000001aa8cc : and al, 0xc7 ; add dword ptr [rax], eax ; rcl dh, 0xf5 ; jmp qword ptr [rsi]
0x00000000000021c5 : and al, 0xc7 ; jno 0x2216 ; ret 0x1dd4
0x00000000000b2bc2 : and al, 0xd ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000047a8f : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x000000000018e140 : and al, 0xdb ; std ; jmp rsp
0x000000000003679d : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003683b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x000000000003681b : and al, 0xe8 ; ret
0x0000000000044458 : and al, 0xe8 ; ret 0xfff1
0x0000000000192a3d : and al, 0xeb ; jmp qword ptr [rdx]
0x000000000002ae5c : and al, 0xeb ; ret 0x8948
0x0000000000039e88 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000073ce9 : and al, 0xf0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000369bb : and al, 0xf0 ; and eax, 0x8000 ; ret
0x0000000000036837 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000036817 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000368f1 : and al, 0xf0 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000b0786 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000b078c : and al, 0xf0 ; ret
0x00000000000917a6 : and al, 0xf8 ; jne 0x91682 ; ret
0x0000000000039e41 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000039e47 : and al, 0xf8 ; ret
0x000000000018d611 : and al, 0xfa ; jmp rsp
0x0000000000186b01 : and al, 0xfc ; call qword ptr [rax - 0x1f0003db]
0x0000000000039dfb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000039e01 : and al, 0xfc ; ret
0x000000000018d510 : and al, 0xfc ; stc ; jmp rsp
0x00000000000369e7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x00000000000369eb : and al, 0xfe ; ret
0x00000000000f78cd : and al, 0xff ; jmp 0xf7897
0x00000000000f78cc : and al, 0xff ; jmp 0xf7898
0x000000000019e4cc : and al, 3 ; add dword ptr [rax], eax ; or byte ptr [rdx - 0x10], 0xff ; ret
0x00000000000e42d6 : and al, 4 ; jmp 0xe429f
0x000000000009d7b8 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000a60f8 : and al, 8 ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf983
0x000000000011f95c : and al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000022126 : and al, 8 ; add rsp, 0x18 ; jmp rax
0x0000000000036fc8 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000f1288 : and al, 8 ; add rsp, 0x28 ; ret
0x000000000007decb : and al, 8 ; and rdi, rdx ; neg rdi ; call qword ptr [rax]
0x00000000001231a6 : and al, 8 ; call 0x1f474
0x00000000001231a5 : and al, 8 ; call 0x1f475
0x000000000007def5 : and al, 8 ; call qword ptr [rax]
0x00000000000867c2 : and al, 8 ; call qword ptr [rdx]
0x0000000000028ba4 : and al, 8 ; call r12
0x0000000000025be1 : and al, 8 ; call r14
0x0000000000026530 : and al, 8 ; call r15
0x000000000010208e : and al, 8 ; call rax
0x0000000000025ae8 : and al, 8 ; call rbx
0x00000000001209a0 : and al, 8 ; call rcx
0x000000000003686a : and al, 8 ; fscale ; fstp st(1) ; ret
0x00000000000f159a : and al, 8 ; jmp 0xf152e
0x00000000000f1599 : and al, 8 ; jmp 0xf152f
0x000000000012d9d7 : and al, 8 ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000f5447 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000006e488 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000129b92 : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000027f24 : and al, 8 ; mov rsi, qword ptr [rsp + 0x50] ; call rax
0x000000000003a240 : and al, 8 ; mov rsi, rbp ; call r12
0x000000000003673b : and al, 8 ; ret
0x000000000012e75e : and al, 8 ; xor eax, eax ; call rdx
0x00000000000c75ee : and al, 8 ; xor r12d, r12d ; jmp 0xc75be
0x00000000000c75ed : and al, 8 ; xor r12d, r12d ; jmp 0xc75bf
0x0000000000036998 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000036390 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000000452c : and al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0xb
0x00000000000d498d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x00000000001b8914 : and al, byte ptr [rdi] ; add byte ptr [rax], al ; jp 0x1b8924 ; add byte ptr [rax], al ; ret 6
0x0000000000086cfa : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000000da327 : and al, ch ; ret
0x000000000002fe52 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002fe72 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002fdb2 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002fe32 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002fd52 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002fdf2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002fd92 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002fdd2 : and ax, 0x8000 ; movzx eax, ax ; ret
0x00000000000213a6 : and bh, bh ; ret 0x8948
0x00000000001aaa0d : and bh, bl ; jmp qword ptr [rdx]
0x0000000000002f60 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000031dcc : and bh, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001980ce : and bh, byte ptr [rsi + 0xd1cffed] ; int1 ; stosd dword ptr [rdi], eax ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b0f24 : and bh, byte ptr [rsi + rsi*8] ; jmp qword ptr [rdx]
0x0000000000187348 : and bh, byte ptr [rsp + rdi*8 - 1] ; xchg eax, edx ; jnp 0x187352 ; jmp qword ptr [rdx]
0x000000000009dd97 : and bl, al ; nop dword ptr [rax] ; ret
0x000000000018625d : and bl, bh ; jmp rax
0x0000000000186259 : and bl, bh ; push rax ; and bl, bh ; jmp rax
0x00000000001866f0 : and bl, bl ; sti ; jmp rax
0x000000000007a622 : and bl, ch ; ret 0x1f0f
0x00000000001a63c0 : and bl, cl ; hlt ; jmp qword ptr [rdx]
0x0000000000085581 : and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x000000000007f107 : and byte ptr [r8 + 0x39], r9b ; ret
0x00000000000725da : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000a1016 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000007b0a4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x00000000001034ed : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x00000000000850fb : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000007f108 : and byte ptr [rax + 0x39], cl ; ret
0x000000000003c593 : and byte ptr [rax + 0x39], cl ; ret 0x1677
0x000000000003c5a9 : and byte ptr [rax + 0x39], cl ; ret 0xea76
0x000000000007dbc3 : and byte ptr [rax + 1], cl ; ret
0x0000000000096fd6 : and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000007f104 : and byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x000000000007ff03 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x00000000000725db : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x0000000000080a2e : and byte ptr [rax - 0x77], cl ; and al, 0x10 ; call rdx
0x000000000006e60d : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000086acb : and byte ptr [rax - 0x77], cl ; jae 0x86ae1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003ab3c : and byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret 0xfffa
0x00000000000f0494 : and byte ptr [rax - 0x77], cl ; pop rbx ; ret
0x000000000004438f : and byte ptr [rax - 0x77], cl ; ret
0x0000000000133860 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000048301 : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000007ff36 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000002e824 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2e838 ; call rax
0x0000000000024866 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000078d22 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000186dbc : and byte ptr [rax - 4], bl ; jmp qword ptr [rax + 0x10fffc57]
0x00000000000a1b6c : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c2571 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f7a9e : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009eecc : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x0000000000186abc : and byte ptr [rax], dh ; cld ; call qword ptr [rax]
0x00000000000a1017 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000005d856 : and byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x127f
0x00000000000d0e05 : and byte ptr [rbp - 0x3a7cfe8e], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001879b0 : and byte ptr [rbp - 0x5b5f0004], ah ; cld ; jmp qword ptr [rax]
0x0000000000114810 : and byte ptr [rbx + 0x2b2fff8], al ; cmove eax, edx ; ret
0x0000000000034858 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000024312 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019786d : and byte ptr [rbx + 0xa410204], al ; ret
0x000000000019e215 : and byte ptr [rbx + 0xac90204], al ; ret
0x000000000019e231 : and byte ptr [rbx - 0x73fc79fc], al ; add ah, byte ptr [rdi + 0xa] ; ret
0x000000000010893e : and byte ptr [rbx - 0xd], bl ; ret
0x0000000000186da4 : and byte ptr [rbx - 4], bl ; jmp qword ptr [rax + 0x20fffc5a]
0x000000000007b0a5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x0000000000039e85 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000003c8c8 : and byte ptr [rcx - 0x2ff6b740], cl ; ret
0x0000000000187794 : and byte ptr [rcx - 0x575f0004], ch ; cld ; call qword ptr [rax]
0x00000000000e3bbb : and byte ptr [rcx - 0x77], al ; ret 0x3145
0x0000000000186db4 : and byte ptr [rcx - 4], bl ; jmp qword ptr [rax + 0x20fffc58]
0x00000000000ec760 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001898d5 : and byte ptr [rcx], al ; add byte ptr [rax], bl ; push rcx ; out dx, eax ; call rsp
0x0000000000031fde : and byte ptr [rcx], bh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006e595 : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000bc888 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc4 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000011f4b3 : and byte ptr [rdi + 1], bh ; call 0x12b758
0x0000000000179f94 : and byte ptr [rdi - 0x582c000b], ah ; cmc ; call rbx
0x00000000001879a0 : and byte ptr [rdi - 0x595f0004], ah ; cld ; jmp qword ptr [rax]
0x00000000001a8530 : and byte ptr [rdi - 0xb], al ; jmp rax
0x00000000001a50c0 : and byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x0000000000186a58 : and byte ptr [rdi], ch ; cld ; inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x0000000000186868 : and byte ptr [rdi], cl ; cld ; jmp qword ptr [rax]
0x000000000002fe35 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000bc472 : and byte ptr [rdi], cl ; test bl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000f2a4e : and byte ptr [rdi], cl ; test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000f2aa6 : and byte ptr [rdi], cl ; test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000f29ed : and byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], bh ; ret 0x3c01
0x00000000000f298d : and byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0x3c01
0x000000000009da89 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000162180 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000007d535 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x0000000000194d24 : and byte ptr [rdx - 0x13], dh ; jmp qword ptr [rdx]
0x0000000000187458 : and byte ptr [rdx - 0x7e6f0004], al ; cld ; call qword ptr [rax]
0x0000000000186dac : and byte ptr [rdx - 4], bl ; jmp qword ptr [rax + 0x20fffc59]
0x00000000001b0285 : and byte ptr [rdx], al ; add byte ptr [rax + 0x51], bl ; sti ; call rsi
0x0000000000186864 : and byte ptr [rip + 0xf20fffc], cl ; cld ; jmp qword ptr [rax]
0x000000000015fd1a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001937f5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000002bea : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001879a8 : and byte ptr [rsi - 0x5a5f0004], ah ; cld ; jmp qword ptr [rax]
0x0000000000186f88 : and byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x20fffc55]
0x00000000001867d4 : and byte ptr [rsi], al ; cld ; inc dword ptr [rax] ; or ah, bh ; jmp rax
0x0000000000186250 : and byte ptr [rsi], bl ; sti ; call qword ptr [rax]
0x00000000001869b4 : and byte ptr [rsi], ch ; cld ; inc dword ptr [rax] ; xor ah, bh ; jmp rax
0x00000000001868e8 : and byte ptr [rsi], cl ; cld ; jmp qword ptr [rax]
0x00000000001a73c0 : and byte ptr [rsi], cl ; cmc ; jmp qword ptr [rcx]
0x000000000005bdf2 : and byte ptr [rsi], dh ; add byte ptr [rsp + rax*2 - 0x75], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000000f3211 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x000000000018758c : and byte ptr [rsp + rdi*8 - 0x3544901], ch ; jmp qword ptr [rsi]
0x00000000001879b8 : and byte ptr [rsp + rdi*8 - 0x35c5f01], ah ; jmp qword ptr [rax]
0x00000000001869f0 : and byte ptr [rsp + rdi*8], ch ; jmp rax
0x00000000001868e4 : and byte ptr [rsp + rdi*8], cl ; jmp qword ptr [rax]
0x00000000000a2ea2 : and ch, 0xf ; je 0xa2ec9 ; add rax, 2 ; ret
0x000000000019288d : and ch, bl ; jmp qword ptr [rdx]
0x00000000000d473d : and ch, cl ; cmp esp, 0xff ; push rdi ; ret 0
0x00000000001a7531 : and ch, dh ; jmp qword ptr [rsi]
0x00000000000a2e8d : and cl, 0xf ; je 0xa2eb5 ; ret
0x0000000000003912 : and cl, ah ; ret
0x00000000001866bc : and cl, ah ; sti ; inc dword ptr [rax] ; jrcxz 0x1866c5 ; call rax
0x00000000000548ff : and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000000e5cfb : and cl, byte ptr [rax - 0x75] ; je 0xe5d2c ; xor byte ptr [rax - 0x77], cl ; ret 0x8b44
0x0000000000048c14 : and cl, byte ptr [rax - 0x7d] ; ret
0x000000000011f1cc : and cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000046d2d : and cl, byte ptr [rcx + 0x1ee0c1d0] ; or eax, esi ; ret
0x0000000000092190 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008bf6d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000002e9e9 : and cl, byte ptr [rdi] ; xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000000bc57b : and cl, ch ; ret 0xfffe
0x00000000000bc57a : and cl, r13b ; ret 0xfffe
0x000000000018b9f9 : and dh, bh ; call rsp
0x00000000001a8a74 : and dh, bl ; hlt ; jmp qword ptr [rdx]
0x00000000001add41 : and dh, dh ; call rdi
0x00000000001afc6d : and dh, dh ; jmp qword ptr [rdx]
0x000000000008c57b : and dh, dh ; ret 0x7504
0x000000000018feb9 : and dl, ch ; call qword ptr [rax]
0x000000000018fee9 : and dl, ch ; call qword ptr [rsi]
0x00000000001a0850 : and dl, cl ; int1 ; call qword ptr [rbx]
0x000000000003078d : and dword ptr [rax + rax], edx ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x0000000000022d82 : and dword ptr [rax - 0x77], ecx ; fimul word ptr [rax - 0x77] ; ret 0x8348
0x0000000000023046 : and dword ptr [rax - 0x77], ecx ; ret 0x8948
0x00000000001026e6 : and dword ptr [rax - 0x77], ecx ; ret 0xf66
0x00000000000f2811 : and dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000001306de : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000a130 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x00000000000098a8 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x47
0x000000000004ef2c : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001765c2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000000bd798 : and dword ptr [rax], esi ; add byte ptr [rax - 0x77], cl ; ret 0xeee9
0x000000000019ac7e : and dword ptr [rbx - 0x12], 0xffffffff ; sbb al, 0xd ; loope 0x19acb7 ; out dx, al ; jmp qword ptr [rdx]
0x000000000007505f : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000018969d : and dword ptr [rcx], eax ; add ah, ah ; xor ebp, edi ; call rsp
0x00000000000375f6 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x00000000000735e0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000794e4 : and dword ptr [rdi], eax ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x00000000000377d8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000f610b : and dword ptr [rip - 0x9cf0000], eax ; mov rdi, r12 ; call rbx
0x0000000000173679 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009d8bb : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00000000001765c1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001653a6 : and eax, 0 ; add bl, dh ; ret
0x000000000002276b : and eax, 0 ; ret
0x00000000000f05c3 : and eax, 0x100f ; ret
0x0000000000072f02 : and eax, 0x200 ; ret
0x00000000000fa374 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000c1cf5 : and eax, 0x2d0 ; ret
0x000000000008ab07 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x0000000000021f62 : and eax, 0x30 ; call rax
0x0000000000031e1c : and eax, 0x30 ; call rdx
0x0000000000036b52 : and eax, 0x30 ; jmp rax
0x00000000000475e7 : and eax, 0x394d3674 ; ret 0x830f
0x00000000000a1abd : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000a1ae0 : and eax, 0x3fc00 ; ret
0x00000000000a1a9c : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000165117 : and eax, 0x48c57500 ; add esp, 8 ; ret
0x0000000000165177 : and eax, 0x48fff16f ; cmp ebx, ebp ; jae 0x165194 ; call qword ptr [rbx]
0x0000000000093d9e : and eax, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00000000000ff703 : and eax, 0x5c6002c ; ret
0x000000000002ff42 : and eax, 0x7f ; ret
0x00000000000a1b20 : and eax, 0x7ff80000 ; ret
0x00000000000363a4 : and eax, 0x80 ; ret
0x00000000000369bd : and eax, 0x8000 ; ret
0x0000000000036467 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000072ed2 : and eax, 0x804 ; ret
0x00000000000e6467 : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000077f07 : and eax, 0x89ffffd1 ; ret 0x3f7
0x0000000000108127 : and eax, 0xc ; cmp eax, 4 ; je 0x108138 ; ret
0x0000000000108276 : and eax, 0xc ; pop r12 ; ret
0x0000000000192a37 : and eax, 0xd1cffeb ; sahf ; and al, 0xeb ; jmp qword ptr [rdx]
0x0000000000192a7f : and eax, 0xd1cffeb ; xchg eax, ecx ; and al, 0xeb ; jmp qword ptr [rdx]
0x0000000000088697 : and eax, 0xf000efa ; xchg eax, esi ; ret 0x144
0x0000000000165bfa : and eax, 0xf31e7500 ; ret
0x00000000001653b5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000fa4e1 : and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000010c568 : and eax, 0xffffff ; ret
0x00000000001176c3 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000d1d28 : and eax, 1 ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000fdcba : and eax, 1 ; nop dword ptr [rax] ; ret
0x000000000002fef2 : and eax, 1 ; ret
0x000000000002fd72 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000d1c41 : and eax, 2 ; pop rbp ; ret
0x000000000003851c : and eax, 2 ; sub eax, 1 ; ret
0x000000000002fe12 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002fd32 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000036674 : and eax, 8 ; ret
0x000000000007084f : and eax, dword ptr [rcx + rcx*4 - 0x40] ; pop rbx ; ret
0x000000000015a429 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000037a73 : and eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036012 : and eax, ecx ; ret
0x00000000000360e2 : and eax, edx ; movq xmm0, rax ; ret
0x00000000000366c1 : and eax, edx ; ret
0x000000000003010d : and eax, esi ; ret
0x0000000000057dc8 : and ebp, 0x8348ffff ; ret 0xeb08
0x00000000001a9844 : and ebp, ebp ; hlt ; jmp qword ptr [rdx]
0x000000000019291d : and ebp, ebx ; jmp qword ptr [rdx]
0x00000000000d47b3 : and ebp, ecx ; or eax, 0xf7fffffc ; ret 0
0x0000000000075060 : and ebp, edi ; pop rbx ; ret
0x00000000001a75d9 : and ebp, esi ; jmp qword ptr [rdx]
0x0000000000172981 : and ebp, esp ; call qword ptr [rax]
0x00000000001080c2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x1080d5 ; ret
0x0000000000188399 : and ebx, ebp ; call rsp
0x0000000000186261 : and ebx, edi ; call rax
0x00000000000f2f7a : and ebx, esi ; ret
0x0000000000161295 : and ecx, 0xff ; sub eax, ecx ; ret
0x00000000001609c8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000000711a0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000d9209 : and ecx, dword ptr [rax + 0x63] ; ret 0x8d48
0x000000000007cbdc : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x000000000002ff52 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000c26dc : and edi, dword ptr [rax + 1] ; ret
0x00000000001accac : and edi, dword ptr [rdx - 0xb] ; jmp qword ptr [rdx]
0x000000000007dece : and edi, edx ; neg rdi ; call qword ptr [rax]
0x000000000003d007 : and edx, 0x3ff ; xor eax, edx ; ret
0x0000000000037638 : and edx, 1 ; jne 0x37650 ; xor eax, eax ; nop ; ret
0x0000000000002bd5 : and edx, esp ; bswap ebx ; clc ; ret
0x00000000000712a3 : and esi, 1 ; mov eax, esi ; ret
0x00000000000d2742 : and esi, 4 ; jne 0xd26f6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000178129 : and esi, ecx ; jmp rax
0x00000000001b2281 : and esi, edi ; call qword ptr [rdx]
0x00000000001afcb5 : and esi, esi ; jmp qword ptr [rdx]
0x00000000001326d6 : and esp, edi ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x0000000000022d81 : and qword ptr [rax - 0x77], rcx ; fimul word ptr [rax - 0x77] ; ret 0x8348
0x0000000000023045 : and qword ptr [rax - 0x77], rcx ; ret 0x8948
0x00000000000375f5 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000377d7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000037a72 : and rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000360e1 : and rax, rdx ; movq xmm0, rax ; ret
0x000000000007decd : and rdi, rdx ; neg rdi ; call qword ptr [rax]
0x000000000003642b : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000036428 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000937fa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008bdd0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008bde0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008bdf0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008bdc0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008bd0f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000939f3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008ca75 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x00000000000889ed : bsf eax, edx ; ret
0x0000000000088b5a : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000093b10 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000088a3a : bsf rax, rdx ; ret
0x00000000000970a1 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008a707 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000096f70 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000096f80 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000096f90 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008a98b : bsr eax, esi ; add rax, rdi ; ret
0x000000000008a899 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008a795 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008a706 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008a98a : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008a898 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008a794 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000127ffd : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000010c542 : bswap eax ; ret
0x0000000000002bd7 : bswap ebx ; clc ; ret
0x0000000000105964 : call 0x101c52
0x0000000000105a3d : call 0x101d02
0x00000000000ebe1d : call 0x1080a2
0x00000000000ebe34 : call 0x108102
0x000000000001ff08 : call 0x10b128
0x000000000005f8b6 : call 0x1105f8ac
0x000000000005f951 : call 0x1105f947
0x0000000000060124 : call 0x1106011a
0x00000000000606d9 : call 0x110606cf
0x0000000000061d91 : call 0x11061d87
0x0000000000192368 : call 0x11190e29
0x0000000000192398 : call 0x11190e59
0x00000000001923c8 : call 0x11190e89
0x000000000010da9a : call 0x11d818
0x0000000000196b88 : call 0x1219593f
0x000000000012e991 : call 0x12ac32
0x000000000012e9a8 : call 0x12ac62
0x000000000011f4b9 : call 0x12b752
0x00000000001948c8 : call 0x1319365e
0x00000000000b1320 : call 0x136527
0x0000000000111ed8 : call 0x137027
0x00000000000375d0 : call 0x140cbde3
0x00000000001a45c8 : call 0x171a39ce
0x00000000001a5cd8 : call 0x171a5194
0x000000000002a9e1 : call 0x1c52d31
0x000000000002a9e1 : call 0x1c52d35
0x000000000002bb31 : call 0x1c53e81
0x000000000002bb31 : call 0x1c53e85
0x00000000001231a8 : call 0x1f472
0x000000000012328a : call 0x1f4e2
0x00000000000b32a8 : call 0x1f4f2
0x00000000000e89f4 : call 0x1f4f6
0x000000000011179a : call 0x1f4f8
0x0000000000193ea8 : call 0x22192b4c
0x00000000001a28b8 : call 0x221a1b49
0x00000000001a5b48 : call 0x221a5000
0x00000000001a5c38 : call 0x221a50f3
0x00000000001a8238 : call 0x221a777a
0x00000000001ac224 : call 0x231ab795
0x00000000000919b4 : call 0x247da50d
0x0000000000025516 : call 0x24926
0x0000000000178ecc : call 0x271782ab
0x0000000000178ecc : call 0x271782af
0x0000000000178edc : call 0x271782b9
0x0000000000178edc : call 0x271782bd
0x00000000001aa6d8 : call 0x271a9cb5
0x00000000000b39b7 : call 0x2fc62
0x0000000000072765 : call 0x2fc68
0x0000000000028893 : call 0x2fc69
0x000000000012dd05 : call 0x30648
0x0000000000116cac : call 0x30649
0x0000000000039189 : call 0x38407
0x00000000000ac760 : call 0x38a12
0x000000000011ff68 : call 0x3c1e2
0x00000000000d85dd : call 0x42d00f26
0x00000000000d85f1 : call 0x42d00f3a
0x00000000000b0ab0 : call 0x48cd33d7
0x00000000000b0ff8 : call 0x48cd391f
0x0000000000056cec : call 0x49056cf4
0x000000000004d632 : call 0x498e2
0x0000000000072494 : call 0x49c47
0x00000000000a9b5b : call 0x4ccd2f72
0x000000000012128a : call 0x4cd49bde
0x000000000014c71a : call 0x4f93d718
0x000000000014c719 : call 0x4f93d719
0x000000000014f1ea : call 0x4f9401e8
0x000000000014f1e9 : call 0x4f9401e9
0x0000000000151d0a : call 0x4f942d08
0x0000000000151d09 : call 0x4f942d09
0x000000000006b87a : call 0x608c41d0
0x0000000000074c88 : call 0x70f12
0x0000000000105f01 : call 0x72122
0x00000000000781e8 : call 0x74462
0x000000000010bba5 : call 0x77e82
0x000000000012c2a1 : call 0x77fb8be0
0x000000000011ab11 : call 0x86d42
0x00000000000dbb20 : call 0x8c4b4
0x0000000000021b43 : call 0xa1a26
0x00000000000bb899 : call 0xa1cc6
0x00000000000c1acb : call 0xc11e9
0x00000000000e4a71 : call 0xc1d17
0x00000000000e4a9e : call 0xc1d37
0x00000000000e26e2 : call 0xde9c2
0x00000000000eee1a : call 0xeb082
0x00000000000efb9f : call 0xebe02
0x00000000000efb9e : call 0xebe03
0x000000000006fb89 : call 0xebe0b
0x000000000006fbac : call 0xebe92
0x00000000000e4940 : call 0xf0c02
0x00000000000cb62c : call 0xf0c07
0x00000000000fa9ed : call 0xf0fa9f6
0x00000000000faa0d : call 0xf0faa16
0x00000000000fdcb9 : call 0xf11bd49
0x00000000000fdf38 : call 0xf11bfc9
0x00000000000fdfb0 : call 0xf11c041
0x00000000000fe040 : call 0xf11c0d1
0x00000000000fe0d0 : call 0xf11c161
0x00000000000fe150 : call 0xf11c1e1
0x00000000000fe1e0 : call 0xf11c271
0x00000000000fe260 : call 0xf11c2f1
0x00000000000fe2f0 : call 0xf11c381
0x00000000000fe380 : call 0xf11c411
0x00000000000fe410 : call 0xf11c4a1
0x00000000000fe4a0 : call 0xf11c531
0x00000000000fe5c0 : call 0xf11c651
0x00000000000fe778 : call 0xf11c809
0x00000000000f9c61 : call 0xf9d68
0x000000000007cc7f : call 0xfca05cf
0x000000000012a13a : call 0xffffffff80d59852
0x000000000012a304 : call 0xffffffff80d59a1c
0x000000000012a3b1 : call 0xffffffff80d59ac9
0x000000000005d4e5 : call 0xffffffff834ddd67
0x00000000000404d7 : call 0xffffffff8950d60e
0x00000000000b0963 : call 0xffffffff89cd328a
0x0000000000031cc3 : call 0xffffffff8b4fdf53
0x00000000001740e3 : call 0xffffffffaed9df59
0x00000000000b25d7 : call 0xffffffffc2342610
0x00000000000b0268 : call 0xffffffffc2344bb0
0x000000000007f3ff : call 0xffffffffc28d3c09
0x0000000000081c3e : call 0xffffffffc28d6448
0x0000000000082fd2 : call 0xffffffffc28d77dc
0x00000000000811d9 : call 0xffffffffc29159f2
0x00000000000b6fda : call 0xffffffffc2ba7ef6
0x0000000000040790 : call 0xffffffffc305509a
0x000000000008aa84 : call 0xffffffffc308ddee
0x000000000009d6f4 : call 0xffffffffc309d704
0x00000000000a1666 : call 0xffffffffc316a3bc
0x00000000000a167f : call 0xffffffffc316a3d5
0x00000000001040a2 : call 0xffffffffc3554ff0
0x000000000006da27 : call 0xffffffffc3631b8d
0x000000000006e253 : call 0xffffffffc36323b9
0x000000000006f494 : call 0xffffffffc36335fa
0x000000000006fe77 : call 0xffffffffc3633fdd
0x00000000000733dc : call 0xffffffffc3637542
0x0000000000077983 : call 0xffffffffc363bae9
0x00000000000a402b : call 0xffffffffc3668191
0x0000000000114bf2 : call 0xffffffffc36d8d58
0x000000000011d522 : call 0xffffffffc36f162c
0x0000000000125cc4 : call 0xffffffffc39ba4d5
0x000000000015d1e5 : call 0xffffffffc39be0fe
0x000000000015e265 : call 0xffffffffc39bf17e
0x000000000003a349 : call 0xffffffffc3b2b29a
0x000000000008cbb7 : call 0xffffffffc3d95508
0x0000000000086d07 : call 0xffffffffc400f658
0x0000000000088507 : call 0xffffffffc4010e58
0x000000000007c08d : call 0xffffffffd107c094
0x00000000001974c0 : call 0xffffffffd3195d51
0x00000000001797cc : call 0xffffffffd7178c6f
0x0000000000036758 : call 0xffffffffe28529e8
0x00000000001ad298 : call 0xffffffffe41ac8b3
0x00000000001a1b78 : call 0xffffffffe71a0d67
0x000000000005f1d8 : call 0xffffffffef0677aa
0x000000000004a416 : call 0xfffffffffb2d31ad
0x0000000000135c61 : call 0xffffffffff135c6a
0x0000000000135c92 : call 0xffffffffff135c9b
0x0000000000129599 : call qword ptr [r10]
0x000000000004be02 : call qword ptr [r11 + rax*8]
0x00000000001203eb : call qword ptr [r11]
0x000000000001ffe4 : call qword ptr [r14]
0x0000000000177f07 : call qword ptr [rax + 0x10ffef56]
0x0000000000187513 : call qword ptr [rax + 0x10fffc5f]
0x00000000001874d7 : call qword ptr [rax + 0x10fffc60]
0x000000000018751b : call qword ptr [rax + 0x10fffc62]
0x00000000001874df : call qword ptr [rax + 0x10fffc63]
0x0000000000187523 : call qword ptr [rax + 0x10fffc65]
0x00000000001874e7 : call qword ptr [rax + 0x10fffc66]
0x000000000018752b : call qword ptr [rax + 0x10fffc68]
0x00000000001874ef : call qword ptr [rax + 0x10fffc69]
0x0000000000187533 : call qword ptr [rax + 0x10fffc6b]
0x00000000001874f7 : call qword ptr [rax + 0x10fffc6c]
0x000000000018753b : call qword ptr [rax + 0x10fffc6e]
0x00000000001874ff : call qword ptr [rax + 0x10fffc6f]
0x0000000000187543 : call qword ptr [rax + 0x10fffc71]
0x0000000000187507 : call qword ptr [rax + 0x10fffc72]
0x000000000018747b : call qword ptr [rax + 0x10fffc7d]
0x0000000000187473 : call qword ptr [rax + 0x10fffc7e]
0x000000000018746b : call qword ptr [rax + 0x10fffc7f]
0x0000000000187463 : call qword ptr [rax + 0x10fffc80]
0x000000000018745b : call qword ptr [rax + 0x10fffc81]
0x0000000000187493 : call qword ptr [rax + 0x10fffc82]
0x00000000001877b7 : call qword ptr [rax + 0x10fffca4]
0x00000000001877af : call qword ptr [rax + 0x10fffca5]
0x00000000001877a7 : call qword ptr [rax + 0x10fffca6]
0x000000000018779f : call qword ptr [rax + 0x10fffca7]
0x00000000001866eb : call qword ptr [rax + 0x20fffbe8]
0x000000000018664b : call qword ptr [rax + 0x20fffbe9]
0x00000000001869eb : call qword ptr [rax + 0x20fffc39]
0x0000000000186f8b : call qword ptr [rax + 0x20fffc55]
0x0000000000186d7b : call qword ptr [rax + 0x20fffc61]
0x0000000000186b63 : call qword ptr [rax + 0x20fffc64]
0x0000000000187267 : call qword ptr [rax + 0x20fffc89]
0x0000000000187587 : call qword ptr [rax + 0x20fffcac]
0x000000000018775f : call qword ptr [rax + 0x20fffcb0]
0x000000000002367e : call qword ptr [rax + 0x48e9c289]
0x0000000000187f43 : call qword ptr [rax + rax*4 - 0x763c0000]
0x0000000000109f19 : call qword ptr [rax - 0x18]
0x0000000000186b03 : call qword ptr [rax - 0x1f0003db]
0x0000000000186b17 : call qword ptr [rax - 0x1f0003e9]
0x0000000000186937 : call qword ptr [rax - 0x1f000407]
0x00000000001867bf : call qword ptr [rax - 0x1f00042c]
0x000000000018676b : call qword ptr [rax - 0x1f000433]
0x000000000017818f : call qword ptr [rax - 0x1f000e7d]
0x0000000000186acf : call qword ptr [rax - 0x2f0003ef]
0x0000000000177f73 : call qword ptr [rax - 0x2f0010aa]
0x000000000003618e : call qword ptr [rax - 0x3d]
0x0000000000186647 : call qword ptr [rax - 0x6f000419]
0x00000000001866e7 : call qword ptr [rax - 0x6f00041a]
0x000000000018622b : call qword ptr [rax]
0x000000000004be03 : call qword ptr [rbx + rax*8]
0x0000000000165180 : call qword ptr [rbx]
0x0000000000178d1f : call qword ptr [rcx - 0x2f000c2c]
0x000000000000afe1 : call qword ptr [rcx]
0x0000000000187b43 : call qword ptr [rdi - 0x5c2c0000]
0x000000000004dee8 : call qword ptr [rdi]
0x000000000018734b : call qword ptr [rdx + 0x22fffc7b]
0x000000000018713b : call qword ptr [rdx + 0x22fffc87]
0x0000000000187633 : call qword ptr [rdx + 0x22fffcae]
0x000000000004c9ac : call qword ptr [rdx]
0x0000000000186bab : call qword ptr [rsi + 0x26fffc63]
0x0000000000187097 : call qword ptr [rsi + 0x26fffc8b]
0x000000000001ffe5 : call qword ptr [rsi]
0x00000000001a36d9 : call qword ptr cs:[rcx]
0x0000000000028ba6 : call r12
0x0000000000025be3 : call r14
0x000000000002396f : call r15
0x000000000006d772 : call r8
0x0000000000186947 : call rax
0x000000000002f968 : call rbx
0x0000000000023426 : call rcx
0x0000000000023970 : call rdi
0x0000000000187313 : call rdx
0x0000000000025be4 : call rsi
0x0000000000028ba7 : call rsp
0x000000000000f8e0 : cdq ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; ret 0x10
0x00000000001a7ae5 : cdq ; add dword ptr [rax], eax ; js 0x1a7b1d ; cmc ; jmp qword ptr [rcx]
0x00000000001a7b75 : cdq ; add dword ptr [rax], eax ; or byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7b15 : cdq ; add dword ptr [rax], eax ; test al, 0x2d ; cmc ; jmp qword ptr [rcx]
0x00000000001aa299 : cdq ; cmc ; call rsp
0x00000000000f4593 : cdq ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000003c8d4 : cdq ; idiv rsi ; ret
0x0000000000175e20 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001781b1 : cdq ; int1 ; jmp rax
0x0000000000195d4c : cdq ; jle 0x195d3f ; jmp qword ptr [rdx]
0x0000000000188f91 : cdq ; out dx, al ; jmp rsp
0x0000000000038799 : cdq ; pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000128bf3 : cdq ; push -0x76b70011 ; ret
0x000000000001e210 : cdq ; ret 0x17
0x0000000000107c73 : cdq ; ret 0x2b
0x00000000000eeff2 : cdq ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000133653 : cdq ; test byte ptr [rax], ch ; add byte ptr [rcx + 0x5c], al ; jmp rax
0x000000000019ad5c : cdq ; xor dh, ch ; jmp qword ptr [rdx]
0x00000000000f04ab : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000794e8 : cdqe ; ret
0x00000000001180dd : cdqe ; shr rax, 4 ; ret
0x000000000003608d : clc ; adc al, 0 ; orpd xmm0, xmm1 ; ret
0x00000000000a546f : clc ; adc esi, dword ptr [rbp + rcx - 0x77] ; ret 0xc9eb
0x00000000000800d8 : clc ; add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x0000000000048c89 : clc ; add al, 0x89 ; ret
0x00000000000dc8e8 : clc ; add al, 0xf ; xchg dword ptr [rax - 0x76fffff4], esi ; ret 0x8d48
0x00000000000dfbc5 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000000af501 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xc0e9
0x00000000000af355 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x000000000004fd93 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000e4bc0 : clc ; add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x00000000000a3914 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x6fe9
0x00000000000a3888 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8548
0x00000000000a38fc : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8aeb
0x000000000007709c : clc ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000073e99 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000061998 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x8f0f
0x000000000004977b : clc ; add cl, byte ptr [rbp + 0x39] ; ret
0x00000000000a633b : clc ; add cl, byte ptr [rcx + 0x39] ; ret
0x00000000000cd91e : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000940ab : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001176c5 : clc ; add eax, 0x10 ; ret
0x00000000000b7826 : clc ; add eax, 0x2907fbc1 ; ret 0x8944
0x00000000000b21d8 : clc ; add eax, 0x89d02944 ; ret
0x00000000000b23cd : clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x00000000000868c4 : clc ; add ecx, dword ptr [rax + 1] ; ret 0x6348
0x0000000000034620 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x00000000001211c1 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00000000000970a6 : clc ; add rax, r8 ; ret
0x000000000008bb98 : clc ; add rax, rcx ; ret
0x0000000000108c20 : clc ; add rsp, 8 ; ret
0x000000000007d534 : clc ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x000000000002ff41 : clc ; and eax, 0x7f ; ret
0x000000000010c567 : clc ; and eax, 0xffffff ; ret
0x000000000010c541 : clc ; bswap eax ; ret
0x000000000018c28a : clc ; call rsp
0x00000000001ac131 : clc ; cmc ; call qword ptr [rcx]
0x0000000000114501 : clc ; cmc ; je 0x1144fd ; pop rbx ; ret
0x00000000001a7c38 : clc ; cmc ; jmp qword ptr [rcx]
0x000000000004971a : clc ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000497f6 : clc ; cmovae rax, rsi ; ret
0x000000000008345e : clc ; cmovne rax, rcx ; add rsp, 8 ; ret
0x00000000000973a6 : clc ; cmp eax, 0x89480f75 ; clc ; ret
0x0000000000003aaa : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000161239 : clc ; cmp rcx, rax ; jne 0x16126b ; xor eax, eax ; ret
0x0000000000161238 : clc ; cmp rcx, rax ; jne 0x16126c ; xor eax, eax ; ret
0x0000000000162079 : clc ; cmp rcx, rax ; jne 0x1620ab ; xor eax, eax ; ret
0x0000000000162078 : clc ; cmp rcx, rax ; jne 0x1620ac ; xor eax, eax ; ret
0x000000000003c8d2 : clc ; cqo ; idiv rsi ; ret
0x000000000002fbb6 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000080ad4 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000001326db : clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x000000000006ed9f : clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000ae1aa : clc ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000010378f : clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000000000018cd0a : clc ; dec dword ptr [rbx + rsi*2 - 0x18bbfffe] ; clc ; call rsp
0x000000000004e1c3 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004b9d2 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x0000000000060341 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000018c872 : clc ; dec dword ptr [rdi + rcx*2 + 2] ; add byte ptr [rax + rbx*2 - 8], al ; call rsp
0x000000000018c5fa : clc ; dec dword ptr [rdi + rdi + 0x2bd40002] ; clc ; call rsp
0x0000000000047836 : clc ; dec dword ptr [rdi] ; ret 0x8341
0x000000000006dc4f : clc ; dec dword ptr [rdi] ; test byte ptr [rcx - 0x76ffffff], cl ; ret 0xe283
0x000000000007194b : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000018c9da : clc ; dec dword ptr [rdx + rbx*2 + 0x76ea0002] ; clc ; call rsp
0x000000000018c95a : clc ; dec dword ptr [rsi + rdx*2 + 0x6d350002] ; clc ; call rsp
0x000000000018ca12 : clc ; dec dword ptr [rsp + rbx*2 + 0x78f90002] ; clc ; call rsp
0x000000000018c5d2 : clc ; dec esp ; add al, byte ptr ds:[rax] ; push rsp ; sub al, bh ; jmp rsp
0x000000000018cd52 : clc ; dec esp ; jbe 0x18cd62 ; add byte ptr [rsi + rsi*8 - 8], ah ; jmp rsp
0x000000000018c302 : clc ; dec esp ; sub eax, 0x4340002 ; clc ; jmp rsp
0x000000000019eff8 : clc ; fcompi st(0) ; jmp rax
0x00000000001a6a88 : clc ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001946e9 : clc ; in al, dx ; call qword ptr [rax]
0x0000000000177125 : clc ; in eax, dx ; jmp qword ptr [rax + 0x13ffede4]
0x00000000000ae4a5 : clc ; inc dword ptr [rbp + 0x79c789c0] ; ret
0x000000000018ca52 : clc ; inc dword ptr [rdi + rbx*2] ; add al, byte ptr [rax] ; ret 0xf880
0x000000000018c4c2 : clc ; inc dword ptr [rdi + rsi + 0x1ca40002] ; clc ; jmp rsp
0x0000000000194024 : clc ; jg 0x194016 ; jmp qword ptr [rdx]
0x0000000000194808 : clc ; jle 0x1947fb ; jmp rcx
0x0000000000193b45 : clc ; jmp 0x193b49
0x00000000001aa722 : clc ; jmp qword ptr [rsi]
0x000000000006d0be : clc ; jmp rax
0x000000000018c30a : clc ; jmp rsp
0x000000000016405a : clc ; jne 0x164167 ; ret
0x0000000000164059 : clc ; jne 0x164168 ; ret
0x00000000000917a7 : clc ; jne 0x91681 ; ret
0x000000000018c92a : clc ; lcall ptr [rbp + rdx*2 + 0x6a980002] ; clc ; jmp rsp
0x000000000018cc22 : clc ; lcall ptr [rbp*2 - 0x594bfffe] ; clc ; jmp rsp
0x000000000018c8da : clc ; lcall ptr [rdx + rdx*2 + 0x63820002] ; clc ; jmp rsp
0x000000000018c37a : clc ; ljmp ptr [rax + rsi + 0x8640002] ; clc ; jmp rsp
0x000000000018cb0a : clc ; ljmp ptr [rsp - 0x74fbfffe] ; clc ; jmp rsp
0x00000000000f322b : clc ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000968e8 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000174a82 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001afd78 : clc ; mov dh, 0xf6 ; call qword ptr [rdi]
0x0000000000144237 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000144ba7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c4a7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144da7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c417 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144fa7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c387 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144253 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000039e42 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000001b44d8 : clc ; nop ; idiv edi ; ret
0x00000000000a36ac : clc ; nop dword ptr [rax] ; ret
0x00000000000fd5c1 : clc ; nop word ptr [rax + rax] ; ret
0x000000000019ba78 : clc ; out dx, al ; call rsp
0x0000000000101dfd : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000108e52 : clc ; pop rbx ; ret
0x00000000001ab224 : clc ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x000000000002209f : clc ; push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x00000000000fa61c : clc ; push qword ptr [rax + rcx + 0x5b] ; pop rbp ; ret
0x00000000000bd38d : clc ; push qword ptr [rax + rsi - 0x77] ; ret 0xe283
0x00000000000769ca : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000132f8f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000038575 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bdc0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000007505b : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000018c7ca : clc ; push qword ptr [rbx + rcx*2 + 2] ; add byte ptr [rdx + rcx*2], al ; clc ; call rsp
0x000000000018c9aa : clc ; push qword ptr [rdx + rbx*2 + 2] ; add byte ptr [rsp + rsi*2 - 8], bl ; jmp rsp
0x0000000000114812 : clc ; push qword ptr [rdx - 0x3dbbf0fe] ; ret
0x000000000018cafa : clc ; push rsp ; add al, byte ptr fs:[rax] ; ret 0xf88a
0x0000000000002bad : clc ; ret
0x000000000001b170 : clc ; ret 0x3b
0x00000000001858f2 : clc ; ret 0x6e1f
0x000000000010c551 : clc ; ror ax, 8 ; ret
0x00000000000038a8 : clc ; salc ; jb 0x392c ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004c5e4 : clc ; sar bh, cl ; dec dword ptr [rax - 0x77] ; ret 0x31eb
0x000000000003c873 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000a38f9 : clc ; sar rax, 2 ; sub rdx, rax ; jmp 0xa3894
0x000000000010aafb : clc ; sar rax, 6 ; ret
0x0000000000038b0a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000010c5e7 : clc ; shr eax, 0x18 ; ret
0x0000000000186935 : clc ; sti ; call qword ptr [rax - 0x1f000407]
0x000000000019431e : clc ; sub ah, 0xff ; sbb al, 0xd ; xor al, 0x80 ; in al, dx ; jmp qword ptr [rdx]
0x000000000019a458 : clc ; sub ch, dh ; call qword ptr [rsi]
0x0000000000103f61 : clc ; sub eax, esi ; ret
0x000000000013cabb : clc ; sub rax, rsi ; ret
0x000000000002d583 : clc ; test rcx, rcx ; je 0x2d591 ; call rcx
0x000000000017939c : clc ; xchg eax, ebp ; hlt ; jmp rsi
0x00000000000c24c2 : cld ; add byte ptr [rax], al ; ret
0x000000000018b9f5 : cld ; add dword ptr [rax], eax ; hlt ; and dh, bh ; call rsp
0x00000000000a1abf : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a1ae2 : cld ; add eax, dword ptr [rax] ; ret
0x0000000000192a36 : cld ; and eax, 0xd1cffeb ; sahf ; and al, 0xeb ; jmp qword ptr [rdx]
0x0000000000187512 : cld ; call qword ptr [rax + 0x10fffc5f]
0x00000000001874d6 : cld ; call qword ptr [rax + 0x10fffc60]
0x000000000018751a : cld ; call qword ptr [rax + 0x10fffc62]
0x00000000001874de : cld ; call qword ptr [rax + 0x10fffc63]
0x0000000000187522 : cld ; call qword ptr [rax + 0x10fffc65]
0x00000000001874e6 : cld ; call qword ptr [rax + 0x10fffc66]
0x000000000018752a : cld ; call qword ptr [rax + 0x10fffc68]
0x00000000001874ee : cld ; call qword ptr [rax + 0x10fffc69]
0x0000000000187532 : cld ; call qword ptr [rax + 0x10fffc6b]
0x00000000001874f6 : cld ; call qword ptr [rax + 0x10fffc6c]
0x000000000018753a : cld ; call qword ptr [rax + 0x10fffc6e]
0x00000000001874fe : cld ; call qword ptr [rax + 0x10fffc6f]
0x0000000000187542 : cld ; call qword ptr [rax + 0x10fffc71]
0x0000000000187506 : cld ; call qword ptr [rax + 0x10fffc72]
0x000000000018747a : cld ; call qword ptr [rax + 0x10fffc7d]
0x0000000000187472 : cld ; call qword ptr [rax + 0x10fffc7e]
0x000000000018746a : cld ; call qword ptr [rax + 0x10fffc7f]
0x0000000000187462 : cld ; call qword ptr [rax + 0x10fffc80]
0x000000000018745a : cld ; call qword ptr [rax + 0x10fffc81]
0x0000000000187492 : cld ; call qword ptr [rax + 0x10fffc82]
0x00000000001877b6 : cld ; call qword ptr [rax + 0x10fffca4]
0x00000000001877ae : cld ; call qword ptr [rax + 0x10fffca5]
0x00000000001877a6 : cld ; call qword ptr [rax + 0x10fffca6]
0x000000000018779e : cld ; call qword ptr [rax + 0x10fffca7]
0x00000000001869ea : cld ; call qword ptr [rax + 0x20fffc39]
0x0000000000186f8a : cld ; call qword ptr [rax + 0x20fffc55]
0x0000000000186d7a : cld ; call qword ptr [rax + 0x20fffc61]
0x0000000000186b62 : cld ; call qword ptr [rax + 0x20fffc64]
0x0000000000187266 : cld ; call qword ptr [rax + 0x20fffc89]
0x0000000000187586 : cld ; call qword ptr [rax + 0x20fffcac]
0x000000000018775e : cld ; call qword ptr [rax + 0x20fffcb0]
0x0000000000186b02 : cld ; call qword ptr [rax - 0x1f0003db]
0x0000000000186b16 : cld ; call qword ptr [rax - 0x1f0003e9]
0x0000000000186ace : cld ; call qword ptr [rax - 0x2f0003ef]
0x0000000000178266 : cld ; call qword ptr [rax]
0x000000000018734a : cld ; call qword ptr [rdx + 0x22fffc7b]
0x000000000018713a : cld ; call qword ptr [rdx + 0x22fffc87]
0x0000000000187632 : cld ; call qword ptr [rdx + 0x22fffcae]
0x0000000000186c2e : cld ; call qword ptr [rdx]
0x0000000000186baa : cld ; call qword ptr [rsi + 0x26fffc63]
0x0000000000187096 : cld ; call qword ptr [rsi + 0x26fffc8b]
0x0000000000186bca : cld ; call qword ptr [rsi]
0x0000000000186ad2 : cld ; call rax
0x0000000000186c1e : cld ; call rdx
0x0000000000186bba : cld ; call rsi
0x0000000000186ce6 : cld ; call rsp
0x000000000018cdc9 : cld ; clc ; jmp rsp
0x00000000001ac3c9 : cld ; cmc ; call qword ptr [rax]
0x0000000000164152 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x164168 ; xor eax, eax ; ret
0x0000000000164151 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x164169 ; xor eax, eax ; ret
0x00000000000b3128 : cld ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c419e : cld ; dec dword ptr [rax - 0x77] ; ret 0x19eb
0x00000000001326d7 : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x000000000018774a : cld ; dec edx ; stosd dword ptr [rdi], eax ; cld ; push qword ptr [rax - 0x55] ; cld ; jmp rax
0x0000000000036867 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x000000000019a775 : cld ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018682a : cld ; inc dword ptr [rax + 0x10fffc11] ; add al, 0xfc ; call rax
0x0000000000186b12 : cld ; inc dword ptr [rax + 0x16] ; cld ; call qword ptr [rax - 0x1f0003e9]
0x0000000000186afe : cld ; inc dword ptr [rax + 0x24] ; cld ; call qword ptr [rax - 0x1f0003db]
0x00000000001869ce : cld ; inc dword ptr [rax + 0x2c] ; cld ; inc dword ptr [rax] ; cld ; jmp rax
0x0000000000186a52 : cld ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000186ab6 : cld ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000186a3a : cld ; inc dword ptr [rax + 0x31] ; cld ; jmp qword ptr [rax]
0x0000000000186d86 : cld ; inc dword ptr [rax + 0x60] ; cld ; call rax
0x0000000000186b6e : cld ; inc dword ptr [rax + 0x63] ; cld ; call rax
0x000000000018685e : cld ; inc dword ptr [rax + 0xb] ; cld ; jmp qword ptr [rax]
0x0000000000186b22 : cld ; inc dword ptr [rax - 0x2f0003e5] ; sbb al, 0xfc ; jmp qword ptr [rax]
0x000000000018690e : cld ; inc dword ptr [rax - 0x3f000417] ; in eax, dx ; sti ; call qword ptr [rax]
0x0000000000187552 : cld ; inc dword ptr [rax - 0x4e] ; cld ; call rax
0x000000000018776a : cld ; inc dword ptr [rax - 0x51] ; cld ; call rax
0x000000000018705a : cld ; inc dword ptr [rax - 0x75] ; cld ; call rax
0x0000000000187272 : cld ; inc dword ptr [rax - 0x78] ; cld ; call rax
0x0000000000186826 : cld ; inc dword ptr [rax - 0x7f0003f1] ; adc esp, edi ; call qword ptr [rax]
0x0000000000186b5e : cld ; inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc64]
0x00000000001869d2 : cld ; inc dword ptr [rax] ; cld ; jmp rax
0x00000000001874be : cld ; inc dword ptr [rax] ; jge 0x1874c8 ; push qword ptr [rax + 0x7c] ; cld ; jmp rax
0x0000000000187582 : cld ; inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x0000000000187262 : cld ; inc dword ptr [rax] ; mov bh, ah ; call qword ptr [rax + 0x20fffc89]
0x000000000018775a : cld ; inc dword ptr [rax] ; mov cl, 0xfc ; call qword ptr [rax + 0x20fffcb0]
0x00000000001867d6 : cld ; inc dword ptr [rax] ; or ah, bh ; jmp rax
0x00000000001868fe : cld ; inc dword ptr [rax] ; or bh, ah ; call rax
0x00000000001782ae : cld ; inc dword ptr [rax] ; xchg eax, ebp ; cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x00000000001869b6 : cld ; inc dword ptr [rax] ; xor ah, bh ; jmp rax
0x0000000000186a5a : cld ; inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x00000000000a1b99 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a1a9e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000114078 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000186c1a : cld ; inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x000000000018763e : cld ; inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x0000000000187146 : cld ; inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x0000000000187136 : cld ; inc dword ptr [rdx] ; mov ah, bh ; call qword ptr [rdx + 0x22fffc87]
0x000000000018762e : cld ; inc dword ptr [rdx] ; scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcae]
0x0000000000186bb6 : cld ; inc dword ptr [rsi + 0x62] ; cld ; call rsi
0x000000000018759a : cld ; inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x00000000001870a2 : cld ; inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x0000000000186ba6 : cld ; inc dword ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc63]
0x0000000000187092 : cld ; inc dword ptr [rsi] ; mov esp, dr1 ; call qword ptr [rsi + 0x26fffc8b]
0x0000000000187706 : cld ; inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x0000000000186ce2 : cld ; inc dword ptr [rsp - 4] ; call rsp
0x0000000000186b32 : cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x0000000000186ade : cld ; inc eax ; sbb esp, edi ; call qword ptr [rax]
0x0000000000060c70 : cld ; jle 0x60c7b ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x0000000000186fc2 : cld ; jmp qword ptr [rax + 0x10fffc56]
0x0000000000186dbe : cld ; jmp qword ptr [rax + 0x10fffc57]
0x00000000001782c6 : cld ; jmp qword ptr [rax + 0x10fffc9d]
0x0000000000187982 : cld ; jmp qword ptr [rax + 0x10fffca2]
0x0000000000187796 : cld ; jmp qword ptr [rax + 0x10fffca8]
0x0000000000186db6 : cld ; jmp qword ptr [rax + 0x20fffc58]
0x0000000000186dae : cld ; jmp qword ptr [rax + 0x20fffc59]
0x0000000000186da6 : cld ; jmp qword ptr [rax + 0x20fffc5a]
0x0000000000186d9e : cld ; jmp qword ptr [rax + 0x20fffc5b]
0x0000000000187452 : cld ; jmp qword ptr [rax + 0x20fffc82]
0x00000000001879ba : cld ; jmp qword ptr [rax + 0x20fffca3]
0x00000000001879b2 : cld ; jmp qword ptr [rax + 0x20fffca4]
0x00000000001879aa : cld ; jmp qword ptr [rax + 0x20fffca5]
0x00000000001879a2 : cld ; jmp qword ptr [rax + 0x20fffca6]
0x000000000018799a : cld ; jmp qword ptr [rax + 0x20fffca7]
0x00000000001782a6 : cld ; jmp qword ptr [rax]
0x000000000019f8d2 : cld ; jmp qword ptr [rbx]
0x000000000018760e : cld ; jmp qword ptr [rdx + 0x12fffcab]
0x0000000000186c12 : cld ; jmp qword ptr [rdx]
0x0000000000186bae : cld ; jmp qword ptr [rsi]
0x00000000001782b6 : cld ; jmp rax
0x0000000000186c42 : cld ; jmp rdx
0x0000000000186b9e : cld ; jmp rsi
0x0000000000186d0a : cld ; jmp rsp
0x0000000000161e86 : cld ; jne 0x1620bf ; xor eax, eax ; ret
0x0000000000164155 : cld ; jne 0x164165 ; xor eax, eax ; ret
0x0000000000164154 : cld ; jne 0x164166 ; xor eax, eax ; ret
0x0000000000164075 : cld ; jne 0x164167 ; ret
0x0000000000164074 : cld ; jne 0x164168 ; ret
0x000000000018730a : cld ; lcall ptr [rbx + rdi*2 + 0x7b2cfffc] ; cld ; call rdx
0x0000000000186f4a : cld ; lcall ptr [rdx + 0x2afffc55] ; push rbp ; cld ; call rax
0x000000000018698e : cld ; ljmp ptr [rax + 0x2c] ; cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000018730e : cld ; ljmp ptr [rbx + rdi*2] ; cld ; call rdx
0x0000000000186f4e : cld ; ljmp ptr [rdx] ; push rbp ; cld ; call rax
0x0000000000186eca : cld ; ljmp ptr [rsi + 0x3efffc55] ; push rbp ; cld ; jmp rsp
0x00000000001449c2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144bc5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144dc5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144fc5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001445f6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c636 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001447d6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c5b6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001449b6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c536 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144416 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c6b6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000967c9 : cld ; mov rax, rdi ; ret
0x0000000000039dfc : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000019b26c : cld ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a50a4 : cld ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; or byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x000000000019492c : cld ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000a38a3 : cld ; pop rbx ; ret
0x0000000000193ea4 : cld ; pop rsp ; add byte ptr [rax], al ; call 0x22192b50
0x0000000000186ada : cld ; push qword ptr [rax + 0x18] ; cld ; inc eax ; sbb esp, edi ; call qword ptr [rax]
0x0000000000186b2e : cld ; push qword ptr [rax + 0x1f] ; cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x0000000000186ab2 : cld ; push qword ptr [rax + 0x2c] ; cld ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000186b6a : cld ; push qword ptr [rax + 0x40fffc63] ; movsxd rdi, esp ; call rax
0x000000000018726e : cld ; push qword ptr [rax + 0x40fffc88] ; mov ah, bh ; call rax
0x0000000000187056 : cld ; push qword ptr [rax + 0x40fffc8b] ; mov edi, esp ; call rax
0x0000000000187766 : cld ; push qword ptr [rax + 0x40fffcaf] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x00000000001874c2 : cld ; push qword ptr [rax + 0x7c] ; cld ; jmp rax
0x00000000001872be : cld ; push qword ptr [rax + 0x7d] ; cld ; jmp rax
0x000000000018774e : cld ; push qword ptr [rax - 0x55] ; cld ; jmp rax
0x00000000001877c6 : cld ; push qword ptr [rax - 0x5e] ; cld ; jmp rax
0x00000000001879ca : cld ; push qword ptr [rax - 0x5f] ; cld ; call rax
0x00000000001782b2 : cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x00000000001868ae : cld ; push qword ptr [rax] ; add edi, esp ; push rax ; add al, 0xfc ; call rax
0x0000000000186992 : cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000018687a : cld ; push qword ptr [rax] ; or esp, edi ; call qword ptr [rax]
0x0000000000186fbe : cld ; push qword ptr [rax] ; push rdi ; cld ; jmp qword ptr [rax + 0x10fffc56]
0x00000000001782c2 : cld ; push qword ptr [rax] ; pushfq ; cld ; jmp qword ptr [rax + 0x10fffc9d]
0x0000000000187996 : cld ; push qword ptr [rax] ; test al, 0xfc ; jmp qword ptr [rax + 0x20fffca7]
0x0000000000186c16 : cld ; push qword ptr [rdx + 0x42fffc65] ; cld ; call rdx
0x0000000000187142 : cld ; push qword ptr [rdx + 0x42fffc86] ; xchg ah, bh ; call rdx
0x000000000018763a : cld ; push qword ptr [rdx + 0x42fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rdx
0x0000000000186e3e : cld ; push qword ptr [rdx + 0x57] ; cld ; jmp rdx
0x0000000000187816 : cld ; push qword ptr [rdx - 0x58] ; cld ; jmp rdx
0x000000000018709e : cld ; push qword ptr [rsi + 0x46fffc8a] ; mov bh, ah ; call rsi
0x0000000000187596 : cld ; push qword ptr [rsi + 0x46fffcb1] ; mov cl, 0xfc ; call rsi
0x0000000000186cde : cld ; push qword ptr [rsp + 0x6444fffc] ; cld ; call rsp
0x0000000000187702 : cld ; push qword ptr [rsp + rbp*4 - 0x53bb0004] ; cld ; call rsp
0x00000000001868b2 : cld ; push rax ; add al, 0xfc ; call rax
0x0000000000178262 : cld ; push rax ; jge 0x178268 ; call qword ptr [rax]
0x00000000001872ba : cld ; push rax ; jge 0x1872c4 ; push qword ptr [rax + 0x7d] ; cld ; jmp rax
0x000000000018748e : cld ; push rax ; jp 0x187498 ; call qword ptr [rax + 0x10fffc82]
0x000000000018689a : cld ; push rax ; or ah, bh ; call rax
0x00000000001874ce : cld ; push rax ; pop rbp ; cld ; call qword ptr [rax]
0x0000000000178282 : cld ; push rax ; xchg ah, bh ; call qword ptr [rax]
0x000000000018699a : cld ; push rax ; xor esp, edi ; call rax
0x0000000000186e3a : cld ; push rdx ; push rdi ; cld ; push qword ptr [rdx + 0x57] ; cld ; jmp rdx
0x0000000000187812 : cld ; push rdx ; test al, 0xfc ; push qword ptr [rdx - 0x58] ; cld ; jmp rdx
0x0000000000039e02 : cld ; ret
0x0000000000188a5c : cld ; ret 0
0x00000000001ab4a4 : cld ; rol byte ptr [rcx], cl ; add al, bl ; in eax, -0xb ; call qword ptr [rax]
0x000000000019d101 : cld ; stc ; call qword ptr [rax]
0x000000000018d511 : cld ; stc ; jmp rsp
0x000000000018760c : cld ; stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rdx + 0x12fffcab]
0x00000000001a0aa4 : cld ; sub byte ptr [rcx], al ; add byte ptr [rax - 0x33], ch ; int1 ; jmp qword ptr [rax]
0x0000000000173f36 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000b00be : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xb00c1 ; ret
0x000000000019b9a4 : cld ; xlatb ; add byte ptr [rax], al ; xor rbp, rsi ; call qword ptr [rsi]
0x000000000003cdd5 : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000b14ec : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000b1471 : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000133411 : cli ; add al, 0xf ; test byte ptr [rcx - 0x7d000000], bl ; ret 0x8380
0x0000000000110cec : cli ; add al, 0xf ; xchg eax, esi ; ret
0x000000000019dc0d : cli ; add byte ptr [rax], al ; jo 0x19db98 ; cld ; jmp qword ptr [rax]
0x000000000019dc0c : cli ; add byte ptr [rax], al ; jo 0x19db99 ; cld ; jmp qword ptr [rax]
0x00000000000c1cc9 : cli ; add byte ptr [rcx - 0xcfd8130], cl ; ret
0x00000000000b22f9 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000b89ca : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003e87e : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000285e3 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000000000b0954 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003755 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x373d ; ret 0x975
0x00000000000f3210 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x000000000017abc2 : cli ; call qword ptr [rax]
0x000000000017abba : cli ; call rax
0x00000000001b6442 : cli ; call rcx
0x000000000018d7b2 : cli ; call rsp
0x0000000000037ba2 : cli ; cmp byte ptr fs:[rax], al ; ret
0x00000000000ed92b : cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c0921 : cli ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x0000000000078e59 : cli ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000e390d : cli ; dec dword ptr [rax - 0x77] ; jmp 0x4cd0c265
0x00000000000721f9 : cli ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000018dc6a : cli ; dec dword ptr [rcx - 0x3efefffe] ; cli ; call rsp
0x0000000000032a99 : cli ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000017c0ae : cli ; dec esp ; mov dh, 0xfa ; jmp rsp
0x000000000018d7ca : cli ; dec esp ; ret
0x000000000019a6e5 : cli ; in eax, dx ; jmp qword ptr [rdx]
0x000000000017abe6 : cli ; inc dword ptr [rax] ; nop ; cli ; call qword ptr [rax]
0x000000000018dbba : cli ; inc dword ptr [rbp + rbx*8 - 0x44dbfffe] ; cli ; jmp rsp
0x00000000000e47c4 : cli ; inc dword ptr [rbx + rcx*4 + 0x65] ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000018d7aa : cli ; inc dword ptr [rdx + rax*8 + 0x41640002] ; cli ; call rsp
0x000000000018d9fa : cli ; inc esp ; rol dword ptr [rdx], 1 ; add byte ptr [rsi + rbp*2], ah ; cli ; jmp rsp
0x00000000001951fc : cli ; jae 0x1951ef ; jmp qword ptr [rdx]
0x00000000001176f1 : cli ; je 0x1176de ; mov eax, 0xffffffff ; ret
0x0000000000117b11 : cli ; je 0x117a64 ; ret
0x000000000017abee : cli ; jmp qword ptr [rax]
0x0000000000192b52 : cli ; jmp qword ptr [rcx]
0x000000000017abb6 : cli ; jmp rax
0x0000000000034c76 : cli ; jmp rdx
0x000000000017c0b2 : cli ; jmp rsp
0x00000000000c42ea : cli ; jnp 0xc4300 ; xchg eax, esp ; ret 0xb60f
0x00000000000c451a : cli ; jnp 0xc4530 ; xchg eax, esp ; ret 0xb60f
0x00000000000c4786 : cli ; jnp 0xc479c ; xchg eax, esp ; ret 0xb60f
0x0000000000187450 : cli ; jp 0x187456 ; jmp qword ptr [rax + 0x20fffc82]
0x000000000017abe2 : cli ; lcall ptr [rax + 0xfffa90] ; nop ; cli ; call qword ptr [rax]
0x000000000018d60a : cli ; lcall ptr [rbp + rsi*4 + 0x24100002] ; cli ; jmp rsp
0x000000000018d662 : cli ; lcall ptr [rdx + rdi*4 + 0x26440002] ; cli ; jmp rsp
0x000000000018ddd2 : cli ; ljmp ptr [rdx + rbp*8 - 0x1bcbfffe] ; cli ; call rsp
0x000000000018db92 : cli ; ljmp ptr [rsp + rbx*8 - 0x481bfffe] ; cli ; call rsp
0x0000000000144dc8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000019861e : cli ; mov esp, 0xd1cffed ; ja 0x1985eb ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000096827 : cli ; mov rax, rdi ; ret
0x0000000000110e2b : cli ; mov rdi, r12 ; call rax
0x000000000008bf88 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002efd0 : cli ; nop word ptr [rax + rax] ; ret
0x00000000001383c6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000346a5 : cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000000296d3 : cli ; or byte ptr [rdi], 0x94 ; ret 0xb60f
0x00000000000b015d : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x000000000019d041 : cli ; out dx, al ; call qword ptr [rcx]
0x00000000001763a1 : cli ; push 0x6e ; ja 0x17632e ; ret 0x48f
0x00000000000fccf7 : cli ; push qword ptr [rbp + rax - 0x7d] ; ret 0x8901
0x000000000018dcf2 : cli ; push qword ptr [rbp - 0x29ebfffe] ; cli ; jmp rsp
0x00000000000fa6b1 : cli ; push qword ptr [rbx + rcx - 0xd] ; ret
0x000000000018de32 : cli ; push qword ptr [rbx + rcx*8 - 0x141bffff] ; cli ; jmp rsp
0x000000000018db0a : cli ; push qword ptr [rcx + rbx*8 - 0x56cbfffe] ; cli ; jmp rsp
0x000000000006ebc2 : cli ; push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000000fcaa8 : cli ; push qword ptr [rsi + rax - 0x7d] ; ret 0x6601
0x00000000001aaa9c : cli ; push rax ; cmc ; jmp qword ptr [rdx]
0x0000000000023862 : cli ; ret
0x00000000000b148f : cli ; ret 0x10
0x0000000000174e45 : cli ; ret 0xac65
0x0000000000107a7b : cli ; setae al ; ret
0x00000000000c4781 : cli ; sub al, 0x74 ; cmp eax, dword ptr [rax - 0x6bf08406] ; ret 0xb60f
0x000000000011b1b9 : cli ; sub al, 0x74 ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000c76fe : cli ; sub r10, rax ; jmp 0xc771f
0x0000000000088a90 : cli ; test rdx, rdx ; je 0x88aa9 ; bsf rax, rdx ; ret
0x0000000000088c7f : cli ; test rdx, rdx ; je 0x88ca9 ; bsf rax, rdx ; ret
0x0000000000173a8a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000088658 : cli ; xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x000000000005356f : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013c938 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001ad6dd : cmc ; add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf6 ; call rdi
0x0000000000165c6a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000179f4e : cmc ; call qword ptr [rax]
0x00000000001ab6da : cmc ; call qword ptr [rbx]
0x00000000001a78ca : cmc ; call qword ptr [rcx]
0x00000000001abb4a : cmc ; call qword ptr [rdi]
0x00000000001a7e92 : cmc ; call qword ptr [rsi]
0x0000000000179ec2 : cmc ; call rbx
0x00000000001a9432 : cmc ; call rcx
0x000000000017a172 : cmc ; call rsp
0x000000000017a094 : cmc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rcx
0x0000000000131a59 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000017a08e : cmc ; dec dword ptr [rax] ; test al, 0xf5 ; push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rcx
0x000000000018af02 : cmc ; dec esp ; ret 1
0x000000000017a002 : cmc ; inc dword ptr [rax - 0x59] ; cmc ; call rbx
0x000000000010b546 : cmc ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000018af12 : cmc ; inc dword ptr [rbx + rax*8 + 0x49940001] ; cmc ; call rsp
0x0000000000179f3a : cmc ; inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rax
0x000000000017a086 : cmc ; inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rax
0x0000000000114502 : cmc ; je 0x1144fc ; pop rbx ; ret
0x0000000000195fe4 : cmc ; jle 0x195fd7 ; jmp qword ptr [rdx]
0x0000000000179f92 : cmc ; jmp qword ptr [rax]
0x00000000001a72ea : cmc ; jmp qword ptr [rcx]
0x00000000001aa94a : cmc ; jmp qword ptr [rdi]
0x00000000001a75da : cmc ; jmp qword ptr [rdx]
0x00000000001a7532 : cmc ; jmp qword ptr [rsi]
0x0000000000179f3e : cmc ; jmp rax
0x00000000001a832a : cmc ; jmp rbx
0x000000000017a096 : cmc ; jmp rcx
0x00000000001a844a : cmc ; jmp rdi
0x000000000018affa : cmc ; jmp rsp
0x000000000017a082 : cmc ; lcall ptr [rax - 0x3f000a59] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rax
0x0000000000179f36 : cmc ; ljmp ptr [rax - 0x3f000a5a] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rax
0x000000000017a16e : cmc ; ljmp ptr [rcx] ; test al, 0xf5 ; call rsp
0x000000000017a16a : cmc ; ljmp ptr [rcx] ; test al, 0xf5 ; ljmp ptr [rcx] ; test al, 0xf5 ; call rsp
0x00000000001767c9 : cmc ; mov ch, 0xab ; ret
0x000000000014c5ba : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014464e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000163663 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000006ed76 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000073881 : cmc ; pop rbp ; pop r12 ; ret
0x0000000000173677 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000179f42 : cmc ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rbx
0x000000000017a092 : cmc ; push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rcx
0x00000000000a5bf6 : cmc ; setne dl ; jmp 0xa5c0b
0x00000000000aa956 : cmc ; setne dl ; jmp 0xaa96b
0x0000000000163667 : cmc ; sub eax, edx ; ret
0x00000000001a141c : cmc ; xchg ecx, esi ; jmp qword ptr [rdx]
0x0000000000175e05 : cmc ; xlatb ; ret 0x4e27
0x0000000000108938 : cmova eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003cd14 : cmova edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ed0f8 : cmova edx, ecx ; mov eax, edx ; ret
0x00000000000b15cb : cmova esi, eax ; imul esi, edx ; add eax, esi ; ret
0x00000000000b15ca : cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
0x000000000007d089 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004971c : cmovae eax, esi ; pop rbx ; ret
0x00000000000497f8 : cmovae eax, esi ; ret
0x0000000000003867 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x000000000007d088 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004971b : cmovae rax, rsi ; pop rbx ; ret
0x00000000000497f7 : cmovae rax, rsi ; ret
0x00000000000cb7f0 : cmovbe eax, edx ; ret
0x00000000000a376d : cmove eax, ecx ; ret
0x000000000008ca78 : cmove eax, edx ; add eax, 1 ; ret
0x000000000010adb0 : cmove eax, edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008b8e4 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000000ebbe1 : cmove eax, edx ; jmp 0xebb9d
0x000000000008aa68 : cmove eax, edx ; ret
0x0000000000079bf5 : cmove eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079bf4 : cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096881 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x0000000000094556 : cmove edx, ebx ; mov rax, rdx ; pop rbx ; ret
0x000000000002f699 : cmove esi, eax ; xor ebp, ebp ; jmp 0x2f6ab
0x000000000002f698 : cmove r14, rax ; xor ebp, ebp ; jmp 0x2f6ac
0x00000000000a376c : cmove rax, rcx ; ret
0x000000000008ca89 : cmove rax, rdx ; add eax, 1 ; ret
0x000000000008b8e3 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000008aa67 : cmove rax, rdx ; ret
0x0000000000094555 : cmove rdx, rbx ; mov rax, rdx ; pop rbx ; ret
0x000000000007409b : cmovg eax, ecx ; test rdx, rdx ; jne 0x74099 ; ret
0x000000000007ae3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7ae39 ; ret
0x000000000001f72a : cmovge eax, edx ; jmp 0x1f6fc
0x000000000003c9dd : cmovne eax, ebx ; pop rbx ; ret
0x0000000000083460 : cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000070b61 : cmovne eax, ecx ; ret
0x0000000000097491 : cmovne eax, edi ; ret
0x000000000004f404 : cmovne eax, edx ; jmp 0x4f47c
0x000000000002f91b : cmovne eax, edx ; ret
0x00000000001296b9 : cmovne eax, edx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000004f400 : cmovne ebp, ecx ; cmovne r8, rdx ; jmp 0x4f480
0x000000000004f3ff : cmovne r13, rcx ; cmovne r8, rdx ; jmp 0x4f481
0x0000000000070b60 : cmovne r8, rcx ; ret
0x000000000004f403 : cmovne r8, rdx ; jmp 0x4f47d
0x000000000003c9dc : cmovne rax, rbx ; pop rbx ; ret
0x000000000008345f : cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000097490 : cmovne rax, rdi ; ret
0x000000000002f91a : cmovne rax, rdx ; ret
0x0000000000101f9f : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000f9f77 : cmovns eax, edx ; jmp 0xf9f80
0x0000000000048779 : cmovns eax, edx ; pop rbx ; ret
0x000000000002586c : cmovns eax, edx ; ret
0x0000000000101f9e : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000f9f76 : cmovns rax, rdx ; jmp 0xf9f81
0x000000000005f3d8 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret 0x8b48
0x000000000012d0b0 : cmovs eax, dword ptr [rbx - 0x3fced73c] ; pop rbx ; pop rbp ; ret
0x0000000000120c70 : cmovs eax, dword ptr [rbx - 0x3fcef73c] ; pop rbx ; pop rbp ; ret
0x00000000000967d3 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x000000000007bdf8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x7bdf9 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000187325 : cmp ah, 0xff ; cmp spl, 0xff ; ret 0xfc7f
0x0000000000187469 : cmp ah, 0xff ; nop ; jg 0x187471 ; call qword ptr [rax]
0x0000000000187329 : cmp ah, 0xff ; ret 0xfc7f
0x000000000013caa8 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000013cb07 : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x00000000000d1e58 : cmp al, 0x11 ; je 0xd1e66 ; xor eax, eax ; ret
0x0000000000021fdd : cmp al, 0x16 ; call rax
0x000000000018fee4 : cmp al, 0x1d ; add byte ptr [rax], al ; pop rax ; and dl, ch ; call qword ptr [rsi]
0x000000000019ffe4 : cmp al, 0x1e ; add dword ptr [rax], eax ; js 0x1a0033 ; int1 ; jmp qword ptr [rcx]
0x000000000008113e : cmp al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x00000000000f5371 : cmp al, 0x24 ; call rbx
0x00000000000a3a67 : cmp al, 0x24 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000135c5c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0xe8] ; jmp rax
0x00000000000ebe2f : cmp al, 0x24 ; mov rdx, rax ; call 0x108107
0x000000000011ce8f : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000973a5 : cmp al, 0x3d ; jne 0x973c1 ; mov rax, rdi ; ret
0x00000000000c6104 : cmp al, 0x3f ; jne 0xc60b1 ; mov eax, 1 ; ret
0x00000000000c60f4 : cmp al, 0x3f ; jne 0xc60e0 ; mov eax, 1 ; ret
0x0000000000174a80 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000018c83c : cmp al, 0x4d ; add al, byte ptr [rax] ; push rax ; clc ; call rsp
0x00000000001a51e4 : cmp al, 0x70 ; add dword ptr [rax], eax ; mov byte ptr [rcx + rdi*8], dl ; call qword ptr [rax]
0x00000000001a1034 : cmp al, 0x80 ; int1 ; jmp qword ptr [rdx]
0x00000000001a6ae4 : cmp al, 0x89 ; add dword ptr [rax], eax ; or al, ah ; hlt ; jmp rsp
0x00000000000800db : cmp al, 0x89 ; ret 0xb48b
0x00000000001a7ae4 : cmp al, 0x99 ; add dword ptr [rax], eax ; js 0x1a7b1e ; cmc ; jmp qword ptr [rcx]
0x00000000001a7de4 : cmp al, 0x9c ; add dword ptr [rax], eax ; cmp byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018abe4 : cmp al, 0xaa ; add dword ptr [rax], eax ; hlt ; ret
0x000000000003d8d4 : cmp al, 0xb2 ; jle 0x3d896 ; jmp 0x3d8a3
0x00000000001aa8e4 : cmp al, 0xc7 ; add dword ptr [rax], eax ; fcom st(6) ; cmc ; jmp qword ptr [rsi]
0x00000000000ac75e : cmp al, 0xc7 ; call 0x38a14
0x00000000001af07c : cmp al, 0xe1 ; cmc ; jmp qword ptr [rdx]
0x00000000000efa5c : cmp al, 0xe8 ; sahf ; ret
0x000000000019b14d : cmp al, 0xee ; jmp qword ptr [rdx]
0x00000000001b0f25 : cmp al, 0xf6 ; jmp qword ptr [rdx]
0x000000000018ca51 : cmp al, 0xff ; add al, 0x5f ; add al, byte ptr [rax] ; ret 0xf880
0x00000000001a1dfd : cmp al, 1 ; add al, ah ; int1 ; jmp qword ptr [rdx]
0x0000000000161e63 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009d9a0 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000803dc : cmp al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000225fb : cmp al, byte ptr [rax] ; mov dword ptr [rip + 0x3a15fd], edi ; pop rbx ; ret
0x000000000001f5f4 : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000022226 : cmp al, byte ptr [rax] ; pop rbx ; ret
0x000000000002246f : cmp al, byte ptr [rax] ; ret
0x00000000001a1c0d : cmp al, byte ptr [rcx] ; add al, al ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x00000000001a1c8d : cmp al, byte ptr [rcx] ; add byte ptr [rax], al ; out dx, al ; int1 ; call qword ptr [rdx]
0x0000000000163b26 : cmp al, byte ptr [rsi - 1] ; jne 0x163b4c ; xor eax, eax ; ret
0x00000000001a1c0c : cmp al, byte ptr fs:[rcx] ; add al, al ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x0000000000086717 : cmp al, ch ; ret
0x0000000000023128 : cmp al, ch ; ret 0xffc3
0x000000000008bdc6 : cmp al, dh ; ret
0x000000000008bdc5 : cmp al, r14b ; ret
0x0000000000036716 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x00000000001862ad : cmp bh, bl ; jmp rax
0x00000000001a0dac : cmp bh, byte ptr [rdi - 0xf] ; jmp qword ptr [rdx]
0x0000000000192b51 : cmp bh, dl ; jmp qword ptr [rcx]
0x000000000019d130 : cmp bl, 0xee ; call qword ptr [rax]
0x00000000001862a9 : cmp bl, bh ; inc dword ptr [rax + 0x3a] ; sti ; jmp rax
0x00000000000357b2 : cmp bl, byte ptr [rbp - 0x3fce0002] ; pop rbx ; ret
0x0000000000091e5b : cmp bl, dh ; ret
0x00000000001a0b68 : cmp bl, dl ; int1 ; call rsi
0x00000000000a2bb6 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000075ff3 : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000e2792 : cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000e325e : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc0b1 : cmp byte ptr [rax + 0x63], cl ; ret
0x000000000008c9af : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000127f36 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008be07 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000019bdc8 : cmp byte ptr [rax - 0x12], dh ; call qword ptr [rsi]
0x00000000000d52a7 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x00000000000f5324 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000b5459 : cmp byte ptr [rax - 0x77], cl ; jmp 0x48cdddaf
0x00000000000dce4a : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000105574 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000075ff4 : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006d363 : cmp byte ptr [rax - 0x77], cl ; ret 0x778d
0x00000000000e2793 : cmp byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006c8ab : cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x0000000000105573 : cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x000000000011f693 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000126723 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000121262 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], cl ; mov edi, esp ; call rdx
0x000000000006ed9c : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000f9652 : cmp byte ptr [rax - 1], bh ; ret
0x000000000015e438 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008bdf6 : cmp byte ptr [rax], ah ; ret
0x000000000012f085 : cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010386b : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000003d125 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000037bf7 : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x000000000002fa71 : cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x0000000000037ba4 : cmp byte ptr [rax], al ; ret
0x000000000013cd8c : cmp byte ptr [rax], al ; ret 0xf66
0x0000000000036b34 : cmp byte ptr [rax], al ; test eax, eax ; jne 0x36b47 ; ret
0x000000000012b809 : cmp byte ptr [rax], bl ; je 0x12b814 ; ret
0x00000000000e325f : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086d90 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000096f96 : cmp byte ptr [rax], dh ; ret
0x0000000000179340 : cmp byte ptr [rax], dl ; hlt ; inc dword ptr [rcx] ; sbb ah, dh ; jmp qword ptr [rbx]
0x000000000008bde6 : cmp byte ptr [rax], dl ; ret
0x000000000008bde5 : cmp byte ptr [rax], r10b ; ret
0x000000000008bdf5 : cmp byte ptr [rax], r12b ; ret
0x0000000000096f95 : cmp byte ptr [rax], r14b ; ret
0x0000000000086d8f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000a2bba : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000a2bb9 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000094bd0 : cmp byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x0000000000094ecb : cmp byte ptr [rbp + 0x31], al ; ror byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x0000000000179390 : cmp byte ptr [rbp - 0x6a19000c], dl ; hlt ; jmp rsi
0x00000000000d0fac : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000108530 : cmp byte ptr [rbx + 0x1002b], bh ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000129bba : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000192654 : cmp byte ptr [rbx - 0x5ff1b8f9], al ; or dword ptr [rbx], eax ; ret 0xa03
0x00000000001b0fac : cmp byte ptr [rbx - 0x6ff1b9f9], al ; add dword ptr [rbx], eax ; ret
0x00000000001b2b58 : cmp byte ptr [rbx - 9], cl ; call qword ptr [rbx]
0x00000000000a2bb7 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000019b104 : cmp byte ptr [rbx], bh ; out dx, al ; jmp qword ptr [rdx]
0x0000000000074e40 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000000a44a0 : cmp byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000a3d49 : cmp byte ptr [rcx + rcx*4 - 0xf], cl ; mov rdi, qword ptr [r13] ; call r12
0x00000000000f2318 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x0000000000051ea8 : cmp byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000121cb9 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000922f8 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000015e439 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000002c232 : cmp byte ptr [rcx], bh ; add byte ptr [rax + 0x39], cl ; ret 0x7773
0x000000000009edb4 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00000000001a7de8 : cmp byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000002044 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000048748 : cmp byte ptr [rdi], 0 ; jne 0x48756 ; pop rbx ; ret
0x00000000000e22ab : cmp byte ptr [rdi], cl ; mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x0000000000045b1b : cmp byte ptr [rdi], cl ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x00000000000409a2 : cmp byte ptr [rdi], cl ; test byte ptr [rdi + rbx*8 - 1], bl ; dec dword ptr [rax + 0x39] ; ret
0x000000000007d343 : cmp byte ptr [rdi], dh ; xor al, 0 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000016070d : cmp byte ptr [rdi], dl ; ret
0x0000000000161220 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000161209 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001611f2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000015fcae : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001aeab8 : cmp byte ptr [rdx - 0xa], bl ; call qword ptr [rdi]
0x0000000000192b50 : cmp byte ptr [rdx], 0xfa ; jmp qword ptr [rcx]
0x00000000000d0ba0 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xd0bb8 ; xor eax, eax ; ret
0x00000000000f09c2 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x00000000001b4f58 : cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000000d1d46 : cmp byte ptr [rsi], cl ; je 0xd1cd7 ; pop rbx ; ret
0x0000000000037bf6 : cmp byte ptr fs:[rax], al ; mov eax, edx ; ret
0x0000000000037ba3 : cmp byte ptr fs:[rax], al ; ret
0x00000000001ac4b0 : cmp ch, 0xf5 ; call qword ptr [rax]
0x0000000000186944 : cmp ch, 0xfb ; call rax
0x00000000001999c4 : cmp ch, bh ; in eax, dx ; jmp qword ptr [rdx]
0x000000000013cb0a : cmp ch, byte ptr [rcx] ; ret 0xca39
0x00000000001a8121 : cmp ch, dh ; jmp qword ptr [rax]
0x000000000019af9d : cmp ch, dh ; jmp qword ptr [rdx]
0x00000000001a8db4 : cmp cl, ah ; hlt ; jmp qword ptr [rdx]
0x0000000000073445 : cmp cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000b8b7a : cmp cl, byte ptr [rax - 0x75] ; jl 0xb8bab ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000c08b0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bf3b1 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x48c
0x0000000000083df1 : cmp cl, byte ptr [rbx + rcx*4 + 0x47] ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000000f5fea : cmp cl, byte ptr [rcx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000048c3c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000048745 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000001a8239 : cmp dh, ch ; jmp qword ptr [rcx]
0x00000000000ee365 : cmp dh, dh ; ret
0x0000000000039719 : cmp dh, dh ; ret 0x7401
0x0000000000098345 : cmp dh, dh ; ret 0x7501
0x0000000000025d05 : cmp dh, dh ; ret 0x8b01
0x00000000001862ac : cmp dil, bl ; jmp rax
0x00000000000acfda : cmp dl, 0xff ; cmovne eax, ecx ; ret
0x0000000000002b62 : cmp dl, byte ptr [rdi] ; ret
0x0000000000127402 : cmp dl, byte ptr [rdx - 0x76b70010] ; ret 0xbfeb
0x00000000001900f9 : cmp dl, ch ; call qword ptr [rdx]
0x0000000000036b32 : cmp dl, ch ; cmp byte ptr [rax], al ; test eax, eax ; jne 0x36b49 ; ret
0x0000000000190095 : cmp dl, ch ; jmp qword ptr [rdx]
0x0000000000070b3b : cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x000000000010799a : cmp dword ptr [rax + 8], edi ; jne 0x107999 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000012b808 : cmp dword ptr [rax], 0x18 ; je 0x12b815 ; ret
0x0000000000055b12 : cmp dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000025514 : cmp dword ptr [rax], eax ; call 0x24928
0x000000000002ef86 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x390cef], dl ; ret
0x0000000000021b1f : cmp dword ptr [rax], eax ; pop r12 ; ret
0x000000000002c165 : cmp dword ptr [rax], eax ; ret
0x0000000000022105 : cmp dword ptr [rax], eax ; test rax, rax ; je 0x22115 ; jmp rax
0x0000000000022135 : cmp dword ptr [rax], eax ; test rax, rax ; je 0x22145 ; jmp rax
0x00000000000d0c90 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd0c27
0x000000000014c0f8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000e4bbe : cmp dword ptr [rcx - 8], 0 ; je 0xe4bcf ; mov edx, eax ; jmp 0xe4bbd
0x00000000001a1b75 : cmp dword ptr [rcx], eax ; add al, ch ; out -0xf, eax ; jmp rsi
0x0000000000102521 : cmp dword ptr [rdi + 0x10], 0 ; je 0x102538 ; xor eax, eax ; ret
0x0000000000072eb9 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000000b0094 : cmp dword ptr [rdi + 8], edx ; jne 0xb0063 ; ret
0x00000000000a3769 : cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x0000000000107a1a : cmp dword ptr [rdi], 0 ; je 0x107a2e ; ret
0x000000000003d8d2 : cmp dword ptr [rdx + r14*4], 0x40 ; jle 0x3d898 ; jmp 0x3d8a5
0x000000000003d8d3 : cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x3d897 ; jmp 0x3d8a4
0x000000000019b38c : cmp dword ptr [rdx - 0x12], eax ; jmp qword ptr [rdx]
0x00000000001acbb6 : cmp dword ptr [rdx - 0xb], 0x3d0d1cff ; jp 0x1acbbd ; jmp qword ptr [rdx]
0x00000000000fd423 : cmp dword ptr [rdx], ecx ; sub al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010fad1 : cmp dword ptr [rip + 0x2afee8], 0 ; jne 0x10faa4 ; jmp 0x10fa9c
0x00000000000863f1 : cmp dword ptr [rip + 0x33a838], 0 ; je 0x86409 ; ret
0x00000000000f4b0f : cmp dword ptr [rsi], 0 ; je 0xf4b38 ; pop rbx ; ret
0x00000000000037f6 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000ebbdc : cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0xebba2
0x00000000000ebacc : cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x000000000012b807 : cmp dword ptr fs:[rax], 0x18 ; je 0x12b816 ; ret
0x0000000000003b5b : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000a546e : cmp eax, 0x13 ; je 0xa5486 ; mov edx, eax ; jmp 0xa5446
0x00000000000a7c0e : cmp eax, 0x13 ; je 0xa7c26 ; mov edx, eax ; jmp 0xa7be6
0x00000000000aa20e : cmp eax, 0x13 ; je 0xaa226 ; mov edx, eax ; jmp 0xaa1e6
0x000000000010fad2 : cmp eax, 0x2afee8 ; add byte ptr [rbp - 0x3e], dh ; jmp 0x10fa9b
0x00000000001120b2 : cmp eax, 0x2b0ec9 ; call rax
0x00000000001117e7 : cmp eax, 0x2b1734 ; call rax
0x00000000000f464b : cmp eax, 0x2c9c60 ; ret
0x00000000000225fe : cmp eax, 0x3a15fd ; pop rbx ; ret
0x00000000000bc25f : cmp eax, 0x48ffffdd ; add esp, 0x18 ; ret
0x00000000000cb16f : cmp eax, 0x48ffffff ; add esp, 0x18 ; ret
0x000000000011ab0a : cmp eax, 0x64ba9 ; mov esi, ebp ; call 0x86d49
0x000000000006717c : cmp eax, 0x83000005 ; ret 0x8308
0x000000000006033c : cmp eax, 0x83480004 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000080acf : cmp eax, 0x83480007 ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000004629f : cmp eax, 0x890037a4 ; ret
0x000000000011b982 : cmp eax, 0x89480006 ; ret 0x1be
0x00000000000973a7 : cmp eax, 0x89480f75 ; clc ; ret
0x00000000000ed2a0 : cmp eax, 0xa1 ; je 0xed2c0 ; neg eax ; pop rbx ; ret
0x000000000009749a : cmp eax, 0xeb000000 ; ret
0x000000000013cdb3 : cmp eax, 0xf3ffffff ; ret
0x0000000000114500 : cmp eax, 0xf5 ; je 0x1144fe ; pop rbx ; ret
0x0000000000132f8e : cmp eax, 0xff ; je 0x132fa9 ; add rsp, 8 ; ret
0x000000000002209e : cmp eax, 0xff ; je 0x220cc ; add rsp, 8 ; ret
0x000000000007505a : cmp eax, 0xff ; je 0x7506b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007509e : cmp eax, 0xff ; je 0x750af ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007bd71 : cmp eax, 0xff ; je 0x7bd82 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000fa61b : cmp eax, 0xff ; je 0xfa62f ; pop rbx ; pop rbp ; ret
0x0000000000038574 : cmp eax, 0xff ; jne 0x38569 ; mov rax, rdx ; ret
0x00000000000769c9 : cmp eax, 0xff ; jne 0x769d6 ; pop rbx ; ret
0x000000000007bdbf : cmp eax, 0xff ; jne 0x7bdb0 ; pop rbx ; ret
0x0000000000114811 : cmp eax, 0xff ; mov dl, 2 ; cmove eax, edx ; ret
0x000000000010881b : cmp eax, 0xfffff000 ; ja 0x10882c ; ret
0x0000000000108898 : cmp eax, 0xfffff000 ; ja 0x1088c2 ; ret
0x0000000000109eed : cmp eax, 0xfffff000 ; ja 0x109efe ; ret
0x0000000000109f8d : cmp eax, 0xfffff000 ; ja 0x109f9e ; ret
0x0000000000036c38 : cmp eax, 0xfffff000 ; ja 0x36c65 ; ret
0x0000000000036ee1 : cmp eax, 0xfffff000 ; ja 0x36ef2 ; ret
0x0000000000036f3d : cmp eax, 0xfffff000 ; ja 0x36f4e ; ret
0x0000000000036f77 : cmp eax, 0xfffff000 ; ja 0x36f86 ; ret
0x0000000000036ffd : cmp eax, 0xfffff000 ; ja 0x3700e ; ret
0x000000000005dbd1 : cmp eax, 0xfffff000 ; ja 0x5dbe2 ; ret
0x00000000000bdf92 : cmp eax, 0xfffff000 ; ja 0xbdfa1 ; ret
0x00000000000c0983 : cmp eax, 0xfffff000 ; ja 0xc0992 ; ret
0x00000000000c0a0d : cmp eax, 0xfffff000 ; ja 0xc0a1c ; ret
0x00000000000c0afc : cmp eax, 0xfffff000 ; ja 0xc0b0b ; ret
0x00000000000c11e8 : cmp eax, 0xfffff000 ; ja 0xc11f9 ; ret
0x00000000000c1d94 : cmp eax, 0xfffff000 ; ja 0xc1da3 ; ret
0x00000000000c1df4 : cmp eax, 0xfffff000 ; ja 0xc1e03 ; ret
0x00000000000c2048 : cmp eax, 0xfffff000 ; ja 0xc2057 ; ret
0x00000000000c20b8 : cmp eax, 0xfffff000 ; ja 0xc20c7 ; ret
0x00000000000eb046 : cmp eax, 0xfffff000 ; ja 0xeb06c ; ret
0x00000000000eb095 : cmp eax, 0xfffff000 ; ja 0xeb0bc ; ret
0x00000000000eb0e6 : cmp eax, 0xfffff000 ; ja 0xeb10c ; ret
0x00000000000eb13e : cmp eax, 0xfffff000 ; ja 0xeb16c ; ret
0x00000000000eb1a2 : cmp eax, 0xfffff000 ; ja 0xeb1cc ; ret
0x00000000000eb1fb : cmp eax, 0xfffff000 ; ja 0xeb224 ; ret
0x00000000000eb3fa : cmp eax, 0xfffff000 ; ja 0xeb40b ; ret
0x00000000000eb48d : cmp eax, 0xfffff000 ; ja 0xeb49e ; ret
0x00000000000eb561 : cmp eax, 0xfffff000 ; ja 0xeb572 ; ret
0x00000000000eba8a : cmp eax, 0xfffff000 ; ja 0xebb08 ; ret
0x00000000000ec853 : cmp eax, 0xfffff000 ; ja 0xec864 ; ret
0x00000000000ece44 : cmp eax, 0xfffff000 ; ja 0xece55 ; ret
0x00000000000ece9b : cmp eax, 0xfffff000 ; ja 0xeceac ; ret
0x00000000000ecefe : cmp eax, 0xfffff000 ; ja 0xecf11 ; cdqe ; ret
0x00000000000ecf5e : cmp eax, 0xfffff000 ; ja 0xecf6f ; ret
0x00000000000ed313 : cmp eax, 0xfffff000 ; ja 0xed324 ; ret
0x00000000000ed367 : cmp eax, 0xfffff000 ; ja 0xed378 ; ret
0x00000000000f053b : cmp eax, 0xfffff000 ; ja 0xf054a ; ret
0x00000000000f0a51 : cmp eax, 0xfffff000 ; ja 0xf0a60 ; ret
0x00000000000f1228 : cmp eax, 0xfffff000 ; ja 0xf1237 ; ret
0x00000000000f12c8 : cmp eax, 0xfffff000 ; ja 0xf12d7 ; ret
0x00000000000f1846 : cmp eax, 0xfffff000 ; ja 0xf1855 ; ret
0x00000000000f18b6 : cmp eax, 0xfffff000 ; ja 0xf18c5 ; ret
0x00000000000f1933 : cmp eax, 0xfffff000 ; ja 0xf1942 ; ret
0x00000000000f19d3 : cmp eax, 0xfffff000 ; ja 0xf19e2 ; ret
0x00000000000f1f07 : cmp eax, 0xfffff000 ; ja 0xf1f18 ; ret
0x00000000000f2ee8 : cmp eax, 0xfffff000 ; ja 0xf2ef9 ; ret
0x00000000000f2f74 : cmp eax, 0xfffff000 ; ja 0xf2fa4 ; ret
0x00000000000f300c : cmp eax, 0xfffff000 ; ja 0xf303c ; ret
0x00000000000f3060 : cmp eax, 0xfffff000 ; ja 0xf3071 ; ret
0x00000000000f7812 : cmp eax, 0xfffff000 ; ja 0xf783c ; ret
0x00000000000fa2ee : cmp eax, 0xfffff000 ; ja 0xfa301 ; pop rbx ; pop rbp ; ret
0x00000000000fa551 : cmp eax, 0xfffff000 ; ja 0xfa560 ; ret
0x00000000000fb28e : cmp eax, 0xfffff000 ; ja 0xfb29d ; ret
0x00000000000fb3fe : cmp eax, 0xfffff000 ; ja 0xfb40d ; ret
0x00000000000fb9c8 : cmp eax, 0xfffff000 ; ja 0xfb9d7 ; ret
0x00000000000fba6a : cmp eax, 0xfffff000 ; ja 0xfba79 ; ret
0x00000000000fbb1a : cmp eax, 0xfffff000 ; ja 0xfbb29 ; ret
0x0000000000132d1b : cmp eax, 0xfffff001 ; jae 0x132d2a ; ret
0x0000000000132d6b : cmp eax, 0xfffff001 ; jae 0x132d7a ; ret
0x0000000000036f08 : cmp eax, 0xfffff001 ; jae 0x36f17 ; ret
0x00000000000374c8 : cmp eax, 0xfffff001 ; jae 0x374d7 ; ret
0x0000000000047112 : cmp eax, 0xfffff001 ; jae 0x47125 ; xor eax, eax ; ret
0x000000000005db98 : cmp eax, 0xfffff001 ; jae 0x5dba7 ; ret
0x00000000000b1418 : cmp eax, 0xfffff001 ; jae 0xb1427 ; ret
0x00000000000b4268 : cmp eax, 0xfffff001 ; jae 0xb4277 ; ret
0x00000000000b4298 : cmp eax, 0xfffff001 ; jae 0xb42a7 ; ret
0x00000000000c08d8 : cmp eax, 0xfffff001 ; jae 0xc08e7 ; ret
0x00000000000c0abb : cmp eax, 0xfffff001 ; jae 0xc0aca ; ret
0x00000000000c0b98 : cmp eax, 0xfffff001 ; jae 0xc0ba7 ; ret
0x00000000000c0d81 : cmp eax, 0xfffff001 ; jae 0xc0dc0 ; ret
0x00000000000c0de1 : cmp eax, 0xfffff001 ; jae 0xc0e20 ; ret
0x00000000000c1162 : cmp eax, 0xfffff001 ; jae 0xc1171 ; ret
0x00000000000c1d58 : cmp eax, 0xfffff001 ; jae 0xc1d67 ; ret
0x00000000000c1ee8 : cmp eax, 0xfffff001 ; jae 0xc1ef7 ; ret
0x00000000000c1f18 : cmp eax, 0xfffff001 ; jae 0xc1f27 ; ret
0x00000000000c1f78 : cmp eax, 0xfffff001 ; jae 0xc1f87 ; ret
0x00000000000c1fa8 : cmp eax, 0xfffff001 ; jae 0xc1fb7 ; ret
0x00000000000c1fd8 : cmp eax, 0xfffff001 ; jae 0xc1fe7 ; ret
0x00000000000c2008 : cmp eax, 0xfffff001 ; jae 0xc2017 ; ret
0x00000000000cb1e8 : cmp eax, 0xfffff001 ; jae 0xcb1f7 ; ret
0x00000000000cb218 : cmp eax, 0xfffff001 ; jae 0xcb227 ; ret
0x00000000000cb248 : cmp eax, 0xfffff001 ; jae 0xcb257 ; ret
0x00000000000cb278 : cmp eax, 0xfffff001 ; jae 0xcb287 ; ret
0x00000000000cb2a8 : cmp eax, 0xfffff001 ; jae 0xcb2b7 ; ret
0x00000000000cb2d8 : cmp eax, 0xfffff001 ; jae 0xcb2e7 ; ret
0x00000000000cb308 : cmp eax, 0xfffff001 ; jae 0xcb317 ; ret
0x00000000000cb338 : cmp eax, 0xfffff001 ; jae 0xcb347 ; ret
0x00000000000cb554 : cmp eax, 0xfffff001 ; jae 0xcb596 ; ret
0x00000000000cb5b4 : cmp eax, 0xfffff001 ; jae 0xcb5f6 ; ret
0x00000000000eaf85 : cmp eax, 0xfffff001 ; jae 0xeaf98 ; mov eax, edx ; ret
0x00000000000eafa8 : cmp eax, 0xfffff001 ; jae 0xeafb7 ; ret
0x00000000000eb238 : cmp eax, 0xfffff001 ; jae 0xeb247 ; ret
0x00000000000eb268 : cmp eax, 0xfffff001 ; jae 0xeb277 ; ret
0x00000000000eb388 : cmp eax, 0xfffff001 ; jae 0xeb397 ; ret
0x00000000000eb3b8 : cmp eax, 0xfffff001 ; jae 0xeb3c7 ; ret
0x00000000000eb458 : cmp eax, 0xfffff001 ; jae 0xeb467 ; ret
0x00000000000eb4c1 : cmp eax, 0xfffff001 ; jae 0xeb500 ; ret
0x00000000000eb6b1 : cmp eax, 0xfffff001 ; jae 0xeb6f0 ; ret
0x00000000000eb711 : cmp eax, 0xfffff001 ; jae 0xeb750 ; ret
0x00000000000eb768 : cmp eax, 0xfffff001 ; jae 0xeb777 ; ret
0x00000000000ebcc8 : cmp eax, 0xfffff001 ; jae 0xebcd7 ; ret
0x00000000000ebe11 : cmp eax, 0xfffff001 ; jae 0xebe50 ; ret
0x00000000000ebe68 : cmp eax, 0xfffff001 ; jae 0xebe77 ; ret
0x00000000000ebe98 : cmp eax, 0xfffff001 ; jae 0xebea7 ; ret
0x00000000000ebec8 : cmp eax, 0xfffff001 ; jae 0xebed7 ; ret
0x00000000000ebef8 : cmp eax, 0xfffff001 ; jae 0xebf07 ; ret
0x00000000000ebf28 : cmp eax, 0xfffff001 ; jae 0xebf37 ; ret
0x00000000000ebf61 : cmp eax, 0xfffff001 ; jae 0xebfa0 ; ret
0x00000000000ebfb8 : cmp eax, 0xfffff001 ; jae 0xebfc7 ; ret
0x00000000000ebfe8 : cmp eax, 0xfffff001 ; jae 0xebff7 ; ret
0x00000000000ec7b8 : cmp eax, 0xfffff001 ; jae 0xec7c7 ; ret
0x00000000000ec7e8 : cmp eax, 0xfffff001 ; jae 0xec7f7 ; ret
0x00000000000ec818 : cmp eax, 0xfffff001 ; jae 0xec827 ; ret
0x00000000000ece08 : cmp eax, 0xfffff001 ; jae 0xece17 ; ret
0x00000000000ece68 : cmp eax, 0xfffff001 ; jae 0xece77 ; ret
0x00000000000ecec8 : cmp eax, 0xfffff001 ; jae 0xeced7 ; ret
0x00000000000ecf28 : cmp eax, 0xfffff001 ; jae 0xecf37 ; ret
0x00000000000ecf88 : cmp eax, 0xfffff001 ; jae 0xecf97 ; ret
0x00000000000ecfc1 : cmp eax, 0xfffff001 ; jae 0xed000 ; ret
0x00000000000ed2db : cmp eax, 0xfffff001 ; jae 0xed2ea ; ret
0x00000000000f04d4 : cmp eax, 0xfffff001 ; jae 0xf0516 ; ret
0x00000000000f0c08 : cmp eax, 0xfffff001 ; jae 0xf0c17 ; ret
0x00000000000f0c38 : cmp eax, 0xfffff001 ; jae 0xf0c47 ; ret
0x00000000000f0c68 : cmp eax, 0xfffff001 ; jae 0xf0c77 ; ret
0x00000000000f1028 : cmp eax, 0xfffff001 ; jae 0xf1037 ; ret
0x00000000000f11e8 : cmp eax, 0xfffff001 ; jae 0xf11f7 ; ret
0x00000000000f1b58 : cmp eax, 0xfffff001 ; jae 0xf1b67 ; ret
0x00000000000f1bf8 : cmp eax, 0xfffff001 ; jae 0xf1c07 ; ret
0x00000000000f1c34 : cmp eax, 0xfffff001 ; jae 0xf1c76 ; ret
0x00000000000f1d78 : cmp eax, 0xfffff001 ; jae 0xf1d87 ; ret
0x00000000000f1da8 : cmp eax, 0xfffff001 ; jae 0xf1db7 ; ret
0x00000000000f1de1 : cmp eax, 0xfffff001 ; jae 0xf1e20 ; ret
0x00000000000f1e38 : cmp eax, 0xfffff001 ; jae 0xf1e47 ; ret
0x00000000000f1e71 : cmp eax, 0xfffff001 ; jae 0xf1eb0 ; ret
0x00000000000f1ec8 : cmp eax, 0xfffff001 ; jae 0xf1ed7 ; ret
0x00000000000f2188 : cmp eax, 0xfffff001 ; jae 0xf2197 ; ret
0x00000000000f21b8 : cmp eax, 0xfffff001 ; jae 0xf21c7 ; ret
0x00000000000f21e8 : cmp eax, 0xfffff001 ; jae 0xf21f7 ; ret
0x00000000000f3098 : cmp eax, 0xfffff001 ; jae 0xf30a7 ; ret
0x00000000000f30c8 : cmp eax, 0xfffff001 ; jae 0xf30d7 ; ret
0x00000000000f470a : cmp eax, 0xfffff001 ; jae 0xf4719 ; ret
0x00000000000f487b : cmp eax, 0xfffff001 ; jae 0xf488a ; ret
0x00000000000f48a8 : cmp eax, 0xfffff001 ; jae 0xf48b7 ; ret
0x00000000000f48d8 : cmp eax, 0xfffff001 ; jae 0xf48e7 ; ret
0x00000000000f4911 : cmp eax, 0xfffff001 ; jae 0xf4950 ; ret
0x00000000000f4968 : cmp eax, 0xfffff001 ; jae 0xf4977 ; ret
0x00000000000f4998 : cmp eax, 0xfffff001 ; jae 0xf49a7 ; ret
0x00000000000f49cb : cmp eax, 0xfffff001 ; jae 0xf49da ; ret
0x00000000000f49f8 : cmp eax, 0xfffff001 ; jae 0xf4a07 ; ret
0x00000000000f4a28 : cmp eax, 0xfffff001 ; jae 0xf4a37 ; ret
0x00000000000f4a58 : cmp eax, 0xfffff001 ; jae 0xf4a67 ; ret
0x00000000000f4a88 : cmp eax, 0xfffff001 ; jae 0xf4a97 ; ret
0x00000000000f800b : cmp eax, 0xfffff001 ; jae 0xf801a ; ret
0x00000000000f8038 : cmp eax, 0xfffff001 ; jae 0xf8047 ; ret
0x00000000000f8068 : cmp eax, 0xfffff001 ; jae 0xf8077 ; ret
0x00000000000f809b : cmp eax, 0xfffff001 ; jae 0xf80aa ; ret
0x00000000000f80cb : cmp eax, 0xfffff001 ; jae 0xf80da ; ret
0x00000000000f80f8 : cmp eax, 0xfffff001 ; jae 0xf8107 ; ret
0x00000000000f812b : cmp eax, 0xfffff001 ; jae 0xf813a ; ret
0x00000000000f8158 : cmp eax, 0xfffff001 ; jae 0xf8167 ; ret
0x00000000000f8188 : cmp eax, 0xfffff001 ; jae 0xf8197 ; ret
0x00000000000f81bb : cmp eax, 0xfffff001 ; jae 0xf81ca ; ret
0x00000000000f81e8 : cmp eax, 0xfffff001 ; jae 0xf81f7 ; ret
0x00000000000f821b : cmp eax, 0xfffff001 ; jae 0xf822a ; ret
0x00000000000fa258 : cmp eax, 0xfffff001 ; jae 0xfa267 ; ret
0x00000000000fa288 : cmp eax, 0xfffff001 ; jae 0xfa297 ; ret
0x00000000000fa3b1 : cmp eax, 0xfffff001 ; jae 0xfa3f0 ; ret
0x00000000000fa418 : cmp eax, 0xfffff001 ; jae 0xfa427 ; ret
0x00000000000fa448 : cmp eax, 0xfffff001 ; jae 0xfa457 ; ret
0x00000000000fa478 : cmp eax, 0xfffff001 ; jae 0xfa487 ; ret
0x00000000000fa4a8 : cmp eax, 0xfffff001 ; jae 0xfa4b7 ; ret
0x00000000000fa76b : cmp eax, 0xfffff001 ; jae 0xfa77a ; ret
0x00000000000fa798 : cmp eax, 0xfffff001 ; jae 0xfa7a7 ; ret
0x00000000000fa7c8 : cmp eax, 0xfffff001 ; jae 0xfa7d7 ; ret
0x00000000000fa80b : cmp eax, 0xfffff001 ; jae 0xfa81a ; ret
0x00000000000fa838 : cmp eax, 0xfffff001 ; jae 0xfa847 ; ret
0x00000000000fa868 : cmp eax, 0xfffff001 ; jae 0xfa877 ; ret
0x00000000000fa898 : cmp eax, 0xfffff001 ; jae 0xfa8a7 ; ret
0x00000000000fa8c8 : cmp eax, 0xfffff001 ; jae 0xfa8d7 ; ret
0x00000000000fa8f8 : cmp eax, 0xfffff001 ; jae 0xfa907 ; ret
0x00000000000fa928 : cmp eax, 0xfffff001 ; jae 0xfa937 ; ret
0x00000000000fa958 : cmp eax, 0xfffff001 ; jae 0xfa967 ; ret
0x00000000000fa988 : cmp eax, 0xfffff001 ; jae 0xfa997 ; ret
0x00000000000fa9bb : cmp eax, 0xfffff001 ; jae 0xfa9ca ; ret
0x00000000000fa9f4 : cmp eax, 0xfffff001 ; jae 0xfaa36 ; ret
0x00000000000faa48 : cmp eax, 0xfffff001 ; jae 0xfaa57 ; ret
0x00000000000faa7b : cmp eax, 0xfffff001 ; jae 0xfaa8a ; ret
0x00000000000faaa8 : cmp eax, 0xfffff001 ; jae 0xfaab7 ; ret
0x00000000000faad8 : cmp eax, 0xfffff001 ; jae 0xfaae7 ; ret
0x00000000000fab08 : cmp eax, 0xfffff001 ; jae 0xfab17 ; ret
0x00000000000fab38 : cmp eax, 0xfffff001 ; jae 0xfab47 ; ret
0x00000000000fab68 : cmp eax, 0xfffff001 ; jae 0xfab77 ; ret
0x00000000000fab9b : cmp eax, 0xfffff001 ; jae 0xfabaa ; ret
0x00000000000fabcb : cmp eax, 0xfffff001 ; jae 0xfabda ; ret
0x00000000000fabf8 : cmp eax, 0xfffff001 ; jae 0xfac07 ; ret
0x00000000000fac28 : cmp eax, 0xfffff001 ; jae 0xfac37 ; ret
0x00000000000fac58 : cmp eax, 0xfffff001 ; jae 0xfac67 ; ret
0x00000000000fac8b : cmp eax, 0xfffff001 ; jae 0xfac9a ; ret
0x00000000000facbb : cmp eax, 0xfffff001 ; jae 0xfacca ; ret
0x00000000000faceb : cmp eax, 0xfffff001 ; jae 0xfacfa ; ret
0x00000000000fad24 : cmp eax, 0xfffff001 ; jae 0xfad66 ; ret
0x00000000000fad78 : cmp eax, 0xfffff001 ; jae 0xfad87 ; ret
0x00000000000fadb4 : cmp eax, 0xfffff001 ; jae 0xfadf6 ; ret
0x00000000000fae08 : cmp eax, 0xfffff001 ; jae 0xfae17 ; ret
0x00000000000fae38 : cmp eax, 0xfffff001 ; jae 0xfae47 ; ret
0x00000000000fae74 : cmp eax, 0xfffff001 ; jae 0xfaeb6 ; ret
0x00000000000faec8 : cmp eax, 0xfffff001 ; jae 0xfaed7 ; ret
0x00000000000faefb : cmp eax, 0xfffff001 ; jae 0xfaf0a ; ret
0x00000000000faf28 : cmp eax, 0xfffff001 ; jae 0xfaf37 ; ret
0x00000000000faf58 : cmp eax, 0xfffff001 ; jae 0xfaf67 ; ret
0x00000000000faf8b : cmp eax, 0xfffff001 ; jae 0xfaf9a ; ret
0x00000000000fafc1 : cmp eax, 0xfffff001 ; jae 0xfb000 ; ret
0x00000000000fb018 : cmp eax, 0xfffff001 ; jae 0xfb027 ; ret
0x00000000000fb04b : cmp eax, 0xfffff001 ; jae 0xfb05a ; ret
0x00000000000fb07b : cmp eax, 0xfffff001 ; jae 0xfb08a ; ret
0x00000000000fb0d1 : cmp eax, 0xfffff001 ; jae 0xfb110 ; ret
0x00000000000fb128 : cmp eax, 0xfffff001 ; jae 0xfb137 ; ret
0x00000000000fb161 : cmp eax, 0xfffff001 ; jae 0xfb1a0 ; ret
0x00000000000fb1b8 : cmp eax, 0xfffff001 ; jae 0xfb1c7 ; ret
0x00000000000fb1e8 : cmp eax, 0xfffff001 ; jae 0xfb1f7 ; ret
0x00000000000fb21b : cmp eax, 0xfffff001 ; jae 0xfb22a ; ret
0x00000000000fb248 : cmp eax, 0xfffff001 ; jae 0xfb257 ; ret
0x00000000000fb334 : cmp eax, 0xfffff001 ; jae 0xfb376 ; ret
0x00000000000fb391 : cmp eax, 0xfffff001 ; jae 0xfb3d0 ; ret
0x00000000000fb4a1 : cmp eax, 0xfffff001 ; jae 0xfb4e0 ; ret
0x00000000000fb504 : cmp eax, 0xfffff001 ; jae 0xfb546 ; ret
0x00000000000fb55b : cmp eax, 0xfffff001 ; jae 0xfb56a ; ret
0x00000000000fb588 : cmp eax, 0xfffff001 ; jae 0xfb597 ; ret
0x00000000000fb5b8 : cmp eax, 0xfffff001 ; jae 0xfb5c7 ; ret
0x00000000000fb5eb : cmp eax, 0xfffff001 ; jae 0xfb5fa ; ret
0x00000000000fbc74 : cmp eax, 0xfffff001 ; jae 0xfbcb6 ; ret
0x00000000000fbcd4 : cmp eax, 0xfffff001 ; jae 0xfbd16 ; ret
0x00000000000fbd28 : cmp eax, 0xfffff001 ; jae 0xfbd37 ; ret
0x00000000000fbd58 : cmp eax, 0xfffff001 ; jae 0xfbd67 ; ret
0x00000000000fbd88 : cmp eax, 0xfffff001 ; jae 0xfbd97 ; ret
0x00000000000fbdb8 : cmp eax, 0xfffff001 ; jae 0xfbdc7 ; ret
0x00000000000fbdeb : cmp eax, 0xfffff001 ; jae 0xfbdfa ; ret
0x00000000000fbe1b : cmp eax, 0xfffff001 ; jae 0xfbe2a ; ret
0x00000000000fbe48 : cmp eax, 0xfffff001 ; jae 0xfbe57 ; ret
0x00000000000fbe78 : cmp eax, 0xfffff001 ; jae 0xfbe87 ; ret
0x00000000000fbea8 : cmp eax, 0xfffff001 ; jae 0xfbeb7 ; ret
0x00000000000fbed8 : cmp eax, 0xfffff001 ; jae 0xfbee7 ; ret
0x000000000010ad3f : cmp eax, 0xfffffe8c ; call rax
0x00000000000940aa : cmp eax, 1 ; ja 0x94091 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cfd1 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000d498e : cmp eax, 3 ; je 0xd49a8 ; xor eax, eax ; pop rbx ; ret
0x000000000010812a : cmp eax, 4 ; je 0x108135 ; ret
0x00000000000c4784 : cmp eax, dword ptr [rax - 0x6bf08406] ; ret 0xb60f
0x0000000000070b5e : cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x00000000001b1d05 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], cl ; or al, 0xf7 ; call qword ptr [rsi]
0x00000000000a2ade : cmp eax, dword ptr [rsi + 0x10] ; jne 0xa2bd9 ; ret
0x00000000000a2af3 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xa2bd9 ; ret
0x00000000000a2b08 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xa2bd9 ; ret
0x00000000000a2b23 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xa2bd9 ; ret
0x00000000000a2b3e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xa2bd9 ; ret
0x00000000000a2b53 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xa2bd5 ; ret
0x00000000000a2b68 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xa2bd5 ; ret
0x00000000000a2b73 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa2bd5 ; ret
0x00000000000a2b8e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xa2bd5 ; ret
0x00000000000a2ba3 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xa2bd5 ; ret
0x00000000000a2bb8 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xa2bd5 ; ret
0x00000000000a2bc3 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa2bd5 ; ret
0x00000000000a2ac3 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xa2bd9 ; ret
0x00000000000a2a93 : cmp eax, dword ptr [rsi + 4] ; jne 0xa2bd9 ; ret
0x00000000000a2aa8 : cmp eax, dword ptr [rsi + 8] ; jne 0xa2bd9 ; ret
0x000000000016402a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x164169 ; ret
0x0000000000164043 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x164169 ; ret
0x0000000000164153 : cmp eax, dword ptr [rsi - 4] ; jne 0x164167 ; xor eax, eax ; ret
0x0000000000164073 : cmp eax, dword ptr [rsi - 4] ; jne 0x164169 ; ret
0x0000000000164058 : cmp eax, dword ptr [rsi - 8] ; jne 0x164169 ; ret
0x00000000000a2a7d : cmp eax, dword ptr [rsi] ; jne 0xa2bd8 ; ret
0x000000000004705b : cmp eax, ebx ; jne 0x47055 ; pop rbx ; ret
0x00000000001121b3 : cmp eax, ebx ; sub al, byte ptr [rax] ; ret
0x000000000007cbd9 : cmp eax, ecx ; jae 0x7cc07 ; movzx eax, byte ptr [rax] ; ret
0x0000000000096acc : cmp eax, ecx ; je 0x96abd ; ret
0x000000000013cdaf : cmp eax, ecx ; jle 0x13ccfd ; ret
0x0000000000003aab : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000163b43 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000012abe1 : cmp eax, edx ; je 0x12abf8 ; add rsp, 8 ; ret
0x00000000000381cd : cmp eax, edx ; jne 0x381c6 ; xor eax, eax ; ret
0x00000000000382ad : cmp eax, edx ; jne 0x382a6 ; xor eax, eax ; ret
0x0000000000096aff : cmp eax, esi ; jne 0x96af7 ; mov rax, rdi ; ret
0x000000000012cceb : cmp ebp, eax ; jmp qword ptr [rdi]
0x0000000000123aa9 : cmp ebp, eax ; push rcx ; cmp esp, 0xff ; jmp 0x123a7b
0x000000000019b105 : cmp ebp, esi ; jmp qword ptr [rdx]
0x00000000001080c6 : cmp ebx, 0xa ; je 0x1080d1 ; ret
0x000000000016517c : cmp ebx, ebp ; jae 0x16518f ; call qword ptr [rbx]
0x000000000016517c : cmp ebx, ebp ; jae 0x165193 ; call qword ptr [rbx]
0x00000000000cb70c : cmp ebx, esi ; ja 0xcb6a6 ; pop rbx ; pop rbp ; ret
0x0000000000047283 : cmp ecx, 0x2f ; jmp r8
0x0000000000092f0f : cmp ecx, 0xd ; je 0x92f29 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000038c5c : cmp ecx, 0xff ; jne 0x38c59 ; mov rax, rdx ; ret
0x00000000000a63a6 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000016123b : cmp ecx, eax ; jne 0x161269 ; xor eax, eax ; ret
0x000000000016207b : cmp ecx, eax ; jne 0x1620a9 ; xor eax, eax ; ret
0x00000000001620af : cmp ecx, eax ; jne 0x1620bc ; xor eax, eax ; ret
0x0000000000117ad5 : cmp ecx, eax ; sbb eax, eax ; ret
0x000000000007d64a : cmp ecx, edi ; je 0x7d486 ; ret
0x00000000000d85db : cmp ecx, edx ; call 0x42d00f28
0x0000000000096aa4 : cmp ecx, edx ; je 0x96a9d ; ret
0x00000000000a30c7 : cmp ecx, edx ; jne 0xa30b9 ; sub eax, r8d ; nop ; ret
0x0000000000096aa0 : cmp ecx, esi ; je 0x96aa1 ; cmp ecx, edx ; je 0x96aa1 ; ret
0x000000000007bdfa : cmp ecx, esi ; jne 0x7bdf7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001653b8 : cmp edi, 1 ; ja 0x1653c5 ; ret
0x00000000000fd925 : cmp edi, 9 ; setbe al ; ret
0x000000000006fbc5 : cmp edi, ebx ; je 0x6fbd4 ; call 0xebe0f
0x000000000004f1f5 : cmp edi, ecx ; ja 0x4f1df ; mov eax, r8d ; ret
0x0000000000117bcb : cmp edi, edx ; jne 0x117ba9 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000f8275 : cmp edi, edx ; jne 0xf8270 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000cb740 : cmp edi, esi ; ja 0xcb735 ; ret
0x00000000000c1cc8 : cmp edx, 0 ; mov eax, edx ; jle 0xc1cd9 ; ret
0x000000000010c57f : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000001087fe : cmp edx, 0xea ; cmovne eax, ecx ; ret
0x00000000000c0920 : cmp edx, 0xff ; cmovne rax, rdx ; ret
0x000000000006ebc1 : cmp edx, 0xff ; je 0x6ebd9 ; mov rax, rdx ; pop rbx ; ret
0x0000000000072a41 : cmp edx, 0xff ; je 0x72a59 ; mov rax, rdx ; pop rbx ; ret
0x00000000000fa6b0 : cmp edx, 0xff ; je 0xfa6c6 ; ret
0x00000000000c60b5 : cmp edx, 1 ; sete al ; ret
0x000000000002f96b : cmp edx, dword ptr [rdi + 4] ; jb 0x2f97e ; ret
0x00000000000472b4 : cmp edx, eax ; jg 0x47275 ; ret
0x00000000001082f2 : cmp edx, eax ; jne 0x1082d5 ; ret
0x00000000001900dd : cmp edx, ebp ; jmp qword ptr [rdx]
0x00000000000fbbf7 : cmp edx, ecx ; cmovae rax, rsi ; ret
0x000000000012e232 : cmp edx, ecx ; je 0x12e245 ; ret
0x0000000000096a88 : cmp edx, ecx ; je 0x96a85 ; ret
0x000000000008c56c : cmp edx, ecx ; jne 0x8c555 ; ret
0x00000000000c253b : cmp edx, ecx ; jne 0xc2575 ; ret
0x0000000000107a7a : cmp edx, edi ; setae al ; ret
0x0000000000117e16 : cmp edx, esi ; jb 0x117e0d ; mov eax, 0xffffffff ; ret
0x000000000003c9d9 : cmp esi, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000b9f40 : cmp esi, 1 ; je 0xb9f57 ; xor eax, eax ; ret
0x0000000000072fc8 : cmp esi, 2 ; je 0x72fe0 ; mov dword ptr [rdi], edx ; ret
0x0000000000121b8a : cmp esi, dword ptr [rdx + 0x28] ; ja 0x121b81 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001a8251 : cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000001a8329 : cmp esi, ebp ; jmp rbx
0x0000000000175e04 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000001f728 : cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f6fe
0x00000000000750fa : cmp esi, ecx ; jb 0x750f7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009160c : cmp esi, ecx ; jne 0x915fe ; xor eax, eax ; ret
0x000000000018bca1 : cmp esi, edi ; jmp rsp
0x00000000000497f2 : cmp esi, edi ; mov rax, rdi ; cmovae rax, rsi ; ret
0x0000000000117e8e : cmp esi, edx ; ja 0x117e7d ; mov eax, 0xffffffff ; ret
0x00000000000f10e4 : cmp esi, edx ; ja 0xf10f5 ; ret
0x0000000000187461 : cmp esp, 0xfc8090ff ; call qword ptr [rax]
0x0000000000123aac : cmp esp, 0xff ; jmp 0x123a78
0x0000000000178279 : cmp esp, 0xff ; mov al, 0x84 ; cld ; call rax
0x00000000000d473f : cmp esp, 0xff ; push rdi ; ret 0
0x00000000001869ed : cmp esp, edi ; jmp qword ptr [rax]
0x000000000018acc1 : cmp esp, esi ; call rsp
0x00000000000e4bbd : cmp qword ptr [rcx - 8], 0 ; je 0xe4bd0 ; mov edx, eax ; jmp 0xe4bbe
0x0000000000102520 : cmp qword ptr [rdi + 0x10], 0 ; je 0x102539 ; xor eax, eax ; ret
0x0000000000072eb8 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000107a19 : cmp qword ptr [rdi], 0 ; je 0x107a2f ; ret
0x000000000010fad0 : cmp qword ptr [rip + 0x2afee8], 0 ; jne 0x10faa5 ; jmp 0x10fa9d
0x00000000000f4b0e : cmp qword ptr [rsi], 0 ; je 0xf4b39 ; pop rbx ; ret
0x0000000000091e5a : cmp r11b, r14b ; ret
0x00000000001080c5 : cmp r11d, 0xa ; je 0x1080d2 ; ret
0x00000000000ee364 : cmp r14b, r14b ; ret
0x00000000000973a4 : cmp r8b, 0x3d ; jne 0x973c2 ; mov rax, rdi ; ret
0x00000000000fa61a : cmp r8d, 0xff ; je 0xfa630 ; pop rbx ; pop rbp ; ret
0x0000000000096acb : cmp r8d, ecx ; je 0x96abe ; ret
0x000000000010881a : cmp rax, -0x1000 ; ja 0x10882d ; ret
0x0000000000108897 : cmp rax, -0x1000 ; ja 0x1088c3 ; ret
0x0000000000109eec : cmp rax, -0x1000 ; ja 0x109eff ; ret
0x0000000000109f8c : cmp rax, -0x1000 ; ja 0x109f9f ; ret
0x0000000000036c37 : cmp rax, -0x1000 ; ja 0x36c66 ; ret
0x0000000000036ee0 : cmp rax, -0x1000 ; ja 0x36ef3 ; ret
0x0000000000036f3c : cmp rax, -0x1000 ; ja 0x36f4f ; ret
0x0000000000036f76 : cmp rax, -0x1000 ; ja 0x36f87 ; ret
0x0000000000036ffc : cmp rax, -0x1000 ; ja 0x3700f ; ret
0x000000000005dbd0 : cmp rax, -0x1000 ; ja 0x5dbe3 ; ret
0x00000000000bdf91 : cmp rax, -0x1000 ; ja 0xbdfa2 ; ret
0x00000000000c0982 : cmp rax, -0x1000 ; ja 0xc0993 ; ret
0x00000000000c0a0c : cmp rax, -0x1000 ; ja 0xc0a1d ; ret
0x00000000000c0afb : cmp rax, -0x1000 ; ja 0xc0b0c ; ret
0x00000000000c11e7 : cmp rax, -0x1000 ; ja 0xc11fa ; ret
0x00000000000c1d93 : cmp rax, -0x1000 ; ja 0xc1da4 ; ret
0x00000000000c1df3 : cmp rax, -0x1000 ; ja 0xc1e04 ; ret
0x00000000000c2047 : cmp rax, -0x1000 ; ja 0xc2058 ; ret
0x00000000000c20b7 : cmp rax, -0x1000 ; ja 0xc20c8 ; ret
0x00000000000eb045 : cmp rax, -0x1000 ; ja 0xeb06d ; ret
0x00000000000eb094 : cmp rax, -0x1000 ; ja 0xeb0bd ; ret
0x00000000000eb0e5 : cmp rax, -0x1000 ; ja 0xeb10d ; ret
0x00000000000eb13d : cmp rax, -0x1000 ; ja 0xeb16d ; ret
0x00000000000eb1a1 : cmp rax, -0x1000 ; ja 0xeb1cd ; ret
0x00000000000eb1fa : cmp rax, -0x1000 ; ja 0xeb225 ; ret
0x00000000000eb3f9 : cmp rax, -0x1000 ; ja 0xeb40c ; ret
0x00000000000eb48c : cmp rax, -0x1000 ; ja 0xeb49f ; ret
0x00000000000eb560 : cmp rax, -0x1000 ; ja 0xeb573 ; ret
0x00000000000eba89 : cmp rax, -0x1000 ; ja 0xebb09 ; ret
0x00000000000ec852 : cmp rax, -0x1000 ; ja 0xec865 ; ret
0x00000000000ece43 : cmp rax, -0x1000 ; ja 0xece56 ; ret
0x00000000000ece9a : cmp rax, -0x1000 ; ja 0xecead ; ret
0x00000000000ecf5d : cmp rax, -0x1000 ; ja 0xecf70 ; ret
0x00000000000ed312 : cmp rax, -0x1000 ; ja 0xed325 ; ret
0x00000000000ed366 : cmp rax, -0x1000 ; ja 0xed379 ; ret
0x00000000000f053a : cmp rax, -0x1000 ; ja 0xf054b ; ret
0x00000000000f0a50 : cmp rax, -0x1000 ; ja 0xf0a61 ; ret
0x00000000000f1227 : cmp rax, -0x1000 ; ja 0xf1238 ; ret
0x00000000000f12c7 : cmp rax, -0x1000 ; ja 0xf12d8 ; ret
0x00000000000f1845 : cmp rax, -0x1000 ; ja 0xf1856 ; ret
0x00000000000f18b5 : cmp rax, -0x1000 ; ja 0xf18c6 ; ret
0x00000000000f1932 : cmp rax, -0x1000 ; ja 0xf1943 ; ret
0x00000000000f19d2 : cmp rax, -0x1000 ; ja 0xf19e3 ; ret
0x00000000000f1f06 : cmp rax, -0x1000 ; ja 0xf1f19 ; ret
0x00000000000f2ee7 : cmp rax, -0x1000 ; ja 0xf2efa ; ret
0x00000000000f2f73 : cmp rax, -0x1000 ; ja 0xf2fa5 ; ret
0x00000000000f300b : cmp rax, -0x1000 ; ja 0xf303d ; ret
0x00000000000f305f : cmp rax, -0x1000 ; ja 0xf3072 ; ret
0x00000000000f7811 : cmp rax, -0x1000 ; ja 0xf783d ; ret
0x00000000000fa550 : cmp rax, -0x1000 ; ja 0xfa561 ; ret
0x00000000000fb28d : cmp rax, -0x1000 ; ja 0xfb29e ; ret
0x00000000000fb3fd : cmp rax, -0x1000 ; ja 0xfb40e ; ret
0x00000000000fb9c7 : cmp rax, -0x1000 ; ja 0xfb9d8 ; ret
0x00000000000fba69 : cmp rax, -0x1000 ; ja 0xfba7a ; ret
0x00000000000fbb19 : cmp rax, -0x1000 ; ja 0xfbb2a ; ret
0x0000000000132d1a : cmp rax, -0xfff ; jae 0x132d2b ; ret
0x0000000000132d6a : cmp rax, -0xfff ; jae 0x132d7b ; ret
0x0000000000036f07 : cmp rax, -0xfff ; jae 0x36f18 ; ret
0x00000000000374c7 : cmp rax, -0xfff ; jae 0x374d8 ; ret
0x000000000005db97 : cmp rax, -0xfff ; jae 0x5dba8 ; ret
0x00000000000b1417 : cmp rax, -0xfff ; jae 0xb1428 ; ret
0x00000000000b4267 : cmp rax, -0xfff ; jae 0xb4278 ; ret
0x00000000000b4297 : cmp rax, -0xfff ; jae 0xb42a8 ; ret
0x00000000000c08d7 : cmp rax, -0xfff ; jae 0xc08e8 ; ret
0x00000000000c0aba : cmp rax, -0xfff ; jae 0xc0acb ; ret
0x00000000000c0b97 : cmp rax, -0xfff ; jae 0xc0ba8 ; ret
0x00000000000c0d80 : cmp rax, -0xfff ; jae 0xc0dc1 ; ret
0x00000000000c0de0 : cmp rax, -0xfff ; jae 0xc0e21 ; ret
0x00000000000c1d57 : cmp rax, -0xfff ; jae 0xc1d68 ; ret
0x00000000000c1ee7 : cmp rax, -0xfff ; jae 0xc1ef8 ; ret
0x00000000000c1f17 : cmp rax, -0xfff ; jae 0xc1f28 ; ret
0x00000000000c1f77 : cmp rax, -0xfff ; jae 0xc1f88 ; ret
0x00000000000c1fa7 : cmp rax, -0xfff ; jae 0xc1fb8 ; ret
0x00000000000c1fd7 : cmp rax, -0xfff ; jae 0xc1fe8 ; ret
0x00000000000c2007 : cmp rax, -0xfff ; jae 0xc2018 ; ret
0x00000000000cb1e7 : cmp rax, -0xfff ; jae 0xcb1f8 ; ret
0x00000000000cb217 : cmp rax, -0xfff ; jae 0xcb228 ; ret
0x00000000000cb247 : cmp rax, -0xfff ; jae 0xcb258 ; ret
0x00000000000cb277 : cmp rax, -0xfff ; jae 0xcb288 ; ret
0x00000000000cb2a7 : cmp rax, -0xfff ; jae 0xcb2b8 ; ret
0x00000000000cb2d7 : cmp rax, -0xfff ; jae 0xcb2e8 ; ret
0x00000000000cb307 : cmp rax, -0xfff ; jae 0xcb318 ; ret
0x00000000000cb337 : cmp rax, -0xfff ; jae 0xcb348 ; ret
0x00000000000cb553 : cmp rax, -0xfff ; jae 0xcb597 ; ret
0x00000000000cb5b3 : cmp rax, -0xfff ; jae 0xcb5f7 ; ret
0x00000000000eafa7 : cmp rax, -0xfff ; jae 0xeafb8 ; ret
0x00000000000eb237 : cmp rax, -0xfff ; jae 0xeb248 ; ret
0x00000000000eb267 : cmp rax, -0xfff ; jae 0xeb278 ; ret
0x00000000000eb387 : cmp rax, -0xfff ; jae 0xeb398 ; ret
0x00000000000eb3b7 : cmp rax, -0xfff ; jae 0xeb3c8 ; ret
0x00000000000eb457 : cmp rax, -0xfff ; jae 0xeb468 ; ret
0x00000000000eb4c0 : cmp rax, -0xfff ; jae 0xeb501 ; ret
0x00000000000eb6b0 : cmp rax, -0xfff ; jae 0xeb6f1 ; ret
0x00000000000eb710 : cmp rax, -0xfff ; jae 0xeb751 ; ret
0x00000000000eb767 : cmp rax, -0xfff ; jae 0xeb778 ; ret
0x00000000000ebcc7 : cmp rax, -0xfff ; jae 0xebcd8 ; ret
0x00000000000ebe10 : cmp rax, -0xfff ; jae 0xebe51 ; ret
0x00000000000ebe67 : cmp rax, -0xfff ; jae 0xebe78 ; ret
0x00000000000ebe97 : cmp rax, -0xfff ; jae 0xebea8 ; ret
0x00000000000ebec7 : cmp rax, -0xfff ; jae 0xebed8 ; ret
0x00000000000ebef7 : cmp rax, -0xfff ; jae 0xebf08 ; ret
0x00000000000ebf27 : cmp rax, -0xfff ; jae 0xebf38 ; ret
0x00000000000ebf60 : cmp rax, -0xfff ; jae 0xebfa1 ; ret
0x00000000000ebfb7 : cmp rax, -0xfff ; jae 0xebfc8 ; ret
0x00000000000ebfe7 : cmp rax, -0xfff ; jae 0xebff8 ; ret
0x00000000000ec7b7 : cmp rax, -0xfff ; jae 0xec7c8 ; ret
0x00000000000ec7e7 : cmp rax, -0xfff ; jae 0xec7f8 ; ret
0x00000000000ec817 : cmp rax, -0xfff ; jae 0xec828 ; ret
0x00000000000ece07 : cmp rax, -0xfff ; jae 0xece18 ; ret
0x00000000000ece67 : cmp rax, -0xfff ; jae 0xece78 ; ret
0x00000000000ecec7 : cmp rax, -0xfff ; jae 0xeced8 ; ret
0x00000000000ecf27 : cmp rax, -0xfff ; jae 0xecf38 ; ret
0x00000000000ecf87 : cmp rax, -0xfff ; jae 0xecf98 ; ret
0x00000000000ecfc0 : cmp rax, -0xfff ; jae 0xed001 ; ret
0x00000000000ed2da : cmp rax, -0xfff ; jae 0xed2eb ; ret
0x00000000000f04d3 : cmp rax, -0xfff ; jae 0xf0517 ; ret
0x00000000000f0c07 : cmp rax, -0xfff ; jae 0xf0c18 ; ret
0x00000000000f0c37 : cmp rax, -0xfff ; jae 0xf0c48 ; ret
0x00000000000f0c67 : cmp rax, -0xfff ; jae 0xf0c78 ; ret
0x00000000000f1027 : cmp rax, -0xfff ; jae 0xf1038 ; ret
0x00000000000f11e7 : cmp rax, -0xfff ; jae 0xf11f8 ; ret
0x00000000000f1b57 : cmp rax, -0xfff ; jae 0xf1b68 ; ret
0x00000000000f1bf7 : cmp rax, -0xfff ; jae 0xf1c08 ; ret
0x00000000000f1c33 : cmp rax, -0xfff ; jae 0xf1c77 ; ret
0x00000000000f1d77 : cmp rax, -0xfff ; jae 0xf1d88 ; ret
0x00000000000f1da7 : cmp rax, -0xfff ; jae 0xf1db8 ; ret
0x00000000000f1de0 : cmp rax, -0xfff ; jae 0xf1e21 ; ret
0x00000000000f1e37 : cmp rax, -0xfff ; jae 0xf1e48 ; ret
0x00000000000f1e70 : cmp rax, -0xfff ; jae 0xf1eb1 ; ret
0x00000000000f1ec7 : cmp rax, -0xfff ; jae 0xf1ed8 ; ret
0x00000000000f2187 : cmp rax, -0xfff ; jae 0xf2198 ; ret
0x00000000000f21b7 : cmp rax, -0xfff ; jae 0xf21c8 ; ret
0x00000000000f21e7 : cmp rax, -0xfff ; jae 0xf21f8 ; ret
0x00000000000f3097 : cmp rax, -0xfff ; jae 0xf30a8 ; ret
0x00000000000f30c7 : cmp rax, -0xfff ; jae 0xf30d8 ; ret
0x00000000000f4709 : cmp rax, -0xfff ; jae 0xf471a ; ret
0x00000000000f487a : cmp rax, -0xfff ; jae 0xf488b ; ret
0x00000000000f48a7 : cmp rax, -0xfff ; jae 0xf48b8 ; ret
0x00000000000f48d7 : cmp rax, -0xfff ; jae 0xf48e8 ; ret
0x00000000000f4910 : cmp rax, -0xfff ; jae 0xf4951 ; ret
0x00000000000f4967 : cmp rax, -0xfff ; jae 0xf4978 ; ret
0x00000000000f4997 : cmp rax, -0xfff ; jae 0xf49a8 ; ret
0x00000000000f49ca : cmp rax, -0xfff ; jae 0xf49db ; ret
0x00000000000f49f7 : cmp rax, -0xfff ; jae 0xf4a08 ; ret
0x00000000000f4a27 : cmp rax, -0xfff ; jae 0xf4a38 ; ret
0x00000000000f4a57 : cmp rax, -0xfff ; jae 0xf4a68 ; ret
0x00000000000f4a87 : cmp rax, -0xfff ; jae 0xf4a98 ; ret
0x00000000000f800a : cmp rax, -0xfff ; jae 0xf801b ; ret
0x00000000000f8037 : cmp rax, -0xfff ; jae 0xf8048 ; ret
0x00000000000f8067 : cmp rax, -0xfff ; jae 0xf8078 ; ret
0x00000000000f809a : cmp rax, -0xfff ; jae 0xf80ab ; ret
0x00000000000f80ca : cmp rax, -0xfff ; jae 0xf80db ; ret
0x00000000000f80f7 : cmp rax, -0xfff ; jae 0xf8108 ; ret
0x00000000000f812a : cmp rax, -0xfff ; jae 0xf813b ; ret
0x00000000000f8157 : cmp rax, -0xfff ; jae 0xf8168 ; ret
0x00000000000f8187 : cmp rax, -0xfff ; jae 0xf8198 ; ret
0x00000000000f81ba : cmp rax, -0xfff ; jae 0xf81cb ; ret
0x00000000000f81e7 : cmp rax, -0xfff ; jae 0xf81f8 ; ret
0x00000000000f821a : cmp rax, -0xfff ; jae 0xf822b ; ret
0x00000000000fa257 : cmp rax, -0xfff ; jae 0xfa268 ; ret
0x00000000000fa287 : cmp rax, -0xfff ; jae 0xfa298 ; ret
0x00000000000fa3b0 : cmp rax, -0xfff ; jae 0xfa3f1 ; ret
0x00000000000fa417 : cmp rax, -0xfff ; jae 0xfa428 ; ret
0x00000000000fa447 : cmp rax, -0xfff ; jae 0xfa458 ; ret
0x00000000000fa477 : cmp rax, -0xfff ; jae 0xfa488 ; ret
0x00000000000fa4a7 : cmp rax, -0xfff ; jae 0xfa4b8 ; ret
0x00000000000fa76a : cmp rax, -0xfff ; jae 0xfa77b ; ret
0x00000000000fa797 : cmp rax, -0xfff ; jae 0xfa7a8 ; ret
0x00000000000fa7c7 : cmp rax, -0xfff ; jae 0xfa7d8 ; ret
0x00000000000fa80a : cmp rax, -0xfff ; jae 0xfa81b ; ret
0x00000000000fa837 : cmp rax, -0xfff ; jae 0xfa848 ; ret
0x00000000000fa867 : cmp rax, -0xfff ; jae 0xfa878 ; ret
0x00000000000fa897 : cmp rax, -0xfff ; jae 0xfa8a8 ; ret
0x00000000000fa8c7 : cmp rax, -0xfff ; jae 0xfa8d8 ; ret
0x00000000000fa8f7 : cmp rax, -0xfff ; jae 0xfa908 ; ret
0x00000000000fa927 : cmp rax, -0xfff ; jae 0xfa938 ; ret
0x00000000000fa957 : cmp rax, -0xfff ; jae 0xfa968 ; ret
0x00000000000fa987 : cmp rax, -0xfff ; jae 0xfa998 ; ret
0x00000000000fa9ba : cmp rax, -0xfff ; jae 0xfa9cb ; ret
0x00000000000fa9f3 : cmp rax, -0xfff ; jae 0xfaa37 ; ret
0x00000000000faa47 : cmp rax, -0xfff ; jae 0xfaa58 ; ret
0x00000000000faa7a : cmp rax, -0xfff ; jae 0xfaa8b ; ret
0x00000000000faaa7 : cmp rax, -0xfff ; jae 0xfaab8 ; ret
0x00000000000faad7 : cmp rax, -0xfff ; jae 0xfaae8 ; ret
0x00000000000fab07 : cmp rax, -0xfff ; jae 0xfab18 ; ret
0x00000000000fab37 : cmp rax, -0xfff ; jae 0xfab48 ; ret
0x00000000000fab67 : cmp rax, -0xfff ; jae 0xfab78 ; ret
0x00000000000fab9a : cmp rax, -0xfff ; jae 0xfabab ; ret
0x00000000000fabca : cmp rax, -0xfff ; jae 0xfabdb ; ret
0x00000000000fabf7 : cmp rax, -0xfff ; jae 0xfac08 ; ret
0x00000000000fac27 : cmp rax, -0xfff ; jae 0xfac38 ; ret
0x00000000000fac57 : cmp rax, -0xfff ; jae 0xfac68 ; ret
0x00000000000fac8a : cmp rax, -0xfff ; jae 0xfac9b ; ret
0x00000000000facba : cmp rax, -0xfff ; jae 0xfaccb ; ret
0x00000000000facea : cmp rax, -0xfff ; jae 0xfacfb ; ret
0x00000000000fad23 : cmp rax, -0xfff ; jae 0xfad67 ; ret
0x00000000000fad77 : cmp rax, -0xfff ; jae 0xfad88 ; ret
0x00000000000fadb3 : cmp rax, -0xfff ; jae 0xfadf7 ; ret
0x00000000000fae07 : cmp rax, -0xfff ; jae 0xfae18 ; ret
0x00000000000fae37 : cmp rax, -0xfff ; jae 0xfae48 ; ret
0x00000000000fae73 : cmp rax, -0xfff ; jae 0xfaeb7 ; ret
0x00000000000faec7 : cmp rax, -0xfff ; jae 0xfaed8 ; ret
0x00000000000faefa : cmp rax, -0xfff ; jae 0xfaf0b ; ret
0x00000000000faf27 : cmp rax, -0xfff ; jae 0xfaf38 ; ret
0x00000000000faf57 : cmp rax, -0xfff ; jae 0xfaf68 ; ret
0x00000000000faf8a : cmp rax, -0xfff ; jae 0xfaf9b ; ret
0x00000000000fafc0 : cmp rax, -0xfff ; jae 0xfb001 ; ret
0x00000000000fb017 : cmp rax, -0xfff ; jae 0xfb028 ; ret
0x00000000000fb04a : cmp rax, -0xfff ; jae 0xfb05b ; ret
0x00000000000fb07a : cmp rax, -0xfff ; jae 0xfb08b ; ret
0x00000000000fb0d0 : cmp rax, -0xfff ; jae 0xfb111 ; ret
0x00000000000fb127 : cmp rax, -0xfff ; jae 0xfb138 ; ret
0x00000000000fb160 : cmp rax, -0xfff ; jae 0xfb1a1 ; ret
0x00000000000fb1b7 : cmp rax, -0xfff ; jae 0xfb1c8 ; ret
0x00000000000fb1e7 : cmp rax, -0xfff ; jae 0xfb1f8 ; ret
0x00000000000fb21a : cmp rax, -0xfff ; jae 0xfb22b ; ret
0x00000000000fb247 : cmp rax, -0xfff ; jae 0xfb258 ; ret
0x00000000000fb333 : cmp rax, -0xfff ; jae 0xfb377 ; ret
0x00000000000fb390 : cmp rax, -0xfff ; jae 0xfb3d1 ; ret
0x00000000000fb4a0 : cmp rax, -0xfff ; jae 0xfb4e1 ; ret
0x00000000000fb503 : cmp rax, -0xfff ; jae 0xfb547 ; ret
0x00000000000fb55a : cmp rax, -0xfff ; jae 0xfb56b ; ret
0x00000000000fb587 : cmp rax, -0xfff ; jae 0xfb598 ; ret
0x00000000000fb5b7 : cmp rax, -0xfff ; jae 0xfb5c8 ; ret
0x00000000000fb5ea : cmp rax, -0xfff ; jae 0xfb5fb ; ret
0x00000000000fbc73 : cmp rax, -0xfff ; jae 0xfbcb7 ; ret
0x00000000000fbcd3 : cmp rax, -0xfff ; jae 0xfbd17 ; ret
0x00000000000fbd27 : cmp rax, -0xfff ; jae 0xfbd38 ; ret
0x00000000000fbd57 : cmp rax, -0xfff ; jae 0xfbd68 ; ret
0x00000000000fbd87 : cmp rax, -0xfff ; jae 0xfbd98 ; ret
0x00000000000fbdb7 : cmp rax, -0xfff ; jae 0xfbdc8 ; ret
0x00000000000fbdea : cmp rax, -0xfff ; jae 0xfbdfb ; ret
0x00000000000fbe1a : cmp rax, -0xfff ; jae 0xfbe2b ; ret
0x00000000000fbe47 : cmp rax, -0xfff ; jae 0xfbe58 ; ret
0x00000000000fbe77 : cmp rax, -0xfff ; jae 0xfbe88 ; ret
0x00000000000fbea7 : cmp rax, -0xfff ; jae 0xfbeb8 ; ret
0x00000000000fbed7 : cmp rax, -0xfff ; jae 0xfbee8 ; ret
0x0000000000070b5d : cmp rax, qword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000004705a : cmp rax, rbx ; jne 0x47056 ; pop rbx ; ret
0x000000000007cbd8 : cmp rax, rcx ; jae 0x7cc08 ; movzx eax, byte ptr [rax] ; ret
0x000000000012abe0 : cmp rax, rdx ; je 0x12abf9 ; add rsp, 8 ; ret
0x00000000000381cc : cmp rax, rdx ; jne 0x381c7 ; xor eax, eax ; ret
0x00000000000382ac : cmp rax, rdx ; jne 0x382a7 ; xor eax, eax ; ret
0x000000000016517b : cmp rbx, rbp ; jae 0x165190 ; call qword ptr [rbx]
0x000000000016517b : cmp rbx, rbp ; jae 0x165194 ; call qword ptr [rbx]
0x00000000000cb70b : cmp rbx, rsi ; ja 0xcb6a7 ; pop rbx ; pop rbp ; ret
0x000000000016123a : cmp rcx, rax ; jne 0x16126a ; xor eax, eax ; ret
0x000000000016207a : cmp rcx, rax ; jne 0x1620aa ; xor eax, eax ; ret
0x0000000000117ad4 : cmp rcx, rax ; sbb eax, eax ; ret
0x000000000007bdf9 : cmp rcx, rsi ; jne 0x7bdf8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001653b7 : cmp rdi, 1 ; ja 0x1653c6 ; ret
0x00000000000f8274 : cmp rdi, rdx ; jne 0xf8271 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000cb73f : cmp rdi, rsi ; ja 0xcb736 ; ret
0x00000000000c091f : cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x00000000001082f1 : cmp rdx, rax ; jne 0x1082d6 ; ret
0x00000000000fbbf6 : cmp rdx, rcx ; cmovae rax, rsi ; ret
0x000000000012e231 : cmp rdx, rcx ; je 0x12e246 ; ret
0x000000000008c56b : cmp rdx, rcx ; jne 0x8c556 ; ret
0x000000000008c56a : cmp rdx, rcx ; jne 0x8c557 ; ret
0x00000000000c253a : cmp rdx, rcx ; jne 0xc2576 ; ret
0x0000000000107a79 : cmp rdx, rdi ; setae al ; ret
0x00000000000750f9 : cmp rsi, rcx ; jb 0x750f8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009160b : cmp rsi, rcx ; jne 0x915ff ; xor eax, eax ; ret
0x00000000000f10e3 : cmp rsi, rdx ; ja 0xf10f6 ; ret
0x0000000000187328 : cmp spl, 0xff ; ret 0xfc7f
0x000000000013e927 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ec27 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006f854 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, 0 ; add bl, dh ; ret
0x000000000013fb27 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000952e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000070a7b : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x70a3e
0x000000000018ab5d : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; movsd dword ptr [rdi], dword ptr fs:[rsi] ; jmp rsp
0x000000000013f827 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000160cb9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000018cc29 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp rsp
0x00000000001877ad : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax + 0x10fffca5]
0x00000000001877a9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax]
0x00000000001879a9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; jmp qword ptr [rax + 0x20fffca5]
0x00000000001879a5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; jmp qword ptr [rax]
0x0000000000187829 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; jmp rdx
0x0000000000179ec1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rbx
0x0000000000179f39 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rax
0x0000000000179f3d : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rax
0x0000000000179f41 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rbx
0x0000000000178d5c : cmpsb byte ptr [rsi], byte ptr [rdi] ; iretd ; jmp rax
0x0000000000186444 : cmpsb byte ptr [rsi], byte ptr [rdi] ; lodsb al, byte ptr [rsi] ; std ; inc dword ptr [rsi - 0x53] ; std ; jmp rsi
0x0000000000096bd4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000c6134 : cmpsb byte ptr [rsi], byte ptr [rdi] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000139f66 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f527 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000dfbf3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000013f227 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d2746 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001335e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x28
0x00000000000f6ce6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sar edx, cl ; dec dword ptr [rax + 0x39] ; ret
0x00000000001863b9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rdx]
0x000000000018641d : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rsi
0x0000000000135229 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000083ae3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x83af8 ; ret
0x0000000000135228 : cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000000c4515 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x000000000011581d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x000000000009a380 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001877a5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rax + 0x10fffca6]
0x00000000001877a1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rax]
0x00000000001879a1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp qword ptr [rax + 0x20fffca6]
0x000000000018799d : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x0000000000187821 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rdx
0x0000000000179f4d : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call qword ptr [rax]
0x0000000000179ec5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rbx
0x000000000017a001 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; inc dword ptr [rax - 0x59] ; cmc ; call rbx
0x000000000017a085 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rax
0x0000000000179f91 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp qword ptr [rax]
0x000000000017a089 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rax
0x000000000017a095 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rcx
0x0000000000072495 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ja 0x7249b ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001a2d95 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdx]
0x0000000000082789 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000001899f1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; call rsp
0x0000000000199a54 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000038ae : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000001aac29 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x000000000019ae34 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor ebp, esi ; jmp qword ptr [rdx]
0x00000000000038ad : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000003c8d3 : cqo ; idiv rsi ; ret
0x0000000000038798 : cqo ; pop r14 ; idiv r9 ; pop r15 ; ret
0x000000000018d17d : cwde ; add al, byte ptr [rax] ; mov ah, 0x87 ; stc ; jmp rsp
0x0000000000127c4f : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000001f58e : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000485eb : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000ebacf : cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000022fd9 : cwde ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000054b87 : cwde ; add rax, rdx ; jmp rax
0x00000000001aff24 : cwde ; and dh, dh ; jmp qword ptr [rdx]
0x00000000000bd917 : cwde ; call r14
0x0000000000023425 : cwde ; call rcx
0x00000000001ac3c8 : cwde ; cld ; cmc ; call qword ptr [rax]
0x000000000017a084 : cwde ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rax
0x0000000000178f5c : cwde ; fpatan ; jmp qword ptr [rsi]
0x0000000000179435 : cwde ; hlt ; jmp rsp
0x00000000001955f1 : cwde ; in eax, dx ; jmp rsi
0x0000000000177190 : cwde ; je 0x177184 ; call qword ptr [rax]
0x000000000018aaa9 : cwde ; jmp rsp
0x0000000000034c04 : cwde ; loopne 0x34c20 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001a2b68 : cwde ; mov edx, dr0 ; call qword ptr [rdx]
0x00000000000781e4 : cwde ; mov esi, r8d ; call 0x74466
0x00000000000f04ac : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000f7c59 : cwde ; mov rdx, rax ; jmp 0xf7c87
0x00000000000f7c58 : cwde ; mov rdx, rax ; jmp 0xf7c88
0x00000000000f7d2a : cwde ; mov rdx, rax ; jmp 0xf7d59
0x00000000000f7d29 : cwde ; mov rdx, rax ; jmp 0xf7d5a
0x00000000001a4b98 : cwde ; movsxd rsi, esp ; jmp qword ptr [rax]
0x000000000017abe4 : cwde ; nop ; cli ; inc dword ptr [rax] ; nop ; cli ; call qword ptr [rax]
0x000000000007ffc4 : cwde ; out 0x33, eax ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000019c5e1 : cwde ; out dx, al ; call qword ptr [rdx]
0x000000000018c930 : cwde ; push 0xf8 ; jmp rsp
0x0000000000003ab1 : cwde ; ret
0x000000000001b050 : cwde ; ret 0x3b
0x00000000001180de : cwde ; shr rax, 4 ; ret
0x0000000000186389 : cwde ; sti ; jmp qword ptr [rax]
0x00000000001797e0 : cwde ; wait ; hlt ; call rsi
0x000000000017937c : cwde ; xchg eax, ebp ; hlt ; call rax
0x0000000000194e88 : cwde ; xchg eax, ebp ; in eax, dx ; jmp qword ptr [rax]
0x000000000005f8bc : dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x000000000009b8c9 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000998b1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000009b8ca : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000998b2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000085d75 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x00000000000b0d66 : dec byte ptr [rax + 0xf] ; ret 0x3949
0x000000000006d2c2 : dec byte ptr [rax + 0xf] ; ret 0x894c
0x000000000007fc3d : dec byte ptr [rax - 0x73] ; ret
0x000000000008557e : dec byte ptr [rax - 0x77] ; and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x00000000000850f7 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000049717 : dec byte ptr [rax - 0x77] ; clc ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000497f3 : dec byte ptr [rax - 0x77] ; clc ; cmovae rax, rsi ; ret
0x00000000000419ad : dec byte ptr [rax - 0x77] ; ret
0x00000000000399ff : dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000c39d8 : dec byte ptr [rax - 0x7d] ; ret
0x0000000000056dca : dec byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000e26de : dec byte ptr [rcx + rcx*4 - 9] ; call 0xde9c6
0x00000000000f3c50 : dec byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000004a5ae : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000009540b : dec dword ptr [r13 - 0x77] ; ret
0x0000000000049b6e : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x000000000009683f : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x0000000000094099 : dec dword ptr [rax + 0x29] ; ret
0x000000000009ba4a : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000999f2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000388f1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000a9849 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000c43f7 : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x0000000000028063 : dec dword ptr [rax + 0x39] ; ret
0x0000000000078895 : dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000b28ff : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000112c47 : dec dword ptr [rax + 0x39] ; ret 0x870f
0x00000000001898d3 : dec dword ptr [rax + 0x51180001] ; out dx, eax ; call rsp
0x00000000000ddbd7 : dec dword ptr [rax + 0x63] ; ret
0x000000000003f9fe : dec dword ptr [rax + 0x63] ; ret 0x3ce9
0x00000000000e48ea : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000427a1 : dec dword ptr [rax + 0x63] ; ret 0xf9e9
0x000000000008a989 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000008ca84 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003c9db : dec dword ptr [rax + 0xf] ; ret
0x00000000000b0b76 : dec dword ptr [rax + 0xf] ; ret 0x3949
0x00000000000c0922 : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000008b8e2 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000ede7e : dec dword ptr [rax + 0xf] ; ret 0x894c
0x0000000000078e5a : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000013318a : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002f919 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000005fb88 : dec dword ptr [rax + 0xf] ; ret 0xbd83
0x00000000000c244e : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000059cdc : dec dword ptr [rax + 1] ; ret
0x000000000018660f : dec dword ptr [rax - 0x24] ; sti ; call qword ptr [rax]
0x000000000012ae59 : dec dword ptr [rax - 0x2d] ; ret 0x2148
0x00000000000377d3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000005a6e7 : dec dword ptr [rax - 0x39] ; ret
0x00000000000e4a75 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000f04aa : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000f25d4 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000a389f : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000000df25b : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x000000000004bf2c : dec dword ptr [rax - 0x75] ; add byte ptr [rcx - 0x77], cl ; add bl, ch ; ret
0x000000000012e995 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000833b3 : dec dword ptr [rax - 0x75] ; je 0x833e5 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000f50ad : dec dword ptr [rax - 0x75] ; jge 0xf50b7 ; call rbx
0x00000000000f50ac : dec dword ptr [rax - 0x75] ; jge 0xf50b8 ; call rbx
0x00000000000f5360 : dec dword ptr [rax - 0x75] ; jge 0xf536a ; call rbx
0x00000000000f535f : dec dword ptr [rax - 0x75] ; jge 0xf536b ; call rbx
0x00000000000f6a57 : dec dword ptr [rax - 0x75] ; jge 0xf6a62 ; call r12
0x000000000002341d : dec dword ptr [rax - 0x75] ; js 0x23443 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x00000000000cc5fd : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff58 ; call rbx
0x00000000000cc9d5 : dec dword ptr [rax - 0x77] ; add al, 0x24 ; call rbx
0x000000000007def1 : dec dword ptr [rax - 0x77] ; and al, 8 ; call qword ptr [rax]
0x00000000000a9b58 : dec dword ptr [rax - 0x77] ; call 0x4ccd2f75
0x000000000008c728 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000f1196 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000085fb4 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000012e3fc : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000ba280 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000213e3 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 1] ; ret
0x00000000000b6d44 : dec dword ptr [rax - 0x77] ; jmp 0x48cdf69a
0x00000000000e390e : dec dword ptr [rax - 0x77] ; jmp 0x4cd0c264
0x00000000000cd2c0 : dec dword ptr [rax - 0x77] ; or r9b, r13b ; ret 0xfff8
0x00000000000202e8 : dec dword ptr [rax - 0x77] ; ret
0x00000000001087ef : dec dword ptr [rax - 0x77] ; ret 0x1376
0x00000000000c419f : dec dword ptr [rax - 0x77] ; ret 0x19eb
0x000000000004c74b : dec dword ptr [rax - 0x77] ; ret 0x1beb
0x00000000000c4fc7 : dec dword ptr [rax - 0x77] ; ret 0x1e73
0x00000000000c5016 : dec dword ptr [rax - 0x77] ; ret 0x1f73
0x0000000000105bd6 : dec dword ptr [rax - 0x77] ; ret 0x2b49
0x00000000000f10d1 : dec dword ptr [rax - 0x77] ; ret 0x2d77
0x00000000000e8a86 : dec dword ptr [rax - 0x77] ; ret 0x2e9
0x000000000004c5e7 : dec dword ptr [rax - 0x77] ; ret 0x31eb
0x0000000000072a0c : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000008275d : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x00000000000e81ce : dec dword ptr [rax - 0x77] ; ret 0x3ee9
0x00000000000c5d23 : dec dword ptr [rax - 0x77] ; ret 0x4164
0x00000000000e7ca8 : dec dword ptr [rax - 0x77] ; ret 0x44c6
0x00000000000ededd : dec dword ptr [rax - 0x77] ; ret 0x4574
0x00000000000e6e7e : dec dword ptr [rax - 0x77] ; ret 0x4c6
0x00000000000fa6aa : dec dword ptr [rax - 0x77] ; ret 0x5077
0x00000000000e6ee5 : dec dword ptr [rax - 0x77] ; ret 0x52e9
0x0000000000067ba3 : dec dword ptr [rax - 0x77] ; ret 0x54e8
0x00000000000c0911 : dec dword ptr [rax - 0x77] ; ret 0x676
0x00000000000c2e96 : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x00000000000f094e : dec dword ptr [rax - 0x77] ; ret 0x7577
0x0000000000080ad5 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000131a5a : dec dword ptr [rax - 0x77] ; ret 0x854d
0x0000000000050ae0 : dec dword ptr [rax - 0x77] ; ret 0x858b
0x0000000000036dc2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x00000000000721fa : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004a41c : dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000105548 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000004dd31 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000c4f62 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x00000000000e8dca : dec dword ptr [rax - 0x77] ; ret 0x8de9
0x00000000001326dc : dec dword ptr [rax - 0x77] ; ret 0x9274
0x000000000005d7b3 : dec dword ptr [rax - 0x77] ; ret 0x98e9
0x000000000005d7ab : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x0000000000051332 : dec dword ptr [rax - 0x77] ; ret 0xa9e9
0x00000000000b3eaf : dec dword ptr [rax - 0x77] ; ret 0xb8e9
0x00000000000febbf : dec dword ptr [rax - 0x77] ; ret 0xb9
0x0000000000127405 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00000000000847d1 : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000f0ff3 : dec dword ptr [rax - 0x77] ; ret 0xd77
0x0000000000092f36 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x000000000006eda0 : dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000005090e : dec dword ptr [rax - 0x77] ; ret 0xf4a
0x0000000000121bda : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000050a2c : dec dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4803
0x0000000000095a03 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; ret 0x1e75
0x000000000009590a : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000e9ef6 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000ddfb6 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000e0266 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000021431 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000847b1 : dec dword ptr [rax - 0x7b] ; xlatb ; je 0x847c8 ; pop rbx ; ret
0x0000000000132181 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001326d8 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x0000000000022fd5 : dec dword ptr [rax - 0x7d] ; cwde ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002f271 : dec dword ptr [rax - 0x7d] ; ret
0x0000000000026b49 : dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000004c778 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000e7fbc : dec dword ptr [rax - 0x7d] ; ret 0x4803
0x000000000012866a : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x0000000000038e91 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000049b6f : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000000c70af : dec dword ptr [rax - 0x7d] ; ret 0x8804
0x00000000000d4266 : dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x0000000000067698 : dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000000000d7601 : dec dword ptr [rax - 0x7d] ; ret 0xeb01
0x000000000006cb5d : dec dword ptr [rax - 0x7d] ; ret 0xeb02
0x000000000001fca0 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x0000000000057dcb : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000002d5fb : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000072498 : dec dword ptr [rax - 0x7f] ; ret
0x000000000014c0fc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000017a08f : dec dword ptr [rax] ; test al, 0xf5 ; push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rcx
0x00000000001788c3 : dec dword ptr [rax] ; xchg eax, edx ; inc edi ; xchg eax, ecx ; call rax
0x00000000000c76f8 : dec dword ptr [rbp + 0x63] ; ror byte ptr [rcx + 0x29], cl ; cli ; sub r10, rax ; jmp 0xc7725
0x0000000000066674 : dec dword ptr [rbp + 0xf] ; ror byte ptr [rbp + 1], 1 ; ret 0x8d4a
0x00000000000630d3 : dec dword ptr [rbp + 1] ; loop 0x630c7 ; scasb al, byte ptr [rdi] ; ret
0x00000000000618aa : dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x0000000000189bd3 : dec dword ptr [rbp + rsi - 0x2d6fffff] ; out dx, eax ; call rsp
0x00000000000a74e9 : dec dword ptr [rbp - 0x77] ; fmul qword ptr [rcx - 0x77] ; ret 0x23eb
0x000000000009540c : dec dword ptr [rbp - 0x77] ; ret
0x00000000000ba3a6 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000000ef124 : dec dword ptr [rbp - 0x7bf0fea8] ; ret 1
0x00000000000d8908 : dec dword ptr [rbp - 0x7cb7febd] ; ret
0x00000000000efade : dec dword ptr [rbx + 0x19e83c7d] ; ret
0x000000000017915b : dec dword ptr [rbx + 0x1efff3f9] ; stc ; call rsp
0x0000000000105a21 : dec dword ptr [rbx + 0x2b89643d] ; add al, ch ; ret
0x00000000000d945d : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000135f15 : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x48 ; ret
0x00000000000bd15e : dec dword ptr [rbx + 4] ; jne 0xbd184 ; pop rbx ; ret
0x0000000000033b9a : dec dword ptr [rbx + rcx*4 + 0x1d] ; ret 0x38
0x000000000018cd0b : dec dword ptr [rbx + rsi*2 - 0x18bbfffe] ; clc ; call rsp
0x00000000000caccf : dec dword ptr [rbx - 0x76be77bb] ; ret 0xdb84
0x00000000000b3755 : dec dword ptr [rcx + 0x29] ; ret
0x000000000004b801 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000000838be : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000096612 : dec dword ptr [rcx + 1] ; ret
0x000000000001ffe0 : dec dword ptr [rcx + rcx*4 - 0x19] ; call qword ptr [r14]
0x000000000007d619 : dec dword ptr [rcx + rcx*4 - 0x40] ; nop dword ptr [rax] ; ret
0x000000000019b464 : dec dword ptr [rcx - 0x12] ; jmp qword ptr [rdx]
0x00000000000507b3 : dec dword ptr [rcx - 0x39] ; ret
0x000000000012f6c4 : dec dword ptr [rcx - 0x39] ; ret 0xffff
0x000000000018dc6b : dec dword ptr [rcx - 0x3efefffe] ; cli ; call rsp
0x00000000000f4ee5 : dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f536e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000105617 : dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000000f4f78 : dec dword ptr [rcx - 0x75] ; jge 0xf4f82 ; call rbx
0x00000000000f4f77 : dec dword ptr [rcx - 0x75] ; jge 0xf4f83 ; call rbx
0x00000000000f509f : dec dword ptr [rcx - 0x75] ; jge 0xf50a9 ; call rbx
0x00000000000f509e : dec dword ptr [rcx - 0x75] ; jge 0xf50aa ; call rbx
0x00000000000f51e2 : dec dword ptr [rcx - 0x75] ; jge 0xf51ec ; call rbx
0x00000000000f51e1 : dec dword ptr [rcx - 0x75] ; jge 0xf51ed ; call rbx
0x00000000000f5352 : dec dword ptr [rcx - 0x75] ; jge 0xf535c ; call rbx
0x00000000000f5351 : dec dword ptr [rcx - 0x75] ; jge 0xf535d ; call rbx
0x00000000001027d6 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000cfee3 : dec dword ptr [rcx - 0x75] ; push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000096840 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x00000000000232d7 : dec dword ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x0000000000095fd8 : dec dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000000ae871 : dec dword ptr [rcx - 0x77] ; ret 0x5ee9
0x000000000004e1c4 : dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004b9d3 : dec dword ptr [rcx - 0x77] ; ret 0x850f
0x0000000000056670 : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000060342 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000005738e : dec dword ptr [rcx - 0x77] ; ret 0xfae9
0x000000000007dea0 : dec dword ptr [rcx - 0x77] ; salc ; call qword ptr [rax]
0x0000000000068f21 : dec dword ptr [rcx - 0x7cb769fc] ; ret 0x4801
0x00000000000279f7 : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000c801f : dec dword ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000a643a : dec dword ptr [rcx - 0x7d] ; ret 0x4104
0x00000000000979f8 : dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x00000000000c914e : dec dword ptr [rcx - 0x7d] ; ret 0xe901
0x00000000000fa4e5 : dec dword ptr [rcx] ; clc ; ret
0x00000000001052eb : dec dword ptr [rcx] ; ret
0x00000000000fd926 : dec dword ptr [rcx] ; setbe al ; ret
0x000000000018c873 : dec dword ptr [rdi + rcx*2 + 2] ; add byte ptr [rax + rbx*2 - 8], al ; call rsp
0x000000000018d063 : dec dword ptr [rdi + rcx*4 + 2] ; add byte ptr [rcx + rbp*2], ah ; stc ; call rsp
0x000000000018c5fb : dec dword ptr [rdi + rdi + 0x2bd40002] ; clc ; call rsp
0x000000000018a913 : dec dword ptr [rdi + rdx*4 + 0x790d0001] ; call rsp
0x000000000002ff66 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2fef7 ; loopne 0x2ff77 ; ret
0x00000000000fe0e5 : dec dword ptr [rdi] ; mov bh, 4 ; js 0xfe076 ; loopne 0xfe0f6 ; ret
0x0000000000047e3b : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000962e4 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x00000000000964f9 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8348
0x00000000000962d1 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x000000000006cd82 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x00000000001794e7 : dec dword ptr [rdi] ; pushfq ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; jmp qword ptr [rbx]
0x00000000000e30b8 : dec dword ptr [rdi] ; ret 0x148d
0x000000000002586b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000007d046 : dec dword ptr [rdi] ; ret 0x6348
0x0000000000047837 : dec dword ptr [rdi] ; ret 0x8341
0x0000000000108937 : dec dword ptr [rdi] ; ret 0x8348
0x00000000001143f1 : dec dword ptr [rdi] ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000000210cc : dec dword ptr [rdi] ; test bl, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000006dc50 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x76ffffff], cl ; ret 0xe283
0x0000000000113c04 : dec dword ptr [rdi] ; test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000fb74e : dec dword ptr [rdi] ; test dword ptr [rbx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000587f0 : dec dword ptr [rdi] ; test dword ptr [rbx], ebp ; ret
0x00000000000634e1 : dec dword ptr [rdi] ; test dword ptr [rdi + rax*8 + 0x6ae9ffff], esi ; ret 0xffff
0x00000000001639d0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000597ce : dec dword ptr [rdi] ; xchg dword ptr [rcx - 0x77000000], edi ; ret 0x348
0x0000000000058e90 : dec dword ptr [rdi] ; xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x0000000000059009 : dec dword ptr [rdi] ; xchg dword ptr [rsi - 0x77000000], esp ; ret 0x348
0x00000000000cb7ec : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x460f
0x0000000000032dfa : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x9be9
0x0000000000048f07 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x0000000000032a9a : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000000eea30 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x7c83
0x00000000000c3e83 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x000000000007194c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000007faf9 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xee9
0x000000000004d62e : dec dword ptr [rdi] ; xchg eax, esp ; shr eax, -0x57 ; ret 0xffff
0x000000000018c9db : dec dword ptr [rdx + rbx*2 + 0x76ea0002] ; clc ; call rsp
0x000000000005042f : dec dword ptr [rdx - 0x73] ; push rsp ; add cl, byte ptr es:[rax + 1] ; ret 0x8348
0x000000000005dce5 : dec dword ptr [rdx] ; jne 0x5dcf0 ; ret
0x0000000000070500 : dec dword ptr [rdx] ; jne 0x7056f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007084c : dec dword ptr [rdx] ; jne 0x7087b ; mov eax, r8d ; pop rbx ; ret
0x000000000007119b : dec dword ptr [rdx] ; jne 0x711e2 ; ret
0x0000000000071295 : dec dword ptr [rdx] ; jne 0x712e2 ; mov eax, esi ; ret
0x0000000000071395 : dec dword ptr [rdx] ; jne 0x713e2 ; mov eax, esi ; ret
0x0000000000072060 : dec dword ptr [rdx] ; jne 0x720c9 ; pop rbx ; ret
0x0000000000165bf6 : dec dword ptr [rip + 0x25af24] ; jne 0x165c25 ; ret
0x000000000018cff3 : dec dword ptr [rsi + rax*4 + 0x5d3d0002] ; stc ; call rsp
0x0000000000188be3 : dec dword ptr [rsi + rcx*8 + 0x608f0000] ; out dx, al ; call rsp
0x000000000018c95b : dec dword ptr [rsi + rdx*2 + 0x6d350002] ; clc ; call rsp
0x0000000000070a67 : dec dword ptr [rsi] ; jne 0x70ae7 ; mov eax, edx ; pop rbx ; ret
0x00000000000714d5 : dec dword ptr [rsi] ; jne 0x71552 ; mov eax, edx ; pop rbx ; ret
0x0000000000071abe : dec dword ptr [rsi] ; jne 0x71b37 ; mov eax, edx ; pop rbx ; ret
0x0000000000071c20 : dec dword ptr [rsi] ; jne 0x71ca3 ; mov eax, edx ; pop rbx ; ret
0x0000000000071f15 : dec dword ptr [rsi] ; jne 0x71f92 ; mov eax, edx ; pop rbx ; ret
0x000000000007378a : dec dword ptr [rsi] ; jne 0x73811 ; mov eax, edx ; pop rbx ; ret
0x0000000000077617 : dec dword ptr [rsi] ; jne 0x77690 ; mov eax, edx ; pop rbx ; ret
0x00000000000777a9 : dec dword ptr [rsi] ; jne 0x7782b ; mov eax, edx ; pop rbx ; ret
0x0000000000078030 : dec dword ptr [rsi] ; jne 0x780ac ; mov eax, edx ; pop rbx ; ret
0x00000000000781d2 : dec dword ptr [rsi] ; jne 0x78256 ; mov eax, edx ; pop rbx ; ret
0x0000000000189ad3 : dec dword ptr [rsp + rbp - 0x311cffff] ; out dx, eax ; call rsp
0x000000000018ca13 : dec dword ptr [rsp + rbx*2 + 0x78f90002] ; clc ; call rsp
0x000000000018888b : dec dword ptr [rsp + rsi*4 + 0x195f0000] ; in al, dx ; call rsp
0x00000000001781af : dec eax ; cdq ; int1 ; jmp rax
0x0000000000039a9d : dec ecx ; ret
0x00000000001794cb : dec ecx ; wait ; hlt ; call rbx
0x0000000000179143 : dec edx ; add al, 0xf4 ; call qword ptr [rdi]
0x0000000000178da7 : dec edx ; retf ; call qword ptr [rcx - 0x2f000c2c]
0x000000000018774b : dec edx ; stosd dword ptr [rdi], eax ; cld ; push qword ptr [rax - 0x55] ; cld ; jmp rax
0x000000000018c5d3 : dec esp ; add al, byte ptr ds:[rax] ; push rsp ; sub al, bh ; jmp rsp
0x000000000018a1c3 : dec esp ; add word ptr [rax], ax ; and al, 0x87 ; int1 ; jmp rsp
0x000000000018ab5b : dec esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; movsd dword ptr [rdi], dword ptr fs:[rsi] ; jmp rsp
0x000000000018b403 : dec esp ; fiadd word ptr [rcx] ; add ah, dl ; mov esi, esi ; jmp rsp
0x000000000018b583 : dec esp ; in eax, 1 ; add byte ptr [rsp - 0xa], dl ; jmp rsp
0x000000000018baab : dec esp ; inc dword ptr [rcx] ; add ah, dh ; sub al, 0xf7 ; jmp rsp
0x000000000018cd53 : dec esp ; jbe 0x18cd61 ; add byte ptr [rsi + rsi*8 - 8], ah ; jmp rsp
0x000000000018ac73 : dec esp ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; je 0x18acb9 ; hlt ; jmp rsp
0x000000000018ad73 : dec esp ; mov bl, 1 ; add byte ptr [rcx + rdx*4], dh ; hlt ; jmp rsp
0x000000000017c0af : dec esp ; mov dh, 0xfa ; jmp rsp
0x000000000018810b : dec esp ; mov eax, dword ptr [rax] ; add byte ptr [rsp + rbp*8 - 0x16], ah ; jmp rsp
0x00000000001885eb : dec esp ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; push rsi ; jmp 0x1885fb
0x000000000018a31b : dec esp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; in al, -0x31 ; int1 ; jmp rsp
0x0000000000188a73 : dec esp ; ret
0x000000000018af03 : dec esp ; ret 1
0x000000000018ba1b : dec esp ; std ; add dword ptr [rax], eax ; sub dil, r14b ; jmp rsp
0x000000000018c233 : dec esp ; sub al, byte ptr [rdx] ; add byte ptr [rdi + rdi*8 - 9], al ; jmp rsp
0x0000000000189823 : dec esp ; sub byte ptr [rcx], al ; add byte ptr [rsi + rcx*2 - 0x11], dh ; jmp rsp
0x000000000018c303 : dec esp ; sub eax, 0x4340002 ; clc ; jmp rsp
0x000000000018a6ab : dec esp ; xchg byte ptr [rcx], al ; add byte ptr [rsi + rax - 0xd], dh ; jmp rsp
0x000000000018d0bb : dec esp ; xchg eax, ebx ; add al, byte ptr [rax] ; in al, 0x71 ; stc ; jmp rsp
0x000000000009ba49 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000999f1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000000979f7 : dec qword ptr [r9 - 0x7d] ; ret 0x8401
0x0000000000027a40 : dec qword ptr [rax - 0x7d] ; ret 0x4101
0x00000000000279f6 : dec qword ptr [rcx - 0x7d] ; ret
0x0000000000178085 : div al ; jmp rax
0x00000000000b185d : div byte ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x0000000000093d3f : div byte ptr [rbp + 0xa] ; jmp 0x93d0a
0x000000000012e9de : div byte ptr [rbp + 0xf] ; call 0x12ac35
0x0000000000088b72 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000002cb11 : div byte ptr [rbp + rax*8 + 0x5b] ; ret
0x0000000000096bb1 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000001059d4 : div dword ptr [rcx] ; shr al, 0x24 ; ret
0x0000000000105a9a : div dword ptr [rcx] ; shr al, 0x5e ; ret 0xffff
0x00000000000cb741 : div dword ptr [rdi - 0x14] ; ret
0x0000000000178089 : div eax ; jmp qword ptr [rax]
0x000000000006ed75 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000073880 : div ebp ; pop rbp ; pop r12 ; ret
0x00000000000738bc : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f20d : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000a1b87 : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000001b1589 : div esi ; call qword ptr [rbx]
0x000000000006ed74 : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007387f : div rbp ; pop rbp ; pop r12 ; ret
0x00000000000738bb : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001b1588 : div rsi ; call qword ptr [rbx]
0x000000000001f730 : enter -0x1401, -0x3a ; ret
0x00000000000c6071 : enter -0x14fe, -0x6a ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000096acd : enter -0x178c, -0xd ; ret
0x0000000000098341 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000010a8cb : enter -0x38ff, -0x77 ; ret 0x850f
0x0000000000049778 : enter -0x3eb7, -8 ; add cl, byte ptr [rbp + 0x39] ; ret
0x0000000000125cc1 : enter -0x3eb8, -0x18 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000163b44 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000009b8c6 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000998ae : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000009ba46 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000999ee : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000001a8e7e : enter -0xb1c, -1 ; sbb al, 0xd ; mul dl ; hlt ; jmp qword ptr [rdx]
0x0000000000178f00 : enter -0xc2a, -1 ; xor ah, dl ; jmp qword ptr [rsi]
0x00000000000634bc : enter -1, -0x17 ; xchg eax, ebx ; ret 0xffff
0x00000000000f4fc4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000123a87 : enter 0, 0 ; call rax
0x0000000000123a49 : enter 0, 0 ; jmp rcx
0x00000000000f82a3 : enter 0, 0 ; ret
0x00000000000c26af : enter 0x1b8, 0 ; add byte ptr [rax], al ; ret
0x000000000007cbda : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000036504 : enter 0x280f, -0x3f ; ret
0x0000000000127ffe : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a4a0a : enter 0x31c3, -0x40 ; nop ; ret
0x00000000000883bd : enter 0x31c3, -0x40 ; ret
0x0000000000127757 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x00000000001276b4 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000127784 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000001fc9f : enter 0x48ff, -0x7d ; ret 0xeb04
0x0000000000001b11 : enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000008518b : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000306da : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x00000000001765bc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000373b3 : enter 0xf44, 0x45 ; ret 0x8d48
0x0000000000160d66 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000086de1 : enter 0xf66, -0x15 ; ret
0x000000000013cb04 : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x000000000018af9d : enter 1, 0x14 ; ret 0xfff5
0x000000000018afa5 : enter 1, 0x34 ; ret 0xfff5
0x000000000018afad : enter 1, 0x54 ; ret 0xfff5
0x000000000018afb5 : enter 1, 0x64 ; ret
0x000000000009f124 : enter 5, 0 ; ret
0x000000000019ba75 : fadd dword ptr [rax] ; add al, bh ; out dx, al ; call rsp
0x000000000005de57 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000001094de : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007b137 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007b683 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000f70d0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000475a6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000010ad5c : fadd dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c7bce : fadd dword ptr [rbp - 0x77] ; ror dword ptr [rcx - 0x77], cl ; ret 0x1f0f
0x00000000001311c9 : fadd dword ptr [rbx + 0x14807e0] ; ret 0x3b48
0x000000000004d8c1 : fadd dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000007a42b : fadd dword ptr [rcx + 0x5d] ; ret
0x00000000000a4e04 : fadd dword ptr [rcx + 0x5f] ; ret
0x00000000000b7907 : fadd dword ptr [rcx - 0x77] ; ret
0x00000000001aba95 : fadd dword ptr [rcx] ; add byte ptr [rax - 0x13], cl ; cmc ; jmp qword ptr [rax]
0x00000000001b4e88 : fadd dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x00000000000ebb97 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x000000000019bdc5 : fadd qword ptr [rax] ; add byte ptr [rax], bh ; jo 0x19bdbf ; call qword ptr [rsi]
0x000000000018db95 : fadd qword ptr [rdx] ; add ah, ah ; mov bh, 0xfa ; call rsp
0x000000000019e884 : fadd qword ptr [rsi] ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0x10], bl ; jmp rsi
0x0000000000164168 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00000000001620be : fadd st(3) ; ret
0x00000000000f7ec0 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001aa884 : fadd st(6), st(0) ; add dword ptr [rax], eax ; js 0x1aa867 ; cmc ; jmp qword ptr [rsi]
0x00000000000efb9a : fbld dword ptr [rbp + rax*2 - 0x75] ; call 0xebe07
0x00000000001608b1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000030625 : fbstp dword ptr [rbp + rax - 0x18] ; ret
0x00000000000b791d : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000175bf8 : fcmovb st(0), st(3) ; ret
0x00000000000f2441 : fcmovnbe st(0), st(4) ; sub al, 0 ; add rsp, 8 ; ret
0x00000000001a7984 : fcom qword ptr [rdi + 0x2b680001] ; cmc ; call qword ptr [rax]
0x000000000019f984 : fcom qword ptr [rdi] ; add dword ptr [rax], eax ; pop rax ; or esi, ecx ; jmp rcx
0x00000000001aa8e8 : fcom st(6) ; cmc ; jmp qword ptr [rsi]
0x000000000019fc55 : fcomi st(0) ; jmp qword ptr [rdx]
0x00000000001b5a59 : fcomi st(7) ; jmp qword ptr [rcx]
0x0000000000035516 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002cc77 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000001f6e5 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000034080 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000085e2a : fcomp dword ptr [rbx - 0x3d] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000082ad4 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000022224 : fcomp dword ptr [rcx] ; cmp al, byte ptr [rax] ; pop rbx ; ret
0x0000000000176979 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000001a7a84 : fcomp qword ptr [rax + 0x2d380001] ; cmc ; jmp qword ptr [rcx]
0x0000000000197e84 : fcomp qword ptr [rax + rax - 0x122a9800] ; call rcx
0x00000000001a7d84 : fcomp qword ptr [rbx + 0x30a80001] ; cmc ; jmp qword ptr [rcx]
0x000000000018ca64 : fcomp qword ptr [rdi + 2] ; add byte ptr [rbx + rax*4 - 8], dh ; call rsp
0x0000000000174be0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001a0084 : fcomp qword ptr [rsi] ; add dword ptr [rax], eax ; mov byte ptr [rbx - 0xf], al ; call rsi
0x000000000019efb1 : fcompi st(0) ; call qword ptr [rax]
0x000000000019eff9 : fcompi st(0) ; jmp rax
0x00000000000a1c60 : fcompi st(3) ; ret
0x00000000001a69c9 : fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a8c75 : fcompi st(4) ; jmp qword ptr [rdx]
0x00000000000b3678 : fdiv dword ptr [rax] ; add byte ptr [rcx - 0x76dbdbbc], cl ; ret
0x000000000004705c : fdiv dword ptr [rbp - 0xf] ; pop rbx ; ret
0x00000000000f9f71 : fdiv dword ptr [rcx] ; rol byte ptr [rbp + 0x490f48d2], 0xc2 ; jmp 0xf9f86
0x00000000001a7f08 : fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x00000000001b1584 : fdiv qword ptr [rbx] ; add al, byte ptr [rax] ; div rsi ; call qword ptr [rbx]
0x0000000000198a08 : fdiv st(0) ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000cb7d4 : fdiv st(3) ; ret
0x0000000000186611 : fdiv st(3), st(0) ; call qword ptr [rax]
0x0000000000186631 : fdiv st(3), st(0) ; inc dword ptr [rax] ; fdivp st(3) ; jmp rax
0x0000000000186735 : fdiv st(3), st(0) ; jmp qword ptr [rax]
0x0000000000186651 : fdiv st(3), st(0) ; jmp rax
0x0000000000058515 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000caacf : fdivp st(3) ; dec dword ptr [rax + 1] ; ret
0x0000000000186635 : fdivp st(3) ; jmp rax
0x00000000001acfac : fdivr dword ptr [rbp - 0xb] ; jmp qword ptr [rdx]
0x00000000001a8328 : fdivr dword ptr [rbx] ; cmc ; jmp rbx
0x00000000000d8797 : fdivr dword ptr [rcx] ; ret 0xc189
0x00000000000dac07 : fdivr dword ptr [rcx] ; ret 0xc789
0x000000000019419c : fdivr dword ptr [rdi - 0x14] ; jmp qword ptr [rdx]
0x00000000000c0f90 : fdivr qword ptr [rax - 0x76b70005] ; ret
0x00000000001960ac : fdivr qword ptr [rsi - 0x13] ; jmp qword ptr [rdx]
0x000000000018678d : fdivr st(3) ; call qword ptr [rax - 0x3d]
0x00000000001867cd : fdivr st(3) ; lcall ptr [rax + 4] ; cld ; jmp qword ptr [rax]
0x00000000000c5fe8 : fdivr st(3), st(0) ; ret
0x0000000000173f35 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001a68d1 : fdivr st(4), st(0) ; call qword ptr [rax]
0x00000000001aad51 : fdivr st(5), st(0) ; call qword ptr [rax]
0x00000000000d8c5a : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000067951 : fdivr st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000015e43d : fdivr st(7) ; ret
0x000000000009c77e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a69b1 : fdivrp st(4) ; jmp qword ptr [rcx]
0x00000000001a8a2d : fdivrp st(4) ; jmp qword ptr [rdx]
0x00000000001b0e91 : fdivrp st(6) ; jmp qword ptr [rcx]
0x00000000001b5d69 : fdivrp st(7) ; call rdi
0x00000000000a5190 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000003dab2 : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8348
0x00000000000ebbdb : fiadd dword ptr [rbx + 0x210247c] ; cmove eax, edx ; jmp 0xebba3
0x00000000000ebacb : fiadd dword ptr [rbx + 0x298247c] ; cmove eax, edx ; ret
0x00000000001232be : fiadd dword ptr [rbx - 0x7bf0fc1e] ; ret 1
0x00000000000459f3 : fiadd dword ptr [rcx - 0x77] ; ret
0x0000000000108931 : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x0000000000085e24 : fiadd dword ptr [rdi] ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000001338f9 : fiadd word ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000019bfcd : fiadd word ptr [rax] ; add byte ptr [rax], dh ; jl 0x19bfc7 ; jmp qword ptr [rcx]
0x000000000018b405 : fiadd word ptr [rcx] ; add ah, dl ; mov esi, esi ; jmp rsp
0x0000000000136c1d : ficomp dword ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000000f56d9 : ficomp word ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000001767c6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000080caa : fidiv dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x00000000001b5c26 : fidiv word ptr [rbx] ; idiv edi ; sbb al, 0xd ; nop ; xor esi, edi ; jmp qword ptr [rdx]
0x0000000000135c35 : fidivr dword ptr [rax + 1] ; ret
0x00000000000e3555 : fidivr dword ptr [rcx] ; ret 0x3173
0x00000000000d87ed : fidivr dword ptr [rcx] ; ret 0xc189
0x00000000001a0d64 : fidivr word ptr [rsi - 0xf] ; jmp qword ptr [rdx]
0x0000000000048c38 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x000000000019bd65 : fild dword ptr [rax] ; add byte ptr [rax + 0x6d], bh ; out dx, al ; call qword ptr [rdi]
0x00000000000fa588 : fild dword ptr [rax] ; add byte ptr [rbx - 0x76ebdbb4], cl ; ret
0x00000000000ba087 : fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000cd91c : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x0000000000111e17 : fild dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000001ad9e6 : fild dword ptr [rdi + 0xd1cfff5] ; push rax ; xchg ebp, esi ; jmp qword ptr [rdx]
0x000000000018db6d : fild dword ptr [rdx] ; add byte ptr [rbx + rsi*4 - 6], ah ; call rsp
0x00000000000797a6 : fild word ptr [rbp + 0x4f0f48c9] ; ret 0x8948
0x00000000000ad5ba : fild word ptr [rcx + 0x29] ; ret
0x00000000000f0676 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000004f1f8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000002618b : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000065d9f : fimul dword ptr [rax + 0x39] ; ret 0x830f
0x000000000003fec5 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000013cbf5 : fimul dword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x00000000001381e6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000000a9c0 : fimul dword ptr [rax + rax] ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret 0xb
0x000000000012a030 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000011592d : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000002081f : fimul dword ptr [rax - 1] ; ret 0x4eb
0x00000000000a6631 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008c752 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x00000000000f13a5 : fimul dword ptr [rcx + 0x39] ; ret 0x820f
0x00000000000c4975 : fimul dword ptr [rcx + 3] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000085fb7 : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x0000000000086173 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x00000000000e26db : fimul dword ptr [rcx + rcx*4 - 2] ; mov rdi, r14 ; call 0xde9c9
0x000000000015d1e2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39be101
0x000000000015e262 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39bf181
0x00000000000366ef : fimul dword ptr [rcx] ; ret 0xb70f
0x0000000000094680 : fimul dword ptr [rdi] ; test al, dh ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000e3ad3 : fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x1e8
0x000000000012e3ff : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000041a40 : fimul word ptr [rax - 0x77] ; ret
0x0000000000022d85 : fimul word ptr [rax - 0x77] ; ret 0x8348
0x000000000002ad1f : fimul word ptr [rax - 0x77] ; ret 0x8948
0x0000000000051248 : fimul word ptr [rax - 0x7d] ; ret
0x00000000000829a1 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x000000000003843e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x38498
0x0000000000039bce : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x39c28
0x00000000000f6b6f : fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x0000000000086089 : fimul word ptr [rcx + rcx*4 - 0x11] ; call rdx
0x000000000012b30e : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000002e31b : fimul word ptr [rdi + 0x63] ; xor al, 0xb2 ; add r14, r10 ; jmp r14
0x0000000000035a5b : fimul word ptr [rdi] ; xchg bl, al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000035b99 : fimul word ptr [rdi] ; xchg byte ptr [rbx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000c60f7 : fistp qword ptr [rax + 1] ; ret
0x00000000000d62e0 : fistp qword ptr [rcx] ; ret 0xc189
0x0000000000074829 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007462e : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000134ffb : fistp word ptr [rbx + 0x48] ; mov esi, ebp ; pop rbp ; jmp rax
0x000000000012ce71 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000854de : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000054b83 : fisttp dword ptr [rax + 0x63] ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x00000000000494d4 : fisttp dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x494f8
0x0000000000039081 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000095a06 : fisttp dword ptr [rax - 0x77] ; ret 0x1e75
0x00000000000fc62e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2c1cca ; pop rbx ; ret
0x0000000000027a2d : fisttp dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000459f0 : fisttp dword ptr [rcx - 0x77] ; fiadd dword ptr [rcx - 0x77] ; ret
0x000000000003909b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000105414 : fisttp dword ptr [rcx - 0x7d] ; ret 0x4d30
0x000000000003664a : fisttp dword ptr [rdi] ; ret
0x000000000005ab86 : fisttp dword ptr [rdi] ; test byte ptr [rax + rax - 0x76b40000], ah ; ret 0x894c
0x000000000009590d : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001a160e : fisttp dword ptr [rdx + 0xd1cfff1] ; mov dh, 0x89 ; int1 ; jmp qword ptr [rdx]
0x0000000000109161 : fisttp dword ptr [rdx] ; hlt ; dec dword ptr [rax - 0x7f] ; ret
0x000000000003ebde : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000c81ea : fisttp qword ptr [rax - 0x7d] ; ret
0x000000000008b9ba : fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000012b5c3 : fisttp qword ptr [rcx + 0xf] ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000059a59 : fisttp qword ptr [rcx - 0x7c09ce35] ; ret
0x00000000000f5c27 : fisttp qword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000093ecc : fisttp word ptr [rax + 0x29] ; ret 0x2948
0x0000000000094838 : fisttp word ptr [rax + 1] ; ret
0x00000000000b1167 : fisttp word ptr [rax + 1] ; ret 0x8948
0x000000000008a6a8 : fisttp word ptr [rax + rax] ; ret
0x0000000000035522 : fisttp word ptr [rax - 0x39] ; ret
0x0000000000135814 : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000012099c : fisttp word ptr [rax - 0x75] ; and al, 8 ; call rcx
0x000000000011dac2 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x000000000005008a : fisttp word ptr [rax - 0x77] ; ret
0x00000000000ec3b5 : fisttp word ptr [rax - 0x77] ; ret 0x14c
0x0000000000165049 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x0000000000035af1 : fisttp word ptr [rax - 0x7d] ; ret 0xf01
0x000000000003911f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000f5de5 : fisttp word ptr [rbx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000095d00 : fisttp word ptr [rcx + 1] ; ret
0x00000000000857b7 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x000000000011dbd3 : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x000000000013d5ed : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000037bb2 : fisub dword ptr [rax + rdi] ; ret
0x00000000000ebb22 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x00000000000f09d1 : fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x00000000000f15bd : fisub dword ptr [rcx + rcx*4 + 0x10] ; or rax, 0xffffffffffffffff ; jmp 0xf1593
0x00000000000f181d : fisub dword ptr [rcx + rcx*4 + 0x10] ; or rax, 0xffffffffffffffff ; jmp 0xf17f3
0x0000000000160c81 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000006adfc : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000160981 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f3c4b : fisubr dword ptr [rax + rax] ; jne 0xf465b ; ret
0x00000000000f3765 : fisubr word ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000121705 : fld dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000001b6a8c : fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000001abb8d : fld dword ptr [rcx] ; add al, al ; out dx, eax ; cmc ; call qword ptr [rax]
0x000000000018db0d : fld dword ptr [rdx] ; add byte ptr [rcx + rbp*4], dh ; cli ; jmp rsp
0x00000000000b39b3 : fld qword ptr [rcx] ; add byte ptr [rax], al ; call 0x2fc66
0x000000000018dbbd : fld qword ptr [rdx] ; add byte ptr [rbx + rdi*4], ah ; cli ; jmp rsp
0x0000000000174c21 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000003679f : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000036868 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000036739 : fld xword ptr [rsp + 8] ; ret
0x0000000000036839 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000036819 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000369e9 : fldcw word ptr [rsp - 2] ; ret
0x000000000006af9f : fldenv dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x000000000008bcf9 : fldenv dword ptr [rsi + 0xf] ; je 0x8bd56 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000093937 : fldenv dword ptr [rsi + 0xf] ; je 0x93994 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000160d01 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008bbf1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000188049 : fldl2e ; call rsp
0x00000000000384e4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000049555 : fmul dword ptr [rax + 0x39] ; ret
0x0000000000085d6b : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x0000000000076f7c : fmul dword ptr [rax + 0xf] ; ret
0x00000000000c3e22 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000006b101 : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000213e6 : fmul dword ptr [rax - 1] ; ret
0x00000000000ba06e : fmul dword ptr [rbx - 0x7cb7fbc0] ; ret
0x00000000000b371e : fmul dword ptr [rcx + 0x39] ; ret
0x00000000000929ae : fmul dword ptr [rcx + 0xf] ; ret
0x00000000000c5230 : fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000193004 : fmul dword ptr [rcx - 0x15] ; jmp qword ptr [rdx]
0x000000000005957c : fmul dword ptr [rcx - 0x77] ; ret
0x00000000000b8194 : fmul dword ptr [rdi] ; mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fcdfd : fmul dword ptr [rdi] ; ret
0x000000000002de6b : fmul dword ptr [rsi + 0x63] ; add al, 0x82 ; add r8, rdx ; jmp r8
0x000000000003866a : fmul qword ptr [rax + 0xf] ; ret 0x8948
0x0000000000004528 : fmul qword ptr [rax + rax] ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; push rax ; ret 0xb
0x00000000001a6a84 : fmul qword ptr [rax - 0x2007ffff] ; hlt ; jmp qword ptr [rcx]
0x00000000000232da : fmul qword ptr [rax - 0x77] ; ret
0x00000000000bd3fb : fmul qword ptr [rax - 0x7d] ; ret
0x00000000000c4573 : fmul qword ptr [rax - 0x7d] ; ret 0x3c01
0x00000000000a74ec : fmul qword ptr [rcx - 0x77] ; ret 0x23eb
0x0000000000087179 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d07f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000439d8 : fmulp st(1) ; ret
0x00000000000dad3e : fnstcw word ptr [rcx] ; rol byte ptr [rcx - 0x77], 1 ; ret
0x0000000000187ab8 : fnstcw word ptr [rdi - 0x17] ; jmp rsp
0x0000000000002516 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x00000000000301b2 : fnstsw dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000178f5d : fpatan ; jmp qword ptr [rsi]
0x00000000000354b5 : fpatan ; ret
0x00000000000c1cf1 : frstor dword ptr [rcx + rcx*4 + 0x34] ; and eax, 0x2d0 ; ret
0x0000000000160a81 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003686c : fscale ; fstp st(1) ; ret
0x0000000000174907 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000000940ae : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000011c413 : fstp dword ptr [rbx] ; sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000114bee : fstp qword ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000174c80 : fstp st(0) ; ret 0xde5d
0x00000000000f9f70 : fstp st(0) ; xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xf9f87
0x0000000000036950 : fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003686e : fstp st(1) ; ret
0x00000000000367a1 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003683d : fstp xword ptr [rdi] ; ret
0x00000000001a4bc8 : fsub dword ptr [rbx - 0xc] ; jmp qword ptr [rcx]
0x0000000000036f18 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000c0993 : fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, rdi ; ret
0x0000000000036c65 : fsub dword ptr [rcx + rcx*4 + 2] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa6ea : fsub dword ptr [rcx + rcx*4 + 6] ; or rax, 0xffffffffffffffff ; ret
0x000000000008a9c4 : fsub dword ptr [rcx] ; or eax, dword ptr [rax] ; ret
0x0000000000160d81 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000098724 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001b0284 : fsub qword ptr [rax] ; add al, byte ptr [rax] ; pop rax ; push rcx ; sti ; call rsi
0x00000000000a151b : fsub qword ptr [rsi + 0xf] ; jmp 0xa14e7
0x0000000000160b81 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000086efc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000016552b : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ab4a8 : fsub st(5) ; cmc ; call qword ptr [rax]
0x000000000019973d : fsub st(5), st(0) ; jmp qword ptr [rdx]
0x00000000000f4fc2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000131753 : fsubp st(0) ; xchg dword ptr [rcx + 0x2948fff1], eax ; ret
0x00000000000367a3 : fsubp st(1) ; ret
0x0000000000198fb5 : fsubp st(5) ; jmp qword ptr [rdx]
0x00000000000f395d : fsubr qword ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000194e84 : fsubr qword ptr [rax + rax] ; cwde ; xchg eax, ebp ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a5184 : fsubr qword ptr [rdi + 1] ; add byte ptr [rax], ch ; jbe 0x1a5186 ; jmp qword ptr [rcx]
0x00000000001b4e84 : fsubr qword ptr [rdx + rax] ; fadd dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x000000000018f1c1 : fsubr st(1) ; call qword ptr [rdx]
0x0000000000193924 : fucom st(4) ; jmp 0x19392a
0x0000000000176958 : fucom st(5) ; loop 0x1769b1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000000407aa : fucomi st(1) ; ret
0x000000000019457d : fucomi st(4) ; jmp qword ptr [rdx]
0x00000000001995d5 : fucomi st(5) ; jmp qword ptr [rdx]
0x0000000000198f6d : fucomp st(5) ; jmp qword ptr [rdx]
0x00000000000c2975 : fucompi st(0) ; adc eax, 0x89000289 ; ret 0xc748
0x0000000000077f05 : fucompi st(0) ; and eax, 0x89ffffd1 ; ret 0x3f7
0x00000000000357b0 : fucompi st(0) ; cmp bl, byte ptr [rbp - 0x3fce0002] ; pop rbx ; ret
0x00000000000ed927 : fucompi st(0) ; jae 0xed991 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000073345 : fucompi st(0) ; movsd dword ptr [rdi], dword ptr [rsi] ; sar edx, -1 ; xor eax, eax ; pop rbx ; ret
0x0000000000071f23 : fucompi st(0) ; not dword ptr [rcx - 0x3d770000] ; jmp 0x71eef
0x00000000000421db : fucompi st(0) ; pminsw mm7, mm7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c6436 : fucompi st(0) ; push rsp ; jns 0xc6446 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000071ac8 : fucompi st(0) ; rcl byte ptr [rdi - 0x3d770000], cl ; jmp 0x71a98
0x0000000000118bb7 : fucompi st(0) ; ret
0x00000000001115c8 : fucompi st(0) ; ret 0x201
0x000000000012ca38 : fucompi st(0) ; ret 0xfbf3
0x000000000003fc04 : fucompi st(0) ; salc ; loope 0x3fc10 ; dec dword ptr [rax - 0x77] ; ret
0x000000000010bba4 : fucompi st(0) ; salc ; ret 0xfff6
0x000000000007803d : fucompi st(0) ; sbb eax, 0x89ffffc4 ; ret 0xbceb
0x0000000000044f89 : fucompi st(0) ; xchg eax, ecx ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000000781e2 : fucompi st(3) ; cwde ; mov esi, r8d ; call 0x74468
0x000000000018a391 : fyl2x ; call rsp
0x000000000019d191 : fyl2xp1 ; call qword ptr [rax]
0x000000000018cafc : hlt ; add al, byte ptr fs:[rax] ; ret 0xf88a
0x00000000001890bd : hlt ; add byte ptr [rax], al ; mov ah, 0xa9 ; out dx, al ; jmp rsp
0x000000000018a5cc : hlt ; add byte ptr [rcx], 0 ; xor al, 0x9b ; call rsp
0x00000000001882c8 : hlt ; add ch, bl ; jmp rsp
0x000000000018b9f8 : hlt ; and dh, bh ; call rsp
0x00000000001a68d2 : hlt ; call qword ptr [rax]
0x00000000001a592a : hlt ; call qword ptr [rbx]
0x00000000001794aa : hlt ; call qword ptr [rcx]
0x0000000000179146 : hlt ; call qword ptr [rdi]
0x00000000001a6932 : hlt ; call qword ptr [rdx]
0x00000000001a5cda : hlt ; call qword ptr [rsi]
0x000000000017937e : hlt ; call rax
0x00000000001794ce : hlt ; call rbx
0x0000000000179592 : hlt ; call rdi
0x00000000001793d2 : hlt ; call rsi
0x000000000018acc2 : hlt ; call rsp
0x0000000000096aa3 : hlt ; cmp ecx, edx ; je 0x96a9e ; ret
0x0000000000109163 : hlt ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001794e6 : hlt ; dec dword ptr [rdi] ; pushfq ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; jmp qword ptr [rbx]
0x00000000001794ca : hlt ; dec ecx ; wait ; hlt ; call rbx
0x0000000000179142 : hlt ; dec edx ; add al, 0xf4 ; call qword ptr [rdi]
0x000000000018ac72 : hlt ; dec esp ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; je 0x18acba ; hlt ; jmp rsp
0x000000000018ad72 : hlt ; dec esp ; mov bl, 1 ; add byte ptr [rcx + rdx*4], dh ; hlt ; jmp rsp
0x000000000018ae92 : hlt ; inc dword ptr [rbp + rdi*4 - 0x2abffff] ; hlt ; call rsp
0x00000000001092b6 : hlt ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000017909e : hlt ; inc dword ptr [rbp - 0xc] ; ljmp ptr [rbx - 0xd] ; call rsi
0x00000000001798ca : hlt ; inc dword ptr [rcx - 0x32] ; hlt ; inc dword ptr [rcx - 0x32] ; hlt ; jmp rsp
0x00000000001798ce : hlt ; inc dword ptr [rcx - 0x32] ; hlt ; jmp rsp
0x0000000000179342 : hlt ; inc dword ptr [rcx] ; sbb ah, dh ; jmp qword ptr [rbx]
0x0000000000179542 : hlt ; inc dword ptr [rdi] ; popfq ; hlt ; call qword ptr [rcx]
0x000000000017929a : hlt ; inc dword ptr [rdi] ; sbb esp, esi ; jmp rsp
0x000000000017958a : hlt ; inc ebx ; popfq ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call rdi
0x000000000018acfa : hlt ; inc esp ; scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; and al, 0x3d ; hlt ; jmp rsp
0x0000000000174d08 : hlt ; jmp 0x174cdd
0x00000000000e0f68 : hlt ; jmp 0xfffffffffd920f6a
0x00000000001a4b9a : hlt ; jmp qword ptr [rax]
0x0000000000179346 : hlt ; jmp qword ptr [rbx]
0x00000000001a4bca : hlt ; jmp qword ptr [rcx]
0x00000000001a4dca : hlt ; jmp qword ptr [rdi]
0x00000000001a63c2 : hlt ; jmp qword ptr [rdx]
0x00000000001a62ca : hlt ; jmp qword ptr [rsi]
0x00000000001a6ee2 : hlt ; jmp rax
0x0000000000179596 : hlt ; jmp rcx
0x00000000001794d6 : hlt ; jmp rdi
0x00000000001a4852 : hlt ; jmp rdx
0x0000000000179366 : hlt ; jmp rsi
0x000000000017929e : hlt ; jmp rsp
0x0000000000164045 : hlt ; jne 0x164167 ; ret
0x0000000000164044 : hlt ; jne 0x164168 ; ret
0x00000000001797da : hlt ; lcall ptr [rax - 0x67000b65] ; wait ; hlt ; call rsi
0x0000000000179376 : hlt ; lcall ptr [rax - 0x67000b6b] ; xchg eax, ebp ; hlt ; call rax
0x00000000001793ce : hlt ; lcall ptr [rdi - 0x65] ; hlt ; call rsi
0x00000000001793aa : hlt ; ljmp ptr [rax - 0x57000b6b] ; xchg eax, ebp ; hlt ; jmp rsi
0x00000000001797be : hlt ; ljmp ptr [rax] ; wait ; hlt ; call rsi
0x00000000001790a1 : hlt ; ljmp ptr [rbx - 0xd] ; call rsi
0x00000000001794a6 : hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call qword ptr [rcx]
0x000000000017958e : hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call rdi
0x0000000000179792 : hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call rsi
0x000000000017953e : hlt ; ljmp ptr [rcx - 0x65] ; hlt ; inc dword ptr [rdi] ; popfq ; hlt ; call qword ptr [rcx]
0x00000000001794ea : hlt ; ljmp ptr [rcx - 0x65] ; hlt ; jmp qword ptr [rbx]
0x00000000001794a2 : hlt ; ljmp ptr [rcx - 0x65] ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call qword ptr [rcx]
0x000000000017978e : hlt ; ljmp ptr [rcx - 0x65] ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call rsi
0x0000000000179296 : hlt ; ljmp ptr [rsi] ; sbb esp, esi ; inc dword ptr [rdi] ; sbb esp, esi ; jmp rsp
0x000000000018d328 : hlt ; mov al, 0xf9 ; jmp rsp
0x00000000001aa89c : hlt ; mov byte ptr [rcx], 0 ; nop ; salc ; cmc ; jmp qword ptr [rsi]
0x000000000014c53a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014483e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000163653 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001a519c : hlt ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; jbe 0x1a519e ; jmp qword ptr [rcx]
0x00000000001ab59c : hlt ; pop rsp ; cmc ; jmp qword ptr [rdx]
0x00000000001790ea : hlt ; push qword ptr [rbx] ; sti ; call qword ptr [rax]
0x000000000018ae3a : hlt ; push qword ptr [rcx + rdi*4 - 0x2d1bffff] ; hlt ; jmp rsp
0x000000000017913e : hlt ; push rsi ; add al, 0xf4 ; dec edx ; add al, 0xf4 ; call qword ptr [rdi]
0x0000000000096a8b : hlt ; ret
0x000000000019a8ac : hlt ; ret 0
0x000000000018a040 : hlt ; ret 0xfff0
0x00000000001031f8 : hlt ; ret 0xfff1
0x00000000001aa49c : hlt ; ret 1
0x000000000018af98 : hlt ; sal ch, 0xff ; enter 1, 0x14 ; ret 0xfff5
0x000000000018a030 : hlt ; sal eax, -1 ; add al, 0x5c ; add dword ptr [rax], eax ; ret 0xfff0
0x000000000019919c : hlt ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; adc ch, bh ; in eax, dx ; call qword ptr [rax]
0x0000000000186969 : hlt ; sti ; call qword ptr [rax]
0x0000000000174e43 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000018bab0 : hlt ; sub al, 0xf7 ; jmp rsp
0x0000000000163657 : hlt ; sub eax, edx ; ret
0x0000000000003c8d : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001a1a84 : hlt ; xchg eax, ecx ; int1 ; jmp qword ptr [rdx]
0x00000000000d1d43 : hlt ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd1cda ; pop rbx ; ret
0x000000000018cd59 : idiv al ; jmp rsp
0x000000000017a5ba : idiv bh ; adc ah, 0xf6 ; call rdx
0x00000000001776dd : idiv bh ; call rdi
0x00000000000f4594 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d4264 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x00000000000b3753 : idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x0000000000039aa2 : idiv bh ; dec ecx ; ret
0x000000000017a55a : idiv bh ; insb byte ptr [rdi], dx ; sal esi, cl ; call rdx
0x00000000000bcbbb : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000017a5b6 : idiv bh ; rcl ah, cl ; idiv bh ; adc ah, 0xf6 ; call rdx
0x000000000017a556 : idiv bh ; rcl ah, cl ; idiv bh ; insb byte ptr [rdi], dx ; sal esi, cl ; call rdx
0x000000000017a56e : idiv bh ; rcl ah, cl ; idiv bh ; sal r14b, cl ; call rdx
0x000000000017a2f6 : idiv bh ; ret 0xf68a
0x00000000001ac84a : idiv bh ; ret 3
0x000000000017a572 : idiv bh ; sal r14b, cl ; call rdx
0x00000000001b0f20 : idiv bh ; sbb al, 0xd ; and bh, byte ptr [rsi + rsi*8] ; jmp qword ptr [rdx]
0x00000000001aff20 : idiv bh ; sbb al, 0xd ; cwde ; and dh, dh ; jmp qword ptr [rdx]
0x00000000001afc68 : idiv bh ; sbb al, 0xd ; nop ; and dh, dh ; jmp qword ptr [rdx]
0x0000000000179c74 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000011c49e : idiv bh ; xor eax, eax ; ret
0x0000000000025866 : idiv byte ptr [rax - 1] ; cmovns eax, edx ; ret
0x000000000012ea1d : idiv byte ptr [rsi + 0x38] ; call 0x12ac35
0x000000000019a8dc : idiv dh ; in eax, dx ; jmp qword ptr [rdx]
0x000000000010823d : idiv dword ptr [rbx + 0x3948002b] ; ret 0xda75
0x000000000003879d : idiv ecx ; pop r15 ; ret
0x000000000008080f : idiv edi ; adc byte ptr [rax - 0x77], cl ; ret 0x58b
0x00000000000aedbe : idiv edi ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f72c5 : idiv edi ; add rsp, 0x408 ; ret
0x000000000011bae9 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ca94f : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000ab1db : idiv edi ; dec dword ptr [rcx - 0x7d] ; ret 0x4104
0x0000000000039a9b : idiv edi ; dec ecx ; ret
0x000000000018b9f2 : idiv edi ; mov ah, 0xfc ; add dword ptr [rax], eax ; hlt ; and dh, bh ; call rsp
0x000000000018bd52 : idiv edi ; mov ah, 8 ; add al, byte ptr [rax] ; test byte ptr [rcx - 9], cl ; jmp rsp
0x0000000000117d9d : idiv edi ; mov eax, ebx ; pop rbx ; ret
0x000000000018b99a : idiv edi ; mov esp, 0xb40001fa ; sbb esi, edi ; call rsp
0x00000000000aed7a : idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000c49dd : idiv edi ; push rsi ; ret
0x000000000018bf72 : idiv edi ; pushfq ; adc eax, dword ptr [rdx] ; add byte ptr [rdi], ah ; jp 0x18bf7b ; jmp rsp
0x00000000001b44da : idiv edi ; ret
0x00000000001b3932 : idiv edi ; ret 0
0x00000000001b5888 : idiv edi ; sbb al, 0xd ; mov dh, byte ptr [rdi + rsi*8] ; jmp qword ptr [rdx]
0x00000000001b5c28 : idiv edi ; sbb al, 0xd ; nop ; xor esi, edi ; jmp qword ptr [rdx]
0x00000000001b5c70 : idiv edi ; sbb al, 0xd ; pop rsi ; xor esi, edi ; jmp qword ptr [rdx]
0x00000000001b5918 : idiv edi ; sbb al, 0xd ; xor al, 0xf7 ; jmp qword ptr [rdx]
0x00000000001b5960 : idiv edi ; sbb al, 0xd ; xor byte ptr [rdi + rsi*8], dh ; jmp qword ptr [rdx]
0x00000000001b5cd0 : idiv edi ; sbb al, 0xd ; xor esi, r15d ; jmp qword ptr [rdx]
0x000000000003c8d6 : idiv esi ; ret
0x00000000000b3763 : idiv r15b ; dec dword ptr [rcx + 0x29] ; ret
0x0000000000117d9c : idiv r15d ; mov eax, ebx ; pop rbx ; ret
0x000000000003879c : idiv r9 ; pop r15 ; ret
0x000000000003c8d5 : idiv rsi ; ret
0x00000000000dbb1f : imul al ; mov ecx, dword ptr [rcx] ; sti ; call rcx
0x00000000000320b8 : imul al ; ret 1
0x00000000001887d9 : imul bl ; call rsp
0x0000000000193afd : imul bl ; jmp qword ptr [rdx]
0x00000000001875a8 : imul byte ptr [rdi - 0x50790004] ; cld ; call qword ptr [rsi]
0x0000000000186438 : imul byte ptr [rdx - 0x54790003] ; std ; call qword ptr [rsi]
0x000000000009bf78 : imul cl ; ret 8
0x0000000000134380 : imul dword ptr [rax] ; add byte ptr [rax - 0x9ffffff], al ; ret
0x00000000001102c4 : imul dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000011baf3 : imul eax ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000671e0 : imul eax ; mov edx, 0x890000d2 ; ret
0x00000000001058ef : imul eax ; pop rbx ; ret
0x0000000000039417 : imul eax ; ret
0x00000000000ba2f8 : imul eax ; ret 0xfe79
0x0000000000105c88 : imul eax ; ret 0xffbf
0x000000000010599b : imul eax ; scasd eax, dword ptr [rdi] ; ret 0xffff
0x000000000006bbf1 : imul eax ; test eax, 0x89000088 ; ret
0x000000000007de49 : imul eax, dword ptr [rax], 0 ; ret
0x00000000000cbb0d : imul eax, dword ptr [rax], 0x450f0000 ; ret 0x84e9
0x0000000000196916 : imul eax, dword ptr [rbp + 0xd1cffed], -0x11 ; test ch, ch ; jmp qword ptr [rdx]
0x00000000001621b1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000001a4d65 : imul eax, dword ptr [rcx], 0 ; sbb byte ptr [rsi - 0xc], ah ; jmp qword ptr [rcx]
0x00000000001a4cb5 : imul eax, dword ptr [rcx], 0 ; test al, 0x65 ; hlt ; jmp qword ptr [rcx]
0x00000000001a4d7d : imul eax, dword ptr [rcx], 0 ; xor byte ptr [rsi - 0xc], ah ; jmp qword ptr [rcx]
0x00000000000d6373 : imul eax, dword ptr [rcx], 0x63480000 ; ret 0x8b48
0x00000000001a4b95 : imul eax, dword ptr [rcx], 0xf4639800 ; jmp qword ptr [rax]
0x00000000001a98d6 : imul ebp, edi, 0xd1cfff4 ; in eax, dx ; hlt ; jmp qword ptr [rdx]
0x000000000019a607 : imul ebp, esi, 0xa00d1cff ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000101f75 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d799 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001097d2 : imul ebx, dword ptr [rbx + 0x5d], 0x5c41f089 ; ret
0x00000000000301b1 : imul ebx, ebp, 0x38 ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000101f15 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019775e : imul ecx, dword ptr [rdi + 0xd1cffed], -0x26 ; mov gs, ebp ; jmp qword ptr [rdx]
0x000000000011c041 : imul ecx, ecx, -0xa ; dec dword ptr [rax + 0x39] ; ret
0x0000000000101e4f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001246cb : imul edi, ebp, 0x89c085ff ; ret
0x00000000000c61df : imul edi, edi, 0x8348ffff ; ret
0x00000000001874f5 : imul edi, esp, -1 ; nop ; insb byte ptr [rdi], dx ; cld ; call qword ptr [rax]
0x0000000000101f45 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000002b60 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x00000000001790a4 : imul esi, ebx, -0xd ; call rsi
0x00000000000b15ce : imul esi, edx ; add eax, esi ; ret
0x0000000000178645 : imul esi, edx, -1 ; shr byte ptr [rbx - 0xe], 1 ; jmp rax
0x000000000017860d : imul esi, edx, 0xf269f0ff ; jmp qword ptr [rax]
0x0000000000199b6e : imul esi, esi, 0xd1cffed ; in al, -0xd ; in eax, dx ; jmp qword ptr [rdx]
0x000000000009ccbc : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000019d18c : in al, -0x11 ; add byte ptr [rax], al ; add cl, bl ; stc ; call qword ptr [rax]
0x0000000000003758 : in al, -0x12 ; jne 0x373a ; ret 0x975
0x0000000000177129 : in al, -0x13 ; call qword ptr [rbx]
0x000000000018de38 : in al, -0x15 ; cli ; jmp rsp
0x0000000000193925 : in al, -0x15 ; jmp qword ptr [rdx]
0x00000000000c75f2 : in al, -0x15 ; ret
0x00000000000618a5 : in al, -0x17 ; out -1, eax ; dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x00000000001a8f14 : in al, -0x1e ; hlt ; jmp qword ptr [rdx]
0x00000000001abb8c : in al, -0x27 ; add dword ptr [rax], eax ; shr bh, 0xf5 ; call qword ptr [rax]
0x000000000018dce0 : in al, -0x2c ; cli ; jmp rsp
0x000000000018ae40 : in al, -0x2e ; hlt ; jmp rsp
0x000000000018a320 : in al, -0x31 ; int1 ; jmp rsp
0x00000000001335a8 : in al, -0x3e ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001a9a8c : in al, -0x48 ; add dword ptr [rax], eax ; jo 0x1a9b0a ; cmc ; call rsp
0x000000000018db98 : in al, -0x49 ; cli ; call rsp
0x00000000001a7e8c : in al, -0x64 ; add dword ptr [rax], eax ; adc byte ptr [rdx], dh ; cmc ; call qword ptr [rsi]
0x00000000001092ba : in al, -0x77 ; ret 0x87e
0x00000000000e143f : in al, -0x7d ; mov byte ptr [rcx], 0x83 ; ret 0x4840
0x0000000000199b74 : in al, -0xd ; in eax, dx ; jmp qword ptr [rdx]
0x000000000014c51a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000f6a55 : in al, -1 ; dec dword ptr [rax - 0x75] ; jge 0xf6a64 ; call r12
0x0000000000082c9e : in al, -1 ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000186725 : in al, -5 ; call qword ptr [rax]
0x00000000001866c5 : in al, -5 ; call rax
0x000000000018ddd9 : in al, -6 ; call rsp
0x000000000019c5dd : in al, 0 ; add byte ptr [rax - 0x68], ah ; out dx, al ; call qword ptr [rdx]
0x0000000000164078 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000fa7f1 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x000000000005e66a : in al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001888b0 : in al, 0x19 ; in al, dx ; jmp rsp
0x00000000001928d4 : in al, 0x22 ; jmp 0x1928da
0x00000000001b0e8c : in al, 0x2c ; add al, byte ptr [rax] ; sbb dh, 0xf6 ; jmp qword ptr [rcx]
0x00000000001896a0 : in al, 0x33 ; out dx, eax ; call rsp
0x00000000001a1c8c : in al, 0x3a ; add dword ptr [rax], eax ; add dh, ch ; int1 ; call qword ptr [rdx]
0x00000000000a5bf3 : in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xa5c0e
0x00000000000aa953 : in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xaa96e
0x00000000001898f8 : in al, 0x54 ; out dx, eax ; jmp rsp
0x000000000012e9c8 : in al, 0x55 ; push rbx ; xor ebx, ebx ; call 0x12ac67
0x00000000001a488c : in al, 0x66 ; add dword ptr [rax], eax ; shl rdi, 1 ; jmp qword ptr [rax]
0x00000000001a538c : in al, 0x71 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xc], bh ; jmp qword ptr [rcx]
0x000000000018d0c0 : in al, 0x71 ; stc ; jmp rsp
0x0000000000086cfc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000f5cc0 : in al, 0xc ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001ac5ad : in al, 1 ; add byte ptr [rax], al ; std ; cmc ; jmp rsp
0x000000000018c350 : in al, 5 ; clc ; call rsp
0x000000000009d7f8 : in al, 6 ; add byte ptr [rax], al ; ret
0x000000000018f394 : in al, dx ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x58], cl ; std ; jmp qword ptr [rax]
0x0000000000192394 : in al, dx ; add byte ptr [r8], al ; call 0x11190e5d
0x000000000010bc79 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; int 0xc3
0x0000000000129e47 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; jmp rcx
0x000000000007c983 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bf3b4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x48c
0x00000000000afcb4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x583
0x000000000003a1b4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xcde
0x0000000000188fad : in al, dx ; add byte ptr [rax], al ; adc al, 0x9b ; out dx, al ; jmp rsp
0x000000000019ce75 : in al, dx ; add byte ptr [rax], al ; js 0x19ce6c ; out dx, al ; call qword ptr [rax]
0x0000000000192694 : in al, dx ; add byte ptr [rax], r8b ; mov byte ptr [rdi], cl ; jmp 0x1926a2
0x00000000001378b0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000166382 : in al, dx ; call qword ptr [rax]
0x0000000000172a72 : in al, dx ; call rax
0x00000000001945fa : in al, dx ; call rdx
0x0000000000188892 : in al, dx ; call rsp
0x0000000000039718 : in al, dx ; cmp dh, dh ; ret 0x7401
0x000000000018888a : in al, dx ; dec dword ptr [rsp + rsi*4 + 0x195f0000] ; in al, dx ; call rsp
0x000000000018afb4 : in al, dx ; enter 1, 0x64 ; ret
0x00000000001aba94 : in al, dx ; fadd dword ptr [rcx] ; add byte ptr [rax - 0x13], cl ; cmc ; jmp qword ptr [rax]
0x0000000000039e89 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001a974d : in al, dx ; hlt ; jmp qword ptr [rdx]
0x00000000001a4b94 : in al, dx ; imul eax, dword ptr [rcx], 0xf4639800 ; jmp qword ptr [rax]
0x0000000000166396 : in al, dx ; inc dword ptr [rax + 0x7d] ; in al, dx ; jmp qword ptr [rax]
0x0000000000172a96 : in al, dx ; inc dword ptr [rax + rbp + 0x2884ffec] ; in al, dx ; call qword ptr [rax]
0x00000000001a1c11 : in al, dx ; int1 ; jmp qword ptr [rcx]
0x00000000000d4ced : in al, dx ; jl 0xd4d29 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001887a1 : in al, dx ; jmp 0x1887a5
0x000000000016639a : in al, dx ; jmp qword ptr [rax]
0x0000000000193eaa : in al, dx ; jmp qword ptr [rcx]
0x0000000000193f06 : in al, dx ; jmp qword ptr [rdx]
0x0000000000166386 : in al, dx ; jmp rax
0x0000000000172aaa : in al, dx ; jmp rcx
0x00000000001888b2 : in al, dx ; jmp rsp
0x00000000000eb586 : in al, dx ; jo 0xeb582 ; ret 0x4840
0x0000000000172aa6 : in al, dx ; lcall ptr [rax + 0x28] ; in al, dx ; jmp rcx
0x0000000000172aa2 : in al, dx ; lcall ptr [rbx + 0x58ffec27] ; sub ah, ch ; jmp rcx
0x0000000000172aae : in al, dx ; ljmp ptr [rax + rbp] ; in al, dx ; call qword ptr [rax]
0x00000000001888aa : in al, dx ; ljmp ptr [rbp + rsi*4 + 0x19e40000] ; in al, dx ; jmp rsp
0x00000000001ad294 : in al, dx ; lock add dword ptr [rax], eax ; call 0xffffffffe41ac8b7
0x0000000000199294 : in al, dx ; mov al, 0 ; add byte ptr [rax + 1], bl ; out dx, al ; jmp rax
0x00000000000f3213 : in al, dx ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000014483a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000096bb3 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000012cfe4 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00000000000497ea : in al, dx ; mov rax, rsi ; nop ; ret
0x000000000014c91a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000e411e : in al, dx ; or al, ch ; retf ; jmp 0xffffffffc348412c
0x000000000008314a : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000012e77f : in al, dx ; or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x000000000008138a : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001385d4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000001f6e2 : in al, dx ; or byte ptr [rcx + 0x415d5bd8], 0x5c ; ret
0x000000000019ce79 : in al, dx ; out dx, al ; call qword ptr [rax]
0x0000000000096a03 : in al, dx ; ret
0x00000000000a4026 : in al, dx ; sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3668196
0x00000000000a394f : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000013051d : in al, dx ; sbb byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000001adfa4 : in al, dx ; stc ; add dword ptr [rax], eax ; jmp qword ptr [rdi]
0x00000000001968d4 : in al, dx ; test ch, ch ; jmp qword ptr [rdx]
0x000000000017639e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x176331 ; ret 0x48f
0x000000000017639d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x176332 ; ret 0x48f
0x0000000000116222 : in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x0000000000121fa8 : in eax, -0x18 ; ret 0xf6f6
0x0000000000176959 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000000c6021 : in eax, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001b10d9 : in eax, -0xa ; call qword ptr [rdi]
0x00000000001ab4a9 : in eax, -0xb ; call qword ptr [rax]
0x00000000001ab4c1 : in eax, -0xb ; jmp rbx
0x000000000014c59a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000916ea : in eax, -0xd ; ret
0x00000000001781fd : in eax, -0xf ; inc dword ptr [rax] ; out 0xf1, al ; call qword ptr [rax]
0x00000000001781f5 : in eax, -0xf ; jmp rax
0x0000000000057dc9 : in eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000175e21 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001866a5 : in eax, -5 ; call qword ptr [rax]
0x000000000007a1d2 : in eax, 0 ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005e51a : in eax, 0x11 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000174aa3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000e4288 : in eax, 0x39 ; ret
0x000000000011dbd6 : in eax, 0x41 ; call rdi
0x00000000000a30ca : in eax, 0x44 ; sub eax, eax ; nop ; ret
0x0000000000097bca : in eax, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000008c67a : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000049922 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000000f31ae : in eax, 0x49 ; mov ecx, esi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000001ab33c : in eax, 0x5a ; cmc ; jmp qword ptr [rdx]
0x000000000010abc5 : in eax, 0x5d ; ret
0x0000000000173d39 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00000000000a2ea3 : in eax, 0xf ; je 0xa2ec8 ; add rax, 2 ; ret
0x000000000018b585 : in eax, 1 ; add byte ptr [rsp - 0xa], dl ; jmp rsp
0x000000000018dcf5 : in eax, 2 ; add byte ptr [rsi + rdx*8], dl ; cli ; jmp rsp
0x0000000000028456 : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000000a8b12 : in eax, dx ; add dword ptr [rcx - 0x7d], ecx ; jmp 0xffffffffc28dd324
0x0000000000194a6a : in eax, dx ; call qword ptr [rax]
0x000000000017712a : in eax, dx ; call qword ptr [rbx]
0x0000000000196b8a : in eax, dx ; call qword ptr [rcx]
0x00000000001948ca : in eax, dx ; call qword ptr [rdx]
0x0000000000195c72 : in eax, dx ; call rbx
0x000000000019633a : in eax, dx ; call rcx
0x0000000000188a32 : in eax, dx ; call rsp
0x00000000001aba99 : in eax, dx ; cmc ; jmp qword ptr [rax]
0x0000000000096aca : in eax, dx ; cmp r8d, ecx ; je 0x96abf ; ret
0x0000000000188a72 : in eax, dx ; dec esp ; ret
0x0000000000198ffc : in eax, dx ; fsubp st(5) ; jmp qword ptr [rdx]
0x00000000001a9845 : in eax, dx ; hlt ; jmp qword ptr [rdx]
0x00000000001998a5 : in eax, dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000177122 : in eax, dx ; inc dword ptr [rcx] ; clc ; in eax, dx ; jmp qword ptr [rax + 0x13ffede4]
0x00000000001ad03c : in eax, dx ; jge 0x1ad037 ; jmp qword ptr [rdx]
0x00000000001ad084 : in eax, dx ; jge 0x1ad07f ; jmp qword ptr [rdx]
0x000000000002f69d : in eax, dx ; jmp 0x2f6a7
0x0000000000177126 : in eax, dx ; jmp qword ptr [rax + 0x13ffede4]
0x0000000000194e8a : in eax, dx ; jmp qword ptr [rax]
0x000000000019492e : in eax, dx ; jmp qword ptr [rdx]
0x0000000000173132 : in eax, dx ; jmp rax
0x00000000001962ca : in eax, dx ; jmp rbx
0x000000000019480a : in eax, dx ; jmp rcx
0x00000000001955f2 : in eax, dx ; jmp rsi
0x0000000000188a7a : in eax, dx ; jmp rsp
0x0000000000164f0f : in eax, dx ; jne 0x164ef1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ab1c : in eax, dx ; jne 0x7ab39 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ad69 : in eax, dx ; jne 0x7ada1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d085a : in eax, dx ; jne 0xd0849 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000188a2a : in eax, dx ; lcall ptr [rcx + rax*8 + 0x57d40000] ; in eax, dx ; call rsp
0x0000000000177002 : in eax, dx ; lcall ptr [rcx + rsi*8] ; in eax, dx ; jmp rax
0x0000000000176ffe : in eax, dx ; lcall ptr [rcx + rsi*8] ; in eax, dx ; lcall ptr [rcx + rsi*8] ; in eax, dx ; jmp rax
0x00000000000a1432 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000001a8e3c : in eax, dx ; loop 0x1a8e36 ; jmp qword ptr [rdx]
0x00000000000f3357 : in eax, dx ; loope 0xf338f ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000a0df9 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a0e0f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0e31 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0e4f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0e6f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0e95 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0eb1 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a0ed1 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a0ef1 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a0f17 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0f39 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0f57 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a0f77 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a0f93 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a0fb3 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a0fd3 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a0ff3 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1019 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1069 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a0d3f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0d5d : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0d7d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0d9f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a0dbf : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a0ddf : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a0c75 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a0c87 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a0c9d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0cb5 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a0ccb : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0cdd : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a0cfb : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a0d07 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a0d1d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a0c61 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000000a5495 : in eax, dx ; mov edx, eax ; jmp 0xa5442
0x00000000000a7c35 : in eax, dx ; mov edx, eax ; jmp 0xa7be2
0x00000000000aa235 : in eax, dx ; mov edx, eax ; jmp 0xaa1e2
0x000000000014464a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000096b02 : in eax, dx ; mov rax, rdi ; ret
0x00000000000a832f : in eax, dx ; mov rbx, r15 ; setne dl ; jmp 0xa834d
0x000000000014c99a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d43ad : in eax, dx ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x000000000013c140 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c0cc8 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000165312 : in eax, dx ; pop rbx ; ret
0x00000000001ab3bc : in eax, dx ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x000000000017312e : in eax, dx ; push qword ptr [rax + 0x41] ; in eax, dx ; jmp rax
0x000000000017717e : in eax, dx ; push qword ptr [rax - 0x2f00118b] ; jne 0x17717e ; call qword ptr [rax]
0x00000000000740a2 : in eax, dx ; ret
0x0000000000186915 : in eax, dx ; sti ; call qword ptr [rax]
0x00000000000a1582 : in eax, dx ; sub rax, 1 ; ret
0x0000000000086a42 : in eax, dx ; xor eax, eax ; ret
0x000000000008c595 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000113afe : inc byte ptr [rbx + 0x394101c0] ; ret 0xd975
0x00000000000b9f41 : inc byte ptr [rcx] ; je 0xb9f56 ; xor eax, eax ; ret
0x0000000000189530 : inc byte ptr [rdi] ; out dx, eax ; jmp rsp
0x0000000000072fc9 : inc byte ptr [rdx] ; je 0x72fdf ; mov dword ptr [rdi], edx ; ret
0x00000000000f31b4 : inc dword ptr [r8] ; ret
0x000000000018682b : inc dword ptr [rax + 0x10fffc11] ; add al, 0xfc ; call rax
0x0000000000186213 : inc dword ptr [rax + 0x11] ; sti ; call qword ptr [rax]
0x0000000000186227 : inc dword ptr [rax + 0x15] ; sti ; call qword ptr [rax]
0x0000000000186b13 : inc dword ptr [rax + 0x16] ; cld ; call qword ptr [rax - 0x1f0003e9]
0x0000000000186aff : inc dword ptr [rax + 0x24] ; cld ; call qword ptr [rax - 0x1f0003db]
0x0000000000186287 : inc dword ptr [rax + 0x2b] ; sti ; push qword ptr [rax + 0x1d] ; sti ; jmp rax
0x00000000001869cf : inc dword ptr [rax + 0x2c] ; cld ; inc dword ptr [rax] ; cld ; jmp rax
0x0000000000186a53 : inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000186ab7 : inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000186a3b : inc dword ptr [rax + 0x31] ; cld ; jmp qword ptr [rax]
0x00000000001862ab : inc dword ptr [rax + 0x3a] ; sti ; jmp rax
0x0000000000186237 : inc dword ptr [rax + 0x50fffb18] ; sbb ebx, edi ; jmp qword ptr [rax]
0x00000000001867cb : inc dword ptr [rax + 0x58fffbd8] ; add al, 0xfc ; jmp qword ptr [rax]
0x0000000000186d87 : inc dword ptr [rax + 0x60] ; cld ; call rax
0x0000000000186b6f : inc dword ptr [rax + 0x63] ; cld ; call rax
0x0000000000166397 : inc dword ptr [rax + 0x7d] ; in al, dx ; jmp qword ptr [rax]
0x0000000000186347 : inc dword ptr [rax + 0x7f] ; sti ; call rax
0x000000000018685f : inc dword ptr [rax + 0xb] ; cld ; jmp qword ptr [rax]
0x0000000000172a97 : inc dword ptr [rax + rbp + 0x2884ffec] ; in al, dx ; call qword ptr [rax]
0x000000000018d3d3 : inc dword ptr [rax + rbp*4 - 0x326bfffe] ; stc ; call rsp
0x000000000005fbf3 : inc dword ptr [rax - 0x10b943] ; jmp qword ptr [rax]
0x0000000000178ec7 : inc dword ptr [rax - 0x17000c28] ; xlatb ; jmp qword ptr [rsi]
0x000000000018668b : inc dword ptr [rax - 0x17] ; sti ; call rax
0x0000000000186687 : inc dword ptr [rax - 0x19] ; sti ; inc dword ptr [rax - 0x17] ; sti ; call rax
0x000000000018671f : inc dword ptr [rax - 0x1e] ; sti ; call qword ptr [rax]
0x00000000001866b7 : inc dword ptr [rax - 0x21] ; sti ; jmp qword ptr [rax]
0x000000000018662f : inc dword ptr [rax - 0x24] ; sti ; inc dword ptr [rax] ; fdivp st(3) ; jmp rax
0x00000000001867bb : inc dword ptr [rax - 0x2d] ; sti ; call qword ptr [rax - 0x1f00042c]
0x0000000000186b23 : inc dword ptr [rax - 0x2f0003e5] ; sbb al, 0xfc ; jmp qword ptr [rax]
0x0000000000186777 : inc dword ptr [rax - 0x2f00042f] ; sar bl, cl ; jmp qword ptr [rax]
0x0000000000186317 : inc dword ptr [rax - 0x2f000491] ; jo 0x186322 ; jmp qword ptr [rax]
0x000000000017819b : inc dword ptr [rax - 0x2f000e76] ; mov ecx, dr0 ; jmp qword ptr [rax]
0x0000000000186767 : inc dword ptr [rax - 0x34] ; sti ; call qword ptr [rax - 0x1f000433]
0x000000000018690f : inc dword ptr [rax - 0x3f000417] ; in eax, dx ; sti ; call qword ptr [rax]
0x0000000000187553 : inc dword ptr [rax - 0x4e] ; cld ; call rax
0x000000000017861b : inc dword ptr [rax - 0x4f000d96] ; push 0xf2 ; jmp rax
0x000000000004a5cd : inc dword ptr [rax - 0x4f943] ; jmp qword ptr [rax]
0x000000000004b116 : inc dword ptr [rax - 0x4fb43] ; jmp qword ptr [rax]
0x000000000018776b : inc dword ptr [rax - 0x51] ; cld ; call rax
0x000000000017a003 : inc dword ptr [rax - 0x59] ; cmc ; call rbx
0x000000000018705b : inc dword ptr [rax - 0x75] ; cld ; call rax
0x0000000000187273 : inc dword ptr [rax - 0x78] ; cld ; call rax
0x0000000000186827 : inc dword ptr [rax - 0x7f0003f1] ; adc esp, edi ; call qword ptr [rax]
0x000000000017818b : inc dword ptr [rax - 0x7f] ; int1 ; call qword ptr [rax - 0x1f000e7d]
0x0000000000186933 : inc dword ptr [rax - 8] ; sti ; call qword ptr [rax - 0x1f000407]
0x0000000000189285 : inc dword ptr [rax] ; add ah, al ; ret
0x000000000004b72a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b44
0x0000000000062123 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000cd96a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000016405d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000161297 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000069fea : inc dword ptr [rax] ; add dword ptr [rax], eax ; add cl, ch ; ret 0xffff
0x0000000000186257 : inc dword ptr [rax] ; and bl, bh ; push rax ; and bl, bh ; jmp rax
0x000000000017837f : inc dword ptr [rax] ; call qword ptr [rax]
0x0000000000186b5f : inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc64]
0x00000000001869d3 : inc dword ptr [rax] ; cld ; jmp rax
0x0000000000186633 : inc dword ptr [rax] ; fdivp st(3) ; jmp rax
0x000000000017864f : inc dword ptr [rax] ; insb byte ptr [rdi], dx ; call qword ptr [rax]
0x0000000000178677 : inc dword ptr [rax] ; insd dword ptr [rdi], dx ; jmp qword ptr [rax]
0x00000000001874bf : inc dword ptr [rax] ; jge 0x1874c7 ; push qword ptr [rax + 0x7c] ; cld ; jmp rax
0x00000000001866bf : inc dword ptr [rax] ; jrcxz 0x1866c2 ; call rax
0x0000000000187583 : inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x0000000000187263 : inc dword ptr [rax] ; mov bh, ah ; call qword ptr [rax + 0x20fffc89]
0x000000000018775b : inc dword ptr [rax] ; mov cl, 0xfc ; call qword ptr [rax + 0x20fffcb0]
0x000000000017abe7 : inc dword ptr [rax] ; nop ; cli ; call qword ptr [rax]
0x00000000001867d7 : inc dword ptr [rax] ; or ah, bh ; jmp rax
0x00000000001868ff : inc dword ptr [rax] ; or bh, ah ; call rax
0x000000000010c5d7 : inc dword ptr [rax] ; or eax, esi ; bswap eax ; ret
0x00000000001781ff : inc dword ptr [rax] ; out 0xf1, al ; call qword ptr [rax]
0x00000000001786d7 : inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; call qword ptr [rax]
0x00000000001784bf : inc dword ptr [rax] ; pop rax ; jmp qword ptr [rax]
0x0000000000178503 : inc dword ptr [rax] ; pop rcx ; call qword ptr [rax]
0x00000000001784df : inc dword ptr [rax] ; pop rcx ; jmp qword ptr [rax]
0x0000000000178437 : inc dword ptr [rax] ; push rbp ; jmp qword ptr [rax]
0x00000000001783f7 : inc dword ptr [rax] ; push rbx ; jmp qword ptr [rax]
0x000000000017848f : inc dword ptr [rax] ; push rdi ; call qword ptr [rax]
0x0000000000177f37 : inc dword ptr [rax] ; push rsi ; out dx, eax ; call qword ptr [rax]
0x0000000000178417 : inc dword ptr [rax] ; push rsp ; jmp qword ptr [rax]
0x00000000000f31b5 : inc dword ptr [rax] ; ret
0x000000000018630b : inc dword ptr [rax] ; sti ; jmp rax
0x00000000001782af : inc dword ptr [rax] ; xchg eax, ebp ; cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x00000000001869b7 : inc dword ptr [rax] ; xor ah, bh ; jmp rax
0x0000000000186a5b : inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x00000000000cfa1d : inc dword ptr [rbp + 0x39ee74f1] ; ret 0x8e0f
0x00000000000ae4a6 : inc dword ptr [rbp + 0x79c789c0] ; ret
0x0000000000117cc4 : inc dword ptr [rbp + 1] ; ret 0x3941
0x000000000018dbbb : inc dword ptr [rbp + rbx*8 - 0x44dbfffe] ; cli ; jmp rsp
0x000000000018ae93 : inc dword ptr [rbp + rdi*4 - 0x2abffff] ; hlt ; call rsp
0x0000000000048776 : inc dword ptr [rbp - 0x3db6f02e] ; pop rbx ; ret
0x00000000001092b7 : inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000009554d : inc dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0x5474
0x00000000000f3bbf : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000f3c0a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000017909f : inc dword ptr [rbp - 0xc] ; ljmp ptr [rbx - 0xd] ; call rsi
0x0000000000032df6 : inc dword ptr [rbx + 0xfff0878] ; xchg eax, ebp ; ret 0x9be9
0x000000000018af13 : inc dword ptr [rbx + rax*8 + 0x49940001] ; cmc ; call rsp
0x00000000000e47c5 : inc dword ptr [rbx + rcx*4 + 0x65] ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000005f8da : inc dword ptr [rbx - 0x10ff43] ; jmp qword ptr [rax]
0x00000000000c485c : inc dword ptr [rbx - 0x1af73] ; jmp qword ptr [rax]
0x00000000000c4652 : inc dword ptr [rbx - 0x1c773] ; jmp qword ptr [rax]
0x0000000000080246 : inc dword ptr [rbx - 0x73] ; sub eax, 0x448d48fe ; ret
0x00000000001222ad : inc dword ptr [rbx - 0x76b79c03] ; ret
0x000000000006ceb7 : inc dword ptr [rbx - 0x7bf09608] ; ret 0xfffe
0x0000000000064cc2 : inc dword ptr [rbx - 0x7cf0cf06] ; ret
0x00000000001144ff : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000003d009 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, edx ; ret
0x00000000000a1b9a : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a1a9f : inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000060e54 : inc dword ptr [rcx + 0x29] ; ret 0x3945
0x000000000004b7bc : inc dword ptr [rcx + 0x39] ; ret
0x000000000004db79 : inc dword ptr [rcx + 0x39] ; ret 0x870f
0x00000000000739eb : inc dword ptr [rcx + 0x5c] ; ret
0x00000000001177f3 : inc dword ptr [rcx + 0x5e] ; ret
0x0000000000178047 : inc dword ptr [rcx + 0x5efff0b8] ; mov bh, 0xf0 ; jmp rdi
0x0000000000075e89 : inc dword ptr [rcx + 0x5f] ; ret
0x00000000000f354c : inc dword ptr [rcx + 0x800008] ; add byte ptr [rax - 0x77], cl ; ret 0x5e9
0x0000000000079bf3 : inc dword ptr [rcx + 0xf] ; les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000cd1d2 : inc dword ptr [rcx + 0xf] ; ret 0x8944
0x00000000001886db : inc dword ptr [rcx + rbp*4 + 0x66540000] ; jmp 0x1886eb
0x000000000006fb85 : inc dword ptr [rcx + rcx*4 - 0x11] ; call 0xebe0f
0x00000000000c8b7e : inc dword ptr [rcx - 0x1e] ; add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000001798cb : inc dword ptr [rcx - 0x32] ; hlt ; inc dword ptr [rcx - 0x32] ; hlt ; jmp rsp
0x00000000001798cf : inc dword ptr [rcx - 0x32] ; hlt ; jmp rsp
0x000000000002f5ec : inc dword ptr [rcx - 0x42] ; or eax, 0xe9000000 ; ret
0x000000000004ff67 : inc dword ptr [rcx - 0x77] ; popfq ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000c6499 : inc dword ptr [rcx - 0x77] ; ret
0x000000000002a9f5 : inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x000000000018baad : inc dword ptr [rcx] ; add ah, dh ; sub al, 0xf7 ; jmp rsp
0x0000000000114079 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000ca7aa : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000177123 : inc dword ptr [rcx] ; clc ; in eax, dx ; jmp qword ptr [rax + 0x13ffede4]
0x00000000001653b9 : inc dword ptr [rcx] ; ja 0x1653c4 ; ret
0x00000000001b66f9 : inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x0000000000179343 : inc dword ptr [rcx] ; sbb ah, dh ; jmp qword ptr [rbx]
0x0000000000020c74 : inc dword ptr [rdi + 4] ; ret
0x000000000018ca53 : inc dword ptr [rdi + rbx*2] ; add al, byte ptr [rax] ; ret 0xf880
0x00000000001895eb : inc dword ptr [rdi + rdx + 0x17940001] ; out dx, eax ; call rsp
0x000000000018c4c3 : inc dword ptr [rdi + rsi + 0x1ca40002] ; clc ; jmp rsp
0x0000000000105b91 : inc dword ptr [rdi - 0x76b7ffd5] ; ret 0x2b49
0x00000000001b867c : inc dword ptr [rdi] ; add byte ptr [rax], al ; ret 3
0x0000000000179543 : inc dword ptr [rdi] ; popfq ; hlt ; call qword ptr [rcx]
0x000000000017929b : inc dword ptr [rdi] ; sbb esp, esi ; jmp rsp
0x0000000000186c1b : inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x000000000018d7ab : inc dword ptr [rdx + rax*8 + 0x41640002] ; cli ; call rsp
0x000000000018763f : inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x00000000001863b3 : inc dword ptr [rdx - 0x5b] ; std ; call qword ptr [rdx]
0x0000000000187147 : inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x0000000000187137 : inc dword ptr [rdx] ; mov ah, bh ; call qword ptr [rdx + 0x22fffc87]
0x000000000018762f : inc dword ptr [rdx] ; scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcae]
0x000000000013ddcd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000186bb7 : inc dword ptr [rsi + 0x62] ; cld ; call rsi
0x000000000018759b : inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x0000000000186447 : inc dword ptr [rsi - 0x53] ; std ; jmp rsi
0x00000000001870a3 : inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x0000000000186ba7 : inc dword ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc63]
0x0000000000187093 : inc dword ptr [rsi] ; mov esp, dr1 ; call qword ptr [rsi + 0x26fffc8b]
0x0000000000187707 : inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x000000000018a033 : inc dword ptr [rsp + rbx*2] ; add dword ptr [rax], eax ; ret 0xfff0
0x0000000000186ce3 : inc dword ptr [rsp - 4] ; call rsp
0x0000000000186b33 : inc eax ; and ah, bh ; call qword ptr [rax]
0x000000000017836f : inc eax ; call rax
0x0000000000179f3b : inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rax
0x000000000017a087 : inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rax
0x0000000000186967 : inc eax ; hlt ; sti ; call qword ptr [rax]
0x0000000000178643 : inc eax ; imul esi, edx, -1 ; shr byte ptr [rbx - 0xe], 1 ; jmp rax
0x000000000017860b : inc eax ; imul esi, edx, 0xf269f0ff ; jmp qword ptr [rax]
0x0000000000186913 : inc eax ; in eax, dx ; sti ; call qword ptr [rax]
0x000000000017866f : inc eax ; insb byte ptr [rdi], dx ; jmp rax
0x0000000000186327 : inc eax ; je 0x18632a ; call qword ptr [rax]
0x00000000001785d7 : inc eax ; jmp rax
0x0000000000178707 : inc eax ; outsd dx, dword ptr [rsi] ; call rax
0x00000000001784f3 : inc eax ; pop rax ; call rax
0x00000000001784d7 : inc eax ; pop rax ; jmp rax
0x00000000001785f3 : inc eax ; push 0x68f0fff2 ; jmp qword ptr [rax]
0x000000000017840f : inc eax ; push rbx ; jmp rax
0x00000000001784b7 : inc eax ; push rdi ; jmp rax
0x00000000001783ef : inc eax ; push rdx ; jmp rax
0x000000000017847f : inc eax ; push rsi ; call rax
0x000000000017842f : inc eax ; push rsp ; jmp rax
0x0000000000186787 : inc eax ; salc ; sti ; call qword ptr [rax]
0x0000000000186247 : inc eax ; sbb edi, ebx ; jmp rax
0x0000000000186adf : inc eax ; sbb esp, edi ; call qword ptr [rax]
0x0000000000036719 : inc eax ; shr eax, 0x1f ; ret
0x0000000000179c79 : inc ebx ; add dh, bh ; jmp rdi
0x0000000000070b6c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000163b49 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000017958b : inc ebx ; popfq ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call rdi
0x00000000001788c7 : inc edi ; xchg eax, ecx ; call rax
0x0000000000187323 : inc edx ; cmp ah, 0xff ; cmp spl, 0xff ; ret 0xfc7f
0x0000000000020821 : inc edx ; jmp 0x2082a
0x00000000000f25a1 : inc esi ; jmp qword ptr [r8]
0x000000000018955b : inc esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdx + rcx - 0x11], dh ; jmp rsp
0x0000000000177913 : inc esp ; out -1, eax ; jmp qword ptr [rcx]
0x000000000018d9fb : inc esp ; rol dword ptr [rdx], 1 ; add byte ptr [rsi + rbp*2], ah ; cli ; jmp rsp
0x000000000018acfb : inc esp ; scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; and al, 0x3d ; hlt ; jmp rsp
0x000000000018b8e3 : inc esp ; test dword ptr [rcx], 0xf704a400 ; jmp rsp
0x000000000002a9f4 : inc qword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000020820 : inc rdx ; jmp 0x2082b
0x00000000001955ec : insb byte ptr [rdi], dx ; adc eax, 0x98a00000 ; in eax, dx ; jmp rsi
0x0000000000059e7e : insb byte ptr [rdi], dx ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007c914 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add bl, dh ; ret
0x00000000001b4e85 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; fadd dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x0000000000194e85 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cwde ; xchg eax, ebp ; in eax, dx ; jmp qword ptr [rax]
0x0000000000138d54 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a2b14 : insb byte ptr [rdi], dx ; add qword ptr [r8], rax ; test al, 0x8c ; call qword ptr [rdi]
0x00000000001a3014 : insb byte ptr [rdi], dx ; add qword ptr [rax], r8 ; js 0x1a300c ; jmp rdx
0x000000000003679c : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003683a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x000000000003681a : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000369ea : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000036869 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000003a23f : insb byte ptr [rdi], dx ; and al, 8 ; mov rsi, rbp ; call r12
0x000000000003673a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000019291c : insb byte ptr [rdi], dx ; and ebp, ebx ; jmp qword ptr [rdx]
0x0000000000178651 : insb byte ptr [rdi], dx ; call qword ptr [rax]
0x00000000001a7b14 : insb byte ptr [rdi], dx ; cdq ; add dword ptr [rax], eax ; test al, 0x2d ; cmc ; jmp qword ptr [rcx]
0x00000000001874f9 : insb byte ptr [rdi], dx ; cld ; call qword ptr [rax]
0x000000000003d124 : insb byte ptr [rdi], dx ; cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000006af9e : insb byte ptr [rdi], dx ; fldenv dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x00000000001a676d : insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rdx]
0x0000000000178675 : insb byte ptr [rdi], dx ; inc dword ptr [rax] ; insd dword ptr [rdi], dx ; jmp qword ptr [rax]
0x000000000017866d : insb byte ptr [rdi], dx ; inc eax ; insb byte ptr [rdi], dx ; jmp rax
0x000000000017695e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000178655 : insb byte ptr [rdi], dx ; jmp qword ptr [rax]
0x0000000000178671 : insb byte ptr [rdi], dx ; jmp rax
0x0000000000188af4 : insb byte ptr [rdi], dx ; mov byte ptr [rax], 0 ; ret
0x00000000001aa914 : insb byte ptr [rdi], dx ; mov dword ptr [rcx], 0xf5d70800 ; jmp qword ptr [rsi]
0x00000000000d62f4 : insb byte ptr [rdi], dx ; mov eax, 0x39c77f04 ; ret 0xc189
0x00000000000d62dc : insb byte ptr [rdi], dx ; mov eax, 0x39df7f04 ; ret 0xc189
0x0000000000123bac : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000128864 : insb byte ptr [rdi], dx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a5014 : insb byte ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000006ac37 : insb byte ptr [rdi], dx ; ret
0x0000000000188a44 : insb byte ptr [rdi], dx ; ret 0
0x000000000006ad24 : insb byte ptr [rdi], dx ; ret 0xf66
0x000000000006fb99 : insb byte ptr [rdi], dx ; ret 7
0x00000000000a5462 : insb byte ptr [rdi], dx ; ror byte ptr [rbp - 0x7bf0febe], 1 ; ret 0
0x000000000017a554 : insb byte ptr [rdi], dx ; sal esi, cl ; call rdx
0x0000000000196d0c : insb byte ptr [rdi], dx ; test ebp, ebp ; jmp qword ptr [rdx]
0x000000000013b9c0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001b4f55 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x000000000018cc25 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; mov ah, 0xa6 ; clc ; jmp rsp
0x0000000000194efd : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; loopne 0x194e9d ; in eax, dx ; call qword ptr [rax]
0x000000000013c8c0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000093605 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000192964 : insd dword ptr [rdi], dx ; and ebp, ebx ; jmp qword ptr [rdx]
0x0000000000178699 : insd dword ptr [rdi], dx ; call qword ptr [rax]
0x0000000000178691 : insd dword ptr [rdi], dx ; call rax
0x000000000018c961 : insd dword ptr [rdi], dx ; clc ; call rsp
0x0000000000187539 : insd dword ptr [rdi], dx ; cld ; call qword ptr [rax + 0x10fffc6e]
0x00000000001a4fb1 : insd dword ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x0000000000178679 : insd dword ptr [rdi], dx ; jmp qword ptr [rax]
0x000000000019bd69 : insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rdi]
0x000000000017695f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000178695 : insd dword ptr [rdi], dx ; push rax ; insd dword ptr [rdi], dx ; call qword ptr [rax]
0x000000000000028e : insd dword ptr [rdi], dx ; ret
0x0000000000001bf0 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x0000000000174d0d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000176bc0 : insd dword ptr [rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x0000000000175c1f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000f92d2 : int 0x31
0x0000000000175de7 : int 0x80
0x000000000010bc7f : int 0xc3
0x00000000000fc44c : int 0xf
0x00000000000b41c1 : int 0xfa
0x0000000000036b2d : int 0xff
0x000000000000386b : int 3
0x00000000000a7827 : int1 ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000004f20e : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000008c3ee : int1 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017818e : int1 ; call qword ptr [rax - 0x1f000e7d]
0x000000000017816e : int1 ; call qword ptr [rax]
0x00000000001a0852 : int1 ; call qword ptr [rbx]
0x000000000019fa8a : int1 ; call qword ptr [rcx]
0x00000000001a00da : int1 ; call qword ptr [rdx]
0x00000000001a083a : int1 ; call qword ptr [rsi]
0x000000000017815a : int1 ; call rax
0x00000000001a008a : int1 ; call rsi
0x000000000018a372 : int1 ; call rsp
0x00000000001af6dd : int1 ; cmc ; jmp qword ptr [rdx]
0x0000000000131757 : int1 ; dec dword ptr [rax + 0x29] ; ret
0x000000000010a44b : int1 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000105616 : int1 ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000001781ae : int1 ; dec eax ; cdq ; int1 ; jmp rax
0x000000000018a1c2 : int1 ; dec esp ; add word ptr [rax], ax ; and al, 0x87 ; int1 ; jmp rsp
0x000000000018a31a : int1 ; dec esp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; in al, -0x31 ; int1 ; jmp rsp
0x0000000000177005 : int1 ; in eax, dx ; jmp rax
0x0000000000177001 : int1 ; in eax, dx ; lcall ptr [rcx + rsi*8] ; in eax, dx ; jmp rax
0x000000000017819a : int1 ; inc dword ptr [rax - 0x2f000e76] ; mov ecx, dr0 ; jmp qword ptr [rax]
0x000000000017818a : int1 ; inc dword ptr [rax - 0x7f] ; int1 ; call qword ptr [rax - 0x1f000e7d]
0x00000000001781fe : int1 ; inc dword ptr [rax] ; out 0xf1, al ; call qword ptr [rax]
0x0000000000096aa1 : int1 ; je 0x96aa0 ; cmp ecx, edx ; je 0x96aa0 ; ret
0x000000000017816a : int1 ; jmp qword ptr [rax + 0x10fff14c]
0x000000000017812e : int1 ; jmp qword ptr [rax]
0x00000000001a0ee2 : int1 ; jmp qword ptr [rbx]
0x000000000019fa0a : int1 ; jmp qword ptr [rcx]
0x00000000001a0536 : int1 ; jmp qword ptr [rdx]
0x000000000017812a : int1 ; jmp rax
0x00000000000a1b45 : int1 ; jmp rcx
0x00000000001a1b7a : int1 ; jmp rsi
0x000000000018a1ca : int1 ; jmp rsp
0x000000000007bdfb : int1 ; jne 0x7bdf6 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000f31b1 : int1 ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000003a57 : int1 ; mov dl, 0x1e ; ret
0x0000000000084796 : int1 ; mov eax, 0x16 ; je 0x847a8 ; ret
0x0000000000186518 : int1 ; mov ebx, 0xbbf1fffd ; std ; call qword ptr [rcx]
0x000000000018660c : int1 ; mov ebx, 0xdc48fffd ; sti ; call qword ptr [rax]
0x000000000014c38b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144e0f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000121b6a : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010799e : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000a3d4c : int1 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000163623 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000d0bb4 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000a1b88 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000004705e : int1 ; pop rbx ; ret
0x0000000000108072 : int1 ; pop rdx ; pop r10 ; ret
0x00000000001781aa : int1 ; push qword ptr [rax + 0x6f] ; int1 ; dec eax ; cdq ; int1 ; jmp rax
0x000000000018a26a : int1 ; push qword ptr [rdx + rbp*2 - 0x485bffff] ; int1 ; jmp rsp
0x00000000001781fa : int1 ; push rax ; in eax, -0xf ; inc dword ptr [rax] ; out 0xf1, al ; call qword ptr [rax]
0x00000000000025eb : int1 ; ret
0x00000000000d1b0b : int1 ; ret 0x2e
0x0000000000176336 : int1 ; ret 0x5803
0x00000000001980d4 : int1 ; stosd dword ptr [rdi], eax ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000163627 : int1 ; sub eax, edx ; ret
0x00000000000973b8 : int1 ; test r8b, r8b ; jne 0x97364 ; mov rax, rdi ; ret
0x000000000009737e : int1 ; xor eax, eax ; ret
0x0000000000086817 : iretd ; call rcx
0x000000000018a321 : iretd ; int1 ; jmp rsp
0x00000000001ad1bc : iretd ; jge 0x1ad1b7 ; jmp qword ptr [rdx]
0x0000000000178d5d : iretd ; jmp rax
0x000000000008095a : iretd ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x0000000000108820 : ja 0x108827 ; ret
0x000000000010889d : ja 0x1088bd ; ret
0x0000000000109ef2 : ja 0x109ef9 ; ret
0x0000000000109f92 : ja 0x109f99 ; ret
0x000000000010aaf7 : ja 0x10ab0a ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000117c33 : ja 0x117c38 ; ret
0x0000000000117e90 : ja 0x117e7b ; mov eax, 0xffffffff ; ret
0x000000000011bcb4 : ja 0x11bce8 ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000011ec01 : ja 0x11ec54 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000121b8d : ja 0x121b7e ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012e242 : ja 0x12e263 ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012e267 : ja 0x12e283 ; ret
0x000000000012e3cf : ja 0x12e3f2 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001653bb : ja 0x1653c2 ; ret
0x00000000001763a4 : ja 0x17632b ; ret 0x48f
0x000000000018a465 : ja 0x18a46e ; add ah, dl ; jb 0x18a463 ; jmp rsp
0x00000000001956ed : ja 0x1956de ; jmp qword ptr [rdx]
0x0000000000195735 : ja 0x195726 ; jmp qword ptr [rdx]
0x000000000019577d : ja 0x19576e ; jmp qword ptr [rdx]
0x0000000000198624 : ja 0x1985e5 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199a0c : ja 0x199a00 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a09f5 : ja 0x1a09ea ; jmp qword ptr [rdx]
0x00000000001a0a3d : ja 0x1a0a32 ; jmp qword ptr [rdx]
0x00000000001a18d4 : ja 0x1a1863 ; int1 ; jmp qword ptr [rdx]
0x000000000002f99d : ja 0x2f9b8 ; lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000036c3d : ja 0x36c60 ; ret
0x0000000000036ee6 : ja 0x36eed ; ret
0x0000000000036f42 : ja 0x36f49 ; ret
0x0000000000036f7c : ja 0x36f81 ; ret
0x0000000000037002 : ja 0x37009 ; ret
0x0000000000038b6e : ja 0x38bc0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000038a6 : ja 0x3908 ; clc ; salc ; jb 0x392e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004f1f7 : ja 0x4f1dd ; mov eax, r8d ; ret
0x000000000005dbd6 : ja 0x5dbdd ; ret
0x000000000006e732 : ja 0x6e796 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000072496 : ja 0x7249a ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000753c6 : ja 0x753d3 ; ret
0x00000000000867bc : ja 0x867f9 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000008c4e8 : ja 0x8c4f3 ; ret
0x0000000000091678 : ja 0x91672 ; ret 0x7401
0x00000000000940ad : ja 0x9408e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097efc : ja 0x97f15 ; mov rax, rdi ; ret
0x000000000009ce07 : ja 0x9ce0d ; ret
0x000000000009ce23 : ja 0x9ce2d ; mov dword ptr [rdi], ecx ; ret
0x000000000009ce64 : ja 0x9ce73 ; mov qword ptr [rdi], rcx ; ret
0x000000000009cee9 : ja 0x9cefd ; ret
0x000000000009cf3f : ja 0x9cf57 ; ret
0x000000000009cfc1 : ja 0x9cfdd ; ret
0x000000000009e407 : ja 0x9e411 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e423 : ja 0x9e431 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009e474 : ja 0x9e487 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009e559 : ja 0x9e571 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009e5cf : ja 0x9e5eb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009e651 : ja 0x9e671 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009fee7 : ja 0x9feed ; ret
0x000000000009ff03 : ja 0x9ff0d ; mov dword ptr [rdi], ecx ; ret
0x000000000009ff44 : ja 0x9ff53 ; mov qword ptr [rdi], rcx ; ret
0x000000000009ffc9 : ja 0x9ffdd ; ret
0x00000000000a001f : ja 0xa0037 ; ret
0x00000000000a00a1 : ja 0xa00bd ; ret
0x00000000000a09b7 : ja 0xa09bd ; ret
0x00000000000a09d3 : ja 0xa09dd ; mov dword ptr [rdi], ecx ; ret
0x00000000000a0a14 : ja 0xa0a23 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a0a99 : ja 0xa0aad ; ret
0x00000000000a0aef : ja 0xa0b07 ; ret
0x00000000000a0b71 : ja 0xa0b8d ; ret
0x000000000000a1e0 : ja 0xa1ec ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 0x10
0x00000000000a1ef9 : ja 0xa1f19 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000a376a : ja 0xa377a ; cmove rax, rcx ; ret
0x00000000000a4617 : ja 0xa464f ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000a4616 : ja 0xa4650 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bdf97 : ja 0xbdf9c ; ret
0x00000000000c0988 : ja 0xc098d ; ret
0x00000000000c0a12 : ja 0xc0a17 ; ret
0x00000000000c0b01 : ja 0xc0b06 ; ret
0x00000000000c11ed : ja 0xc11f4 ; ret
0x00000000000c1d99 : ja 0xc1d9e ; ret
0x00000000000c1df9 : ja 0xc1dfe ; ret
0x00000000000c204d : ja 0xc2052 ; ret
0x00000000000c20bd : ja 0xc20c2 ; ret
0x00000000000cb70e : ja 0xcb6a4 ; pop rbx ; pop rbp ; ret
0x00000000000cb70d : ja 0xcb6a5 ; pop rbx ; pop rbp ; ret
0x00000000000cb742 : ja 0xcb733 ; ret
0x00000000000e44e1 : ja 0xe44eb ; xor eax, eax ; ret
0x00000000000eb04b : ja 0xeb067 ; ret
0x00000000000eb09a : ja 0xeb0b7 ; ret
0x00000000000eb0eb : ja 0xeb107 ; ret
0x00000000000eb143 : ja 0xeb167 ; ret
0x00000000000eb1a7 : ja 0xeb1c7 ; ret
0x00000000000eb200 : ja 0xeb21f ; ret
0x00000000000eb3ff : ja 0xeb406 ; ret
0x00000000000eb492 : ja 0xeb499 ; ret
0x00000000000eb566 : ja 0xeb56d ; ret
0x00000000000eb5af : ja 0xeb5ed ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000eba8f : ja 0xebb03 ; ret
0x00000000000ec858 : ja 0xec85f ; ret
0x00000000000ece49 : ja 0xece50 ; ret
0x00000000000ecea0 : ja 0xecea7 ; ret
0x00000000000ecf03 : ja 0xecf0c ; cdqe ; ret
0x00000000000ecf63 : ja 0xecf6a ; ret
0x00000000000ed04f : ja 0xed0bd ; add rsp, 0x38 ; ret
0x00000000000ed318 : ja 0xed31f ; ret
0x00000000000ed36c : ja 0xed373 ; ret
0x00000000000efcb3 : ja 0xefcc8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000f0540 : ja 0xf0545 ; ret
0x00000000000f0a56 : ja 0xf0a5b ; ret
0x00000000000f10e6 : ja 0xf10f3 ; ret
0x00000000000f122d : ja 0xf1232 ; ret
0x00000000000f12cd : ja 0xf12d2 ; ret
0x00000000000f184b : ja 0xf1850 ; ret
0x00000000000f18bb : ja 0xf18c0 ; ret
0x00000000000f1938 : ja 0xf193d ; ret
0x00000000000f19d8 : ja 0xf19dd ; ret
0x00000000000f1cd1 : ja 0xf1d4a ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000f1f0c : ja 0xf1f13 ; ret
0x00000000000f2eed : ja 0xf2ef4 ; ret
0x00000000000f2f79 : ja 0xf2f9f ; ret
0x00000000000f3011 : ja 0xf3037 ; ret
0x00000000000f3065 : ja 0xf306c ; ret
0x00000000000f3109 : ja 0xf3115 ; ret
0x00000000000f4f75 : ja 0xf4f24 ; dec dword ptr [rcx - 0x75] ; jge 0xf4f85 ; call rbx
0x00000000000f7817 : ja 0xf7837 ; ret
0x00000000000fa2f3 : ja 0xfa2fc ; pop rbx ; pop rbp ; ret
0x00000000000fa556 : ja 0xfa55b ; ret
0x00000000000fa6ae : ja 0xfa708 ; cmp edx, 0xff ; je 0xfa6c8 ; ret
0x00000000000fb293 : ja 0xfb298 ; ret
0x00000000000fb403 : ja 0xfb408 ; ret
0x00000000000fb9cd : ja 0xfb9d2 ; ret
0x00000000000fba6f : ja 0xfba74 ; ret
0x00000000000fbb1f : ja 0xfbb24 ; ret
0x00000000000022cf : ja 0xffffffffd6104b5b ; ret
0x0000000000132d20 : jae 0x132d25 ; ret
0x0000000000132d70 : jae 0x132d75 ; ret
0x0000000000135c34 : jae 0x135c17 ; mov eax, 1 ; ret
0x000000000016517e : jae 0x16518d ; call qword ptr [rbx]
0x000000000016517e : jae 0x165191 ; call qword ptr [rbx]
0x0000000000165c57 : jae 0x165c74 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000174962 : jae 0x174944 ; jo 0x1749e0 ; mov ebp, 0xfb67d10d ; ret
0x00000000001757fe : jae 0x1757d9 ; push rsi ; pop rdx ; je 0x1757ce ; ret 0xacfc
0x0000000000186325 : jae 0x186328 ; inc eax ; je 0x18632c ; call qword ptr [rax]
0x000000000018bf31 : jae 0x18bf2c ; call rsp
0x000000000018bf30 : jae 0x18bf2d ; call rsp
0x000000000018cd0d : jae 0x18cd17 ; add byte ptr [rdi - 8], al ; call rsp
0x00000000001951fd : jae 0x1951ee ; jmp qword ptr [rdx]
0x0000000000195894 : jae 0x195911 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199934 : jae 0x199926 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ac9a5 : jae 0x1ac99e ; jmp qword ptr [rdx]
0x00000000001ac9ed : jae 0x1ac9e6 ; jmp qword ptr [rdx]
0x00000000001ad864 : jae 0x1ad7ed ; cmc ; jmp qword ptr [rdx]
0x00000000001b3761 : jae 0x1b375c ; call qword ptr [rbx]
0x00000000001b595e : jae 0x1b599e ; idiv edi ; sbb al, 0xd ; xor byte ptr [rdi + rsi*8], dh ; jmp qword ptr [rdx]
0x0000000000036f0d : jae 0x36f12 ; ret
0x00000000000374cd : jae 0x374d2 ; ret
0x0000000000047117 : jae 0x47120 ; xor eax, eax ; ret
0x000000000005db9d : jae 0x5dba2 ; ret
0x0000000000074781 : jae 0x746db ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000007b1d3 : jae 0x7b18a ; nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007cbdb : jae 0x7cc05 ; movzx eax, byte ptr [rax] ; ret
0x0000000000086ace : jae 0x86ade ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b141d : jae 0xb1422 ; ret
0x00000000000b426d : jae 0xb4272 ; ret
0x00000000000b429d : jae 0xb42a2 ; ret
0x00000000000c08dd : jae 0xc08e2 ; ret
0x00000000000c0ac0 : jae 0xc0ac5 ; ret
0x00000000000c0b9d : jae 0xc0ba2 ; ret
0x00000000000c0d86 : jae 0xc0dbb ; ret
0x00000000000c0de6 : jae 0xc0e1b ; ret
0x00000000000c1167 : jae 0xc116c ; ret
0x00000000000c1d5d : jae 0xc1d62 ; ret
0x00000000000c1eed : jae 0xc1ef2 ; ret
0x00000000000c1f1d : jae 0xc1f22 ; ret
0x00000000000c1f7d : jae 0xc1f82 ; ret
0x00000000000c1fad : jae 0xc1fb2 ; ret
0x00000000000c1fdd : jae 0xc1fe2 ; ret
0x00000000000c200d : jae 0xc2012 ; ret
0x00000000000cb1ed : jae 0xcb1f2 ; ret
0x00000000000cb21d : jae 0xcb222 ; ret
0x00000000000cb24d : jae 0xcb252 ; ret
0x00000000000cb27d : jae 0xcb282 ; ret
0x00000000000cb2ad : jae 0xcb2b2 ; ret
0x00000000000cb2dd : jae 0xcb2e2 ; ret
0x00000000000cb30d : jae 0xcb312 ; ret
0x00000000000cb33d : jae 0xcb342 ; ret
0x00000000000cb559 : jae 0xcb591 ; ret
0x00000000000cb5b9 : jae 0xcb5f1 ; ret
0x00000000000eaf8a : jae 0xeaf93 ; mov eax, edx ; ret
0x00000000000eafad : jae 0xeafb2 ; ret
0x00000000000eb23d : jae 0xeb242 ; ret
0x00000000000eb26d : jae 0xeb272 ; ret
0x00000000000eb38d : jae 0xeb392 ; ret
0x00000000000eb3bd : jae 0xeb3c2 ; ret
0x00000000000eb45d : jae 0xeb462 ; ret
0x00000000000eb4c6 : jae 0xeb4fb ; ret
0x00000000000eb6b6 : jae 0xeb6eb ; ret
0x00000000000eb716 : jae 0xeb74b ; ret
0x00000000000eb76d : jae 0xeb772 ; ret
0x00000000000ebccd : jae 0xebcd2 ; ret
0x00000000000ebe16 : jae 0xebe4b ; ret
0x00000000000ebe6d : jae 0xebe72 ; ret
0x00000000000ebe9d : jae 0xebea2 ; ret
0x00000000000ebecd : jae 0xebed2 ; ret
0x00000000000ebefd : jae 0xebf02 ; ret
0x00000000000ebf2d : jae 0xebf32 ; ret
0x00000000000ebf66 : jae 0xebf9b ; ret
0x00000000000ebfbd : jae 0xebfc2 ; ret
0x00000000000ebfed : jae 0xebff2 ; ret
0x00000000000ec7bd : jae 0xec7c2 ; ret
0x00000000000ec7ed : jae 0xec7f2 ; ret
0x00000000000ec81d : jae 0xec822 ; ret
0x00000000000ece0d : jae 0xece12 ; ret
0x00000000000ece6d : jae 0xece72 ; ret
0x00000000000ececd : jae 0xeced2 ; ret
0x00000000000ecf2d : jae 0xecf32 ; ret
0x00000000000ecf8d : jae 0xecf92 ; ret
0x00000000000ecfc6 : jae 0xecffb ; ret
0x00000000000ed2e0 : jae 0xed2e5 ; ret
0x00000000000ed929 : jae 0xed98f ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f04d9 : jae 0xf0511 ; ret
0x00000000000f0c0d : jae 0xf0c12 ; ret
0x00000000000f0c3d : jae 0xf0c42 ; ret
0x00000000000f0c6d : jae 0xf0c72 ; ret
0x00000000000f102d : jae 0xf1032 ; ret
0x00000000000f11ed : jae 0xf11f2 ; ret
0x00000000000f1b5d : jae 0xf1b62 ; ret
0x00000000000f1b5d : jae 0xf1b67 ; ret
0x00000000000f1bfd : jae 0xf1c02 ; ret
0x00000000000f1c39 : jae 0xf1c71 ; ret
0x00000000000f1d7d : jae 0xf1d82 ; ret
0x00000000000f1dad : jae 0xf1db2 ; ret
0x00000000000f1de6 : jae 0xf1e1b ; ret
0x00000000000f1e3d : jae 0xf1e42 ; ret
0x00000000000f1e76 : jae 0xf1eab ; ret
0x00000000000f1ecd : jae 0xf1ed2 ; ret
0x00000000000f218d : jae 0xf2192 ; ret
0x00000000000f21bd : jae 0xf21c2 ; ret
0x00000000000f21ed : jae 0xf21f2 ; ret
0x00000000000f309d : jae 0xf30a2 ; ret
0x00000000000f30cd : jae 0xf30d2 ; ret
0x00000000000f470f : jae 0xf4714 ; ret
0x00000000000f4880 : jae 0xf4885 ; ret
0x00000000000f48ad : jae 0xf48b2 ; ret
0x00000000000f48dd : jae 0xf48e2 ; ret
0x00000000000f4916 : jae 0xf494b ; ret
0x00000000000f496d : jae 0xf4972 ; ret
0x00000000000f499d : jae 0xf49a2 ; ret
0x00000000000f49d0 : jae 0xf49d5 ; ret
0x00000000000f49fd : jae 0xf4a02 ; ret
0x00000000000f4a2d : jae 0xf4a32 ; ret
0x00000000000f4a5d : jae 0xf4a62 ; ret
0x00000000000f4a8d : jae 0xf4a92 ; ret
0x00000000000f8010 : jae 0xf8015 ; ret
0x00000000000f803d : jae 0xf8042 ; ret
0x00000000000f806d : jae 0xf8072 ; ret
0x00000000000f80a0 : jae 0xf80a5 ; ret
0x00000000000f80d0 : jae 0xf80d5 ; ret
0x00000000000f80fd : jae 0xf8102 ; ret
0x00000000000f8130 : jae 0xf8135 ; ret
0x00000000000f815d : jae 0xf8162 ; ret
0x00000000000f818d : jae 0xf8192 ; ret
0x00000000000f81c0 : jae 0xf81c5 ; ret
0x00000000000f81ed : jae 0xf81f2 ; ret
0x00000000000f8220 : jae 0xf8225 ; ret
0x00000000000fa25d : jae 0xfa262 ; ret
0x00000000000fa28d : jae 0xfa292 ; ret
0x00000000000fa3b6 : jae 0xfa3eb ; ret
0x00000000000fa41d : jae 0xfa422 ; ret
0x00000000000fa44d : jae 0xfa452 ; ret
0x00000000000fa47d : jae 0xfa482 ; ret
0x00000000000fa4ad : jae 0xfa4b2 ; ret
0x00000000000fa770 : jae 0xfa775 ; ret
0x00000000000fa79d : jae 0xfa7a2 ; ret
0x00000000000fa7cd : jae 0xfa7d2 ; ret
0x00000000000fa810 : jae 0xfa815 ; ret
0x00000000000fa83d : jae 0xfa842 ; ret
0x00000000000fa86d : jae 0xfa872 ; ret
0x00000000000fa89d : jae 0xfa8a2 ; ret
0x00000000000fa8cd : jae 0xfa8d2 ; ret
0x00000000000fa8fd : jae 0xfa902 ; ret
0x00000000000fa92d : jae 0xfa932 ; ret
0x00000000000fa95d : jae 0xfa962 ; ret
0x00000000000fa98d : jae 0xfa992 ; ret
0x00000000000fa9c0 : jae 0xfa9c5 ; ret
0x00000000000fa9f9 : jae 0xfaa31 ; ret
0x00000000000faa4d : jae 0xfaa52 ; ret
0x00000000000faa80 : jae 0xfaa85 ; ret
0x00000000000faaad : jae 0xfaab2 ; ret
0x00000000000faadd : jae 0xfaae2 ; ret
0x00000000000fab0d : jae 0xfab12 ; ret
0x00000000000fab3d : jae 0xfab42 ; ret
0x00000000000fab6d : jae 0xfab72 ; ret
0x00000000000faba0 : jae 0xfaba5 ; ret
0x00000000000fabd0 : jae 0xfabd5 ; ret
0x00000000000fabfd : jae 0xfac02 ; ret
0x00000000000fac2d : jae 0xfac32 ; ret
0x00000000000fac5d : jae 0xfac62 ; ret
0x00000000000fac90 : jae 0xfac95 ; ret
0x00000000000facc0 : jae 0xfacc5 ; ret
0x00000000000facf0 : jae 0xfacf5 ; ret
0x00000000000fad29 : jae 0xfad61 ; ret
0x00000000000fad7d : jae 0xfad82 ; ret
0x00000000000fadb9 : jae 0xfadf1 ; ret
0x00000000000fae0d : jae 0xfae12 ; ret
0x00000000000fae3d : jae 0xfae42 ; ret
0x00000000000fae79 : jae 0xfaeb1 ; ret
0x00000000000faecd : jae 0xfaed2 ; ret
0x00000000000faf00 : jae 0xfaf05 ; ret
0x00000000000faf2d : jae 0xfaf32 ; ret
0x00000000000faf5d : jae 0xfaf62 ; ret
0x00000000000faf90 : jae 0xfaf95 ; ret
0x00000000000fafc6 : jae 0xfaffb ; ret
0x00000000000fb01d : jae 0xfb022 ; ret
0x00000000000fb050 : jae 0xfb055 ; ret
0x00000000000fb080 : jae 0xfb085 ; ret
0x00000000000fb0d6 : jae 0xfb10b ; ret
0x00000000000fb12d : jae 0xfb132 ; ret
0x00000000000fb166 : jae 0xfb19b ; ret
0x00000000000fb1bd : jae 0xfb1c2 ; ret
0x00000000000fb1ed : jae 0xfb1f2 ; ret
0x00000000000fb220 : jae 0xfb225 ; ret
0x00000000000fb24d : jae 0xfb252 ; ret
0x00000000000fb339 : jae 0xfb371 ; ret
0x00000000000fb396 : jae 0xfb3cb ; ret
0x00000000000fb4a6 : jae 0xfb4db ; ret
0x00000000000fb509 : jae 0xfb541 ; ret
0x00000000000fb560 : jae 0xfb565 ; ret
0x00000000000fb58d : jae 0xfb592 ; ret
0x00000000000fb5bd : jae 0xfb5c2 ; ret
0x00000000000fb5f0 : jae 0xfb5f5 ; ret
0x00000000000fbc79 : jae 0xfbcb1 ; ret
0x00000000000fbcd9 : jae 0xfbd11 ; ret
0x00000000000fbd2d : jae 0xfbd32 ; ret
0x00000000000fbd5d : jae 0xfbd62 ; ret
0x00000000000fbd8d : jae 0xfbd92 ; ret
0x00000000000fbdbd : jae 0xfbdc2 ; ret
0x00000000000fbdf0 : jae 0xfbdf5 ; ret
0x00000000000fbe20 : jae 0xfbe25 ; ret
0x00000000000fbe4d : jae 0xfbe52 ; ret
0x00000000000fbe7d : jae 0xfbe82 ; ret
0x00000000000fbead : jae 0xfbeb2 ; ret
0x00000000000fbedd : jae 0xfbee2 ; ret
0x0000000000117e18 : jb 0x117e0b ; mov eax, 0xffffffff ; ret
0x0000000000117e17 : jb 0x117e0c ; mov eax, 0xffffffff ; ret
0x0000000000121b91 : jb 0x121bb5 ; ret
0x0000000000121b8b : jb 0x121bbd ; ja 0x121b80 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000142e1a : jb 0x142e2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000142f6a : jb 0x142f7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001430ba : jb 0x1430ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014320a : jb 0x14321a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014335a : jb 0x14336a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001434aa : jb 0x1434ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001435fa : jb 0x14360a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014374a : jb 0x14375a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014389a : jb 0x1438aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001439ea : jb 0x1439fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143b3a : jb 0x143b4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143c8a : jb 0x143c9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143dda : jb 0x143dea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143f2a : jb 0x143f3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014407a : jb 0x14408a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001457ea : jb 0x1457fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014593a : jb 0x14594a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145a8a : jb 0x145a9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145bda : jb 0x145bea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145d2a : jb 0x145d3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145e7a : jb 0x145e8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145fca : jb 0x145fda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014611a : jb 0x14612a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014626a : jb 0x14627a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001463ba : jb 0x1463ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014650a : jb 0x14651a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014665a : jb 0x14666a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001467aa : jb 0x1467ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001468fa : jb 0x14690a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146a4a : jb 0x146a5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001481ba : jb 0x1481ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014830a : jb 0x14831a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014845a : jb 0x14846a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001485aa : jb 0x1485ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001486fa : jb 0x14870a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014884a : jb 0x14885a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014899a : jb 0x1489aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148aea : jb 0x148afa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148c3a : jb 0x148c4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148d8a : jb 0x148d9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148eda : jb 0x148eea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014902a : jb 0x14903a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014917a : jb 0x14918a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001492ca : jb 0x1492da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014941a : jb 0x14942a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001651af : jb 0x1651a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000165c69 : jb 0x165c68 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000186e40 : jb 0x186e9c ; cld ; jmp rdx
0x0000000000187509 : jb 0x187509 ; call qword ptr [rax]
0x0000000000187818 : jb 0x1877c5 ; cld ; jmp rdx
0x000000000018a469 : jb 0x18a45f ; jmp rsp
0x0000000000194cad : jb 0x194c9e ; jmp qword ptr [rdx]
0x0000000000194d25 : jb 0x194d16 ; jmp qword ptr [rdx]
0x0000000000194d6d : jb 0x194d5e ; jmp qword ptr [rdx]
0x0000000000194d6c : jb 0x194d5f ; jmp qword ptr [rdx]
0x0000000000194db5 : jb 0x194da6 ; jmp qword ptr [rdx]
0x00000000001985dc : jb 0x19859d ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a3d41 : jb 0x1a3d38 ; jmp rax
0x00000000001a53bd : jb 0x1a53c6 ; add byte ptr [rax + 0x7b], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ac8dd : jb 0x1ac8d6 ; jmp qword ptr [rdx]
0x00000000001ac925 : jb 0x1ac91e ; jmp qword ptr [rdx]
0x0000000000002b5c : jb 0x2afc ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002f96e : jb 0x2f97b ; ret
0x00000000000038aa : jb 0x392a ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000750fc : jb 0x750f5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000782b5 : jb 0x782db ; mov dword ptr [rcx], eax ; ret
0x000000000009ed7a : jb 0x9ed89 ; add byte ptr [rax], al ; ret
0x00000000000d1d65 : jb 0xd1cd9 ; pop rbx ; ret
0x00000000000d1cfd : jb 0xd1cf7 ; ret 0x7408
0x00000000000f9342 : jb 0xf92cc ; sub al, 0 ; ret
0x0000000000110d67 : jbe 0x110cdb ; xor eax, eax ; pop rbx ; ret
0x00000000001211c3 : jbe 0x1211d7 ; mov eax, 2 ; ret
0x0000000000177195 : jbe 0x177187 ; call qword ptr [rax]
0x00000000001771a1 : jbe 0x177193 ; call qword ptr [rax]
0x00000000001771a5 : jbe 0x177197 ; call qword ptr [rax]
0x00000000001771a9 : jbe 0x17719b ; call qword ptr [rax]
0x00000000001771ad : jbe 0x17719f ; call qword ptr [rax]
0x00000000001771b1 : jbe 0x1771a7 ; push qword ptr [rax + 0x75] ; out dx, al ; call qword ptr [rax]
0x00000000001771b9 : jbe 0x1771ab ; call qword ptr [rax]
0x00000000001771bd : jbe 0x1771af ; call qword ptr [rax]
0x00000000001771c1 : jbe 0x1771b3 ; call qword ptr [rax]
0x00000000001771c5 : jbe 0x1771b7 ; call qword ptr [rax]
0x00000000001771c9 : jbe 0x1771bb ; call qword ptr [rax]
0x00000000001771cd : jbe 0x1771bf ; call qword ptr [rax]
0x00000000001771d1 : jbe 0x1771c3 ; call qword ptr [rax]
0x00000000001771d5 : jbe 0x1771c7 ; call qword ptr [rax]
0x00000000001771d9 : jbe 0x1771cb ; call qword ptr [rax]
0x00000000001771dd : jbe 0x1771cf ; call qword ptr [rax]
0x000000000018c9e1 : jbe 0x18c9dd ; call rsp
0x000000000018cd55 : jbe 0x18cd5f ; add byte ptr [rsi + rsi*8 - 8], ah ; jmp rsp
0x00000000001955d5 : jbe 0x1955c6 ; jmp qword ptr [rdx]
0x00000000001a0535 : jbe 0x1a052a ; jmp qword ptr [rdx]
0x00000000001a057d : jbe 0x1a0572 ; jmp qword ptr [rdx]
0x00000000001a057c : jbe 0x1a0573 ; jmp qword ptr [rdx]
0x00000000001a0605 : jbe 0x1a05fa ; jmp qword ptr [rdx]
0x00000000001a064d : jbe 0x1a0642 ; jmp qword ptr [rdx]
0x00000000001a06e5 : jbe 0x1a06da ; jmp qword ptr [rdx]
0x00000000001a072d : jbe 0x1a0722 ; jmp qword ptr [rdx]
0x00000000001a072c : jbe 0x1a0723 ; jmp qword ptr [rdx]
0x00000000001a0795 : jbe 0x1a078a ; jmp qword ptr [rdx]
0x00000000001a07dd : jbe 0x1a07d2 ; jmp qword ptr [rdx]
0x00000000001a5189 : jbe 0x1a5181 ; jmp qword ptr [rcx]
0x00000000001a51a1 : jbe 0x1a5199 ; jmp qword ptr [rcx]
0x00000000001a51a0 : jbe 0x1a519a ; jmp qword ptr [rcx]
0x00000000001a51b9 : jbe 0x1a51b1 ; jmp qword ptr [rcx]
0x0000000000002beb : jbe 0x2bbf ; clc ; ret
0x00000000000474eb : jbe 0x47561 ; xor eax, eax ; ret
0x00000000000496dc : jbe 0x496d8 ; nop ; mov rax, rsi ; pop rbx ; ret
0x000000000004e507 : jbe 0x4a3cd ; jmp 0x4a74b
0x0000000000086884 : jbe 0x868c1 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000088a39 : jbe 0x88a88 ; bsf eax, edx ; ret
0x000000000008be06 : jbe 0x8be45 ; add rax, rdi ; ret
0x000000000008be16 : jbe 0x8be47 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008be26 : jbe 0x8be47 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008be36 : jbe 0x8be47 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000916e3 : jbe 0x916fe ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x916d9 ; ret
0x0000000000098359 : jbe 0x98353 ; ret 0xf10
0x0000000000099f79 : jbe 0x99f73 ; ret 0xf10
0x00000000000e4e08 : jbe 0xe4e13 ; ret
0x00000000000f6b6b : jbe 0xf6ba1 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x0000000000102525 : je 0x102534 ; xor eax, eax ; ret
0x0000000000103d86 : je 0x103db7 ; mov eax, r9d ; sub eax, edx ; ret
0x00000000001063d3 : je 0x1063e7 ; mov eax, 7 ; ret
0x00000000001063f1 : je 0x106419 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000106400 : je 0x106464 ; xor eax, eax ; pop rbx ; ret
0x0000000000107a1d : je 0x107a2b ; ret
0x00000000001080c9 : je 0x1080ce ; ret
0x000000000010812d : je 0x108132 ; ret
0x000000000010854a : je 0x108553 ; ret
0x00000000001089c2 : je 0x1089d4 ; lea rax, qword ptr [rip + 0x41d15] ; ret
0x0000000000108a62 : je 0x108a74 ; lea rax, qword ptr [rip + 0x44745] ; ret
0x0000000000109fcc : je 0x109fde ; add rsp, 8 ; ret
0x000000000010c6eb : je 0x10c723 ; ror byte ptr [rax - 0x7d], 1 ; ret 0xf01
0x000000000011141f : je 0x11142b ; mov rdi, rbx ; call rax
0x0000000000111706 : je 0x111712 ; mov rdi, rbx ; call rax
0x00000000001117e3 : je 0x1117f7 ; lea rdi, qword ptr [rip + 0x2b1734] ; call rax
0x0000000000114503 : je 0x1144fb ; pop rbx ; ret
0x000000000011480f : je 0x11483a ; cmp eax, 0xff ; mov dl, 2 ; cmove eax, edx ; ret
0x00000000001176f3 : je 0x1176dc ; mov eax, 0xffffffff ; ret
0x00000000001176f2 : je 0x1176dd ; mov eax, 0xffffffff ; ret
0x0000000000117b13 : je 0x117a62 ; ret
0x0000000000117b12 : je 0x117a63 ; ret
0x0000000000117bf9 : je 0x117b43 ; nop ; ret
0x0000000000117bf8 : je 0x117b44 ; nop ; ret
0x000000000011bca2 : je 0x11bcaa ; ret
0x000000000011ed03 : je 0x11ed0f ; mov rdi, rsp ; call rax
0x000000000011edde : je 0x11edea ; mov rdi, rsp ; call rax
0x000000000011f499 : je 0x11f4c6 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000011f697 : je 0x11f6a3 ; mov rdi, rbp ; call rax
0x000000000011fa68 : je 0x11fa72 ; ret
0x0000000000120735 : je 0x120741 ; mov rdi, r14 ; call rax
0x00000000001209b3 : je 0x1209bf ; mov rdi, rbx ; call rax
0x0000000000121266 : je 0x121272 ; mov rdi, r12 ; call rdx
0x0000000000121703 : je 0x1217eb ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000123a82 : je 0x123a96 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000012445d : je 0x124469 ; mov rdi, r12 ; call rax
0x000000000012463b : je 0x124649 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001250d9 : je 0x1250e6 ; add rsp, 0x48 ; ret
0x00000000001267f3 : je 0x126711 ; mov rdi, rbx ; call rax
0x0000000000126727 : je 0x126733 ; mov rdi, rbp ; call rdx
0x0000000000126833 : je 0x126847 ; mov eax, 1 ; ret
0x0000000000126918 : je 0x126924 ; mov rdi, rbp ; call rax
0x0000000000126b38 : je 0x126b44 ; mov rdi, rbp ; call rax
0x000000000012765f : je 0x12766d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000127d1e : je 0x127d2a ; mov rdi, r12 ; call rax
0x000000000012808f : je 0x12809d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012ab6e : je 0x12ab48 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012ab3f : je 0x12ab4b ; pop rbx ; ret
0x000000000012abab : je 0x12ab5f ; pop rbx ; ret
0x000000000012abe3 : je 0x12abf6 ; add rsp, 8 ; ret
0x000000000012b80b : je 0x12b812 ; ret
0x000000000012b8eb : je 0x12b8f9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012bff4 : je 0x12c002 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012d07d : je 0x12d0e8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012d13d : je 0x12d1a8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012d1fd : je 0x12d268 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012d2bd : je 0x12d328 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012e234 : je 0x12e243 ; ret
0x00000000001305c8 : je 0x1305d4 ; xor eax, eax ; ret
0x0000000000132f91 : je 0x132fa6 ; add rsp, 8 ; ret
0x0000000000136c1c : je 0x136c00 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001371e3 : je 0x1371ad ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000137eb5 : je 0x137ebd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000137fb3 : je 0x137f7d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000138e9a : je 0x138ea2 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000138ff3 : je 0x138fbd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013abc3 : je 0x13ab8d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013cbf4 : je 0x13cbd8 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000013ced3 : je 0x13ce9d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013e563 : je 0x13e52d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000160ff7 : je 0x161001 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000164c46 : je 0x164c4c ; call rdx
0x0000000000164d4f : je 0x164d5a ; call rdx
0x0000000000174ac8 : je 0x174a93 ; xor al, 0xd8 ; ret
0x0000000000174d07 : je 0x174d04 ; jmp 0x174cde
0x0000000000175802 : je 0x1757ca ; ret 0xacfc
0x0000000000177191 : je 0x177183 ; call qword ptr [rax]
0x0000000000186329 : je 0x186328 ; call qword ptr [rax]
0x0000000000188538 : je 0x18858b ; jmp 0x18853e
0x0000000000188a70 : je 0x188ad7 ; in eax, dx ; dec esp ; ret
0x0000000000189560 : je 0x18956f ; out dx, eax ; jmp rsp
0x0000000000189828 : je 0x18987b ; out dx, eax ; jmp rsp
0x00000000001899ec : je 0x189a36 ; add dword ptr [rax], eax ; xor al, 0xa7 ; out dx, eax ; call rsp
0x000000000018a6b0 : je 0x18a6bb ; jmp rsp
0x000000000018aaa8 : je 0x18aa45 ; jmp rsp
0x000000000018ac78 : je 0x18acb4 ; hlt ; jmp rsp
0x000000000018c7cc : je 0x18c820 ; add al, byte ptr [rax] ; add al, 0x4a ; clc ; call rsp
0x000000000018c9b1 : je 0x18c9ad ; jmp rsp
0x000000000018ca68 : je 0x18c9f0 ; clc ; call rsp
0x000000000018c9ac : je 0x18ca0f ; add al, byte ptr [rax] ; pop rsp ; je 0x18c9b2 ; jmp rsp
0x000000000018dcdc : je 0x18dcca ; add al, byte ptr [rax] ; in al, -0x2c ; cli ; jmp rsp
0x0000000000194fbd : je 0x194fae ; jmp qword ptr [rdx]
0x0000000000195005 : je 0x194ff6 ; jmp qword ptr [rdx]
0x000000000019504d : je 0x19503e ; jmp qword ptr [rdx]
0x00000000001950cd : je 0x1950be ; jmp qword ptr [rdx]
0x0000000000195115 : je 0x195106 ; jmp qword ptr [rdx]
0x000000000019515d : je 0x19514e ; jmp qword ptr [rdx]
0x0000000000195245 : je 0x195236 ; jmp qword ptr [rdx]
0x000000000019528d : je 0x19527e ; jmp qword ptr [rdx]
0x0000000000195305 : je 0x1952f6 ; jmp qword ptr [rdx]
0x000000000019534d : je 0x19533e ; jmp qword ptr [rdx]
0x0000000000195395 : je 0x195386 ; jmp qword ptr [rdx]
0x0000000000195394 : je 0x195387 ; jmp qword ptr [rdx]
0x0000000000195405 : je 0x1953f6 ; jmp qword ptr [rdx]
0x000000000019544d : je 0x19543e ; jmp qword ptr [rdx]
0x000000000019544c : je 0x19543f ; jmp qword ptr [rdx]
0x0000000000195495 : je 0x195486 ; jmp qword ptr [rdx]
0x0000000000195545 : je 0x195536 ; jmp qword ptr [rdx]
0x0000000000199784 : je 0x199765 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019e01c : je 0x19e023 ; add byte ptr [rax], al ; shr byte ptr [rax - 5], 1 ; call qword ptr [rax]
0x000000000019e61c : je 0x19e629 ; add dword ptr [rax], eax ; rcl byte ptr [rcx - 0x10], 1 ; jmp qword ptr [rdi]
0x000000000019e71c : je 0x19e72a ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0x10], dl ; call qword ptr [rsi]
0x00000000001a611c : je 0x1a61a4 ; add dword ptr [rax], eax ; rol al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a641c : je 0x1a63a7 ; add dword ptr [rax], eax ; jo 0x1a63f5 ; hlt ; jmp qword ptr [rcx]
0x00000000001a7c1c : je 0x1a7bbf ; add dword ptr [rax], eax ; loopne 0x1a7c57 ; cmc ; jmp qword ptr [rcx]
0x00000000001a811c : je 0x1a80c4 ; add dword ptr [rax], eax ; jo 0x1a8161 ; cmc ; jmp qword ptr [rax]
0x00000000001aa71c : je 0x1aa6e8 ; add dword ptr [rax], eax ; ret
0x00000000001af724 : je 0x1af71a ; cmc ; jmp qword ptr [rdx]
0x0000000000001cb2 : je 0x1cde ; ret
0x00000000000220a1 : je 0x220c9 ; add rsp, 8 ; ret
0x000000000002210a : je 0x22110 ; jmp rax
0x000000000002213a : je 0x22140 ; jmp rax
0x0000000000022468 : je 0x22481 ; lea rax, qword ptr [rip + 0x3a178f] ; ret
0x0000000000027f23 : je 0x27f51 ; or byte ptr [rax - 0x75], cl ; je 0x27f56 ; push rax ; call rax
0x0000000000027f28 : je 0x27f51 ; push rax ; call rax
0x000000000002c3d1 : je 0x2c400 ; adc byte ptr [rax - 0x75], cl ; jl 0x2c405 ; or al, ch ; ret 0x5ab
0x000000000002cb12 : je 0x2cadc ; pop rbx ; ret
0x000000000002d200 : je 0x2d206 ; call rax
0x000000000002d587 : je 0x2d58d ; call rcx
0x000000000002e82b : je 0x2e831 ; call rax
0x0000000000034b85 : je 0x34bb0 ; or byte ptr [rcx - 0x77], cl ; ret 0x1074
0x00000000000364b6 : je 0x364a9 ; ret
0x0000000000036856 : je 0x367fa ; ret
0x000000000005d4e6 : je 0x5d4f8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000005dc9a : je 0x5dca3 ; ret
0x000000000006e42a : je 0x6e441 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006e4ca : je 0x6e4e1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006ebc4 : je 0x6ebd6 ; mov rax, rdx ; pop rbx ; ret
0x000000000006fbc7 : je 0x6fbd2 ; call 0xebe0d
0x000000000006fba5 : je 0x6fc0f ; mov edi, r15d ; mov esi, ebx ; call 0xebe99
0x0000000000072a44 : je 0x72a56 ; mov rax, rdx ; pop rbx ; ret
0x0000000000072fcb : je 0x72fdd ; mov dword ptr [rdi], edx ; ret
0x00000000000732dc : je 0x732ef ; mov eax, 0xffffffff ; ret
0x0000000000074170 : je 0x741c1 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007416f : je 0x741c2 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074e13 : je 0x74e26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074e43 : je 0x74ea5 ; pop rbp ; pop r12 ; ret
0x000000000007505d : je 0x75068 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000750a1 : je 0x750ac ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000755d8 : je 0x755e7 ; mov eax, 0xffffffff ; ret
0x00000000000787ab : je 0x78751 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007882f : je 0x7883b ; pop rbx ; ret
0x000000000007b1b3 : je 0x7b170 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b303 : je 0x7b2c0 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b47c : je 0x7b48e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bd74 : je 0x7bd7f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007d64c : je 0x7d484 ; ret
0x000000000007d572 : je 0x7d588 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007e565 : je 0x7e56b ; call rdx
0x000000000007edc5 : je 0x7edd6 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008080a : je 0x80836 ; sub byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x000000000008278c : je 0x827b8 ; sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x00000000000833b6 : je 0x833e2 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000837c9 : je 0x837cf ; call rax
0x000000000008479c : je 0x847a2 ; ret
0x00000000000847b5 : je 0x847c4 ; pop rbx ; ret
0x000000000008508e : je 0x85219 ; mov rsi, r14 ; call rax
0x0000000000086085 : je 0x86108 ; mov rsi, rbx ; mov rdi, r13 ; call rdx
0x00000000000863f8 : je 0x86402 ; ret
0x0000000000086b42 : je 0x86b54 ; lea rax, qword ptr [rip + 0x11595] ; ret
0x0000000000086d2f : je 0x86d41 ; lea rax, qword ptr [rip + 0xdb398] ; ret
0x0000000000088422 : je 0x88434 ; lea rax, qword ptr [rip + 0xcea25] ; ret
0x000000000008852f : je 0x88541 ; lea rax, qword ptr [rip + 0xb4528] ; ret
0x00000000000886b7 : je 0x886e0 ; movsx edx, sil ; mov eax, edx ; ret
0x00000000000887c2 : je 0x887cf ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000889eb : je 0x889f5 ; bsf eax, edx ; ret
0x00000000000889eb : je 0x889f6 ; bsf eax, edx ; ret
0x0000000000088a94 : je 0x88aa5 ; bsf rax, rdx ; ret
0x0000000000088a94 : je 0x88aa6 ; bsf rax, rdx ; ret
0x0000000000088a38 : je 0x88ab6 ; bsf rax, rdx ; ret
0x0000000000088c83 : je 0x88ca5 ; bsf rax, rdx ; ret
0x0000000000088c83 : je 0x88ca6 ; bsf rax, rdx ; ret
0x0000000000088c13 : je 0x88cb9 ; bsf rax, rdx ; ret
0x0000000000088dc2 : je 0x88dd4 ; lea rax, qword ptr [rip + 0x10f35] ; ret
0x000000000008a6a2 : je 0x8a6b4 ; lea rax, qword ptr [rip + 0xcdf55] ; ret
0x000000000008a9bf : je 0x8a9d1 ; lea rax, qword ptr [rip + 0xb21d8] ; ret
0x000000000008ad4f : je 0x8ad61 ; lea rax, qword ptr [rip + 0xb1f68] ; ret
0x000000000008bcfc : je 0x8bd53 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008be7c : je 0x8be8f ; lea rax, qword ptr [rip + 0xd3ddb] ; ret
0x000000000008c5e2 : je 0x8c5f4 ; lea rax, qword ptr [rip + 0xc0bd5] ; ret
0x000000000008cad2 : je 0x8cae4 ; lea rax, qword ptr [rip + 0xce6a5] ; ret
0x000000000008cbf2 : je 0x8cc04 ; lea rax, qword ptr [rip + 0xcfd95] ; ret
0x0000000000091609 : je 0x91621 ; cmp rsi, rcx ; jne 0x91601 ; xor eax, eax ; ret
0x0000000000091653 : je 0x91665 ; lea rax, qword ptr [rip + 0xb1174] ; ret
0x0000000000091658 : je 0x9166f ; or eax, dword ptr [rax] ; ret
0x0000000000092b88 : je 0x92ba1 ; lea rax, qword ptr [rip - 0x511] ; ret
0x0000000000092f12 : je 0x92f26 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x000000000009393a : je 0x93991 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000939f1 : je 0x93a09 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000093ee4 : je 0x93ef6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096a8a : je 0x96a83 ; ret
0x0000000000096aa6 : je 0x96a9b ; ret
0x0000000000096aa2 : je 0x96a9f ; cmp ecx, edx ; je 0x96a9f ; ret
0x0000000000096ace : je 0x96abb ; ret
0x0000000000096ac9 : je 0x96ac0 ; cmp r8d, ecx ; je 0x96ac0 ; ret
0x0000000000096afd : je 0x96b19 ; cmp eax, esi ; jne 0x96af9 ; mov rax, rdi ; ret
0x000000000009703c : je 0x97018 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000097a0b : je 0x979cf ; mov byte ptr [r10 + 1], 0 ; ret
0x000000000009d109 : je 0x9d15a ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009e796 : je 0x9e7e7 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a04aa : je 0xa04fb ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a1aad : je 0xa1a76 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a1a85 : je 0xa1a78 ; movzx eax, cl ; pop rbx ; ret
0x00000000000a1aad : je 0xa1a78 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a1be6 : je 0xa1c10 ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000a1c5f : je 0xa1c43 ; ret
0x00000000000a1ca7 : je 0xa1c83 ; ret
0x00000000000a2c4f : je 0xa2c41 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2e89 : je 0xa2ea9 ; mov cl, dl ; and cl, 0xf ; je 0xa2eb9 ; ret
0x00000000000a2e90 : je 0xa2eb2 ; ret
0x00000000000a2ea5 : je 0xa2ec6 ; add rax, 2 ; ret
0x00000000000a3002 : je 0xa2fc9 ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000a307a : je 0xa3039 ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x00000000000a34a6 : je 0xa3516 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a3767 : je 0xa3784 ; cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x00000000000a37cc : je 0xa37df ; lea rax, qword ptr [rip + 0xbdacb] ; ret
0x00000000000a48f3 : je 0xa492b ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000a48f2 : je 0xa492c ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000a5471 : je 0xa5483 ; mov edx, eax ; jmp 0xa5443
0x00000000000a7c11 : je 0xa7c23 ; mov edx, eax ; jmp 0xa7be3
0x00000000000aa211 : je 0xaa223 ; mov edx, eax ; jmp 0xaa1e3
0x00000000000aed78 : je 0xaed8a ; idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000b5120 : je 0xb5177 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000b9f43 : je 0xb9f54 ; xor eax, eax ; ret
0x00000000000bd4e3 : je 0xbd516 ; mov rdi, r15 ; call r14
0x00000000000c0e7e : je 0xc0e84 ; call rax
0x00000000000c0ffb : je 0xc1005 ; call rdx
0x00000000000c107b : je 0xc1085 ; call rax
0x00000000000c2649 : je 0xc267f ; mov eax, 1 ; ret
0x00000000000c26db : je 0xc2707 ; mov eax, 1 ; ret
0x00000000000d0ba4 : je 0xd0bb4 ; xor eax, eax ; ret
0x00000000000d1beb : je 0xd1c3c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1d48 : je 0xd1cd5 ; pop rbx ; ret
0x00000000000d1e5a : je 0xd1e64 ; xor eax, eax ; ret
0x00000000000d1e56 : je 0xd1eb8 ; cmp al, 0x11 ; je 0xd1e68 ; xor eax, eax ; ret
0x00000000000d3c62 : je 0xd3c71 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d4991 : je 0xd49a5 ; xor eax, eax ; pop rbx ; ret
0x00000000000de819 : je 0xde82a ; mov dword ptr [rax], r12d ; xor eax, eax ; jmp 0xde7ec
0x00000000000e3b24 : je 0xe3b04 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e4052 : je 0xe405e ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e4322 : je 0xe432e ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e44ba : je 0xe44c3 ; ret
0x00000000000e4bc2 : je 0xe4bcb ; mov edx, eax ; jmp 0xe4bb9
0x00000000000e5235 : je 0xe5213 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5cfe : je 0xe5d29 ; xor byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000ed2a3 : je 0xed2bd ; neg eax ; pop rbx ; ret
0x00000000000f1a5e : je 0xf1a65 ; ret
0x00000000000f3133 : je 0xf313e ; mov qword ptr [rax], rdx ; ret
0x00000000000f3212 : je 0xf3207 ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000f4648 : je 0xf4659 ; mov dword ptr [rip + 0x2c9c60], edi ; ret
0x00000000000f4b12 : je 0xf4b35 ; pop rbx ; ret
0x00000000000f6130 : je 0xf6140 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f756d : je 0xf760e ; call rax
0x00000000000f76e4 : je 0xf77e6 ; call rax
0x00000000000f78c8 : je 0xf78d9 ; lea rax, qword ptr [r12 - 1] ; jmp 0xf789c
0x00000000000fa346 : je 0xfa34b ; ret
0x00000000000fa61e : je 0xfa62c ; pop rbx ; pop rbp ; ret
0x00000000000fa6b3 : je 0xfa6c3 ; ret
0x00000000000fb9a6 : je 0xfb9b4 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fcaaa : je 0xfcaba ; add edx, 1 ; mov word ptr [rax], dx ; ret
0x00000000000fccf9 : je 0xfcd07 ; add edx, 1 ; mov dword ptr [rax], edx ; ret
0x00000000000ffb2e : je 0xffb3e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ffb62 : je 0xffb80 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000124842 : jg 0x12488c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x124858 ; ret
0x000000000012bad2 : jg 0x12bb1c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12bae8 ; ret
0x00000000001449f9 : jg 0x144a4c ; ret
0x0000000000144a7f : jg 0x144aca ; ret
0x0000000000144bf9 : jg 0x144c4c ; ret 0x894c
0x0000000000144c7f : jg 0x144cca ; ret 0x894c
0x00000000001473c9 : jg 0x14741c ; ret
0x000000000014744f : jg 0x14749a ; ret
0x00000000001475c9 : jg 0x14761c ; ret 0x894c
0x000000000014764f : jg 0x14769a ; ret 0x894c
0x0000000000149d99 : jg 0x149dec ; ret
0x0000000000149e1f : jg 0x149e6a ; ret
0x0000000000149f99 : jg 0x149fec ; ret 0x894c
0x000000000014a01f : jg 0x14a06a ; ret 0x894c
0x000000000014c368 : jg 0x14c3b9 ; loope 0x14c367 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c3df : jg 0x14c42a ; ret 0xff2
0x000000000014c3f8 : jg 0x14c449 ; loop 0x14c3f7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c46f : jg 0x14c4ba ; ret
0x000000000014c488 : jg 0x14c4d9 ; jrcxz 0x14c487 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c518 : jg 0x14c569 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c598 : jg 0x14c5e9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c618 : jg 0x14c669 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c698 : jg 0x14c6e9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c718 : jg 0x14c769 ; call 0x4f93d71a
0x000000000014c798 : jg 0x14c7e9 ; jmp 0x4f93d79a
0x000000000014c918 : jg 0x14c969 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c998 : jg 0x14c9e9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014ca28 : jg 0x14ca79 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014caa8 : jg 0x14caf9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014cb1c : jg 0x14cb27 ; ret
0x000000000014cb76 : jg 0x14cb89 ; ret
0x000000000014cb71 : jg 0x14cbc1 ; psllq mm1, qword ptr [rdi] ; jg 0x14cb8e ; ret
0x000000000014cbe6 : jg 0x14cbf9 ; ret
0x000000000014cc56 : jg 0x14cc69 ; ret
0x000000000014cc51 : jg 0x14cca1 ; or eax, 0xf7f0ff3 ; ret
0x000000000014ccc6 : jg 0x14ccd9 ; ret
0x000000000014ccc1 : jg 0x14cd11 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000014cd36 : jg 0x14cd49 ; ret
0x000000000014cd31 : jg 0x14cd81 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014cda6 : jg 0x14cdb9 ; ret
0x000000000014cda1 : jg 0x14cdf1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014ce16 : jg 0x14ce29 ; ret
0x000000000014ce11 : jg 0x14ce61 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014ce86 : jg 0x14ce99 ; ret
0x000000000014ce81 : jg 0x14ced1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000014cef6 : jg 0x14cf09 ; ret
0x000000000014cf66 : jg 0x14cf79 ; ret
0x000000000014cfd6 : jg 0x14cfe9 ; ret
0x000000000014cfd1 : jg 0x14d021 ; add eax, 0xf7f0ff3 ; ret
0x000000000014d046 : jg 0x14d059 ; ret
0x000000000014d041 : jg 0x14d091 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d0b6 : jg 0x14d0c9 ; ret
0x000000000014d0b1 : jg 0x14d101 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d126 : jg 0x14d139 ; ret
0x000000000014d121 : jg 0x14d171 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d196 : jg 0x14d1a9 ; ret
0x000000000014d191 : jg 0x14d1e1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014ee38 : jg 0x14ee89 ; loope 0x14ee37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014eeaf : jg 0x14eefa ; ret 0xff2
0x000000000014eec8 : jg 0x14ef19 ; loop 0x14eec7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014ef3f : jg 0x14ef8a ; ret
0x000000000014ef58 : jg 0x14efa9 ; jrcxz 0x14ef57 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014efe8 : jg 0x14f039 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f068 : jg 0x14f0b9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f0e8 : jg 0x14f139 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f168 : jg 0x14f1b9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f1e8 : jg 0x14f239 ; call 0x4f9401ea
0x000000000014f268 : jg 0x14f2b9 ; jmp 0x4f94026a
0x000000000014f3e8 : jg 0x14f439 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014f468 : jg 0x14f4b9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014f4f8 : jg 0x14f549 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014f578 : jg 0x14f5c9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014f5ec : jg 0x14f5f7 ; ret
0x000000000014f646 : jg 0x14f659 ; ret
0x000000000014f641 : jg 0x14f691 ; psllq mm1, qword ptr [rdi] ; jg 0x14f65e ; ret
0x000000000014f6b6 : jg 0x14f6c9 ; ret
0x000000000014f726 : jg 0x14f739 ; ret
0x000000000014f721 : jg 0x14f771 ; or eax, 0xf7f0ff3 ; ret
0x000000000014f796 : jg 0x14f7a9 ; ret
0x000000000014f791 : jg 0x14f7e1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000014f806 : jg 0x14f819 ; ret
0x000000000014f801 : jg 0x14f851 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014f876 : jg 0x14f889 ; ret
0x000000000014f871 : jg 0x14f8c1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014f8e6 : jg 0x14f8f9 ; ret
0x000000000014f8e1 : jg 0x14f931 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014f956 : jg 0x14f969 ; ret
0x000000000014f951 : jg 0x14f9a1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000014f9c6 : jg 0x14f9d9 ; ret
0x000000000014fa36 : jg 0x14fa49 ; ret
0x000000000014faa6 : jg 0x14fab9 ; ret
0x000000000014faa1 : jg 0x14faf1 ; add eax, 0xf7f0ff3 ; ret
0x000000000014fb16 : jg 0x14fb29 ; ret
0x000000000014fb11 : jg 0x14fb61 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fb86 : jg 0x14fb99 ; ret
0x000000000014fb81 : jg 0x14fbd1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fbf6 : jg 0x14fc09 ; ret
0x000000000014fbf1 : jg 0x14fc41 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fc66 : jg 0x14fc79 ; ret
0x000000000014fc61 : jg 0x14fcb1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000151958 : jg 0x1519a9 ; loope 0x151957 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001519cf : jg 0x151a1a ; ret 0xff2
0x00000000001519e8 : jg 0x151a39 ; loop 0x1519e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151a5f : jg 0x151aaa ; ret
0x0000000000151a78 : jg 0x151ac9 ; jrcxz 0x151a77 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151b08 : jg 0x151b59 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151b88 : jg 0x151bd9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151c08 : jg 0x151c59 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151c88 : jg 0x151cd9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151d08 : jg 0x151d59 ; call 0x4f942d0a
0x0000000000151d88 : jg 0x151dd9 ; jmp 0x4f942d8a
0x0000000000151f08 : jg 0x151f59 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000151f88 : jg 0x151fd9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000152018 : jg 0x152069 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000152098 : jg 0x1520e9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015210c : jg 0x152117 ; ret
0x0000000000152166 : jg 0x152179 ; ret
0x0000000000152161 : jg 0x1521b1 ; psllq mm1, qword ptr [rdi] ; jg 0x15217e ; ret
0x00000000001521d6 : jg 0x1521e9 ; ret
0x0000000000152246 : jg 0x152259 ; ret
0x0000000000152241 : jg 0x152291 ; or eax, 0xf7f0ff3 ; ret
0x00000000001522b6 : jg 0x1522c9 ; ret
0x00000000001522b1 : jg 0x152301 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152326 : jg 0x152339 ; ret
0x0000000000152321 : jg 0x152371 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152396 : jg 0x1523a9 ; ret
0x0000000000152391 : jg 0x1523e1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152406 : jg 0x152419 ; ret
0x0000000000152401 : jg 0x152451 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152476 : jg 0x152489 ; ret
0x0000000000152471 : jg 0x1524c1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000001524e6 : jg 0x1524f9 ; ret
0x0000000000152556 : jg 0x152569 ; ret
0x00000000001525c6 : jg 0x1525d9 ; ret
0x00000000001525c1 : jg 0x152611 ; add eax, 0xf7f0ff3 ; ret
0x0000000000152636 : jg 0x152649 ; ret
0x0000000000152631 : jg 0x152681 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001526a6 : jg 0x1526b9 ; ret
0x00000000001526a1 : jg 0x1526f1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152716 : jg 0x152729 ; ret
0x0000000000152711 : jg 0x152761 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152786 : jg 0x152799 ; ret
0x0000000000152781 : jg 0x1527d1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000164165 : jg 0x164174 ; neg eax ; ret
0x0000000000186349 : jg 0x186348 ; call rax
0x0000000000186348 : jg 0x186349 ; call rax
0x000000000018746d : jg 0x18746d ; call qword ptr [rax]
0x0000000000187471 : jg 0x187475 ; call qword ptr [rax + 0x10fffc7e]
0x0000000000187ab9 : jg 0x187aa6 ; jmp rsp
0x0000000000187efd : jg 0x187f05 ; add byte ptr [rsi + rax*4 - 0x16], al ; call rsp
0x000000000018a989 : jg 0x18a980 ; call rsp
0x000000000018d139 : jg 0x18d136 ; call rsp
0x0000000000193f05 : jg 0x193ef5 ; jmp qword ptr [rdx]
0x0000000000193f7d : jg 0x193f6d ; jmp qword ptr [rdx]
0x0000000000193fdd : jg 0x193fcd ; jmp qword ptr [rdx]
0x0000000000194025 : jg 0x194015 ; jmp qword ptr [rdx]
0x000000000019406d : jg 0x19405d ; jmp qword ptr [rdx]
0x000000000019410d : jg 0x1940fd ; jmp qword ptr [rdx]
0x0000000000194155 : jg 0x194145 ; jmp qword ptr [rdx]
0x000000000019419d : jg 0x19418d ; jmp qword ptr [rdx]
0x0000000000196195 : jg 0x196186 ; jmp qword ptr [rdx]
0x0000000000196194 : jg 0x196187 ; jmp qword ptr [rdx]
0x00000000001961dd : jg 0x1961ce ; jmp qword ptr [rdx]
0x00000000001961dc : jg 0x1961cf ; jmp qword ptr [rdx]
0x0000000000196225 : jg 0x196216 ; jmp qword ptr [rdx]
0x0000000000196224 : jg 0x196217 ; jmp qword ptr [rdx]
0x000000000019aa44 : jg 0x19aa48 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a0159 : jg 0x1a014e ; call qword ptr [rax]
0x00000000001a0171 : jg 0x1a0166 ; jmp qword ptr [rcx]
0x00000000001a0dad : jg 0x1a0da2 ; jmp qword ptr [rdx]
0x00000000001a0e35 : jg 0x1a0e2a ; jmp qword ptr [rdx]
0x00000000001af159 : jg 0x1af153 ; call rsp
0x000000000001fc69 : jg 0x1fbfb ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000003603b : jg 0x3608d ; sub eax, edx ; shr rax, 0x3f ; ret
0x00000000000364b4 : jg 0x364ba ; je 0x364ab ; ret
0x00000000000366aa : jg 0x366b0 ; add byte ptr [rcx], cl ; ret 0xd089
0x0000000000036645 : jg 0x366c6 ; or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x0000000000036852 : jg 0x3689f ; or ecx, eax ; je 0x367fe ; ret
0x00000000000471ab : jg 0x47219 ; xor eax, eax ; ret
0x00000000000472b6 : jg 0x47273 ; ret
0x000000000004897a : jg 0x489b8 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000049a29 : jg 0x49a34 ; adc ecx, dword ptr [rax - 0x7d] ; ret 0x4c10
0x0000000000072fc7 : jg 0x72f55 ; inc byte ptr [rdx] ; je 0x72fe1 ; mov dword ptr [rdi], edx ; ret
0x000000000008c677 : jg 0x8c690 ; jne 0x8c667 ; mov rax, rdi ; ret
0x00000000000916e7 : jg 0x916fe ; jne 0x916d5 ; ret
0x0000000000092bd8 : jg 0x92bc3 ; ret
0x000000000009ced6 : jg 0x9cee1 ; ret
0x000000000009cee6 : jg 0x9cef4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009cefa : jg 0x9cf09 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009cf19 : jg 0x9cf27 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009cf29 : jg 0x9cf37 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009cf39 : jg 0x9cf4a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009cf5a : jg 0x9cf69 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009cf7a : jg 0x9cf89 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009cf9a : jg 0x9cfa9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009cfba : jg 0x9cfcc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009cffd : jg 0x9d00f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009d01d : jg 0x9d02f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009d03b : jg 0x9d04b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009d05b : jg 0x9d06b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009d07b : jg 0x9d08b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009d09b : jg 0x9d0ab ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009d628 : jg 0x9d633 ; jne 0x9dee8 ; ret
0x000000000009d64c : jg 0x9d658 ; jne 0x9dee8 ; ret
0x000000000009d66f : jg 0x9d67c ; jne 0x9dee8 ; ret
0x000000000009d68a : jg 0x9d698 ; jne 0x9dee8 ; ret
0x000000000009d6ad : jg 0x9d6bc ; jne 0x9dee8 ; ret
0x000000000009d6d2 : jg 0x9d6e2 ; jne 0x9dee8 ; ret
0x000000000009d6f0 : jg 0x9d701 ; jne 0x9dee8 ; ret
0x000000000009d70c : jg 0x9d71e ; jne 0x9dee8 ; ret
0x000000000009d72f : jg 0x9d742 ; jne 0x9dee8 ; ret
0x000000000009d754 : jg 0x9d768 ; jne 0x9dee8 ; ret
0x000000000009d772 : jg 0x9d787 ; jne 0x9dee8 ; ret
0x000000000009d792 : jg 0x9d7a8 ; jne 0x9dee8 ; ret
0x000000000009d7b4 : jg 0x9d7cb ; jne 0x9dee8 ; ret
0x000000000009d7d4 : jg 0x9d7ec ; jne 0x9dee8 ; ret
0x000000000009d7f4 : jg 0x9d80d ; jne 0x9dee8 ; ret
0x000000000009d80e : jg 0x9d828 ; jne 0x9dee8 ; ret
0x000000000009d831 : jg 0x9d84c ; jne 0x9dee8 ; ret
0x000000000009d856 : jg 0x9d872 ; jne 0x9dee8 ; ret
0x000000000009d874 : jg 0x9d891 ; jne 0x9dee8 ; ret
0x000000000009d894 : jg 0x9d8b2 ; jne 0x9dee8 ; ret
0x000000000009d8b7 : jg 0x9d8d6 ; jne 0x9dee8 ; ret
0x000000000009d8d6 : jg 0x9d8f6 ; jne 0x9dee8 ; ret
0x000000000009d8f6 : jg 0x9d917 ; jne 0x9dee8 ; ret
0x000000000009d916 : jg 0x9d938 ; jne 0x9dee8 ; ret
0x000000000009d939 : jg 0x9d95c ; jne 0x9dee8 ; ret
0x000000000009d96e : jg 0x9d992 ; jne 0x9dee8 ; ret
0x000000000009d99c : jg 0x9d9c1 ; jne 0x9dee8 ; ret
0x000000000009d9cc : jg 0x9d9f2 ; jne 0x9dee8 ; ret
0x000000000009d9f8 : jg 0x9da1f ; jne 0x9dee8 ; ret
0x000000000009da28 : jg 0x9da50 ; jne 0x9dee8 ; ret
0x000000000009da58 : jg 0x9da81 ; jne 0x9dee8 ; ret
0x000000000009da88 : jg 0x9dab2 ; jne 0x9dee8 ; ret
0x000000000009dba6 : jg 0x9dbb1 ; ret
0x000000000009dbb9 : jg 0x9dbc7 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009dbca : jg 0x9dbd9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009dbe9 : jg 0x9dbf7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dbf9 : jg 0x9dc07 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009dc0c : jg 0x9dc1d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009dc2a : jg 0x9dc39 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009dc4a : jg 0x9dc59 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009dc6a : jg 0x9dc79 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009dc8d : jg 0x9dc9f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009dccd : jg 0x9dcdf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009dced : jg 0x9dcff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009dd0b : jg 0x9dd1b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009dd2b : jg 0x9dd3b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009dd4b : jg 0x9dd5b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009dd6b : jg 0x9dd7b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009dea2 : jg 0x9dead ; ret
0x000000000009dfd6 : jg 0x9e00a ; ret
0x000000000009e546 : jg 0x9e555 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009e556 : jg 0x9e568 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009e589 : jg 0x9e59b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009e5a9 : jg 0x9e5bb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009e6cf : jg 0x9e72f ; or eax, 0x1c478d48 ; ret
0x000000000009eccb : jg 0x9ecd6 ; jne 0x9f6f8 ; ret
0x000000000009ecf0 : jg 0x9ecfc ; jne 0x9f6f8 ; ret
0x000000000009ed13 : jg 0x9ed20 ; jne 0x9f6f8 ; ret
0x000000000009ed2e : jg 0x9ed3c ; jne 0x9f6f8 ; ret
0x000000000009ed51 : jg 0x9ed60 ; jne 0x9f6f8 ; ret
0x000000000009ed76 : jg 0x9ed86 ; jne 0x9f6f8 ; ret
0x000000000009ed94 : jg 0x9eda5 ; jne 0x9f6f8 ; ret
0x000000000009edb0 : jg 0x9edc2 ; jne 0x9f6f8 ; ret
0x000000000009edd3 : jg 0x9ede6 ; jne 0x9f6f8 ; ret
0x000000000009edf8 : jg 0x9ee0c ; jne 0x9f6f8 ; ret
0x000000000009ee26 : jg 0x9ee3b ; jne 0x9f6f8 ; ret
0x000000000009ee46 : jg 0x9ee5c ; jne 0x9f6f8 ; ret
0x000000000009ee68 : jg 0x9ee7f ; jne 0x9f6f8 ; ret
0x000000000009ee98 : jg 0x9eeb0 ; jne 0x9f6f8 ; ret
0x000000000009eec8 : jg 0x9eee1 ; jne 0x9f6f8 ; ret
0x000000000009eef2 : jg 0x9ef0c ; jne 0x9f6f8 ; ret
0x000000000009ef15 : jg 0x9ef30 ; jne 0x9f6f8 ; ret
0x000000000009ef3a : jg 0x9ef56 ; jne 0x9f6f8 ; ret
0x000000000009ef68 : jg 0x9ef85 ; jne 0x9f6f8 ; ret
0x000000000009ef98 : jg 0x9efb6 ; jne 0x9f6f8 ; ret
0x000000000009efcb : jg 0x9efea ; jne 0x9f6f8 ; ret
0x000000000009effa : jg 0x9f01a ; jne 0x9f6f8 ; ret
0x000000000009f02a : jg 0x9f04b ; jne 0x9f6f8 ; ret
0x000000000009f05a : jg 0x9f07c ; jne 0x9f6f8 ; ret
0x000000000009f08d : jg 0x9f0b0 ; jne 0x9f6f8 ; ret
0x000000000009f0c2 : jg 0x9f0e6 ; jne 0x9f6f8 ; ret
0x000000000009f0f0 : jg 0x9f115 ; jne 0x9f6f8 ; ret
0x000000000009f120 : jg 0x9f146 ; jne 0x9f6f8 ; ret
0x000000000009f14c : jg 0x9f173 ; jne 0x9f6f8 ; ret
0x000000000009f17c : jg 0x9f1a4 ; jne 0x9f6f8 ; ret
0x000000000009f1ac : jg 0x9f1d5 ; jne 0x9f6f8 ; ret
0x000000000009f1dc : jg 0x9f206 ; jne 0x9f6f8 ; ret
0x000000000009f386 : jg 0x9f395 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f399 : jg 0x9f3ab ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009f3d9 : jg 0x9f3eb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009f3f9 : jg 0x9f40b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009f51f : jg 0x9f57f ; or eax, 0x1d478d48 ; ret
0x000000000009f6b2 : jg 0x9f6bd ; ret
0x000000000009f7e6 : jg 0x9f81e ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009f7e5 : jg 0x9f86d ; xor byte ptr [rax - 0x73], cl ; ret
0x000000000009ffb6 : jg 0x9ffc1 ; ret
0x000000000009ffc6 : jg 0x9ffd4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009ffda : jg 0x9ffe9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009fff9 : jg 0xa0007 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0009 : jg 0xa0017 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a0019 : jg 0xa002a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a003a : jg 0xa0049 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a005a : jg 0xa0069 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a007a : jg 0xa0089 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a009a : jg 0xa00ac ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a00dd : jg 0xa00ef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a00fd : jg 0xa010f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a011b : jg 0xa012b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a013b : jg 0xa014b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a015b : jg 0xa016b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a017b : jg 0xa018b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a0a86 : jg 0xa0a91 ; ret
0x00000000000a0a96 : jg 0xa0aa4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a0aaa : jg 0xa0ab9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a0ac9 : jg 0xa0ad7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0ad9 : jg 0xa0ae7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a0ae9 : jg 0xa0afa ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a0b0a : jg 0xa0b19 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a0b2a : jg 0xa0b39 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0b4a : jg 0xa0b59 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a0b6a : jg 0xa0b7c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a0bad : jg 0xa0bbf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a0bcd : jg 0xa0bdf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a0beb : jg 0xa0bfb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a0c0b : jg 0xa0c1b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a0c2b : jg 0xa0c3b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a0c4b : jg 0xa0c5b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a0df6 : jg 0xa0e06 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a0fcf : jg 0xa1030 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a0fef : jg 0xa1050 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1066 : jg 0xa109f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a1065 : jg 0xa10ee ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a1a40 : jg 0xa1a7d ; ret 0x2b77
0x00000000000a2bd5 : jg 0xa2bdd ; neg eax ; ret
0x00000000000c23fc : jg 0xc2402 ; add byte ptr [rax], al ; ret
0x00000000000ebd60 : jg 0xebdb2 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000001180bc : jge 0x1180c9 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012463f : jge 0x124653 ; call rax
0x000000000012b8ef : jge 0x12b903 ; call rax
0x000000000012bff8 : jge 0x12c00c ; call rax
0x0000000000166381 : jge 0x166371 ; call qword ptr [rax]
0x0000000000166380 : jge 0x166372 ; call qword ptr [rax]
0x0000000000166385 : jge 0x166375 ; jmp rax
0x0000000000166399 : jge 0x166389 ; jmp qword ptr [rax]
0x0000000000166398 : jge 0x16638a ; jmp qword ptr [rax]
0x0000000000178265 : jge 0x178265 ; call qword ptr [rax]
0x0000000000186345 : jge 0x186348 ; inc dword ptr [rax + 0x7f] ; sti ; call rax
0x00000000001872c1 : jge 0x1872c1 ; jmp rax
0x00000000001872bd : jge 0x1872c1 ; push qword ptr [rax + 0x7d] ; cld ; jmp rax
0x000000000018747d : jge 0x18747d ; call qword ptr [rax]
0x00000000001874c1 : jge 0x1874c5 ; push qword ptr [rax + 0x7c] ; cld ; jmp rax
0x0000000000187ab1 : jge 0x187a9e ; call rsp
0x000000000018ce9d : jge 0x18cea7 ; add byte ptr [rbx + rdx - 7], dl ; call rsp
0x00000000001913ad : jge 0x19139b ; jmp qword ptr [rdx]
0x00000000001913f5 : jge 0x1913e3 ; jmp qword ptr [rdx]
0x0000000000193f7c : jge 0x194000 ; in al, dx ; jmp qword ptr [rdx]
0x00000000001945c4 : jge 0x1945a4 ; in al, dx ; jmp qword ptr [rdx]
0x0000000000195bc5 : jge 0x195bb6 ; jmp qword ptr [rdx]
0x0000000000196c7c : jge 0x196c06 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196cc4 : jge 0x196c4e ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a5f7d : jge 0x1a5f86 ; add byte ptr [rax - 0x44], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001acf65 : jge 0x1acf5e ; jmp qword ptr [rdx]
0x00000000001acf64 : jge 0x1acf5f ; jmp qword ptr [rdx]
0x00000000001acfad : jge 0x1acfa6 ; jmp qword ptr [rdx]
0x00000000001ad03d : jge 0x1ad036 ; jmp qword ptr [rdx]
0x00000000001ad085 : jge 0x1ad07e ; jmp qword ptr [rdx]
0x00000000001ad0e5 : jge 0x1ad0de ; jmp qword ptr [rdx]
0x00000000001ad12d : jge 0x1ad126 ; jmp qword ptr [rdx]
0x00000000001ad175 : jge 0x1ad16e ; jmp qword ptr [rdx]
0x00000000001ad1bd : jge 0x1ad1b6 ; jmp qword ptr [rdx]
0x00000000001ad205 : jge 0x1ad1fe ; jmp qword ptr [rdx]
0x00000000001ad24d : jge 0x1ad246 ; jmp qword ptr [rdx]
0x0000000000048c3a : jge 0x48c41 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000006fbc3 : jge 0x6fc3d ; cmp edi, ebx ; je 0x6fbd6 ; call 0xebe11
0x0000000000093ee1 : jge 0x93eec ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000096f1f : jge 0x96f27 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a3d4f : jge 0xa3d54 ; call r12
0x00000000000af7d1 : jge 0xaf7d6 ; call r12
0x00000000000bd916 : jge 0xbd8b3 ; call r14
0x00000000000c935f : jge 0xc9316 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f4f7b : jge 0xf4f7f ; call rbx
0x00000000000f50a2 : jge 0xf50a6 ; call rbx
0x00000000000f50b0 : jge 0xf50b4 ; call rbx
0x00000000000f51e5 : jge 0xf51e9 ; call rbx
0x00000000000f5355 : jge 0xf5359 ; call rbx
0x00000000000f5363 : jge 0xf5367 ; call rbx
0x00000000000f576f : jge 0xf573a ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000f6a5a : jge 0xf6a5f ; call r12
0x0000000000119299 : jl 0x1192c7 ; adc byte ptr [rcx + 0x58b4838], cl ; ret
0x000000000012730d : jl 0x127319 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001620bb : jl 0x1620c4 ; neg eax ; ret
0x0000000000166395 : jl 0x166389 ; inc dword ptr [rax + 0x7d] ; in al, dx ; jmp qword ptr [rax]
0x0000000000178261 : jl 0x178265 ; push rax ; jge 0x178269 ; call qword ptr [rax]
0x0000000000187345 : jl 0x187345 ; jmp qword ptr [rdx]
0x0000000000187349 : jl 0x18734d ; call qword ptr [rdx + 0x22fffc7b]
0x00000000001874c5 : jl 0x1874c5 ; jmp rax
0x0000000000187a84 : jl 0x187af5 ; add byte ptr [rax], al ; sub dword ptr [rbx - 0x17], edi ; call rsp
0x0000000000187e05 : jl 0x187e0d ; add byte ptr [rdx + rax*4 - 0x16], al ; call rsp
0x0000000000188a6c : jl 0x188a3a ; add byte ptr [rax], al ; je 0x188adb ; in eax, dx ; dec esp ; ret
0x000000000018aefc : jl 0x18aec9 ; add dword ptr [rax], eax ; and al, 0x35 ; cmc ; dec esp ; ret 1
0x000000000018cdc4 : jl 0x18ce45 ; add al, byte ptr [rax] ; push rsp ; cld ; clc ; jmp rsp
0x000000000018d7c4 : jl 0x18d792 ; add al, byte ptr [rax] ; adc al, 0x45 ; cli ; dec esp ; ret
0x0000000000191365 : jl 0x191353 ; jmp qword ptr [rdx]
0x0000000000195ab5 : jl 0x195aa6 ; jmp qword ptr [rdx]
0x0000000000195afd : jl 0x195aee ; jmp qword ptr [rdx]
0x0000000000195b45 : jl 0x195b36 ; jmp qword ptr [rdx]
0x0000000000195b44 : jl 0x195b37 ; jmp qword ptr [rdx]
0x000000000019a655 : jl 0x19a655 ; jmp qword ptr [rdx]
0x000000000019bfd1 : jl 0x19bfc3 ; jmp qword ptr [rcx]
0x00000000001a1acc : jl 0x1a1a63 ; int1 ; jmp qword ptr [rdx]
0x00000000001a5924 : jl 0x1a59a4 ; add dword ptr [rax], eax ; test al, 0xac ; hlt ; call qword ptr [rbx]
0x00000000001a5e05 : jl 0x1a5e0e ; add byte ptr [rax - 0x47], cl ; hlt ; call rdi
0x00000000001a7824 : jl 0x1a77c3 ; add dword ptr [rax], eax ; sub byte ptr [rdx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7924 : jl 0x1a78c4 ; add dword ptr [rax], eax ; sbb byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8324 : jl 0x1a82ce ; add dword ptr [rax], eax ; fdivr dword ptr [rbx] ; cmc ; jmp rbx
0x00000000001aa824 : jl 0x1aa7f3 ; add dword ptr [rax], eax ; sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab724 : jl 0x1ab702 ; add dword ptr [rax], eax ; mov al, ch ; cmc ; call qword ptr [rax]
0x00000000001ab924 : jl 0x1ab904 ; add dword ptr [rax], eax ; js 0x1ab91a ; cmc ; call qword ptr [rax]
0x00000000001b3bb9 : jl 0x1b3bb4 ; call qword ptr [rdx]
0x00000000000025c3 : jl 0x2556 ; loop 0x25a1 ; ret 0x23cb
0x0000000000025ae3 : jl 0x25b10 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000025bdc : jl 0x25c0a ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025fb0 : jl 0x25fdd ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000026239 : jl 0x26267 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002652b : jl 0x26559 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002661d : jl 0x2664b ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026a08 : jl 0x26a35 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000026bff : jl 0x26c2d ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026f20 : jl 0x26f4e ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002712b : jl 0x27159 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000027813 : jl 0x27840 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002793e : jl 0x2796b ; jo 0x27991 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002851a : jl 0x28547 ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000028b9f : jl 0x28bcd ; push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x00000000000295b5 : jl 0x295e3 ; push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000029f31 : jl 0x29f5f ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000002a43e : jl 0x2a46b ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002a737 : jl 0x2a764 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002a88c : jl 0x2a8b9 ; jo 0x2a8df ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002b08a : jl 0x2b0b8 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000002b58e : jl 0x2b5bb ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002b887 : jl 0x2b8b4 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002b9dc : jl 0x2ba09 ; jo 0x2ba2f ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002c3d6 : jl 0x2c400 ; or al, ch ; ret 0x5ab
0x000000000003ab3a : jl 0x3ab68 ; and byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret 0xfffa
0x000000000004425a : jl 0x44285 ; xor byte ptr [rax + 0x29], cl ; ret 0x2949
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x000000000004fd91 : jl 0x4fd5b ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000085090 : jl 0x8509a ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x000000000008ae67 : jl 0x8ae92 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000096faa : jl 0x97015 ; add rax, rdi ; ret
0x0000000000096fba : jl 0x97017 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000096fda : jl 0x97017 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000096ffa : jl 0x97017 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a4046 : jl 0xa407e ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ab726 : jl 0xab750 ; or al, ch ; ret 0xf8cd
0x00000000000ac6e3 : jl 0xac6eb ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000b64c6 : jl 0xb64f0 ; adc al, ch ; ret 0x60
0x00000000000b66c6 : jl 0xb66f0 ; adc al, ch ; ret 0x5e
0x00000000000b8233 : jl 0xb8284 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000b8b7d : jl 0xb8ba8 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000d4cee : jl 0xd4d28 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ebacd : jl 0xebaf9 ; cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000ebbdd : jl 0xebc09 ; adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0xebba1
0x00000000000f5446 : jl 0xf5474 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000f72b8 : jl 0xf72c7 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000f9cc6 : jl 0xf9cf0 ; adc al, ch ; ret 0xf257
0x00000000000fa344 : jl 0xfa389 ; je 0xfa34d ; ret
0x0000000000105c50 : jle 0x105c83 ; add byte ptr [rcx + 0xf], cl ; sub byte ptr [rcx], r13b ; ret 0x8941
0x000000000012a668 : jle 0x12a680 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000012ea1e : jle 0x12ea5c ; call 0x12ac34
0x000000000013cb77 : jle 0x13caa1 ; movsxd rax, ecx ; ret
0x000000000013cdb1 : jle 0x13ccfb ; ret
0x0000000000186410 : jle 0x1863c3 ; std ; call qword ptr [rsi]
0x0000000000187475 : jle 0x187475 ; call qword ptr [rax]
0x0000000000187479 : jle 0x18747d ; call qword ptr [rax + 0x10fffc7d]
0x0000000000194809 : jle 0x1947fa ; jmp rcx
0x0000000000195404 : jle 0x19547d ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195c0d : jle 0x195bfe ; jmp qword ptr [rdx]
0x0000000000195c55 : jle 0x195c46 ; jmp qword ptr [rdx]
0x0000000000195d05 : jle 0x195cf6 ; jmp qword ptr [rdx]
0x0000000000195d4d : jle 0x195d3e ; jmp qword ptr [rdx]
0x0000000000195d95 : jle 0x195d86 ; jmp qword ptr [rdx]
0x0000000000195e45 : jle 0x195e36 ; jmp qword ptr [rdx]
0x0000000000195e44 : jle 0x195e37 ; jmp qword ptr [rdx]
0x0000000000195e8d : jle 0x195e7e ; jmp qword ptr [rdx]
0x0000000000195ed5 : jle 0x195ec6 ; jmp qword ptr [rdx]
0x0000000000195f55 : jle 0x195f46 ; jmp qword ptr [rdx]
0x0000000000195f9d : jle 0x195f8e ; jmp qword ptr [rdx]
0x0000000000195fe5 : jle 0x195fd6 ; jmp qword ptr [rdx]
0x0000000000196065 : jle 0x196056 ; jmp qword ptr [rdx]
0x00000000001960ad : jle 0x19609e ; jmp qword ptr [rdx]
0x000000000019af54 : jle 0x19af90 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a0bed : jle 0x1a0be2 ; jmp qword ptr [rdx]
0x00000000001a0c35 : jle 0x1a0c2a ; jmp qword ptr [rdx]
0x00000000001a0c95 : jle 0x1a0c8a ; jmp qword ptr [rdx]
0x00000000001a0cdd : jle 0x1a0cd2 ; jmp qword ptr [rdx]
0x00000000001a0d65 : jle 0x1a0d5a ; jmp qword ptr [rdx]
0x00000000001a6055 : jle 0x1a605e ; add byte ptr [rax - 0x42], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a93b4 : jle 0x1a93a3 ; hlt ; jmp qword ptr [rdx]
0x00000000001ae83c : jle 0x1ae7dc ; cmc ; jmp qword ptr [rdx]
0x000000000002cb22 : jle 0x2cb35 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000000314c : jle 0x314a ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000003d8d7 : jle 0x3d893 ; jmp 0x3d8a0
0x000000000003d8d6 : jle 0x3d894 ; jmp 0x3d8a1
0x00000000000489f0 : jle 0x48a2e ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000060c71 : jle 0x60c7a ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000007386b : jle 0x73872 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000092c7e : jle 0x92c4e ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1ccd : jle 0xc1cd4 ; ret
0x00000000000c24a9 : jle 0xc24af ; add byte ptr [rax], al ; ret
0x00000000001012f0 : jmp 0x101032
0x000000000010bd61 : jmp 0x10bd27
0x000000000010d632 : jmp 0x10d401
0x000000000010d9ea : jmp 0x10d7d1
0x0000000000116d21 : jmp 0x116d29
0x0000000000123aaf : jmp 0x123a75
0x000000000012ae6e : jmp 0x12ae78
0x000000000012ca81 : jmp 0x12ca85
0x000000000012d482 : jmp 0x12d447
0x000000000013154a : jmp 0x131510
0x0000000000165e22 : jmp 0x165e24
0x0000000000165e26 : jmp 0x165e28
0x0000000000165e2a : jmp 0x165e2c
0x0000000000173fca : jmp 0x174009
0x0000000000174d09 : jmp 0x174cdc
0x0000000000175d00 : jmp 0x175c94
0x0000000000175cff : jmp 0x175c95
0x00000000001882ca : jmp 0x1882cc
0x000000000018834a : jmp 0x18834c
0x000000000018839a : jmp 0x18839c
0x000000000018848a : jmp 0x18848c
0x0000000000188489 : jmp 0x18848d
0x00000000001884fa : jmp 0x1884fc
0x00000000001884f9 : jmp 0x1884fd
0x000000000018853a : jmp 0x18853c
0x0000000000188539 : jmp 0x18853d
0x000000000018859a : jmp 0x18859c
0x00000000001885f2 : jmp 0x1885f4
0x00000000001886e2 : jmp 0x1886e4
0x00000000001886e1 : jmp 0x1886e5
0x00000000001886fa : jmp 0x1886fc
0x00000000001887a2 : jmp 0x1887a4
0x00000000001887da : jmp 0x1887dc
0x0000000000191d16 : jmp 0x191cbc
0x000000000019269a : jmp 0x19269c
0x000000000019288e : jmp 0x192890
0x00000000001928d6 : jmp 0x1928d8
0x000000000019291e : jmp 0x192920
0x0000000000192966 : jmp 0x192968
0x00000000001929ae : jmp 0x1929b0
0x00000000001929f6 : jmp 0x1929f8
0x0000000000192a3e : jmp 0x192a40
0x0000000000192a86 : jmp 0x192a88
0x0000000000192b82 : jmp 0x192b84
0x0000000000192b81 : jmp 0x192b85
0x0000000000192ce2 : jmp 0x192ce4
0x0000000000192ce1 : jmp 0x192ce5
0x0000000000192dca : jmp 0x192dcc
0x0000000000192e12 : jmp 0x192e14
0x0000000000192e82 : jmp 0x192e84
0x0000000000192ee6 : jmp 0x192ee8
0x0000000000192ee5 : jmp 0x192ee9
0x0000000000192f2e : jmp 0x192f30
0x0000000000192f2d : jmp 0x192f31
0x0000000000192f76 : jmp 0x192f78
0x0000000000192f75 : jmp 0x192f79
0x0000000000192f74 : jmp 0x192f7a
0x0000000000192fbe : jmp 0x192fc0
0x0000000000192fbd : jmp 0x192fc1
0x0000000000193006 : jmp 0x193008
0x0000000000193005 : jmp 0x193009
0x000000000019304e : jmp 0x193050
0x000000000019304d : jmp 0x193051
0x00000000001931f2 : jmp 0x1931f4
0x00000000001931f1 : jmp 0x1931f5
0x000000000019320a : jmp 0x19320c
0x0000000000193209 : jmp 0x19320d
0x000000000019326a : jmp 0x19326c
0x0000000000193269 : jmp 0x19326d
0x0000000000193268 : jmp 0x19326e
0x00000000001932be : jmp 0x1932c0
0x0000000000193306 : jmp 0x193308
0x000000000019334e : jmp 0x193350
0x0000000000193396 : jmp 0x193398
0x0000000000193606 : jmp 0x193608
0x000000000019364e : jmp 0x193650
0x000000000019377e : jmp 0x193780
0x00000000001937c6 : jmp 0x1937c8
0x0000000000193926 : jmp 0x193928
0x000000000019396e : jmp 0x193970
0x0000000000193afe : jmp 0x193b00
0x0000000000193b46 : jmp 0x193b48
0x00000000001031f7 : jmp 0x1f4f2
0x00000000000217ff : jmp 0x217be
0x0000000000021be3 : jmp 0x21ba8
0x0000000000023127 : jmp 0x23164
0x0000000000023127 : jmp 0x23165
0x000000000019a924 : jmp 0x2319972b
0x00000000000265b6 : jmp 0x2657b
0x0000000000026b91 : jmp 0x26aca
0x0000000000026ffd : jmp 0x26fc3
0x0000000000027047 : jmp 0x2700c
0x00000000000282f1 : jmp 0x27f4e
0x0000000000028874 : jmp 0x282d8
0x0000000000029c8d : jmp 0x29c52
0x000000000002ae5d : jmp 0x2ae22
0x000000000002f69e : jmp 0x2f6a6
0x0000000000003873 : jmp 0x3839
0x0000000000038442 : jmp 0x38494
0x0000000000039bd2 : jmp 0x39c24
0x000000000003d6f6 : jmp 0x3d5da
0x000000000003d8d9 : jmp 0x3d89e
0x000000000003db6d : jmp 0x3da9a
0x000000000018ead0 : jmp 0x402607db
0x0000000000044ee4 : jmp 0x44ea9
0x000000000004639a : jmp 0x462ed
0x0000000000046e45 : jmp 0x46e0b
0x00000000000b4dd0 : jmp 0x48cdd720
0x00000000000b53d0 : jmp 0x48cddd20
0x00000000000b545c : jmp 0x48cdddac
0x00000000000b54e9 : jmp 0x48cdde39
0x00000000000b6d47 : jmp 0x48cdf697
0x00000000001261e2 : jmp 0x48d22472
0x00000000000454b7 : jmp 0x48f4de0b
0x00000000000708d2 : jmp 0x48f59225
0x00000000000b700c : jmp 0x49cdf95c
0x00000000000b7056 : jmp 0x49cdf9a6
0x00000000000b74cb : jmp 0x49cdfe1b
0x000000000004df84 : jmp 0x4a1b5
0x000000000004e14c : jmp 0x4a3c7
0x000000000004e50d : jmp 0x4a745
0x000000000004bf33 : jmp 0x4bef9
0x0000000000037629 : jmp 0x4c66c34
0x0000000000050b02 : jmp 0x4cc79452
0x0000000000092709 : jmp 0x4ccbb05d
0x00000000000b5727 : jmp 0x4ccde077
0x00000000000b5d81 : jmp 0x4ccde6d1
0x00000000000b5e0d : jmp 0x4ccde75d
0x00000000000b5e8e : jmp 0x4ccde7de
0x00000000000b6c61 : jmp 0x4ccdf5b1
0x00000000000b6dae : jmp 0x4ccdf6fe
0x00000000000e3911 : jmp 0x4cd0c261
0x00000000000d371c : jmp 0x4d02d27
0x00000000000e1b75 : jmp 0x4d11180
0x00000000000e402c : jmp 0x4d13637
0x00000000000e42fc : jmp 0x4d13907
0x00000000000ee390 : jmp 0x4d1d99b
0x000000000013569d : jmp 0x4d64ca8
0x000000000004e746 : jmp 0x4e70b
0x000000000014c79a : jmp 0x4f93d798
0x000000000014c799 : jmp 0x4f93d799
0x000000000014f26a : jmp 0x4f940268
0x000000000014f269 : jmp 0x4f940269
0x0000000000151d8a : jmp 0x4f942d88
0x0000000000151d89 : jmp 0x4f942d89
0x00000000000589ef : jmp 0x54c9a
0x000000000005a6e3 : jmp 0x5529d
0x0000000000056515 : jmp 0x564da
0x00000000000634bf : jmp 0x5f759
0x00000000000618a6 : jmp 0x5fff8
0x0000000000061743 : jmp 0x61709
0x0000000000069fb5 : jmp 0x6623e
0x000000000018ea88 : jmp 0x72260793
0x000000000007538b : jmp 0x75351
0x000000000007538a : jmp 0x75352
0x0000000000076e01 : jmp 0x76e06
0x0000000000048346 : jmp 0x77c6bc97
0x000000000007a1b9 : jmp 0x7a1c0
0x000000000007a623 : jmp 0x7a5e8
0x000000000007a9f4 : jmp 0x7aa08
0x000000000007f5f1 : jmp 0x7f1be
0x00000000000816a7 : jmp 0x8166d
0x0000000000085d72 : jmp 0x85d38
0x0000000000085f50 : jmp 0x85f16
0x0000000000086de4 : jmp 0x86daa
0x0000000000086f38 : jmp 0x86efd
0x000000000009336b : jmp 0x931c9
0x0000000000093a4c : jmp 0x93a12
0x0000000000093b98 : jmp 0x93b5d
0x0000000000093d42 : jmp 0x93d07
0x000000000009749e : jmp 0x97464
0x00000000000a13de : jmp 0xa13a4
0x00000000000a14af : jmp 0xa1475
0x00000000000a151e : jmp 0xa14e4
0x00000000000a7a14 : jmp 0xa6167
0x00000000000b19b0 : jmp 0xb1954
0x00000000000ba0c7 : jmp 0xba08c
0x00000000000bced0 : jmp 0xbce96
0x00000000000c3cd7 : jmp 0xc3727
0x00000000000c4d5b : jmp 0xc40f6
0x00000000000c49db : jmp 0xc4178
0x00000000000c75f3 : jmp 0xc75b9
0x00000000000c7638 : jmp 0xc75fe
0x00000000000c83a4 : jmp 0xc83f1
0x00000000000ca94d : jmp 0xca150
0x00000000000ce868 : jmp 0xce77f
0x00000000000d4724 : jmp 0xd43cc
0x00000000000d4893 : jmp 0xd457c
0x00000000000d47ef : jmp 0xd45f7
0x00000000000d470a : jmp 0xd4676
0x00000000000dd9f5 : jmp 0xdda0d
0x00000000000de820 : jmp 0xde7e5
0x00000000000e42d8 : jmp 0xe429d
0x00000000000f0db1 : jmp 0xf0d73
0x00000000000fa9b4 : jmp 0xf0fa9bd
0x00000000000f159c : jmp 0xf152c
0x00000000000f15c5 : jmp 0xf158b
0x00000000000f1825 : jmp 0xf17eb
0x00000000000f1b2e : jmp 0xf1b15
0x00000000000f3e9a : jmp 0xf3cf2
0x00000000000f78cf : jmp 0xf7895
0x0000000000003152 : jmp 0xffffffff88c2d2fd
0x0000000000112321 : jmp 0xffffffff895de5b1
0x000000000011dfe6 : jmp 0xffffffffc097b3f1
0x000000000004f5a2 : jmp 0xffffffffc24904f7
0x000000000004f5a1 : jmp 0xffffffffc24904f8
0x00000000000a8b16 : jmp 0xffffffffc28dd320
0x00000000000737e5 : jmp 0xffffffffc29137e8
0x00000000000e103b : jmp 0xffffffffc2981038
0x00000000000a2ae3 : jmp 0xffffffffc30a2aec
0x0000000000038b71 : jmp 0xffffffffc31314c6
0x00000000000e4122 : jmp 0xffffffffc3484128
0x00000000000e41b3 : jmp 0xffffffffc34841b9
0x000000000007d5ae : jmp 0xffffffffc39122b8
0x0000000000124eb3 : jmp 0xffffffffc39b4ee5
0x0000000000108d7e : jmp 0xffffffffc3e116d3
0x0000000000108bbe : jmp 0xffffffffc409150f
0x00000000000e0f69 : jmp 0xfffffffffd920f69
0x00000000000a44a3 : jmp 0xfffffffffff9cdf4
0x00000000000a4796 : jmp 0xfffffffffff9d0e7
0x00000000001785c1 : jmp qword ptr [eax]
0x0000000000047907 : jmp qword ptr [r8]
0x000000000017816b : jmp qword ptr [rax + 0x10fff14c]
0x0000000000186fc3 : jmp qword ptr [rax + 0x10fffc56]
0x0000000000186dbf : jmp qword ptr [rax + 0x10fffc57]
0x00000000001782c7 : jmp qword ptr [rax + 0x10fffc9d]
0x0000000000187983 : jmp qword ptr [rax + 0x10fffca2]
0x0000000000187797 : jmp qword ptr [rax + 0x10fffca8]
0x0000000000177127 : jmp qword ptr [rax + 0x13ffede4]
0x0000000000186db7 : jmp qword ptr [rax + 0x20fffc58]
0x0000000000186daf : jmp qword ptr [rax + 0x20fffc59]
0x0000000000186da7 : jmp qword ptr [rax + 0x20fffc5a]
0x0000000000186d9f : jmp qword ptr [rax + 0x20fffc5b]
0x0000000000187453 : jmp qword ptr [rax + 0x20fffc82]
0x00000000001879bb : jmp qword ptr [rax + 0x20fffca3]
0x00000000001879b3 : jmp qword ptr [rax + 0x20fffca4]
0x00000000001879ab : jmp qword ptr [rax + 0x20fffca5]
0x00000000001879a3 : jmp qword ptr [rax + 0x20fffca6]
0x000000000018799b : jmp qword ptr [rax + 0x20fffca7]
0x000000000017806f : jmp qword ptr [rax - 0x10]
0x00000000001780a3 : jmp qword ptr [rax - 0x1f000f00]
0x0000000000178093 : jmp qword ptr [rax - 0x1f000f05]
0x0000000000178083 : jmp qword ptr [rax - 0x1f000f0a]
0x0000000000178073 : jmp qword ptr [rax - 0x1f000f0f]
0x0000000000178633 : jmp qword ptr [rax - 0x2f000d95]
0x0000000000178447 : jmp qword ptr [rax - 0x2f000dab]
0x0000000000178317 : jmp qword ptr [rax - 0x3d]
0x000000000017807f : jmp qword ptr [rax - 0xb]
0x000000000017809f : jmp qword ptr [rax - 1]
0x000000000017808f : jmp qword ptr [rax - 6]
0x0000000000047908 : jmp qword ptr [rax]
0x0000000000002547 : jmp qword ptr [rbx]
0x0000000000058c9c : jmp qword ptr [rcx + rcx*4 + 2]
0x0000000000187aab : jmp qword ptr [rcx + rdi*4 + 0x7dbd0000]
0x0000000000177917 : jmp qword ptr [rcx]
0x000000000018df5b : jmp qword ptr [rdi + rdx*2 + 1]
0x00000000000b4e4d : jmp qword ptr [rdi]
0x000000000018760f : jmp qword ptr [rdx + 0x12fffcab]
0x0000000000186c33 : jmp qword ptr [rdx + 0x32fffc62]
0x00000000001776db : jmp qword ptr [rdx - 0xa]
0x00000000000cc61e : jmp qword ptr [rdx]
0x00000000001776bf : jmp qword ptr [rip + 0x20ffffed]
0x000000000003c0c1 : jmp qword ptr [rsi + 0xf]
0x0000000000187bfb : jmp qword ptr [rsi + rbp*2 - 0x41fc0000]
0x0000000000189d8b : jmp qword ptr [rsi + rcx*2 + 1]
0x0000000000176bdb : jmp qword ptr [rsi - 0x11]
0x0000000000178d5b : jmp qword ptr [rsi - 0x1f000c31]
0x000000000004469d : jmp qword ptr [rsi - 0x70]
0x000000000007276d : jmp qword ptr [rsi]
0x0000000000001b5e : jmp r10
0x000000000002e323 : jmp r14
0x000000000002de73 : jmp r8
0x00000000001427ed : jmp r9
0x0000000000178077 : jmp rax
0x00000000000e2b55 : jmp rbx
0x000000000004cdac : jmp rcx
0x000000000012709b : jmp rdi
0x0000000000001b5f : jmp rdx
0x000000000002e324 : jmp rsi
0x0000000000002a4d : jmp rsp
0x0000000000105dfe : jne 0x105e0f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010799d : jne 0x107996 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000107a17 : jne 0x107a28 ; cmp qword ptr [rdi], 0 ; je 0x107a31 ; ret
0x0000000000107a88 : jne 0x107a97 ; mov eax, 1 ; ret
0x0000000000107ab8 : jne 0x107ac4 ; xor eax, eax ; ret
0x0000000000107ae8 : jne 0x107af4 ; xor eax, eax ; ret
0x0000000000107b18 : jne 0x107b24 ; xor eax, eax ; ret
0x0000000000107b48 : jne 0x107b54 ; xor eax, eax ; ret
0x0000000000107b78 : jne 0x107b84 ; xor eax, eax ; ret
0x0000000000107ba8 : jne 0x107bb4 ; xor eax, eax ; ret
0x0000000000107bd8 : jne 0x107be4 ; xor eax, eax ; ret
0x0000000000107c08 : jne 0x107c14 ; xor eax, eax ; ret
0x0000000000107c38 : jne 0x107c44 ; xor eax, eax ; ret
0x0000000000107c68 : jne 0x107c74 ; xor eax, eax ; ret
0x0000000000107c98 : jne 0x107ca4 ; xor eax, eax ; ret
0x0000000000107cc8 : jne 0x107cd4 ; xor eax, eax ; ret
0x0000000000107cf8 : jne 0x107d04 ; xor eax, eax ; ret
0x0000000000107d28 : jne 0x107d34 ; xor eax, eax ; ret
0x0000000000107d58 : jne 0x107d64 ; xor eax, eax ; ret
0x0000000000107d88 : jne 0x107d94 ; xor eax, eax ; ret
0x0000000000107db8 : jne 0x107dc4 ; xor eax, eax ; ret
0x0000000000107de8 : jne 0x107df4 ; xor eax, eax ; ret
0x0000000000107e18 : jne 0x107e24 ; xor eax, eax ; ret
0x0000000000107e48 : jne 0x107e54 ; xor eax, eax ; ret
0x0000000000107ea8 : jne 0x107eb4 ; xor eax, eax ; ret
0x0000000000107ed8 : jne 0x107ee4 ; xor eax, eax ; ret
0x0000000000107f08 : jne 0x107f14 ; xor eax, eax ; ret
0x0000000000107f38 : jne 0x107f44 ; xor eax, eax ; ret
0x0000000000107f68 : jne 0x107f74 ; xor eax, eax ; ret
0x0000000000107f98 : jne 0x107fa4 ; xor eax, eax ; ret
0x0000000000107fc8 : jne 0x107fd4 ; xor eax, eax ; ret
0x0000000000107ff8 : jne 0x108004 ; xor eax, eax ; ret
0x0000000000108028 : jne 0x108034 ; xor eax, eax ; ret
0x0000000000108071 : jne 0x108069 ; pop rdx ; pop r10 ; ret
0x0000000000108165 : jne 0x108173 ; ret
0x00000000001082f4 : jne 0x1082d3 ; ret
0x000000000010836f : jne 0x108363 ; leave ; ret
0x000000000010846d : jne 0x108433 ; leave ; ret
0x0000000000108bbd : jne 0x108bad ; mov rax, rdi ; ret
0x0000000000108c1c : jne 0x108c11 ; mov rax, rdi ; add rsp, 8 ; ret
0x0000000000108d7d : jne 0x108d6d ; mov rax, r10 ; ret
0x00000000001097d1 : jne 0x109844 ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000010a218 : jne 0x10a226 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ad3b : jne 0x10ad16 ; lea rdi, qword ptr [rip - 0x174] ; call rax
0x000000000010ba61 : jne 0x10bad4 ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000010bddd : jne 0x10bdcb ; ret
0x000000000010be7c : jne 0x10be6b ; ret
0x000000000010bef5 : jne 0x10bee9 ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000010fad8 : jne 0x10fa9d ; jmp 0x10fa95
0x00000000001116f3 : jne 0x1116e3 ; pop rbx ; ret
0x00000000001115f2 : jne 0x111f8c ; mov eax, edx ; pop rbx ; ret
0x0000000000113266 : jne 0x113257 ; mov rdi, r15 ; call 0x1f4f7
0x0000000000117bcd : jne 0x117ba7 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000001188f6 : jne 0x11896e ; add rsp, 8 ; ret
0x000000000011c13c : jne 0x11c142 ; ret
0x000000000011c17c : jne 0x11c170 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000120d0d : jne 0x120d40 ; mov dword ptr [rsi], 0 ; ret
0x0000000000121565 : jne 0x121578 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000012166d : jne 0x121607 ; xor eax, eax ; pop rbx ; ret
0x0000000000124848 : jne 0x124852 ; ret
0x000000000012b867 : jne 0x12b853 ; pop rbx ; ret
0x000000000012bad8 : jne 0x12bae2 ; ret
0x000000000012cfe3 : jne 0x12cfda ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000012d480 : jne 0x12d441 ; jmp 0x12d449
0x000000000012e8e7 : jne 0x12e8f2 ; ret
0x000000000012e927 : jne 0x12e932 ; ret
0x000000000012e9da : jne 0x12e9e5 ; test r14d, r14d ; jne 0x12e9f9 ; call 0x12ac39
0x000000000012e9df : jne 0x12e9f4 ; call 0x12ac34
0x0000000000133b48 : jne 0x133b75 ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000133beb : jne 0x133c18 ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000135dd3 : jne 0x135dbc ; add rsp, 0x58 ; ret
0x0000000000135dd2 : jne 0x135dbd ; add rsp, 0x58 ; ret
0x0000000000135dba : jne 0x135de8 ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000135e74 : jne 0x135e88 ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000135ee8 : jne 0x135f0e ; add rsp, 0x48 ; ret
0x0000000000136a68 : jne 0x136a74 ; xor eax, eax ; ret
0x0000000000136a98 : jne 0x136aa4 ; xor eax, eax ; ret
0x0000000000136ac8 : jne 0x136ad4 ; xor eax, eax ; ret
0x0000000000136af8 : jne 0x136b04 ; xor eax, eax ; ret
0x0000000000136b28 : jne 0x136b34 ; xor eax, eax ; ret
0x0000000000136b58 : jne 0x136b64 ; xor eax, eax ; ret
0x000000000015a0a1 : jne 0x15a656 ; ret
0x000000000016123d : jne 0x161267 ; xor eax, eax ; ret
0x0000000000160831 : jne 0x16126b ; xor eax, eax ; ret
0x0000000000160859 : jne 0x161277 ; xor eax, eax ; ret
0x000000000016207d : jne 0x1620a7 ; xor eax, eax ; ret
0x0000000000161e61 : jne 0x1620ab ; xor eax, eax ; ret
0x00000000001620b1 : jne 0x1620ba ; xor eax, eax ; ret
0x0000000000161e87 : jne 0x1620be ; xor eax, eax ; ret
0x00000000001621c5 : jne 0x162156 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000162197 : jne 0x162156 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000162196 : jne 0x162157 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000163924 : jne 0x163b38 ; xor eax, eax ; ret
0x0000000000163b29 : jne 0x163b49 ; xor eax, eax ; ret
0x00000000001639d1 : jne 0x163b4d ; xor eax, eax ; ret
0x0000000000163b41 : jne 0x163b4e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000164156 : jne 0x164164 ; xor eax, eax ; ret
0x000000000016402d : jne 0x164166 ; ret
0x0000000000164ebd : jne 0x164eae ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000164f10 : jne 0x164ef0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016504d : jne 0x16503d ; pop rbx ; ret
0x0000000000165119 : jne 0x1650e7 ; add rsp, 8 ; ret
0x0000000000165311 : jne 0x165304 ; pop rbx ; ret
0x0000000000165358 : jne 0x165363 ; ret
0x0000000000165bfc : jne 0x165c1f ; ret
0x0000000000177181 : jne 0x177173 ; call rax
0x0000000000177185 : jne 0x177177 ; call qword ptr [rax]
0x000000000017719d : jne 0x17718f ; call qword ptr [rax]
0x00000000001771b5 : jne 0x1771a7 ; call qword ptr [rax]
0x000000000019558d : jne 0x19557e ; jmp qword ptr [rdx]
0x0000000000195d04 : jne 0x195d87 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a09f4 : jne 0x1a0a70 ; int1 ; jmp qword ptr [rdx]
0x00000000001a0c94 : jne 0x1a0d17 ; int1 ; jmp qword ptr [rdx]
0x00000000001a94b4 : jne 0x1a94a3 ; hlt ; jmp qword ptr [rdx]
0x00000000001a9704 : jne 0x1a96f4 ; hlt ; jmp qword ptr [rdx]
0x00000000000354b4 : jne 0x35492 ; ret
0x0000000000036347 : jne 0x36356 ; add rsp, 8 ; ret
0x0000000000036622 : jne 0x36636 ; add rsp, 8 ; ret
0x0000000000036b38 : jne 0x36b43 ; ret
0x000000000000375a : jne 0x3738 ; ret 0x975
0x000000000003763b : jne 0x3764d ; xor eax, eax ; nop ; ret
0x00000000000381cf : jne 0x381c4 ; xor eax, eax ; ret
0x00000000000381f5 : jne 0x381df ; mov eax, 1 ; ret
0x00000000000382af : jne 0x382a4 ; xor eax, eax ; ret
0x00000000000382d5 : jne 0x382bf ; mov eax, 1 ; ret
0x0000000000038577 : jne 0x38566 ; mov rax, rdx ; ret
0x0000000000038c5f : jne 0x38c56 ; mov rax, rdx ; ret
0x000000000003bf96 : jne 0x3c099 ; xor eax, eax ; pop rbx ; ret
0x000000000004657f : jne 0x4669d ; pop rbx ; ret
0x0000000000047018 : jne 0x47019 ; nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000004705d : jne 0x47053 ; pop rbx ; ret
0x000000000004874b : jne 0x48753 ; pop rbx ; ret
0x00000000000494d3 : jne 0x494b8 ; lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x494f9
0x0000000000049921 : jne 0x4990d ; mov rax, rsi ; ret
0x00000000000499a5 : jne 0x49985 ; mov rax, rsi ; ret
0x0000000000053936 : jne 0x53999 ; mov eax, edx ; pop rbx ; ret
0x000000000005d551 : jne 0x5d566 ; mov rax, rbx ; pop rbx ; ret
0x000000000005dce7 : jne 0x5dcee ; ret
0x000000000005dfbc : jne 0x5e037 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000063519 : jne 0x5fc3e ; jmp 0x5f75f
0x00000000000634e2 : jne 0x5fca4 ; jmp 0x5f75f
0x00000000000634b9 : jne 0x5fceb ; jmp 0x5f75f
0x000000000006deca : jne 0x6df45 ; nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000006e731 : jne 0x6e7b2 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000006f852 : jne 0x6fd05 ; ret
0x0000000000070363 : jne 0x703e8 ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000070502 : jne 0x7056d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007084e : jne 0x70879 ; mov eax, r8d ; pop rbx ; ret
0x0000000000070a69 : jne 0x70ae5 ; mov eax, edx ; pop rbx ; ret
0x000000000007119d : jne 0x711e0 ; ret
0x0000000000071297 : jne 0x712e0 ; mov eax, esi ; ret
0x0000000000071397 : jne 0x713e0 ; mov eax, esi ; ret
0x00000000000714d7 : jne 0x71550 ; mov eax, edx ; pop rbx ; ret
0x0000000000071ac0 : jne 0x71b35 ; mov eax, edx ; pop rbx ; ret
0x0000000000071c22 : jne 0x71ca1 ; mov eax, edx ; pop rbx ; ret
0x0000000000071f17 : jne 0x71f90 ; mov eax, edx ; pop rbx ; ret
0x0000000000072062 : jne 0x720c7 ; pop rbx ; ret
0x000000000007378c : jne 0x7380f ; mov eax, edx ; pop rbx ; ret
0x0000000000073856 : jne 0x73866 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000740a1 : jne 0x74093 ; ret
0x00000000000769cc : jne 0x769d3 ; pop rbx ; ret
0x0000000000077619 : jne 0x7768e ; mov eax, edx ; pop rbx ; ret
0x00000000000777ab : jne 0x77829 ; mov eax, edx ; pop rbx ; ret
0x0000000000077bab : jne 0x77c25 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000078032 : jne 0x780aa ; mov eax, edx ; pop rbx ; ret
0x00000000000781d4 : jne 0x78254 ; mov eax, edx ; pop rbx ; ret
0x000000000007ab1d : jne 0x7ab38 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ad6a : jne 0x7ada0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ae41 : jne 0x7ae33 ; ret
0x000000000007bdc2 : jne 0x7bdad ; pop rbx ; ret
0x000000000007bdfc : jne 0x7bdf5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c586 : jne 0x7c57b ; ret
0x000000000007a987 : jne 0x7c962 ; ret
0x000000000007c912 : jne 0x7cb8b ; ret
0x000000000007de46 : jne 0x84971 ; ret
0x000000000007e465 : jne 0x84a7a ; mov rax, r8 ; ret
0x00000000000869f4 : jne 0x86a31 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000086a41 : jne 0x86a34 ; xor eax, eax ; ret
0x0000000000086ab4 : jne 0x86adb ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086afb : jne 0x86af3 ; ret
0x0000000000086f92 : jne 0x86fa4 ; lea rax, qword ptr [rip + 5] ; ret
0x0000000000088b73 : jne 0x88b7e ; xor rax, rax ; ret
0x0000000000088e0e : jne 0x88e20 ; lea rax, qword ptr [rip + 9] ; ret
0x000000000008aae1 : jne 0x8aaf6 ; add rsp, 8 ; ret
0x000000000008bdb9 : jne 0x8be15 ; xor rax, rax ; ret
0x000000000008bd79 : jne 0x8be39 ; xor rax, rax ; ret
0x000000000008be68 : jne 0x8be7b ; lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000008c56e : jne 0x8c553 ; ret
0x000000000008c723 : jne 0x8c60f ; mov rax, rdi ; ret
0x000000000008c679 : jne 0x8c665 ; mov rax, rdi ; ret
0x000000000008cc3e : jne 0x8cc50 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008cca1 : jne 0x8ccb3 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000008ef2e : jne 0x8ef40 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008ef91 : jne 0x8efa3 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000009160e : jne 0x915fc ; xor eax, eax ; ret
0x000000000009163f : jne 0x91652 ; lea rax, qword ptr [rip + 0x6878] ; ret
0x00000000000917a8 : jne 0x91680 ; ret
0x00000000000916e9 : jne 0x916d3 ; ret
0x0000000000093c96 : jne 0x93c81 ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000093d40 : jne 0x93d4f ; jmp 0x93d09
0x00000000000969b6 : jne 0x969ab ; ret
0x0000000000096a02 : jne 0x969f3 ; ret
0x0000000000096a5b : jne 0x96a43 ; ret
0x0000000000096b01 : jne 0x96af5 ; mov rax, rdi ; ret
0x0000000000096b52 : jne 0x96b3c ; xor eax, eax ; ret
0x0000000000096bb2 : jne 0x96ba5 ; mov qword ptr [rdx], rcx ; ret
0x0000000000096c7b : jne 0x96c70 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000096ce8 : jne 0x96cd8 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000096f1d : jne 0x96fa8 ; xor eax, eax ; ret
0x0000000000096f5a : jne 0x96fd4 ; xor eax, eax ; ret
0x00000000000973bc : jne 0x97360 ; mov rax, rdi ; ret
0x000000000009737d : jne 0x97374 ; xor eax, eax ; ret
0x00000000000973a8 : jne 0x973be ; mov rax, rdi ; ret
0x0000000000097445 : jne 0x9743c ; xor eax, eax ; ret
0x000000000009752d : jne 0x97523 ; ret
0x00000000000979c2 : jne 0x9798f ; nop dword ptr [rax] ; ret
0x0000000000097bc9 : jne 0x97bb6 ; mov rax, rbx ; pop rbx ; ret
0x0000000000097eac : jne 0x97e96 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000009d62a : jne 0x9dee6 ; ret
0x000000000009eccd : jne 0x9f6f6 ; ret
0x00000000000a1211 : jne 0xa1202 ; ret
0x00000000000a12c1 : jne 0xa12b2 ; ret
0x00000000000a1431 : jne 0xa1426 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a1581 : jne 0xa1576 ; sub rax, 1 ; ret
0x00000000000a1d34 : jne 0xa1d3f ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000a1d87 : jne 0xa1d7b ; ret
0x00000000000a2b56 : jne 0xa2bd2 ; ret
0x00000000000a2a7f : jne 0xa2bd6 ; ret
0x00000000000a2a5e : jne 0xa2bd8 ; xor eax, eax ; ret
0x00000000000a2c08 : jne 0xa2c1b ; lea rax, qword ptr [rip + 0xd48f] ; ret
0x00000000000a2fbe : jne 0xa2f8b ; ret
0x00000000000a30c9 : jne 0xa30b7 ; sub eax, r8d ; nop ; ret
0x00000000000a31a8 : jne 0xa3196 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a348b : jne 0xa34e6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a356b : jne 0xa353b ; ret
0x00000000000a3555 : jne 0xa354b ; ret
0x00000000000a3638 : jne 0xa362c ; xor eax, eax ; ret
0x00000000000a36a8 : jne 0xa3689 ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x00000000000a37b8 : jne 0xa37cb ; lea rax, qword ptr [rip + 0xc84f] ; ret
0x00000000000a3813 : jne 0xa380b ; ret
0x00000000000a49fb : jne 0xa49b6 ; nop dword ptr [rax] ; ret
0x00000000000a4a3c : jne 0xa4a33 ; ret
0x00000000000afc3c : jne 0xafcb7 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000b0097 : jne 0xb0060 ; ret
0x00000000000b00c4 : jne 0xb00bb ; ret
0x00000000000b19ae : jne 0xb1948 ; jmp 0xb1956
0x00000000000b4a09 : jne 0xb4a21 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000bd161 : jne 0xbd181 ; pop rbx ; ret
0x00000000000bd1ff : jne 0xbd229 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bd912 : jne 0xbd8c3 ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000c2430 : jne 0xc23fe ; ret
0x00000000000c2477 : jne 0xc2402 ; mov eax, 0x7d00 ; ret
0x00000000000c253d : jne 0xc2573 ; ret
0x00000000000c5fe7 : jne 0xc5fc8 ; ret
0x00000000000c6011 : jne 0xc5ff5 ; ret
0x00000000000c6020 : jne 0xc600f ; mov eax, 1 ; ret
0x00000000000c6106 : jne 0xc60af ; mov eax, 1 ; ret
0x00000000000c60f6 : jne 0xc60de ; mov eax, 1 ; ret
0x00000000000d085b : jne 0xd0848 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d0bb3 : jne 0xd0bae ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000d1b78 : jne 0xd1b43 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d1d8d : jne 0xd1cd9 ; pop rbx ; ret
0x00000000000d1d8c : jne 0xd1cda ; pop rbx ; ret
0x00000000000d1d75 : jne 0xd1d01 ; pop rbx ; ret
0x00000000000d1d42 : jne 0xd1d41 ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd1cdb ; pop rbx ; ret
0x00000000000d2745 : jne 0xd26f3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e42d1 : jne 0xe427b ; mov edx, dword ptr [r12 + 4] ; jmp 0xe42a4
0x00000000000ebd5f : jne 0xebde9 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f3c4e : jne 0xf4658 ; ret
0x00000000000f56d8 : jne 0xf56c0 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000f7c54 : jne 0xf7c0e ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7c8c
0x00000000000f7d25 : jne 0xf7cdf ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7d5e
0x00000000000f8277 : jne 0xf826e ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f92d1 : jne 0xf92a5 ; xor eax, eax ; pop rbx ; ret
0x00000000000f9492 : jne 0xf9465 ; xor eax, eax ; pop rbx ; ret
0x0000000000101fd6 : jno 0x101fde ; cmovne eax, edx ; ret
0x0000000000101fd5 : jno 0x101fdf ; cmovne eax, edx ; ret
0x0000000000101fd6 : jno 0x101fe0 ; cmovne eax, edx ; ret
0x0000000000101fd5 : jno 0x101fe1 ; cmovne eax, edx ; ret
0x000000000011ee2b : jno 0x11ee7a ; sub al, byte ptr [rax] ; pop rbx ; ret
0x0000000000160aee : jno 0x160afd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000187505 : jno 0x187509 ; call qword ptr [rax + 0x10fffc72]
0x0000000000187545 : jno 0x187545 ; call qword ptr [rax]
0x000000000018d0c1 : jno 0x18d0be ; jmp rsp
0x00000000001931ce : jno 0x1931dc ; ret
0x00000000001931ce : jno 0x1931e3 ; ret
0x0000000000194b1d : jno 0x194b0e ; jmp qword ptr [rdx]
0x0000000000194b65 : jno 0x194b56 ; jmp qword ptr [rdx]
0x0000000000194bad : jno 0x194b9e ; jmp qword ptr [rdx]
0x0000000000194c1d : jno 0x194c0e ; jmp qword ptr [rdx]
0x0000000000194c65 : jno 0x194c56 ; jmp qword ptr [rdx]
0x000000000019873c : jno 0x1986fd ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a532d : jno 0x1a5336 ; add al, dl ; jp 0x1a532d ; jmp qword ptr [rcx]
0x00000000001a535d : jno 0x1a5366 ; add byte ptr [rax], al ; jnp 0x1a535d ; jmp qword ptr [rcx]
0x00000000001a538d : jno 0x1a5396 ; add byte ptr [rax], dh ; jnp 0x1a538d ; jmp qword ptr [rcx]
0x00000000001a9a91 : jno 0x1a9a8a ; call rsp
0x00000000001af64c : jno 0x1af641 ; cmc ; jmp qword ptr [rdx]
0x00000000001b52bd : jno 0x1b52c7 ; add byte ptr [rax + 3], ah ; sti ; jmp qword ptr [rdx]
0x00000000000021c7 : jno 0x2214 ; ret 0x1dd4
0x0000000000038a64 : jno 0x38ab6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000000390f : jno 0x3959 ; xchg eax, ebx ; and cl, ah ; ret
0x000000000005dfbd : jno 0x5e021 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000782b1 : jno 0x782bf ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000007d75d : jno 0x7d76f ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a1d32 : jno 0xa1d40 ; jne 0xa1d41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000a1d37 : jno 0xa1d44 ; ret
0x00000000000afc3d : jno 0xafca1 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000b624c : jno 0xb61d9 ; ret 0xe283
0x00000000000b6326 : jno 0xb62b3 ; ret 0xe283
0x00000000000b63fe : jno 0xb638b ; ret 0xe283
0x00000000000b64de : jno 0xb646b ; ret 0xe283
0x00000000000b65fe : jno 0xb658b ; ret 0xe283
0x00000000000b66df : jno 0xb666c ; ret 0xe283
0x00000000000b6776 : jno 0xb6703 ; ret 0xe283
0x00000000000b75d9 : jno 0xb7566 ; ret 0xe283
0x00000000000b7dd9 : jno 0xb7d66 ; ret 0xe283
0x00000000000b7eda : jno 0xb7e67 ; ret 0xe283
0x00000000000b8003 : jno 0xb7f90 ; ret 0xe283
0x00000000001116ee : jnp 0x111740 ; test rdi, rdi ; jne 0x1116e8 ; pop rbx ; ret
0x0000000000127663 : jnp 0x1276cf ; call rax
0x0000000000128093 : jnp 0x1280ef ; call rax
0x00000000001747e5 : jnp 0x1747a2 ; ret
0x0000000000179364 : jnp 0x179388 ; hlt ; jmp rsi
0x0000000000187311 : jnp 0x187311 ; call rdx
0x000000000018730d : jnp 0x187311 ; ljmp ptr [rbx + rdi*2] ; cld ; call rdx
0x000000000018734d : jnp 0x18734d ; jmp qword ptr [rdx]
0x00000000001874cd : jnp 0x1874d1 ; push rax ; pop rbp ; cld ; call qword ptr [rax]
0x0000000000187a89 : jnp 0x187a76 ; call rsp
0x000000000019a69d : jnp 0x19a69d ; jmp qword ptr [rdx]
0x000000000019a69c : jnp 0x19a69e ; jmp qword ptr [rdx]
0x00000000001a2ab5 : jnp 0x1a2aab ; jmp qword ptr [rdx]
0x00000000001a2afd : jnp 0x1a2af3 ; jmp qword ptr [rdx]
0x00000000001a5361 : jnp 0x1a5359 ; jmp qword ptr [rcx]
0x00000000001a5391 : jnp 0x1a5389 ; jmp qword ptr [rcx]
0x00000000001a53c1 : jnp 0x1a53b9 ; jmp qword ptr [rcx]
0x00000000001a53f1 : jnp 0x1a53e9 ; jmp qword ptr [rcx]
0x00000000001a5cd5 : jnp 0x1a5cde ; add al, ch ; mov ah, 0xf4 ; call qword ptr [rsi]
0x00000000001a5ced : jnp 0x1a5cf6 ; add al, dh ; mov ah, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a5cec : jnp 0x1a5cf7 ; add al, dh ; mov ah, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a5d7d : jnp 0x1a5d86 ; add byte ptr [rax - 0x49], dh ; hlt ; call rdi
0x00000000001abe5c : jnp 0x1abeca ; cmc ; jmp qword ptr [rdx]
0x00000000001ace65 : jnp 0x1ace5e ; jmp qword ptr [rdx]
0x00000000001b5d65 : jnp 0x1b5d6f ; add al, bl ; fdivrp st(7) ; call rdi
0x000000000002376b : jnp 0x23787 ; call rax
0x000000000003c81b : jnp 0x3c82e ; mov qword ptr [rax + 0x60], rdx ; call qword ptr [rbx]
0x00000000000c42eb : jnp 0xc42ff ; xchg eax, esp ; ret 0xb60f
0x00000000000c451b : jnp 0xc452f ; xchg eax, esp ; ret 0xb60f
0x00000000000c4787 : jnp 0xc479b ; xchg eax, esp ; ret 0xb60f
0x00000000000f9cae : jnp 0xf9ce3 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000103db7 : jns 0x103d8f ; mov eax, edx ; sub eax, r9d ; ret
0x0000000000103f39 : jns 0x103f76 ; mov eax, r8d ; sub eax, r9d ; ret
0x00000000001273c3 : jns 0x12735d ; lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000001275dd : jns 0x1275e9 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001738ee : jns 0x173884 ; ret 0xf869
0x00000000001738ed : jns 0x173885 ; ret 0xf869
0x0000000000175cfe : jns 0x175d55 ; jmp 0x175c96
0x000000000018a919 : jns 0x18a910 ; call rsp
0x00000000001958dd : jns 0x1958ce ; jmp qword ptr [rdx]
0x000000000019961c : jns 0x1995fc ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001997cc : jns 0x1997ad ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019ae7c : jns 0x19aeb8 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a5b2d : jns 0x1a5b36 ; add al, dl ; mov al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a5b45 : jns 0x1a5b4e ; add al, ch ; mov al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a5b5d : jns 0x1a5b66 ; add byte ptr [rax], al ; mov cl, 0xf4 ; jmp qword ptr [rcx]
0x0000000000001b29 : jns 0x1b34 ; ret
0x0000000000021bdd : jns 0x21ac0 ; jmp 0x21bae
0x0000000000002bbf : jns 0x2b8d ; clc ; ret
0x0000000000003237 : jns 0x3212 ; ret 0x5a51
0x0000000000036dce : jns 0x36de9 ; add rsp, 0xd0 ; ret
0x00000000000038ab : jns 0x38fe ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000086086 : jns 0x860d7 ; mov esi, ebx ; mov rdi, r13 ; call rdx
0x000000000008cc43 : jns 0x8cc49 ; add byte ptr [rax], al ; ret
0x000000000008ef33 : jns 0x8ef39 ; add byte ptr [rax], al ; ret
0x00000000000a4342 : jns 0xa437a ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ae4a3 : jns 0xae4c2 ; clc ; inc dword ptr [rbp + 0x79c789c0] ; ret
0x00000000000c6439 : jns 0xc6443 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000e4bbf : jns 0xe4bbf ; add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x00000000000f2224 : jns 0xf2232 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f5273 : jns 0xf521e ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000a0cf6 : jns 0xffffffffed3a105c ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a0d58 : jns 0xffffffffed3a14be ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0d78 : jns 0xffffffffed3a15de ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000012426e : jo 0x1242d4 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124b4b : jo 0x124bb1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000129267 : jo 0x1291f9 ; push rax ; adc dh, dh ; ret 0x7401
0x0000000000173130 : jo 0x173176 ; in eax, dx ; jmp rax
0x0000000000174964 : jo 0x1749de ; mov ebp, 0xfb67d10d ; ret
0x00000000001771b4 : jo 0x17722e ; out dx, al ; call qword ptr [rax]
0x00000000001781ac : jo 0x178224 ; int1 ; dec eax ; cdq ; int1 ; jmp rax
0x00000000001782b4 : jo 0x17824f ; cld ; jmp rax
0x0000000000178444 : jo 0x1784a2 ; jmp qword ptr [rax - 0x2f000dab]
0x0000000000178630 : jo 0x1786a4 ; jmp qword ptr [rax - 0x2f000d95]
0x0000000000186210 : jo 0x186229 ; sti ; inc dword ptr [rax + 0x11] ; sti ; call qword ptr [rax]
0x0000000000186224 : jo 0x186241 ; sti ; inc dword ptr [rax + 0x15] ; sti ; call qword ptr [rax]
0x000000000018628c : jo 0x1862ae ; sti ; jmp rax
0x000000000018631d : jo 0x18631c ; jmp qword ptr [rax]
0x0000000000186388 : jo 0x186325 ; sti ; jmp qword ptr [rax]
0x0000000000186324 : jo 0x1863a0 ; sti ; inc eax ; je 0x18632d ; call qword ptr [rax]
0x00000000001864c4 : jo 0x186475 ; std ; call qword ptr [rax]
0x0000000000186784 : jo 0x186762 ; sti ; inc eax ; salc ; sti ; call qword ptr [rax]
0x0000000000186964 : jo 0x186960 ; sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x0000000000186ab4 : jo 0x186ae9 ; cld ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000186adc : jo 0x186afd ; cld ; inc eax ; sbb esp, edi ; call qword ptr [rax]
0x0000000000186b30 : jo 0x186b58 ; cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x00000000001872c0 : jo 0x187342 ; cld ; jmp rax
0x0000000000187541 : jo 0x187545 ; call qword ptr [rax + 0x10fffc71]
0x00000000001874c4 : jo 0x187545 ; cld ; jmp rax
0x0000000000187750 : jo 0x187700 ; cld ; jmp rax
0x00000000001877c8 : jo 0x18776f ; cld ; jmp rax
0x00000000001879cc : jo 0x187972 ; cld ; call rax
0x000000000018da41 : jo 0x18da3f ; jmp rsp
0x000000000019a4d0 : jo 0x19a500 ; out dx, al ; call qword ptr [rdx]
0x000000000019bdc9 : jo 0x19bdbb ; call qword ptr [rsi]
0x000000000019ca70 : jo 0x19ca30 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019dc10 : jo 0x19db95 ; cld ; jmp qword ptr [rax]
0x00000000001a51b5 : jo 0x1a51be ; add byte ptr [rax + 0x76], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a5d80 : jo 0x1a5d3c ; hlt ; call rdi
0x00000000001a5f80 : jo 0x1a5f41 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6420 : jo 0x1a63f1 ; hlt ; jmp qword ptr [rcx]
0x00000000001a68d0 : jo 0x1a68b1 ; hlt ; call qword ptr [rax]
0x00000000001a7cb0 : jo 0x1a7ce4 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8040 : jo 0x1a807a ; cmc ; jmp qword ptr [rcx]
0x00000000001a8120 : jo 0x1a815d ; cmc ; jmp qword ptr [rax]
0x00000000001a9a90 : jo 0x1a9b06 ; cmc ; call rsp
0x00000000001aa660 : jo 0x1aa63a ; cmc ; jmp qword ptr [rsi]
0x00000000001ab940 : jo 0x1ab92e ; cmc ; call qword ptr [rax]
0x00000000001ac130 : jo 0x1ac12d ; cmc ; call qword ptr [rcx]
0x00000000001b51d5 : jo 0x1b51df ; add byte ptr [rax], bl ; add al, 0xfb ; jmp qword ptr [rdx]
0x0000000000027940 : jo 0x2798f ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002a88e : jo 0x2a8dd ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002b9de : jo 0x2ba2d ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x00000000000300d3 : jo 0x30124 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000300d2 : jo 0x30125 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000462e8 : jo 0x462f3 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007140a : jo 0x71397 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000071409 : jo 0x71398 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000007411a : jo 0x74132 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000077bac : jo 0x77c10 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000794d8 : jo 0x794c5 ; ret 0x721
0x00000000000794e1 : jo 0x794cd ; ret 0x721
0x0000000000079ae4 : jo 0x79b35 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000084809 : jo 0x8486b ; pop rbp ; pop r12 ; ret
0x00000000000848c8 : jo 0x84902 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c3cd5 : jo 0xc3cf7 ; jmp 0xc3729
0x00000000000d1f3e : jo 0xd1f64 ; xor eax, eax ; ret
0x00000000000d8dc4 : jo 0xd8e15 ; mov ebx, eax ; mov edx, r8d ; jmp 0xd8dda
0x00000000000eb587 : jo 0xeb581 ; ret 0x4840
0x00000000000eb5b4 : jo 0xeb613 ; ret
0x00000000000ebb9e : jo 0xebbfd ; ret
0x00000000000f09c6 : jo 0xf09eb ; ret
0x00000000001063f5 : jp 0x10644c ; mov rsi, rdx ; call rax
0x0000000000121b6d : jp 0x121bcd ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001276f2 : jp 0x1276fe ; ret
0x000000000012770a : jp 0x127716 ; ret
0x0000000000127f52 : jp 0x127f5e ; ret
0x0000000000127f6a : jp 0x127f76 ; ret
0x0000000000127f9a : jp 0x127fa6 ; ret
0x0000000000187451 : jp 0x187455 ; jmp qword ptr [rax + 0x20fffc82]
0x0000000000187491 : jp 0x187495 ; call qword ptr [rax + 0x10fffc82]
0x000000000018b3b1 : jp 0x18b3ab ; jmp rsp
0x000000000018bf79 : jp 0x18bf74 ; jmp rsp
0x0000000000193f04 : jp 0x193f88 ; in al, dx ; jmp qword ptr [rdx]
0x0000000000195925 : jp 0x195916 ; jmp qword ptr [rdx]
0x0000000000195924 : jp 0x195917 ; jmp qword ptr [rdx]
0x000000000019596d : jp 0x19595e ; jmp qword ptr [rdx]
0x00000000001a5331 : jp 0x1a5329 ; jmp qword ptr [rcx]
0x00000000001a5c35 : jp 0x1a5c3e ; add al, ch ; mov bl, 0xf4 ; jmp qword ptr [rcx]
0x00000000001acb75 : jp 0x1acb6e ; jmp qword ptr [rdx]
0x00000000001acbbd : jp 0x1acbb6 ; jmp qword ptr [rdx]
0x00000000001acc1d : jp 0x1acc16 ; jmp qword ptr [rdx]
0x00000000001acc65 : jp 0x1acc5e ; jmp qword ptr [rdx]
0x00000000001accad : jp 0x1acca6 ; jmp qword ptr [rdx]
0x00000000001accf5 : jp 0x1accee ; jmp qword ptr [rdx]
0x00000000001acd3d : jp 0x1acd36 ; jmp qword ptr [rdx]
0x00000000001acd85 : jp 0x1acd7e ; jmp qword ptr [rdx]
0x00000000001acd84 : jp 0x1acd7f ; jmp qword ptr [rdx]
0x00000000001ace1d : jp 0x1ace16 ; jmp qword ptr [rdx]
0x00000000001b8918 : jp 0x1b8920 ; add byte ptr [rax], al ; ret 6
0x0000000000002545 : jp 0x2529 ; jmp qword ptr [rbx]
0x0000000000002544 : jp 0x252a ; jmp qword ptr [rbx]
0x000000000000390e : jp 0x3988 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000070364 : jp 0x703c9 ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x00000000000847b0 : jp 0x847ba ; test rdx, rdi ; je 0x847c9 ; pop rbx ; ret
0x000000000008c605 : jp 0x8c5ff ; ret 0x7401
0x00000000001adcee : jp 0xd37dcf2 ; mov r13, r14 ; jmp qword ptr [rdx]
0x00000000001080c3 : jrcxz 0x108088 ; cmp r11d, 0xa ; je 0x1080d4 ; ret
0x000000000014c48a : jrcxz 0x14c485 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c489 : jrcxz 0x14c486 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014ef5a : jrcxz 0x14ef55 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014ef59 : jrcxz 0x14ef56 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151a7a : jrcxz 0x151a75 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151a79 : jrcxz 0x151a76 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173745 : jrcxz 0x17379f ; ret
0x00000000001866a1 : jrcxz 0x1866a0 ; call qword ptr [rax]
0x00000000001866c1 : jrcxz 0x1866c0 ; call rax
0x0000000000189ad8 : jrcxz 0x189aab ; out dx, eax ; call rsp
0x000000000019377d : jrcxz 0x19376c ; jmp qword ptr [rdx]
0x00000000001937c5 : jrcxz 0x1937b4 ; jmp qword ptr [rdx]
0x00000000001a1969 : jrcxz 0x1a195e ; call rsp
0x00000000001a8fa5 : jrcxz 0x1a8f9d ; jmp qword ptr [rdx]
0x00000000001ab359 : jrcxz 0x1ab352 ; call qword ptr [rcx]
0x00000000001ac4c5 : jrcxz 0x1ac4ce ; add byte ptr [rax - 3], bh ; cmc ; call qword ptr [rax]
0x00000000000433f0 : jrcxz 0x433f6 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000847cf : jrcxz 0x847d5 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x0000000000096a5c : jrcxz 0x96a53 ; ret
0x00000000000d085c : jrcxz 0xd08ad ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5009 : jrcxz 0xf4fb6 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000103d92 : js 0x103d14 ; sub eax, ecx ; ret
0x0000000000103d4a : js 0x103da9 ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x000000000010799b : js 0x1079ad ; jne 0x107998 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000010c564 : js 0x10c579 ; mov eax, edi ; and eax, 0xffffff ; ret
0x000000000010c5e4 : js 0x10c5f7 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000135573 : js 0x135588 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000179384 : js 0x17931e ; hlt ; call rax
0x000000000018ca19 : js 0x18ca15 ; call rsp
0x000000000018cdc5 : js 0x18cdcf ; add byte ptr [rsp + rdi*8 - 8], dl ; jmp rsp
0x00000000001931d5 : js 0x1931e3 ; ret
0x000000000019534c : js 0x1953c5 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019584d : js 0x19583e ; jmp qword ptr [rdx]
0x000000000019584c : js 0x19583f ; jmp qword ptr [rdx]
0x0000000000195895 : js 0x195886 ; jmp qword ptr [rdx]
0x000000000019a508 : js 0x19a538 ; out dx, al ; call qword ptr [rdx]
0x000000000019afe4 : js 0x19b023 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019bd68 : js 0x19bdda ; out dx, al ; call qword ptr [rdi]
0x000000000019ce78 : js 0x19ce69 ; out dx, al ; call qword ptr [rax]
0x000000000019d148 : js 0x19d148 ; out dx, al ; jmp qword ptr [rsi]
0x000000000019ffe8 : js 0x1a002f ; int1 ; jmp qword ptr [rcx]
0x00000000001a2158 : js 0x1a215b ; int1 ; jmp qword ptr [rcx]
0x00000000001a3018 : js 0x1a3008 ; jmp rdx
0x00000000001a5048 : js 0x1a50bb ; hlt ; jmp qword ptr [rcx]
0x00000000001a7ae8 : js 0x1a7b1a ; cmc ; jmp qword ptr [rcx]
0x00000000001a82c8 : js 0x1a8308 ; cmc ; jmp qword ptr [rcx]
0x00000000001aa888 : js 0x1aa863 ; cmc ; jmp qword ptr [rsi]
0x00000000001ab44c : js 0x1ab4ac ; cmc ; jmp qword ptr [rdx]
0x00000000001ab928 : js 0x1ab916 ; cmc ; call qword ptr [rax]
0x00000000001ac4c8 : js 0x1ac4ca ; cmc ; call qword ptr [rax]
0x00000000001addd4 : js 0x1add62 ; cmc ; jmp qword ptr [rdx]
0x00000000001af1ec : js 0x1af1d2 ; cmc ; jmp qword ptr [rdx]
0x000000000001b168 : js 0x1b1d1 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x3b
0x00000000001b5a55 : js 0x1b5a5f ; add byte ptr [rax], bh ; fcomi st(7) ; jmp qword ptr [rcx]
0x0000000000023420 : js 0x23440 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000028142 : js 0x28191 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x0000000000002f61 : js 0x2f17 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000002fd31 : js 0x2fcbd ; loopne 0x2fd44 ; movzx eax, ax ; ret
0x000000000002fd71 : js 0x2fcfd ; loopne 0x2fd7e ; movzx eax, ax ; ret
0x000000000002fe11 : js 0x2fd9d ; loopne 0x2fe20 ; movzx eax, ax ; ret
0x000000000002fef1 : js 0x2fe7a ; loopne 0x2fefa ; ret
0x000000000002ff6a : js 0x2fef3 ; loopne 0x2ff73 ; ret
0x000000000002ff7a : js 0x2ff06 ; loopne 0x2ff8d ; movzx eax, ax ; ret
0x000000000002ffba : js 0x2ff46 ; loopne 0x2ffc7 ; movzx eax, ax ; ret
0x000000000003005a : js 0x2ffe6 ; loopne 0x30069 ; movzx eax, ax ; ret
0x00000000000300e3 : js 0x30134 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000300e2 : js 0x30135 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000032df8 : js 0x32e07 ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x9be9
0x000000000003d8d1 : js 0x3d91e ; cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x3d899 ; jmp 0x3d8a6
0x000000000007140d : js 0x7141b ; ret
0x0000000000074e10 : js 0x74e4b ; add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000075389 : js 0x753ce ; jmp 0x75353
0x0000000000083ae8 : js 0x83af3 ; ret
0x0000000000091644 : js 0x916b2 ; add byte ptr [rax], al ; ret
0x00000000000e0df1 : js 0xe0e2e ; ret 0x1372
0x00000000000e448c : js 0xe44de ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000e4de9 : js 0xe4e3b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f09f5 : js 0xf0a09 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000f1168 : js 0xf1199 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3102 : js 0xf3115 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000f5d6c : js 0xf5d83 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000fd6b0 : js 0xfd63c ; loopne 0xfd6c3 ; movzx eax, ax ; ret
0x00000000000fd7f0 : js 0xfd779 ; loopne 0xfd7f9 ; ret
0x00000000000fd890 : js 0xfd81c ; loopne 0xfd89d ; movzx eax, ax ; ret
0x00000000000fdba0 : js 0xfdb2c ; loopne 0xfdbaf ; movzx eax, ax ; ret
0x00000000000fdfc9 : js 0xfdf55 ; loopne 0xfdfdc ; movzx eax, ax ; ret
0x00000000000fe0e9 : js 0xfe072 ; loopne 0xfe0f2 ; ret
0x00000000000fe169 : js 0xfe0f5 ; loopne 0xfe176 ; movzx eax, ax ; ret
0x00000000000fe429 : js 0xfe3b5 ; loopne 0xfe438 ; movzx eax, ax ; ret
0x00000000000a0c98 : js 0xffffffffed3a0efe ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0cc6 : js 0xffffffffed3a112c ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0d18 : js 0xffffffffed3a157e ; mov byte ptr [rdi + 9], ch ; ret
0x000000000008b85d : lahf ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000001a811d : lahf ; add dword ptr [rax], eax ; jo 0x1a8160 ; cmc ; jmp qword ptr [rax]
0x000000000004c9b2 : lahf ; call qword ptr [rdx]
0x0000000000175e23 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000013db2d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000019dee9 : lahf ; out dx, eax ; call qword ptr [rdi]
0x00000000000f54b2 : lahf ; ret
0x00000000000f54b9 : lahf ; ret 0x3845
0x00000000000d0c98 : lahf ; ret 0x82eb
0x000000000017367d : lahf ; ret 0x871e
0x00000000000577fa : lahf ; ret 0x9529
0x00000000000d4eb8 : lahf ; ret 0xee9
0x000000000013e1bd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017718f : lcall ptr [rax + 0x10ffee74] ; jbe 0x17718d ; call qword ptr [rax]
0x0000000000172aa7 : lcall ptr [rax + 0x28] ; in al, dx ; jmp rcx
0x000000000017abe3 : lcall ptr [rax + 0xfffa90] ; nop ; cli ; call qword ptr [rax]
0x00000000001867cf : lcall ptr [rax + 4] ; cld ; jmp qword ptr [rax]
0x000000000018d073 : lcall ptr [rax + rdx*4 + 2] ; add byte ptr [rdx + rbp*2], ah ; stc ; jmp rsp
0x0000000000178f83 : lcall ptr [rax - 0x27] ; jmp qword ptr [rsi]
0x000000000017a083 : lcall ptr [rax - 0x3f000a59] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rax
0x00000000001797db : lcall ptr [rax - 0x67000b65] ; wait ; hlt ; call rsi
0x0000000000179377 : lcall ptr [rax - 0x67000b6b] ; xchg eax, ebp ; hlt ; call rax
0x000000000018c92b : lcall ptr [rbp + rdx*2 + 0x6a980002] ; clc ; jmp rsp
0x000000000018d60b : lcall ptr [rbp + rsi*4 + 0x24100002] ; cli ; jmp rsp
0x000000000018cc23 : lcall ptr [rbp*2 - 0x594bfffe] ; clc ; jmp rsp
0x0000000000188593 : lcall ptr [rbx + 0x514d0000] ; jmp 0x1885a3
0x0000000000172aa3 : lcall ptr [rbx + 0x58ffec27] ; sub ah, ch ; jmp rcx
0x00000000000a1777 : lcall ptr [rbx + 0x5d] ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x0000000000082cd1 : lcall ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000075993 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003bf26 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000ad0c4 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x000000000002c2ab : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000076c48 : lcall ptr [rbx + 0x5d] ; ret
0x00000000000d2308 : lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000018730b : lcall ptr [rbx + rdi*2 + 0x7b2cfffc] ; cld ; call rdx
0x000000000006da24 : lcall ptr [rbx - 0x77] ; call 0xffffffffc3631b90
0x0000000000188a2b : lcall ptr [rcx + rax*8 + 0x57d40000] ; in eax, dx ; call rsp
0x0000000000189b63 : lcall ptr [rcx + rsi - 0x2f15ffff] ; out dx, eax ; jmp rsp
0x0000000000177003 : lcall ptr [rcx + rsi*8] ; in eax, dx ; jmp rax
0x0000000000176fff : lcall ptr [rcx + rsi*8] ; in eax, dx ; lcall ptr [rcx + rsi*8] ; in eax, dx ; jmp rax
0x000000000018879b : lcall ptr [rdi + rbp*4 - 0x13d60000] ; jmp 0x1887ab
0x00000000001793cf : lcall ptr [rdi - 0x65] ; hlt ; call rsi
0x0000000000186f4b : lcall ptr [rdx + 0x2afffc55] ; push rbp ; cld ; call rax
0x000000000018d41b : lcall ptr [rdx + rbp*4 - 0x2b2efffe] ; stc ; jmp rsp
0x0000000000189c63 : lcall ptr [rdx + rdi - 0x2b66ffff] ; out dx, eax ; jmp rsp
0x000000000018d663 : lcall ptr [rdx + rdi*4 + 0x26440002] ; cli ; jmp rsp
0x000000000018952b : lcall ptr [rdx + rdx + 0x7fe0001] ; out dx, eax ; jmp rsp
0x000000000018c8db : lcall ptr [rdx + rdx*2 + 0x63820002] ; clc ; jmp rsp
0x00000000001ab0cc : lcall ptr [rdx - 0xb] ; jmp qword ptr [rdx]
0x000000000017915f : lcall ptr [rsi] ; stc ; call rsp
0x0000000000188fab : lcall ptr [rsp + rbp*8 - 0x64ec0000] ; out dx, al ; jmp rsp
0x0000000000189863 : lcall ptr [rsp + rbx + 0x4f820001] ; out dx, eax ; jmp rsp
0x0000000000188483 : lcall ptr [rsp + rbx*4 + 0x45e60000] ; jmp 0x188493
0x0000000000189463 : lcall ptr [rsp + rcx - 0x22cffff] ; out dx, al ; jmp rsp
0x000000000014cb16 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001aa6ec : lds r8d, ptr [rcx] ; add byte ptr [rax], al ; salc ; cmc ; jmp qword ptr [rsi]
0x000000000007510f : lea eax, dword ptr [r8 - 1] ; ret
0x00000000000b0063 : lea eax, dword ptr [rax + rax - 1] ; ret
0x000000000008bde4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008bdf4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000096f94 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008bdc4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000bcb32 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000075110 : lea eax, dword ptr [rax - 1] ; ret
0x00000000000494d6 : lea eax, dword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x494f6
0x000000000012164b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c632a : lea eax, dword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c622a : lea eax, dword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x0000000000117dde : lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000097a9a : lea eax, dword ptr [rbx - 1] ; pop rbx ; ret
0x00000000000a38a1 : lea eax, dword ptr [rbx - 4] ; pop rbx ; ret
0x00000000000a17ce : lea eax, dword ptr [rcx + 1] ; pop r12 ; ret
0x000000000008a89d : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000000a1434 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000009e55c : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000009e571 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000009e58f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000009e5af : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000009e5d2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000009e5f1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009e611 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000009e631 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000009e654 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000009e679 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000009e697 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000009e6b7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000009e6d3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000009e6f3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000009e713 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000009e733 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000009f583 : lea eax, dword ptr [rdi + 0x20] ; ret
0x000000000009f7e9 : lea eax, dword ptr [rdi + 0x40] ; ret
0x000000000009e4ad : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000009e4cd : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000009e4ef : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000009e50f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000009e52f : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000009e549 : lea eax, dword ptr [rdi + 0xf] ; ret
0x0000000000096934 : lea eax, dword ptr [rdi + 1] ; ret
0x0000000000096948 : lea eax, dword ptr [rdi + 2] ; ret
0x0000000000096953 : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000096967 : lea eax, dword ptr [rdi + 4] ; ret
0x0000000000096977 : lea eax, dword ptr [rdi + 5] ; ret
0x0000000000096987 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e45b : lea eax, dword ptr [rdi + 6] ; ret
0x0000000000096927 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000009e47a : lea eax, dword ptr [rdi + 8] ; ret
0x00000000001176c0 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000009e48f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000008be19 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008be29 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008bd13 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000086eaa : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000939f7 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000013cd04 : lea eax, dword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x0000000000118110 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000008a799 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000a337e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000a34e1 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000a3501 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000a34f1 : lea eax, dword ptr [rdi - 8] ; ret
0x000000000009e3e3 : lea eax, dword ptr [rdi] ; ret
0x000000000015c8fd : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000015c91d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000015c93f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000015c95f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000015c97f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000015c80f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000015c837 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000015c84d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000015c865 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000015c87b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000015c88d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000015c8ab : lea eax, dword ptr [rdx + 6] ; ret
0x000000000015c7b7 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000015c8bd : lea eax, dword ptr [rdx + 8] ; ret
0x000000000015c8dd : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000117ad0 : lea eax, dword ptr [rdx + rax + 2] ; cmp rcx, rax ; sbb eax, eax ; ret
0x00000000000750fe : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000a1b1c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000002f955 : lea eax, dword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000083471 : lea eax, dword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x00000000000f64f7 : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000015c825 : lea eax, dword ptr [rdx] ; ret
0x0000000000088dc5 : lea eax, dword ptr [rip + 0x10f35] ; ret
0x0000000000086b45 : lea eax, dword ptr [rip + 0x11595] ; ret
0x0000000000022031 : lea eax, dword ptr [rip + 0x15a154] ; ret
0x0000000000022041 : lea eax, dword ptr [rip + 0x15c12b] ; ret
0x000000000008be6b : lea eax, dword ptr [rip + 0x1f] ; ret
0x000000000011ee29 : lea eax, dword ptr [rip + 0x2a4871] ; pop rbx ; ret
0x000000000011edf1 : lea eax, dword ptr [rip + 0x2a48a9] ; pop rbx ; ret
0x000000000011ed32 : lea eax, dword ptr [rip + 0x2a4968] ; pop rbx ; ret
0x00000000000f9500 : lea eax, dword ptr [rip + 0x2c82b2] ; ret
0x00000000000f9340 : lea eax, dword ptr [rip + 0x2c8472] ; ret
0x000000000005d513 : lea eax, dword ptr [rip + 0x363417] ; pop rbx ; pop rbp ; ret
0x000000000002246b : lea eax, dword ptr [rip + 0x3a178f] ; ret
0x00000000001089c5 : lea eax, dword ptr [rip + 0x41d15] ; ret
0x0000000000108a65 : lea eax, dword ptr [rip + 0x44745] ; ret
0x0000000000091642 : lea eax, dword ptr [rip + 0x6878] ; ret
0x000000000008cc41 : lea eax, dword ptr [rip + 0x79] ; ret
0x0000000000091656 : lea eax, dword ptr [rip + 0xb1174] ; ret
0x000000000008ad52 : lea eax, dword ptr [rip + 0xb1f68] ; ret
0x000000000008a9c2 : lea eax, dword ptr [rip + 0xb21d8] ; ret
0x0000000000088532 : lea eax, dword ptr [rip + 0xb4528] ; ret
0x00000000000a2c13 : lea eax, dword ptr [rip + 0xbc9c7] ; ret
0x00000000000a37cf : lea eax, dword ptr [rip + 0xbdacb] ; ret
0x00000000000a37d7 : lea eax, dword ptr [rip + 0xc0383] ; ret
0x000000000008c5e5 : lea eax, dword ptr [rip + 0xc0bd5] ; ret
0x00000000000a37bb : lea eax, dword ptr [rip + 0xc84f] ; ret
0x000000000008a6a5 : lea eax, dword ptr [rip + 0xcdf55] ; ret
0x000000000008cad5 : lea eax, dword ptr [rip + 0xce6a5] ; ret
0x0000000000088425 : lea eax, dword ptr [rip + 0xcea25] ; ret
0x000000000008cbf5 : lea eax, dword ptr [rip + 0xcfd95] ; ret
0x000000000008be7f : lea eax, dword ptr [rip + 0xd3ddb] ; ret
0x00000000000a2c0b : lea eax, dword ptr [rip + 0xd48f] ; ret
0x000000000008be87 : lea eax, dword ptr [rip + 0xd6563] ; ret
0x0000000000086d32 : lea eax, dword ptr [rip + 0xdb398] ; ret
0x0000000000086f95 : lea eax, dword ptr [rip + 5] ; ret
0x000000000008cca4 : lea eax, dword ptr [rip + 6] ; ret
0x0000000000088e11 : lea eax, dword ptr [rip + 9] ; ret
0x0000000000092b8b : lea eax, dword ptr [rip - 0x511] ; ret
0x00000000001aa2ac : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x00000000000c7635 : lea eax, dword ptr [rsi + rcx*8] ; jmp 0xc7601
0x00000000000b0711 : lea eax, dword ptr [rsi + rdx] ; add rsp, 0x18 ; ret
0x00000000000f78cb : lea eax, dword ptr [rsp - 1] ; jmp 0xf7899
0x0000000000069f4b : lea ebp, dword ptr [rax - 0x76000002] ; ret
0x0000000000050adc : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0x858b
0x000000000005132e : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0xa9e9
0x00000000001aaffc : lea ebx, dword ptr [rdx - 0xb] ; jmp qword ptr [rdx]
0x0000000000173f31 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000a3a6a : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000a3bb2 : lea ecx, dword ptr [rax + 4] ; call rbx
0x0000000000142850 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000009cc9e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000004bdfc : lea ecx, dword ptr [rbx + rdx] ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000061614 : lea ecx, dword ptr [rbx + rdx] ; add rdx, r14 ; call qword ptr [r11 + rax*8]
0x00000000000fdde5 : lea ecx, dword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000086700 : lea ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000015a106 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x15a659 ; ret
0x000000000015a404 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x15a659 ; ret
0x000000000015a424 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x15a659 ; ret
0x000000000015a444 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x15a659 ; ret
0x000000000015a466 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x15a659 ; ret
0x000000000015a486 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x15a659 ; ret
0x000000000015a4a6 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x15a659 ; ret
0x000000000015a2fc : lea ecx, dword ptr [rdx + 1] ; jne 0x15a659 ; ret
0x000000000015a31e : lea ecx, dword ptr [rdx + 2] ; jne 0x15a659 ; ret
0x000000000015a344 : lea ecx, dword ptr [rdx + 3] ; jne 0x15a659 ; ret
0x000000000015a35c : lea ecx, dword ptr [rdx + 4] ; jne 0x15a659 ; ret
0x0000000000074661 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000776d6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000015a382 : lea ecx, dword ptr [rdx + 5] ; jne 0x15a659 ; ret
0x000000000015a3a4 : lea ecx, dword ptr [rdx + 6] ; jne 0x15a659 ; ret
0x000000000015a3c2 : lea ecx, dword ptr [rdx + 7] ; jne 0x15a659 ; ret
0x000000000015a09e : lea ecx, dword ptr [rdx + 8] ; jne 0x15a659 ; ret
0x000000000015a3e4 : lea ecx, dword ptr [rdx + 9] ; jne 0x15a659 ; ret
0x0000000000038440 : lea ecx, dword ptr [rdx] ; jmp 0x38496
0x0000000000039bd0 : lea ecx, dword ptr [rdx] ; jmp 0x39c26
0x00000000000a3f6b : lea ecx, dword ptr [rsp + 0x28] ; call rbx
0x00000000000a3ff9 : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000012463e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x0000000000128092 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000127662 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000123a85 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x000000000008c676 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8c668 ; mov rax, rdi ; ret
0x00000000000916e6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x916d6 ; ret
0x000000000009d80d : lea edi, dword ptr [rdi + 0x10] ; jne 0x9dee9 ; ret
0x000000000009eef1 : lea edi, dword ptr [rdi + 0x10] ; jne 0x9f6f9 ; ret
0x000000000009d830 : lea edi, dword ptr [rdi + 0x11] ; jne 0x9dee9 ; ret
0x000000000009ef14 : lea edi, dword ptr [rdi + 0x11] ; jne 0x9f6f9 ; ret
0x000000000009d855 : lea edi, dword ptr [rdi + 0x12] ; jne 0x9dee9 ; ret
0x000000000009ef39 : lea edi, dword ptr [rdi + 0x12] ; jne 0x9f6f9 ; ret
0x000000000009d873 : lea edi, dword ptr [rdi + 0x13] ; jne 0x9dee9 ; ret
0x000000000009ef67 : lea edi, dword ptr [rdi + 0x13] ; jne 0x9f6f9 ; ret
0x000000000009d893 : lea edi, dword ptr [rdi + 0x14] ; jne 0x9dee9 ; ret
0x000000000009ef97 : lea edi, dword ptr [rdi + 0x14] ; jne 0x9f6f9 ; ret
0x000000000009d8b6 : lea edi, dword ptr [rdi + 0x15] ; jne 0x9dee9 ; ret
0x000000000009efca : lea edi, dword ptr [rdi + 0x15] ; jne 0x9f6f9 ; ret
0x000000000009d8d5 : lea edi, dword ptr [rdi + 0x16] ; jne 0x9dee9 ; ret
0x000000000009eff9 : lea edi, dword ptr [rdi + 0x16] ; jne 0x9f6f9 ; ret
0x000000000009d8f5 : lea edi, dword ptr [rdi + 0x17] ; jne 0x9dee9 ; ret
0x000000000009f029 : lea edi, dword ptr [rdi + 0x17] ; jne 0x9f6f9 ; ret
0x000000000009d915 : lea edi, dword ptr [rdi + 0x18] ; jne 0x9dee9 ; ret
0x000000000009f059 : lea edi, dword ptr [rdi + 0x18] ; jne 0x9f6f9 ; ret
0x000000000009d938 : lea edi, dword ptr [rdi + 0x19] ; jne 0x9dee9 ; ret
0x000000000009f08c : lea edi, dword ptr [rdi + 0x19] ; jne 0x9f6f9 ; ret
0x000000000009d96d : lea edi, dword ptr [rdi + 0x1a] ; jne 0x9dee9 ; ret
0x000000000009f0c1 : lea edi, dword ptr [rdi + 0x1a] ; jne 0x9f6f9 ; ret
0x000000000009d99b : lea edi, dword ptr [rdi + 0x1b] ; jne 0x9dee9 ; ret
0x000000000009f0ef : lea edi, dword ptr [rdi + 0x1b] ; jne 0x9f6f9 ; ret
0x000000000009d9cb : lea edi, dword ptr [rdi + 0x1c] ; jne 0x9dee9 ; ret
0x000000000009f11f : lea edi, dword ptr [rdi + 0x1c] ; jne 0x9f6f9 ; ret
0x000000000009d9f7 : lea edi, dword ptr [rdi + 0x1d] ; jne 0x9dee9 ; ret
0x000000000009f14b : lea edi, dword ptr [rdi + 0x1d] ; jne 0x9f6f9 ; ret
0x000000000009da27 : lea edi, dword ptr [rdi + 0x1e] ; jne 0x9dee9 ; ret
0x000000000009f17b : lea edi, dword ptr [rdi + 0x1e] ; jne 0x9f6f9 ; ret
0x000000000009da57 : lea edi, dword ptr [rdi + 0x1f] ; jne 0x9dee9 ; ret
0x000000000009f1ab : lea edi, dword ptr [rdi + 0x1f] ; jne 0x9f6f9 ; ret
0x000000000009da87 : lea edi, dword ptr [rdi + 0x20] ; jne 0x9dee9 ; ret
0x000000000009f1db : lea edi, dword ptr [rdi + 0x20] ; jne 0x9f6f9 ; ret
0x000000000009d753 : lea edi, dword ptr [rdi + 0xa] ; jne 0x9dee9 ; ret
0x000000000009edf7 : lea edi, dword ptr [rdi + 0xa] ; jne 0x9f6f9 ; ret
0x000000000009d771 : lea edi, dword ptr [rdi + 0xb] ; jne 0x9dee9 ; ret
0x000000000009ee25 : lea edi, dword ptr [rdi + 0xb] ; jne 0x9f6f9 ; ret
0x000000000009d791 : lea edi, dword ptr [rdi + 0xc] ; jne 0x9dee9 ; ret
0x000000000009ee45 : lea edi, dword ptr [rdi + 0xc] ; jne 0x9f6f9 ; ret
0x000000000009d7b3 : lea edi, dword ptr [rdi + 0xd] ; jne 0x9dee9 ; ret
0x000000000009ee67 : lea edi, dword ptr [rdi + 0xd] ; jne 0x9f6f9 ; ret
0x000000000009d7d3 : lea edi, dword ptr [rdi + 0xe] ; jne 0x9dee9 ; ret
0x000000000009ee97 : lea edi, dword ptr [rdi + 0xe] ; jne 0x9f6f9 ; ret
0x000000000009d7f3 : lea edi, dword ptr [rdi + 0xf] ; jne 0x9dee9 ; ret
0x000000000009eec7 : lea edi, dword ptr [rdi + 0xf] ; jne 0x9f6f9 ; ret
0x000000000009d627 : lea edi, dword ptr [rdi + 1] ; jne 0x9dee9 ; ret
0x000000000009ecca : lea edi, dword ptr [rdi + 1] ; jne 0x9f6f9 ; ret
0x000000000009d64b : lea edi, dword ptr [rdi + 2] ; jne 0x9dee9 ; ret
0x000000000009ecef : lea edi, dword ptr [rdi + 2] ; jne 0x9f6f9 ; ret
0x000000000009d66e : lea edi, dword ptr [rdi + 3] ; jne 0x9dee9 ; ret
0x000000000009ed12 : lea edi, dword ptr [rdi + 3] ; jne 0x9f6f9 ; ret
0x000000000009d689 : lea edi, dword ptr [rdi + 4] ; jne 0x9dee9 ; ret
0x000000000009ed2d : lea edi, dword ptr [rdi + 4] ; jne 0x9f6f9 ; ret
0x000000000009d6ac : lea edi, dword ptr [rdi + 5] ; jne 0x9dee9 ; ret
0x000000000009ed50 : lea edi, dword ptr [rdi + 5] ; jne 0x9f6f9 ; ret
0x000000000009d6d1 : lea edi, dword ptr [rdi + 6] ; jne 0x9dee9 ; ret
0x000000000009ed75 : lea edi, dword ptr [rdi + 6] ; jne 0x9f6f9 ; ret
0x000000000009d6ef : lea edi, dword ptr [rdi + 7] ; jne 0x9dee9 ; ret
0x000000000009ed93 : lea edi, dword ptr [rdi + 7] ; jne 0x9f6f9 ; ret
0x000000000009d70b : lea edi, dword ptr [rdi + 8] ; jne 0x9dee9 ; ret
0x000000000009edaf : lea edi, dword ptr [rdi + 8] ; jne 0x9f6f9 ; ret
0x000000000009d72e : lea edi, dword ptr [rdi + 9] ; jne 0x9dee9 ; ret
0x000000000009edd2 : lea edi, dword ptr [rdi + 9] ; jne 0x9f6f9 ; ret
0x00000000000ac75d : lea edi, dword ptr [rdi + rax*8] ; call 0x38a15
0x00000000001120b1 : lea edi, dword ptr [rip + 0x2b0ec9] ; call rax
0x00000000001117e6 : lea edi, dword ptr [rip + 0x2b1734] ; call rax
0x000000000010ad3e : lea edi, dword ptr [rip - 0x174] ; call rax
0x00000000000489ef : lea edi, dword ptr [rsi + 0x37] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000021fdc : lea edi, dword ptr [rsi + rdx] ; call rax
0x0000000000044edd : lea edi, dword ptr [rsp + 0x90] ; jmp 0x44eb0
0x0000000000037bd9 : lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x3864be], edx ; ret
0x000000000004e73f : lea edx, dword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4e712
0x000000000005c2df : lea edx, dword ptr [rbx + 3] ; add byte ptr [rcx - 0x77], cl ; ret 0x92e9
0x0000000000142924 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000096c91 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000fd5b7 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000007528d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000087026 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000142d18 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001211d1 : lea edx, dword ptr [rip + 0x29c9a9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000745bc : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000067c4b : lea esi, dword ptr [rax - 0x76000002] ; ret
0x00000000000f7c53 : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7c8d
0x00000000000f7d24 : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7d5f
0x00000000000782b0 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000194bac : lea esi, dword ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x0000000000002eb2 : lea esi, dword ptr [rdi] ; ret 0x793b
0x0000000000046335 : lea esi, dword ptr [rip + 0x195] ; call rax
0x000000000006f7ea : lea esi, dword ptr [rip + 0x30] ; call rax
0x000000000007c08a : lea esi, dword ptr [rip - 0x1780] ; call rax
0x000000000007c48a : lea esi, dword ptr [rip - 0x1b80] ; call rax
0x000000000007ab72 : lea esi, dword ptr [rip - 0x268] ; call rax
0x000000000006fb46 : lea esi, dword ptr [rip - 0x32c] ; call rax
0x000000000007adda : lea esi, dword ptr [rip - 0x4d0] ; call rax
0x000000000012d6f5 : lea esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012d0f2 : lea esi, dword ptr [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000121aa5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000003b8ce : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000006cfe8 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000019ab5e : lea esp, dword ptr [rsi + rbp*8 - 1] ; sbb al, 0xd ; out dx, al ; adc ch, dh ; jmp qword ptr [rdx]
0x00000000000b3c85 : lea esp, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000087025 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000044edc : lea r15, qword ptr [rsp + 0x90] ; jmp 0x44eb1
0x000000000014284f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000003843f : lea r9, qword ptr [rdx] ; jmp 0x38497
0x0000000000039bcf : lea r9, qword ptr [rdx] ; jmp 0x39c27
0x00000000000a3f6a : lea r9, qword ptr [rsp + 0x28] ; call rbx
0x00000000000a3ff8 : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000f78ca : lea rax, qword ptr [r12 - 1] ; jmp 0xf789a
0x00000000000a17cd : lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x00000000000c2691 : lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000008bde3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008bdf3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000096f93 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008bdc3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000bcb31 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000494d5 : lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x494f7
0x000000000012164a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c6329 : lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c6229 : lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x0000000000097a99 : lea rax, qword ptr [rbx - 1] ; pop rbx ; ret
0x00000000000a38a0 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x000000000008a89c : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000a1433 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000009e55b : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009e570 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009e58e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009e5ae : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009e5d1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009e5f0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009e610 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009e630 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009e653 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009e678 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009e696 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009e6b6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009e6d2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009e6f2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009e712 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009e732 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009f582 : lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009f7e8 : lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009e4ac : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009e4cc : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009e4ee : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009e50e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009e52e : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009e548 : lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000096933 : lea rax, qword ptr [rdi + 1] ; ret
0x0000000000096947 : lea rax, qword ptr [rdi + 2] ; ret
0x0000000000096952 : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000096966 : lea rax, qword ptr [rdi + 4] ; ret
0x0000000000096976 : lea rax, qword ptr [rdi + 5] ; ret
0x0000000000096986 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e45a : lea rax, qword ptr [rdi + 6] ; ret
0x0000000000096926 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000009e479 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000009e48e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008be18 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008be28 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008bd12 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000939f6 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000013cd03 : lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x000000000011810f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000008a798 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000a337d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a34e0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000a3500 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000a34f0 : lea rax, qword ptr [rdi - 8] ; ret
0x000000000009e3e2 : lea rax, qword ptr [rdi] ; ret
0x000000000015c8fc : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000015c91c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000015c93e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000015c95e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000015c97e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000015c80e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000015c836 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000015c84c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000015c864 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000015c87a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000015c88c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000015c8aa : lea rax, qword ptr [rdx + 6] ; ret
0x000000000015c7b6 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000015c8bc : lea rax, qword ptr [rdx + 8] ; ret
0x000000000015c8dc : lea rax, qword ptr [rdx + 9] ; ret
0x000000000002f954 : lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000083470 : lea rax, qword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x000000000015c824 : lea rax, qword ptr [rdx] ; ret
0x0000000000088dc4 : lea rax, qword ptr [rip + 0x10f35] ; ret
0x0000000000086b44 : lea rax, qword ptr [rip + 0x11595] ; ret
0x0000000000022030 : lea rax, qword ptr [rip + 0x15a154] ; ret
0x0000000000022040 : lea rax, qword ptr [rip + 0x15c12b] ; ret
0x000000000008be6a : lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000011ee28 : lea rax, qword ptr [rip + 0x2a4871] ; pop rbx ; ret
0x000000000011edf0 : lea rax, qword ptr [rip + 0x2a48a9] ; pop rbx ; ret
0x000000000011ed31 : lea rax, qword ptr [rip + 0x2a4968] ; pop rbx ; ret
0x00000000000f94ff : lea rax, qword ptr [rip + 0x2c82b2] ; ret
0x00000000000f933f : lea rax, qword ptr [rip + 0x2c8472] ; ret
0x000000000005d512 : lea rax, qword ptr [rip + 0x363417] ; pop rbx ; pop rbp ; ret
0x000000000002246a : lea rax, qword ptr [rip + 0x3a178f] ; ret
0x00000000001089c4 : lea rax, qword ptr [rip + 0x41d15] ; ret
0x0000000000108a64 : lea rax, qword ptr [rip + 0x44745] ; ret
0x0000000000091641 : lea rax, qword ptr [rip + 0x6878] ; ret
0x000000000008cc40 : lea rax, qword ptr [rip + 0x79] ; ret
0x0000000000091655 : lea rax, qword ptr [rip + 0xb1174] ; ret
0x000000000008ad51 : lea rax, qword ptr [rip + 0xb1f68] ; ret
0x000000000008a9c1 : lea rax, qword ptr [rip + 0xb21d8] ; ret
0x0000000000088531 : lea rax, qword ptr [rip + 0xb4528] ; ret
0x00000000000a2c12 : lea rax, qword ptr [rip + 0xbc9c7] ; ret
0x00000000000a37ce : lea rax, qword ptr [rip + 0xbdacb] ; ret
0x00000000000a37d6 : lea rax, qword ptr [rip + 0xc0383] ; ret
0x000000000008c5e4 : lea rax, qword ptr [rip + 0xc0bd5] ; ret
0x00000000000a37ba : lea rax, qword ptr [rip + 0xc84f] ; ret
0x000000000008a6a4 : lea rax, qword ptr [rip + 0xcdf55] ; ret
0x000000000008cad4 : lea rax, qword ptr [rip + 0xce6a5] ; ret
0x0000000000088424 : lea rax, qword ptr [rip + 0xcea25] ; ret
0x000000000008cbf4 : lea rax, qword ptr [rip + 0xcfd95] ; ret
0x000000000008be7e : lea rax, qword ptr [rip + 0xd3ddb] ; ret
0x00000000000a2c0a : lea rax, qword ptr [rip + 0xd48f] ; ret
0x000000000008be86 : lea rax, qword ptr [rip + 0xd6563] ; ret
0x0000000000086d31 : lea rax, qword ptr [rip + 0xdb398] ; ret
0x0000000000086f94 : lea rax, qword ptr [rip + 5] ; ret
0x000000000008cca3 : lea rax, qword ptr [rip + 6] ; ret
0x0000000000088e10 : lea rax, qword ptr [rip + 9] ; ret
0x0000000000092b8a : lea rax, qword ptr [rip - 0x511] ; ret
0x00000000000c7634 : lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc7602
0x00000000000b0710 : lea rax, qword ptr [rsi + rdx] ; add rsp, 0x18 ; ret
0x00000000000a34b9 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x000000000009cc9d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a3a69 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000a3bb1 : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000fdde4 : lea rcx, qword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000776d5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000021fdb : lea rdi, qword ptr [r14 + rdx] ; call rax
0x000000000012463d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000128091 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000127661 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000123a84 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000008c675 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8c669 ; mov rax, rdi ; ret
0x00000000000916e5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x916d7 ; ret
0x00000000000ac75c : lea rdi, qword ptr [rdi + rax*8] ; call 0x38a16
0x00000000000ac75b : lea rdi, qword ptr [rdi + rax*8] ; call 0x38a17
0x00000000001120b0 : lea rdi, qword ptr [rip + 0x2b0ec9] ; call rax
0x00000000001117e5 : lea rdi, qword ptr [rip + 0x2b1734] ; call rax
0x000000000010ad3d : lea rdi, qword ptr [rip - 0x174] ; call rax
0x0000000000142923 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000004e73e : lea rdx, qword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4e713
0x00000000000fd5b6 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000142d17 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000046334 : lea rsi, qword ptr [rip + 0x195] ; call rax
0x000000000006f7e9 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007c089 : lea rsi, qword ptr [rip - 0x1780] ; call rax
0x000000000007c489 : lea rsi, qword ptr [rip - 0x1b80] ; call rax
0x000000000007ab71 : lea rsi, qword ptr [rip - 0x268] ; call rax
0x000000000006fb45 : lea rsi, qword ptr [rip - 0x32c] ; call rax
0x000000000007add9 : lea rsi, qword ptr [rip - 0x4d0] ; call rax
0x000000000012d6f4 : lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012d0f1 : lea rsi, qword ptr [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000121aa4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000003b8cd : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000007f1e2 : leave ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000002bc8 : leave ; clc ; ret
0x000000000008aa66 : leave ; cmove rax, rdx ; ret
0x000000000013cb09 : leave ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x000000000002d586 : leave ; je 0x2d58e ; call rcx
0x000000000005dc99 : leave ; je 0x5dca4 ; ret
0x0000000000097a0a : leave ; je 0x979d0 ; mov byte ptr [r10 + 1], 0 ; ret
0x00000000001a0cdc : leave ; jle 0x1a0cd3 ; jmp qword ptr [rdx]
0x00000000000bcecf : leave ; jmp 0xbce97
0x0000000000096a01 : leave ; jne 0x969f4 ; ret
0x00000000000a1210 : leave ; jne 0xa1203 ; ret
0x00000000000a12c0 : leave ; jne 0xa12b3 ; ret
0x00000000000a1580 : leave ; jne 0xa1577 ; sub rax, 1 ; ret
0x00000000000a3554 : leave ; jne 0xa354c ; ret
0x0000000000103db6 : leave ; jns 0x103d90 ; mov eax, edx ; sub eax, r9d ; ret
0x0000000000103f38 : leave ; jns 0x103f77 ; mov eax, r8d ; sub eax, r9d ; ret
0x000000000013cd02 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x000000000009c781 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a2fb9 : leave ; mov dword ptr [r8 + 4], ecx ; jne 0xa2f90 ; ret
0x00000000000a1d84 : leave ; mov dword ptr [rdx], ecx ; jne 0xa1d7e ; ret
0x000000000009685f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00000000000a2c16 : leave ; or eax, dword ptr [rax] ; ret
0x0000000000039a9e : leave ; ret
0x00000000001211d4 : leave ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001794cc : leave ; wait ; hlt ; call rbx
0x0000000000079bf6 : les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000018698f : ljmp ptr [rax + 0x2c] ; cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x0000000000172aaf : ljmp ptr [rax + rbp] ; in al, dx ; call qword ptr [rax]
0x000000000018d17b : ljmp ptr [rax + rbx*4 - 0x784bfffe] ; stc ; jmp rsp
0x000000000018c37b : ljmp ptr [rax + rsi + 0x8640002] ; clc ; jmp rsp
0x0000000000179f37 : ljmp ptr [rax - 0x3f000a5a] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rax
0x00000000001793ab : ljmp ptr [rax - 0x57000b6b] ; xchg eax, ebp ; hlt ; jmp rsi
0x000000000019ac3c : ljmp ptr [rax] ; out dx, al ; jmp qword ptr [rdx]
0x00000000001797bf : ljmp ptr [rax] ; wait ; hlt ; call rsi
0x00000000001888ab : ljmp ptr [rbp + rsi*4 + 0x19e40000] ; in al, dx ; jmp rsp
0x000000000018a77b : ljmp ptr [rbx + rcx*4 + 0x56940001] ; call rsp
0x000000000018730f : ljmp ptr [rbx + rdi*2] ; cld ; call rdx
0x000000000017a55b : ljmp ptr [rbx + rdx*8 - 0xa] ; call rdx
0x000000000018d323 : ljmp ptr [rbx - 0x4f0bfffe] ; stc ; jmp rsp
0x00000000001790a3 : ljmp ptr [rbx - 0xd] ; call rsi
0x0000000000179c75 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x00000000001794a7 : ljmp ptr [rcx - 0x65] ; hlt ; call qword ptr [rcx]
0x000000000017958f : ljmp ptr [rcx - 0x65] ; hlt ; call rdi
0x0000000000179793 : ljmp ptr [rcx - 0x65] ; hlt ; call rsi
0x000000000017953f : ljmp ptr [rcx - 0x65] ; hlt ; inc dword ptr [rdi] ; popfq ; hlt ; call qword ptr [rcx]
0x00000000001794eb : ljmp ptr [rcx - 0x65] ; hlt ; jmp qword ptr [rbx]
0x00000000001794a3 : ljmp ptr [rcx - 0x65] ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call qword ptr [rcx]
0x000000000017978f : ljmp ptr [rcx - 0x65] ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call rsi
0x000000000001f723 : ljmp ptr [rcx] ; salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f703
0x000000000017a16f : ljmp ptr [rcx] ; test al, 0xf5 ; call rsp
0x000000000017a16b : ljmp ptr [rcx] ; test al, 0xf5 ; ljmp ptr [rcx] ; test al, 0xf5 ; call rsp
0x000000000018ddd3 : ljmp ptr [rdx + rbp*8 - 0x1bcbfffe] ; cli ; call rsp
0x0000000000186f4f : ljmp ptr [rdx] ; push rbp ; cld ; call rax
0x0000000000186ecb : ljmp ptr [rsi + 0x3efffc55] ; push rbp ; cld ; jmp rsp
0x00000000001790e7 : ljmp ptr [rsi + 2] ; hlt ; push qword ptr [rbx] ; sti ; call qword ptr [rax]
0x0000000000179297 : ljmp ptr [rsi] ; sbb esp, esi ; inc dword ptr [rdi] ; sbb esp, esi ; jmp rsp
0x000000000018db93 : ljmp ptr [rsp + rbx*8 - 0x481bfffe] ; cli ; call rsp
0x00000000001890bb : ljmp ptr [rsp + rsi*8 - 0x564c0000] ; out dx, al ; jmp rsp
0x000000000018cb0b : ljmp ptr [rsp - 0x74fbfffe] ; clc ; jmp rsp
0x000000000016003e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019d1ed : lock add byte ptr [rax], al ; mov al, 0x1d ; out dx, eax ; call qword ptr [rax]
0x000000000019d1bd : lock add byte ptr [rax], al ; nop ; adc bh, dl ; call qword ptr [rax]
0x0000000000073cea : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001ad295 : lock add dword ptr [rax], eax ; call 0xffffffffe41ac8b6
0x00000000000f0493 : lock and byte ptr [rax - 0x77], cl ; pop rbx ; ret
0x00000000001273c5 : lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000127404 : lock dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000178046 : lock inc dword ptr [rcx + 0x5efff0b8] ; mov bh, 0xf0 ; jmp rdi
0x000000000018a032 : lock inc dword ptr [rsp + rbx*2] ; add dword ptr [rax], eax ; ret 0xfff0
0x00000000001b2b54 : lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; cmp byte ptr [rbx - 9], cl ; call qword ptr [rbx]
0x0000000000137bf0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018cb0c : lodsb al, byte ptr [rsi] ; add al, byte ptr fs:[rax] ; add al, 0x8b ; clc ; jmp rsp
0x00000000001635d0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000001ac12c : lodsb al, byte ptr [rsi] ; add byte ptr [rcx], 0 ; jo 0x1ac131 ; cmc ; call qword ptr [rcx]
0x0000000000192054 : lodsb al, byte ptr [rsi] ; add byte ptr ds:[rax], al ; pop rax ; mov al, 0xea ; jmp qword ptr [rdx]
0x0000000000187709 : lodsb al, byte ptr [rsi] ; cld ; call rsp
0x0000000000187705 : lodsb al, byte ptr [rsi] ; cld ; inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x0000000000187589 : lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x000000000018d17c : lodsb al, byte ptr [rsi] ; cwde ; add al, byte ptr [rax] ; mov ah, 0x87 ; stc ; jmp rsp
0x000000000018db94 : lodsb al, byte ptr [rsi] ; fadd qword ptr [rdx] ; add ah, ah ; mov bh, 0xfa ; call rsp
0x00000000001890bc : lodsb al, byte ptr [rsi] ; hlt ; add byte ptr [rax], al ; mov ah, 0xa9 ; out dx, al ; jmp rsp
0x00000000001a5929 : lodsb al, byte ptr [rsi] ; hlt ; call qword ptr [rbx]
0x00000000001b4f54 : lodsb al, byte ptr [rsi] ; insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x0000000000187e04 : lodsb al, byte ptr [rsi] ; jl 0x187e0e ; add byte ptr [rdx + rax*4 - 0x16], al ; call rsp
0x00000000001a6054 : lodsb al, byte ptr [rsi] ; jle 0x1a605f ; add byte ptr [rax - 0x42], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a2ddd : lodsb al, byte ptr [rsi] ; jmp qword ptr [rdx]
0x00000000001b5a54 : lodsb al, byte ptr [rsi] ; js 0x1b5a60 ; add byte ptr [rax], bh ; fcomi st(7) ; jmp qword ptr [rcx]
0x00000000001aa854 : lodsb al, byte ptr [rsi] ; mov byte ptr [rcx], 0 ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001a6a54 : lodsb al, byte ptr [rsi] ; mov byte ptr [rcx], al ; add al, cl ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001888ac : lodsb al, byte ptr [rsi] ; mov ch, 0 ; add ah, ah ; sbb esp, ebp ; jmp rsp
0x000000000007b1d4 : lodsb al, byte ptr [rsi] ; nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000138214 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001765bd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000010897f : lodsb al, byte ptr [rsi] ; ret
0x000000000019a454 : lodsb al, byte ptr [rsi] ; ret 0
0x000000000006a2d9 : lodsb al, byte ptr [rsi] ; ret 0xffff
0x000000000018d2d1 : lodsb al, byte ptr [rsi] ; stc ; jmp rsp
0x00000000001864c5 : lodsb al, byte ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000186445 : lodsb al, byte ptr [rsi] ; std ; inc dword ptr [rsi - 0x53] ; std ; jmp rsi
0x00000000001a7954 : lodsb al, byte ptr [rsi] ; xchg eax, edi ; add dword ptr [rax], eax ; sub rsi, rbp ; jmp qword ptr [rcx]
0x000000000018c37c : lodsb al, byte ptr [rsi] ; xor byte ptr [rdx], al ; add byte ptr [rax + rcx - 8], ah ; jmp rsp
0x0000000000047d3c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000003de44 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000064c53 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret 0x4504
0x000000000018ac75 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; je 0x18acb7 ; hlt ; jmp rsp
0x0000000000187585 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x000000000018777d : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000187641 : lodsd eax, dword ptr [rsi] ; cld ; call rdx
0x000000000018763d : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x00000000001875c1 : lodsd eax, dword ptr [rsi] ; cld ; jmp rsi
0x000000000019811d : lodsd eax, dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000108487 : lodsd eax, dword ptr [rsi] ; mov ecx, 0x3948002b ; ret 0x840f
0x00000000001005bf : lodsd eax, dword ptr [rsi] ; mov edx, eax ; jmp 0x1005b6
0x000000000013bd80 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000067a5e : lodsd eax, dword ptr [rsi] ; out 0xff, al ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000002eccf : lodsd eax, dword ptr [rsi] ; ret
0x0000000000186449 : lodsd eax, dword ptr [rsi] ; std ; jmp rsi
0x0000000000196b6c : lodsd eax, dword ptr [rsi] ; test ch, ch ; jmp qword ptr [rdx]
0x00000000000a5455 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010acda : loop 0x10ad5b ; sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000116561 : loop 0x1164f3 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011b35f : loop 0x11b35a ; ret 0xc001
0x00000000001222aa : loop 0x122286 ; out dx, eax ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x0000000000125d6c : loop 0x125df6 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000013625b : loop 0x1362ae ; add ecx, ebx ; call rax
0x000000000014c3fa : loop 0x14c3f5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c3f9 : loop 0x14c3f6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014eeca : loop 0x14eec5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014eec9 : loop 0x14eec6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001519ea : loop 0x1519e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001519e9 : loop 0x1519e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017695a : loop 0x1769af ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000186721 : loop 0x186720 ; call qword ptr [rax]
0x0000000000186720 : loop 0x186721 ; call qword ptr [rax]
0x000000000019771c : loop 0x1976af ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a8e3d : loop 0x1a8e35 ; jmp qword ptr [rdx]
0x00000000001a8e85 : loop 0x1a8e7d ; jmp qword ptr [rdx]
0x00000000001a8ecd : loop 0x1a8ec5 ; jmp qword ptr [rdx]
0x00000000001a8f15 : loop 0x1a8f0d ; jmp qword ptr [rdx]
0x00000000001a8f5d : loop 0x1a8f55 ; jmp qword ptr [rdx]
0x0000000000021fd9 : loop 0x21fe5 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x00000000000025c5 : loop 0x259f ; ret 0x23cb
0x0000000000037639 : loop 0x37643 ; jne 0x3764f ; xor eax, eax ; nop ; ret
0x000000000003c8c7 : loop 0x3c8f0 ; mov eax, eax ; or rax, rdx ; ret
0x000000000004be01 : loop 0x4be48 ; call qword ptr [rbx + rax*8]
0x0000000000051927 : loop 0x51919 ; shr dword ptr [rbp + 0x1480001], cl ; ret
0x000000000005e5a2 : loop 0x5e534 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000630d6 : loop 0x630c4 ; scasb al, byte ptr [rdi] ; ret
0x000000000008046a : loop 0x804a7 ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000080469 : loop 0x804a8 ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000085514 : loop 0x85566 ; mov edi, edi ; call rax
0x0000000000097ead : loop 0x97ee5 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000009d8fa : loop 0x9d905 ; add byte ptr [rax], al ; ret
0x00000000000ba376 : loop 0xba38a ; ret 0x144
0x00000000000ba641 : loop 0xba609 ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000c60b2 : loop 0xc60ee ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000000dbb1c : loop 0xdbb28 ; xor esi, esi ; call 0x8c4b8
0x00000000000e4050 : loop 0xe405c ; je 0xe4060 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e4320 : loop 0xe432c ; je 0xe4330 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x0000000000123a4e : loope 0x1239e3 ; ret
0x0000000000135dd4 : loope 0x135e23 ; add esp, 0x58 ; ret
0x000000000014c36a : loope 0x14c365 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c369 : loope 0x14c366 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014ee3a : loope 0x14ee35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014ee39 : loope 0x14ee36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015195a : loope 0x151955 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151959 : loope 0x151956 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a46b : loope 0x15a472 ; add byte ptr [rax], al ; ret
0x00000000001622fb : loope 0x162305 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000164dde : loope 0x164e44 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000172aac : loope 0x172adb ; in al, dx ; ljmp ptr [rax + rbp] ; in al, dx ; call qword ptr [rax]
0x000000000017a6e9 : loope 0x17a6f3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000018669d : loope 0x1866a0 ; push qword ptr [rax] ; jrcxz 0x1866a4 ; call qword ptr [rax]
0x00000000001866bd : loope 0x1866c0 ; inc dword ptr [rax] ; jrcxz 0x1866c4 ; call rax
0x0000000000195afc : loope 0x195b7d ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019ac84 : loope 0x19acb1 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a8db5 : loope 0x1a8dad ; jmp qword ptr [rdx]
0x00000000001ac365 : loope 0x1ac36e ; add byte ptr [rax], ch ; sti ; cmc ; call qword ptr [rax]
0x00000000001ad12c : loope 0x1ad1ae ; cmc ; jmp qword ptr [rdx]
0x00000000001aefa5 : loope 0x1aef9e ; jmp qword ptr [rdx]
0x00000000001aefa4 : loope 0x1aef9f ; jmp qword ptr [rdx]
0x00000000001aefed : loope 0x1aefe6 ; jmp qword ptr [rdx]
0x00000000001aefec : loope 0x1aefe7 ; jmp qword ptr [rdx]
0x00000000001af035 : loope 0x1af02e ; jmp qword ptr [rdx]
0x00000000001af034 : loope 0x1af02f ; jmp qword ptr [rdx]
0x00000000001af07d : loope 0x1af076 ; jmp qword ptr [rdx]
0x00000000001af0c5 : loope 0x1af0be ; jmp qword ptr [rdx]
0x00000000001af10d : loope 0x1af106 ; jmp qword ptr [rdx]
0x00000000001af1a5 : loope 0x1af19e ; jmp qword ptr [rdx]
0x00000000001af1ed : loope 0x1af1e6 ; jmp qword ptr [rdx]
0x00000000001af24d : loope 0x1af246 ; jmp qword ptr [rdx]
0x00000000001af24c : loope 0x1af247 ; jmp qword ptr [rdx]
0x00000000001af295 : loope 0x1af28e ; jmp qword ptr [rdx]
0x00000000000381f6 : loope 0x381b6 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000382d6 : loope 0x38296 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000038a67 : loope 0x38ab9 ; mov dword ptr [rdi], ecx ; ret
0x0000000000038a98 : loope 0x38aeb ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000038b0d : loope 0x38b60 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000003fc07 : loope 0x3fc0d ; dec dword ptr [rax - 0x77] ; ret
0x000000000007026b : loope 0x702be ; mov eax, dword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x00000000000711a1 : loope 0x71176 ; mov dword ptr [rdi], ecx ; ret
0x0000000000080599 : loope 0x805d3 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000008237e : loope 0x8230b ; ret 0xda29
0x0000000000091aeb : loope 0x91afd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000a1109 : loope 0xa1178 ; nop dword ptr [rax + rax] ; ret
0x00000000000a189e : loope 0xa18a6 ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000a1b47 : loope 0xa1b08 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000a2e8e : loope 0xa2ea3 ; je 0xa2eb4 ; ret
0x00000000000bd39d : loope 0xbd32a ; ret 0xf631
0x00000000000e0987 : loope 0xe098c ; ret
0x00000000000f3358 : loope 0xf338e ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000001079fb : loopne 0x107a00 ; ret
0x0000000000108128 : loopne 0x10813d ; cmp eax, 4 ; je 0x108137 ; ret
0x0000000000108277 : loopne 0x108289 ; pop r12 ; ret
0x000000000010c5b0 : loopne 0x10c5c0 ; or eax, esi ; bswap eax ; ret
0x000000000010c5c1 : loopne 0x10c5dc ; movzx esi, si ; or eax, esi ; bswap eax ; ret
0x00000000001146e8 : loopne 0x11474e ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000114787 : loopne 0x1147ed ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000001176c4 : loopne 0x1176c3 ; add eax, 0x10 ; ret
0x0000000000117f3e : loopne 0x117f49 ; add eax, 8 ; ret
0x00000000001180db : loopne 0x1180e8 ; cdqe ; shr rax, 4 ; ret
0x000000000011d51d : loopne 0x11d52a ; pop r12 ; sub eax, 1 ; pop r13 ; ret
0x000000000012aca7 : loopne 0x12acb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012ef41 : loopne 0x12efb1 ; nop dword ptr [rax + rax] ; ret
0x0000000000142d71 : loopne 0x142d88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000142d70 : loopne 0x142d89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000142ec1 : loopne 0x142ed8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000142ec0 : loopne 0x142ed9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143011 : loopne 0x143028 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143010 : loopne 0x143029 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143161 : loopne 0x143178 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143160 : loopne 0x143179 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001432b1 : loopne 0x1432c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001432b0 : loopne 0x1432c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143401 : loopne 0x143418 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143400 : loopne 0x143419 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143551 : loopne 0x143568 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143550 : loopne 0x143569 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014369f : loopne 0x1436b6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014369e : loopne 0x1436b7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001437f1 : loopne 0x143808 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001437f0 : loopne 0x143809 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143941 : loopne 0x143958 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143940 : loopne 0x143959 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143a91 : loopne 0x143aa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143a90 : loopne 0x143aa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143be1 : loopne 0x143bf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143be0 : loopne 0x143bf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143d31 : loopne 0x143d48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143d30 : loopne 0x143d49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143e81 : loopne 0x143e98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143e80 : loopne 0x143e99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143fd1 : loopne 0x143fe8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143fd0 : loopne 0x143fe9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145741 : loopne 0x145758 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145740 : loopne 0x145759 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145891 : loopne 0x1458a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145890 : loopne 0x1458a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001459e1 : loopne 0x1459f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001459e0 : loopne 0x1459f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145b31 : loopne 0x145b48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145b30 : loopne 0x145b49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145c81 : loopne 0x145c98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145c80 : loopne 0x145c99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145dd1 : loopne 0x145de8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145dd0 : loopne 0x145de9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145f21 : loopne 0x145f38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145f20 : loopne 0x145f39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014606f : loopne 0x146086 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014606e : loopne 0x146087 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001461c1 : loopne 0x1461d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001461c0 : loopne 0x1461d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146311 : loopne 0x146328 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146310 : loopne 0x146329 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146461 : loopne 0x146478 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146460 : loopne 0x146479 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001465b1 : loopne 0x1465c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001465b0 : loopne 0x1465c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146701 : loopne 0x146718 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146700 : loopne 0x146719 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146851 : loopne 0x146868 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146850 : loopne 0x146869 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001469a1 : loopne 0x1469b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001469a0 : loopne 0x1469b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148111 : loopne 0x148128 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148110 : loopne 0x148129 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148261 : loopne 0x148278 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148260 : loopne 0x148279 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001483b1 : loopne 0x1483c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001483b0 : loopne 0x1483c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148501 : loopne 0x148518 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148500 : loopne 0x148519 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148651 : loopne 0x148668 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148650 : loopne 0x148669 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001487a1 : loopne 0x1487b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001487a0 : loopne 0x1487b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001488f1 : loopne 0x148908 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001488f0 : loopne 0x148909 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148a3f : loopne 0x148a56 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148a3e : loopne 0x148a57 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148b91 : loopne 0x148ba8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148b90 : loopne 0x148ba9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148ce1 : loopne 0x148cf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148ce0 : loopne 0x148cf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148e31 : loopne 0x148e48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148e30 : loopne 0x148e49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148f81 : loopne 0x148f98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148f80 : loopne 0x148f99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001490d1 : loopne 0x1490e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001490d0 : loopne 0x1490e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149221 : loopne 0x149238 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149220 : loopne 0x149239 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149371 : loopne 0x149388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149370 : loopne 0x149389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000173f34 : loopne 0x173f14 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000017812c : loopne 0x17813e ; int1 ; jmp qword ptr [rax]
0x00000000001783f4 : loopne 0x17844f ; inc dword ptr [rax] ; push rbx ; jmp qword ptr [rax]
0x0000000000178414 : loopne 0x178470 ; inc dword ptr [rax] ; push rsp ; jmp qword ptr [rax]
0x0000000000178434 : loopne 0x178491 ; inc dword ptr [rax] ; push rbp ; jmp qword ptr [rax]
0x00000000001784bc : loopne 0x17851c ; inc dword ptr [rax] ; pop rax ; jmp qword ptr [rax]
0x00000000001784dc : loopne 0x17853d ; inc dword ptr [rax] ; pop rcx ; jmp qword ptr [rax]
0x0000000000178624 : loopne 0x178693 ; call qword ptr [rax]
0x000000000017864c : loopne 0x1786c0 ; inc dword ptr [rax] ; insb byte ptr [rdi], dx ; call qword ptr [rax]
0x0000000000178674 : loopne 0x1786e9 ; inc dword ptr [rax] ; insd dword ptr [rdi], dx ; jmp qword ptr [rax]
0x0000000000179f40 : loopne 0x179eef ; cmc ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rbx
0x000000000017abb8 : loopne 0x17ac1e ; cli ; call rax
0x000000000018624c : loopne 0x186260 ; sti ; jmp qword ptr [rax]
0x000000000018624c : loopne 0x186264 ; sti ; jmp qword ptr [rax]
0x0000000000186260 : loopne 0x186286 ; sti ; call rax
0x00000000001864c0 : loopne 0x186474 ; std ; push qword ptr [rax - 0x54] ; std ; call qword ptr [rax]
0x000000000018671d : loopne 0x186720 ; inc dword ptr [rax - 0x1e] ; sti ; call qword ptr [rax]
0x0000000000186884 : loopne 0x186895 ; cld ; jmp rax
0x0000000000186884 : loopne 0x186899 ; cld ; jmp rax
0x0000000000186888 : loopne 0x18689b ; cld ; jmp rax
0x0000000000186ac4 : loopne 0x186afc ; cld ; jmp rax
0x0000000000186ac4 : loopne 0x186b00 ; cld ; jmp rax
0x0000000000186ac8 : loopne 0x186b02 ; cld ; jmp rax
0x0000000000186acc : loopne 0x186b0c ; cld ; call qword ptr [rax - 0x2f0003ef]
0x0000000000192e80 : loopne 0x192edf ; jmp 0x192e86
0x0000000000194f00 : loopne 0x194e9a ; in eax, dx ; call qword ptr [rax]
0x000000000019b41c : loopne 0x19b464 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019d100 : loopne 0x19d101 ; stc ; call qword ptr [rax]
0x00000000001a1e00 : loopne 0x1a1df8 ; int1 ; jmp qword ptr [rdx]
0x00000000001a6694 : loopne 0x1a66fd ; hlt ; jmp qword ptr [rdx]
0x00000000001a6a70 : loopne 0x1a6a54 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6ae9 : loopne 0x1a6ae1 ; jmp rsp
0x00000000001a7c20 : loopne 0x1a7c53 ; cmc ; jmp qword ptr [rcx]
0x00000000001a9430 : loopne 0x1a949e ; cmc ; call rcx
0x00000000001aa5d0 : loopne 0x1aa5a9 ; cmc ; jmp qword ptr [rsi]
0x00000000001aae19 : loopne 0x1aae12 ; call qword ptr [rax]
0x00000000001aae31 : loopne 0x1aae2a ; call qword ptr [rax]
0x000000000002fd33 : loopne 0x2fd42 ; movzx eax, ax ; ret
0x000000000002fd73 : loopne 0x2fd7c ; movzx eax, ax ; ret
0x000000000002fe13 : loopne 0x2fe1e ; movzx eax, ax ; ret
0x000000000002fef3 : loopne 0x2fef8 ; ret
0x000000000002ff6c : loopne 0x2ff71 ; ret
0x000000000002ff7c : loopne 0x2ff8b ; movzx eax, ax ; ret
0x000000000002ffbc : loopne 0x2ffc5 ; movzx eax, ax ; ret
0x000000000002ff43 : loopne 0x2ffc6 ; ret
0x000000000003005c : loopne 0x30067 ; movzx eax, ax ; ret
0x0000000000034c05 : loopne 0x34c1f ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000036675 : loopne 0x36681 ; ret
0x0000000000037794 : loopne 0x377e4 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000003851d : loopne 0x38526 ; sub eax, 1 ; ret
0x00000000000388a6 : loopne 0x388f2 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046d31 : loopne 0x46d56 ; or eax, esi ; ret
0x000000000006c985 : loopne 0x6c9e7 ; pop rbp ; pop r12 ; ret
0x000000000006cd51 : loopne 0x6cd97 ; pop rsp ; ret
0x000000000006d569 : loopne 0x6d5cb ; pop rbp ; pop r12 ; ret
0x000000000006d589 : loopne 0x6d5cf ; pop rsp ; ret
0x000000000006e42f : loopne 0x6e435 ; add byte ptr [rax], al ; jmp rax
0x000000000006e45b : loopne 0x6e461 ; add byte ptr [rax], al ; call rax
0x000000000006e48d : loopne 0x6e493 ; add byte ptr [rax], al ; call rax
0x000000000006e4cf : loopne 0x6e4d5 ; add byte ptr [rax], al ; jmp rax
0x0000000000071719 : loopne 0x7177f ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000072586 : loopne 0x725ec ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000725f7 : loopne 0x72659 ; pop rbp ; pop r12 ; ret
0x0000000000072cc1 : loopne 0x72d27 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000735f6 : loopne 0x735fb ; ret
0x0000000000073606 : loopne 0x7360b ; ret
0x00000000000792fa : loopne 0x79344 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000793a8 : loopne 0x793f2 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007c18d : loopne 0x7c1f1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d108 : loopne 0x7d16e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000800a6 : loopne 0x80033 ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000085f18 : loopne 0x85f7e ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000860ed : loopne 0x86153 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008c56f : loopne 0x8c566 ; ret
0x0000000000091d5c : loopne 0x91d6e ; movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x0000000000093c9c : loopne 0x93ce2 ; pop rsp ; ret
0x0000000000093c97 : loopne 0x93cfc ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000009d9fc : loopne 0x9da06 ; add byte ptr [rax], al ; ret
0x00000000000a1afd : loopne 0xa1b17 ; movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x00000000000a1b3d : loopne 0xa1b57 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a74fd : loopne 0xa7511 ; xchg eax, ebp ; ret 0x294c
0x00000000000ac66a : loopne 0xac67e ; xchg eax, ebp ; ret 0x294c
0x00000000000aebe4 : loopne 0xaec2a ; pop rsp ; ret
0x00000000000aecb6 : loopne 0xaecfe ; pop rsp ; pop r13 ; ret
0x00000000000b167c : loopne 0xb16c6 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b1668 : loopne 0xb16ce ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b28a6 : loopne 0xb28b1 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000c2150 : loopne 0xc21b6 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000d1c42 : loopne 0xd1c49 ; pop rbp ; ret
0x00000000000d1d29 : loopne 0xd1d34 ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000eb8f6 : loopne 0xeb95a ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f1b18 : loopne 0xf1b7e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f34d5 : loopne 0xf350c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f350f : loopne 0xf3545 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000f350e : loopne 0xf3546 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000f4cce : loopne 0xf4c5b ; ret
0x00000000000f7fce : loopne 0xf8034 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd690 : loopne 0xfd69c ; nop word ptr [rax + rax] ; ret
0x00000000000fd6b2 : loopne 0xfd6c1 ; movzx eax, ax ; ret
0x00000000000fd730 : loopne 0xfd73c ; nop word ptr [rax + rax] ; ret
0x00000000000fd7d0 : loopne 0xfd7dc ; nop word ptr [rax + rax] ; ret
0x00000000000fd7f2 : loopne 0xfd7f7 ; ret
0x00000000000fd870 : loopne 0xfd87c ; nop word ptr [rax + rax] ; ret
0x00000000000fd892 : loopne 0xfd89b ; movzx eax, ax ; ret
0x00000000000fd910 : loopne 0xfd91c ; nop word ptr [rax + rax] ; ret
0x00000000000fd9a0 : loopne 0xfd9ac ; nop word ptr [rax + rax] ; ret
0x00000000000fda40 : loopne 0xfda4c ; nop word ptr [rax + rax] ; ret
0x00000000000fdae0 : loopne 0xfdaec ; nop word ptr [rax + rax] ; ret
0x00000000000fdb80 : loopne 0xfdb8c ; nop word ptr [rax + rax] ; ret
0x00000000000fdba2 : loopne 0xfdbad ; movzx eax, ax ; ret
0x00000000000fdc20 : loopne 0xfdc2c ; nop word ptr [rax + rax] ; ret
0x00000000000fdcbb : loopne 0xfdcc4 ; nop dword ptr [rax] ; ret
0x00000000000fdd60 : loopne 0xfdd6c ; nop word ptr [rax + rax] ; ret
0x00000000000fdf3a : loopne 0xfdf44 ; nop dword ptr [rax] ; ret
0x00000000000fdfb2 : loopne 0xfdfbc ; nop dword ptr [rax] ; ret
0x00000000000fdfcb : loopne 0xfdfda ; movzx eax, ax ; ret
0x00000000000fe042 : loopne 0xfe04c ; nop dword ptr [rax] ; ret
0x00000000000fe0d2 : loopne 0xfe0dc ; nop dword ptr [rax] ; ret
0x00000000000fe0eb : loopne 0xfe0f0 ; ret
0x00000000000fe152 : loopne 0xfe15c ; nop dword ptr [rax] ; ret
0x00000000000fe16b : loopne 0xfe174 ; movzx eax, ax ; ret
0x00000000000fe1e2 : loopne 0xfe1ec ; nop dword ptr [rax] ; ret
0x00000000000fe262 : loopne 0xfe26c ; nop dword ptr [rax] ; ret
0x00000000000fe2f2 : loopne 0xfe2fc ; nop dword ptr [rax] ; ret
0x00000000000fe382 : loopne 0xfe38c ; nop dword ptr [rax] ; ret
0x00000000000fe412 : loopne 0xfe41c ; nop dword ptr [rax] ; ret
0x00000000000fe42b : loopne 0xfe436 ; movzx eax, ax ; ret
0x00000000000fe4a2 : loopne 0xfe4ac ; nop dword ptr [rax] ; ret
0x00000000000fe5c2 : loopne 0xfe5cc ; nop dword ptr [rax] ; ret
0x00000000000fe77a : loopne 0xfe784 ; nop dword ptr [rax] ; ret
0x0000000000123aef : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000018888d : mov ah, 0 ; add byte ptr [rdi + 0x19], bl ; in al, dx ; call rsp
0x0000000000188348 : mov ah, 0x10 ; jmp 0x18834e
0x000000000017394a : mov ah, 0x13 ; ret
0x00000000000ae1a8 : mov ah, 0x1a ; clc ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001b5916 : mov ah, 0x35 ; idiv edi ; sbb al, 0xd ; xor al, 0xf7 ; jmp qword ptr [rdx]
0x00000000000488da : mov ah, 0x37 ; add al, ch ; mov esi, 0x5b0005b5 ; ret
0x00000000001a315c : mov ah, 0x4f ; add dword ptr [rax], eax ; ret 0xe7da
0x0000000000189e7c : mov ah, 0x52 ; add dword ptr [rax], eax ; xchg eax, esp ; xor esi, eax ; call rsp
0x0000000000186ce0 : mov ah, 0x64 ; cld ; inc dword ptr [rsp - 4] ; call rsp
0x000000000018a26c : mov ah, 0x6a ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; mov bh, 0xf1 ; jmp rsp
0x00000000001a505c : mov ah, 0x6e ; add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a535c : mov ah, 0x71 ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xc], bh ; jmp qword ptr [rcx]
0x000000000018d138 : mov ah, 0x7f ; stc ; call rsp
0x000000000018d180 : mov ah, 0x87 ; stc ; jmp rsp
0x00000000001882c4 : mov ah, 0x92 ; add byte ptr [rax], al ; hlt ; add ch, bl ; jmp rsp
0x0000000000173df0 : mov ah, 0xa5 ; ret
0x000000000018cc28 : mov ah, 0xa6 ; clc ; jmp rsp
0x00000000001890c0 : mov ah, 0xa9 ; out dx, al ; jmp rsp
0x0000000000187704 : mov ah, 0xac ; cld ; inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x000000000018d50c : mov ah, 0xb0 ; add al, byte ptr [rax] ; and al, 0xfc ; stc ; jmp rsp
0x000000000018ae3c : mov ah, 0xb9 ; add dword ptr [rax], eax ; in al, -0x2e ; hlt ; jmp rsp
0x00000000001aa65c : mov ah, 0xc4 ; add dword ptr [rax], eax ; jo 0x1aa63e ; cmc ; jmp qword ptr [rsi]
0x000000000018de34 : mov ah, 0xcb ; add dword ptr [rax], eax ; in al, -0x15 ; cli ; jmp rsp
0x000000000018db0c : mov ah, 0xd9 ; add al, byte ptr [rax] ; xor al, 0xa9 ; cli ; jmp rsp
0x000000000018dd50 : mov ah, 0xdb ; cli ; jmp rsp
0x0000000000199814 : mov ah, 0xdc ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018dcf4 : mov ah, 0xe5 ; add al, byte ptr [rax] ; adc al, 0xd6 ; cli ; jmp rsp
0x00000000001a5cd9 : mov ah, 0xf4 ; call qword ptr [rsi]
0x00000000001a5cf1 : mov ah, 0xf4 ; jmp qword ptr [rcx]
0x000000000018b9f4 : mov ah, 0xfc ; add dword ptr [rax], eax ; hlt ; and dh, bh ; call rsp
0x00000000000f6590 : mov ah, 2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000048829 : mov ah, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000018bd54 : mov ah, 8 ; add al, byte ptr [rax] ; test byte ptr [rcx - 9], cl ; jmp rsp
0x0000000000187139 : mov ah, bh ; call qword ptr [rdx + 0x22fffc87]
0x00000000001870b5 : mov ah, bh ; call qword ptr [rsi]
0x0000000000187275 : mov ah, bh ; call rax
0x0000000000187271 : mov ah, bh ; inc dword ptr [rax - 0x78] ; cld ; call rax
0x00000000001871f5 : mov ah, bh ; jmp rsp
0x0000000000173744 : mov ah, bl ; push rsi ; ret
0x0000000000083ae2 : mov ah, byte ptr [rsi - 0x3f7affcd] ; js 0x83af9 ; ret
0x00000000001a6438 : mov ah, cl ; hlt ; jmp qword ptr [rcx]
0x0000000000199295 : mov al, 0 ; add byte ptr [rax + 1], bl ; out dx, al ; jmp rax
0x00000000000cca91 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000199ec0 : mov al, 0x1a ; out dx, al ; call qword ptr [rdi]
0x000000000019d1f0 : mov al, 0x1d ; out dx, eax ; call qword ptr [rax]
0x00000000001214fc : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x00000000001214b5 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000178128 : mov al, 0x23 ; int1 ; jmp rax
0x000000000019a370 : mov al, 0x25 ; out dx, al ; jmp qword ptr [rax]
0x00000000001a7bf0 : mov al, 0x2e ; cmc ; jmp qword ptr [rcx]
0x0000000000085acd : mov al, 0x33 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000019dff0 : mov al, 0x47 ; sti ; call qword ptr [rax]
0x0000000000127f09 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000c286e : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000001276a9 : mov al, 0x48 ; add eax, esi ; jmp rax
0x00000000000f7c55 : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf7c8b
0x00000000000f7d26 : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf7d5d
0x000000000012ef38 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000017836c : mov al, 0x4a ; inc eax ; call rax
0x00000000001783a8 : mov al, 0x4b ; inc eax ; call rax
0x00000000001783cc : mov al, 0x4c ; call rax
0x0000000000103bf7 : mov al, 0x4c ; mov edx, dword ptr [rbp - 0x48] ; sete dl ; jmp 0x103b91
0x0000000000186f84 : mov al, 0x56 ; cld ; jmp qword ptr [rax]
0x000000000017847c : mov al, 0x56 ; inc eax ; push rsi ; call rax
0x00000000001784f0 : mov al, 0x58 ; inc eax ; pop rax ; call rax
0x0000000000186d98 : mov al, 0x5c ; cld ; jmp qword ptr [rax]
0x0000000000186d84 : mov al, 0x60 ; cld ; inc dword ptr [rax + 0x60] ; cld ; call rax
0x0000000000186b6c : mov al, 0x63 ; cld ; inc dword ptr [rax + 0x63] ; cld ; call rax
0x00000000001a8ff0 : mov al, 0x63 ; cmc ; call rsp
0x00000000001abffc : mov al, 0x69 ; cmc ; jmp qword ptr [rdx]
0x0000000000178620 : mov al, 0x6a ; jmp rax
0x0000000000178690 : mov al, 0x6d ; call rax
0x00000000001786b0 : mov al, 0x6e ; call rax
0x0000000000178704 : mov al, 0x6f ; inc eax ; outsd dx, dword ptr [rsi] ; call rax
0x0000000000177180 : mov al, 0x75 ; out dx, al ; call rax
0x000000000017827c : mov al, 0x84 ; cld ; call rax
0x0000000000194534 : mov al, 0x87 ; in al, dx ; jmp qword ptr [rdx]
0x0000000000187270 : mov al, 0x88 ; cld ; inc dword ptr [rax - 0x78] ; cld ; call rax
0x0000000000187058 : mov al, 0x8b ; cld ; inc dword ptr [rax - 0x75] ; cld ; call rax
0x00000000001782a4 : mov al, 0x90 ; cld ; jmp qword ptr [rax]
0x00000000001ae7f4 : mov al, 0x9b ; cmc ; jmp qword ptr [rdx]
0x00000000001781e0 : mov al, 0x9c ; int1 ; call rax
0x0000000000187768 : mov al, 0xaf ; cld ; inc dword ptr [rax - 0x51] ; cld ; call rax
0x00000000001973f0 : mov al, 0xba ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019cbc0 : mov al, 0xbf ; out dx, al ; jmp qword ptr [rax]
0x00000000001a6a40 : mov al, 0xdf ; hlt ; jmp qword ptr [rcx]
0x0000000000192119 : mov al, 0xea ; call qword ptr [rsi]
0x0000000000192011 : mov al, 0xea ; jmp qword ptr [rax]
0x0000000000191ff9 : mov al, 0xea ; jmp qword ptr [rbx]
0x0000000000192029 : mov al, 0xea ; jmp qword ptr [rdx]
0x0000000000175bf6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000001a1ce0 : mov al, 0xee ; int1 ; jmp qword ptr [rcx]
0x00000000001a5b31 : mov al, 0xf4 ; jmp qword ptr [rcx]
0x000000000018d329 : mov al, 0xf9 ; jmp rsp
0x0000000000187565 : mov al, 0xfc ; call qword ptr [rax]
0x0000000000187761 : mov al, 0xfc ; jmp qword ptr [rax]
0x0000000000187625 : mov al, 0xfc ; jmp rdx
0x000000000012e247 : mov al, 1 ; ret
0x000000000018d50d : mov al, 2 ; add byte ptr [rsp + rdi*8], ah ; stc ; jmp rsp
0x000000000009da2c : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000f6174 : mov al, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000009d62c : mov al, 8 ; add byte ptr [rax], al ; ret
0x000000000006e358 : mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000196ad6 : mov al, byte ptr [rbp + 0xd1cffed] ; mov ch, 0x84 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000fd5b9 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x0000000000099b5b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000099b89 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000099c0d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000015c820 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000099b35 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001ab728 : mov al, ch ; cmc ; call qword ptr [rax]
0x00000000000c242c : mov ax, 0xfde8 ; jne 0xc2402 ; ret
0x0000000000099b45 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000014d131 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000bd307 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000034c73 : mov bh, 0x48 ; add edx, edi ; jmp rdx
0x0000000000162198 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000001abea4 : mov bh, 0x69 ; cmc ; jmp qword ptr [rdx]
0x00000000000b19ad : mov bh, 0x75 ; nop ; jmp 0xb1957
0x00000000000d22f3 : mov bh, 0x79 ; ret 0x6348
0x000000000008c450 : mov bh, 0xb ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000002bc4 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x0000000000174c24 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002fd36 : mov bh, 0xc0 ; ret
0x00000000001005bd : mov bh, 0xeb ; lodsd eax, dword ptr [rsi] ; mov edx, eax ; jmp 0x1005b8
0x000000000003d8d8 : mov bh, 0xeb ; ret 0x1f0f
0x000000000017804d : mov bh, 0xf0 ; jmp rdi
0x000000000018a271 : mov bh, 0xf1 ; jmp rsp
0x00000000001a5d81 : mov bh, 0xf4 ; call rdi
0x000000000010c5c4 : mov bh, 0xf6 ; or eax, esi ; bswap eax ; ret
0x0000000000003754 : mov bh, 0xfa ; add ebx, ebp ; in al, -0x12 ; jne 0x373e ; ret 0x975
0x000000000018db99 : mov bh, 0xfa ; call rsp
0x00000000000fbbb3 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002fd2f : mov bh, 4 ; js 0x2fcbf ; loopne 0x2fd46 ; movzx eax, ax ; ret
0x000000000002fd6f : mov bh, 4 ; js 0x2fcff ; loopne 0x2fd80 ; movzx eax, ax ; ret
0x000000000002fe0f : mov bh, 4 ; js 0x2fd9f ; loopne 0x2fe22 ; movzx eax, ax ; ret
0x000000000002feef : mov bh, 4 ; js 0x2fe7c ; loopne 0x2fefc ; ret
0x000000000002ff68 : mov bh, 4 ; js 0x2fef5 ; loopne 0x2ff75 ; ret
0x000000000002ff78 : mov bh, 4 ; js 0x2ff08 ; loopne 0x2ff8f ; movzx eax, ax ; ret
0x000000000002ffb8 : mov bh, 4 ; js 0x2ff48 ; loopne 0x2ffc9 ; movzx eax, ax ; ret
0x0000000000030058 : mov bh, 4 ; js 0x2ffe8 ; loopne 0x3006b ; movzx eax, ax ; ret
0x00000000000fd6ae : mov bh, 4 ; js 0xfd63e ; loopne 0xfd6c5 ; movzx eax, ax ; ret
0x00000000000fd7ee : mov bh, 4 ; js 0xfd77b ; loopne 0xfd7fb ; ret
0x00000000000fd88e : mov bh, 4 ; js 0xfd81e ; loopne 0xfd89f ; movzx eax, ax ; ret
0x00000000000fdb9e : mov bh, 4 ; js 0xfdb2e ; loopne 0xfdbb1 ; movzx eax, ax ; ret
0x00000000000fdfc7 : mov bh, 4 ; js 0xfdf57 ; loopne 0xfdfde ; movzx eax, ax ; ret
0x00000000000fe0e7 : mov bh, 4 ; js 0xfe074 ; loopne 0xfe0f4 ; ret
0x00000000000fe167 : mov bh, 4 ; js 0xfe0f7 ; loopne 0xfe178 ; movzx eax, ax ; ret
0x00000000000fe427 : mov bh, 4 ; js 0xfe3b7 ; loopne 0xfe43a ; movzx eax, ax ; ret
0x0000000000176333 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000f0a25 : mov bh, 7 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000e44a1 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000187265 : mov bh, ah ; call qword ptr [rax + 0x20fffc89]
0x00000000001870a5 : mov bh, ah ; call rsi
0x00000000001870a1 : mov bh, ah ; inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x000000000011b981 : mov bh, byte ptr [rip - 0x76b7fffa] ; ret 0x1be
0x0000000000163a8e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008581c : mov bl, 0x33 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000fbbfc : mov bl, 0x66 ; nop ; xor eax, eax ; ret
0x00000000000e04e5 : mov bl, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000e2037 : mov bl, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d4c
0x0000000000175d03 : mov bl, 0x8e ; ret 0xdcd9
0x00000000000f5bb9 : mov bl, 0xa ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x00000000000dbb4c : mov bl, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000000000112031 : mov bl, 0xd9 ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000001b0f : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001a5c39 : mov bl, 0xf4 ; jmp qword ptr [rcx]
0x00000000001afbc1 : mov bl, 0xf6 ; call qword ptr [rcx]
0x00000000001afbd9 : mov bl, 0xf6 ; jmp qword ptr [rcx]
0x0000000000003aad : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000018db71 : mov bl, 0xfa ; call rsp
0x000000000018ad75 : mov bl, 1 ; add byte ptr [rcx + rdx*4], dh ; hlt ; jmp rsp
0x00000000001b6a88 : mov bl, 6 ; add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000001996ac : mov bl, bl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ade34 : mov bp, si ; jmp qword ptr [rdx]
0x0000000000097a0d : mov byte ptr [r10 + 1], 0 ; ret
0x0000000000108ebd : mov byte ptr [r11 + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x000000000012ff3d : mov byte ptr [r8 + 1], r9b ; ret
0x00000000000f4cca : mov byte ptr [r9 + r15 - 0x20], 0x89 ; ret
0x00000000000cacd1 : mov byte ptr [r9 - 0x77], r8b ; ret 0xdb84
0x00000000000f31b2 : mov byte ptr [r9 - 1], 0 ; ret
0x0000000000031259 : mov byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000002ed2c : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000ce442 : mov byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000012ff3e : mov byte ptr [rax + 1], cl ; ret
0x00000000000b08b4 : mov byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000004983e : mov byte ptr [rax + 8], 0 ; ret
0x000000000012642c : mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000828d4 : mov byte ptr [rax + rbx], dh ; pop rbx ; ret
0x00000000000828d3 : mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x00000000001356cd : mov byte ptr [rax + rcx], dl ; ret
0x0000000000046e14 : mov byte ptr [rax + rdx], 0 ; ret
0x0000000000036d99 : mov byte ptr [rax - 0x77], cl ; ret 0xba41
0x0000000000188af5 : mov byte ptr [rax], 0 ; ret
0x00000000000f6d8e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003724f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000372d4 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004e14a : mov byte ptr [rax], cl ; jmp 0x4a3c9
0x000000000009c782 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001180bb : mov byte ptr [rbp + 3], bh ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001b3438 : mov byte ptr [rbp - 9], ah ; jmp qword ptr [rbx]
0x0000000000108ebe : mov byte ptr [rbx + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x000000000004c9a4 : mov byte ptr [rbx + rdx + 0x358d4800], al ; wait ; call qword ptr [rdx]
0x00000000001a0088 : mov byte ptr [rbx - 0xf], al ; call rsi
0x00000000000f2226 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000002f5e : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000015a4e3 : mov byte ptr [rcx + 2], dl ; ret
0x000000000015a502 : mov byte ptr [rcx + 4], dl ; ret
0x000000000015a543 : mov byte ptr [rcx + 8], dl ; ret
0x0000000000096863 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002691d : mov byte ptr [rcx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000f4ccb : mov byte ptr [rcx + rdi - 0x20], 0x89 ; ret
0x00000000001a51e8 : mov byte ptr [rcx + rdi*8], dl ; call qword ptr [rax]
0x0000000000190b38 : mov byte ptr [rcx - 0x16], ch ; jmp qword ptr [rcx]
0x00000000000cacd2 : mov byte ptr [rcx - 0x77], al ; ret 0xdb84
0x00000000000f31b3 : mov byte ptr [rcx - 1], 0 ; ret
0x0000000000094683 : mov byte ptr [rcx], 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001aa885 : mov byte ptr [rcx], 0 ; js 0x1aa866 ; cmc ; jmp qword ptr [rsi]
0x0000000000096c94 : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000096bc0 : mov byte ptr [rcx], 0 ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x00000000001aa89d : mov byte ptr [rcx], 0 ; nop ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001aa7ad : mov byte ptr [rcx], 0 ; ret
0x00000000001aa855 : mov byte ptr [rcx], 0 ; salc ; cmc ; jmp qword ptr [rsi]
0x00000000001aa7c5 : mov byte ptr [rcx], 0 ; sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000e1441 : mov byte ptr [rcx], 0x83 ; ret 0x4840
0x0000000000095999 : mov byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000097abf : mov byte ptr [rcx], 0xf ; mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001a6a6d : mov byte ptr [rcx], al ; add al, ah ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a6a85 : mov byte ptr [rcx], al ; add al, bh ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a6a55 : mov byte ptr [rcx], al ; add al, cl ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a69ad : mov byte ptr [rcx], al ; add al, dh ; fdivrp st(4) ; jmp qword ptr [rcx]
0x00000000001a69f5 : mov byte ptr [rcx], al ; add byte ptr [rax - 0x21], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a69c5 : mov byte ptr [rcx], al ; add byte ptr [rax], cl ; fcompi st(4) ; jmp qword ptr [rcx]
0x0000000000097bc7 : mov byte ptr [rcx], al ; jne 0x97bb8 ; mov rax, rbx ; pop rbx ; ret
0x000000000019cfe8 : mov byte ptr [rcx], al ; ret
0x0000000000070b3a : mov byte ptr [rcx], bh ; movzx eax, dil ; ret
0x00000000001092b4 : mov byte ptr [rcx], cl ; hlt ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x0000000000070b39 : mov byte ptr [rcx], dil ; movzx eax, dil ; ret
0x000000000015a4c0 : mov byte ptr [rcx], dl ; ret
0x00000000001a69f4 : mov byte ptr [rcx], r8b ; add byte ptr [rax - 0x21], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000097bc6 : mov byte ptr [rcx], r8b ; jne 0x97bb9 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a0dfa : mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009f39b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009dbbb : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a0e0b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009e558 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009cee8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a0e10 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0e32 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0e50 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0e70 : mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009e5ce : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009cf3e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009f421 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009dc11 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a0e91 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0e96 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0eb2 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a0ed2 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a0ef2 : mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009f4a3 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009dc93 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a0f13 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009e650 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009cfc0 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a0f18 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0f3a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0f58 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a0f78 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a0f94 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a0fb4 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a0fd4 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a0ff4 : mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009dd95 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a1015 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a101a : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a106a : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a0d40 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0d5e : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0d7e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0da0 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a0dc0 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a0de0 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a0c76 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000117c32 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000117c31 : mov byte ptr [rdi + 1], sil ; ret
0x0000000000096943 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000968a3 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a0c88 : mov byte ptr [rdi + 2], ch ; ret
0x000000000009e406 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009ce06 : mov byte ptr [rdi + 2], dh ; ret
0x000000000009f229 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009dad9 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a0c99 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0c9e : mov byte ptr [rdi + 3], ch ; ret
0x0000000000096962 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000968c2 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a0cb6 : mov byte ptr [rdi + 4], ch ; ret
0x000000000009e422 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ce22 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009f257 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009daf7 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a0cc7 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0ccc : mov byte ptr [rdi + 5], ch ; ret
0x00000000000968e9 : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a0cde : mov byte ptr [rdi + 6], ch ; ret
0x0000000000125d72 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a0cfc : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d0af0 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d0ab6 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d0b20 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d0b47 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d0b90 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d0b7d : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d0ae0 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d0ac0 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a0d08 : mov byte ptr [rdi + 8], ch ; ret
0x000000000009ce63 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000009f2a9 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009db39 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a0d19 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a0d1e : mov byte ptr [rdi + 9], ch ; ret
0x0000000000097a60 : mov byte ptr [rdi + rcx], 0xb6 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000117dad : mov byte ptr [rdi + rdx], 0 ; pop rbx ; ret
0x00000000001a0158 : mov byte ptr [rdi - 0xf], bh ; call qword ptr [rax]
0x000000000009683e : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000014439b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000096870 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000001f668 : mov byte ptr [rdi], 0 ; ret
0x0000000000037648 : mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000d0b10 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x0000000000108bbb : mov byte ptr [rdi], al ; jne 0x108baf ; mov rax, rdi ; ret
0x0000000000108d7b : mov byte ptr [rdi], al ; jne 0x108d6f ; mov rax, r10 ; ret
0x00000000000d0b69 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000001a7cc8 : mov byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000a0c62 : mov byte ptr [rdi], ch ; ret
0x0000000000192698 : mov byte ptr [rdi], cl ; jmp 0x19269e
0x000000000006750a : mov byte ptr [rdi], cl ; xchg dword ptr [rax - 0x76fffff5], ebp ; ret 0x348
0x0000000000067483 : mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76ffffe9], edx ; ret 0x348
0x0000000000067932 : mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76fffffd], ebp ; ret 0x348
0x000000000006757c : mov byte ptr [rdi], cl ; xchg dword ptr [rdi - 0x76fffff6], esp ; ret 0x348
0x0000000000067851 : mov byte ptr [rdi], cl ; xchg dword ptr [rip - 0x76fffffd], ecx ; ret 0x348
0x00000000000967a9 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x000000000009e3e0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009cde0 : mov byte ptr [rdi], dh ; ret
0x000000000009f202 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009dab2 : mov byte ptr [rdi], dl ; ret
0x00000000000a0c72 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000009c90a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000097a0e : mov byte ptr [rdx + 1], 0 ; ret
0x000000000015c849 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000099b5e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000015c877 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000099b8c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009c8a0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000099c10 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000111062 : mov byte ptr [rdx], 0 ; pop r12 ; ret
0x00000000000f7ec1 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000602cb : mov byte ptr [rdx], al ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000001ac848 : mov byte ptr [rdx], al ; idiv bh ; ret 3
0x000000000015c822 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000099b37 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000002ef88 : mov byte ptr [rip + 0x390cef], dl ; ret
0x000000000000245c : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x000000000008113d : mov byte ptr [rsi + rbx], bh ; mov rax, rsi ; pop rbx ; ret
0x000000000008113c : mov byte ptr [rsi + rbx], dil ; mov rax, rsi ; pop rbx ; ret
0x0000000000092bd4 : mov byte ptr [rsi + rdx + 1], al ; jg 0x92bc7 ; ret
0x00000000001870c4 : mov byte ptr [rsi - 0x79a90004], 0xfc ; jmp rsi
0x00000000001ac7dc : mov byte ptr [rsi - 0xb], ch ; jmp qword ptr [rdx]
0x00000000001a0c34 : mov byte ptr [rsi - 0xf], bh ; jmp qword ptr [rdx]
0x00000000001b3468 : mov byte ptr [rsi - 9], ah ; call rdi
0x00000000000499a3 : mov byte ptr [rsi], al ; jne 0x49987 ; mov rax, rsi ; ret
0x000000000004991f : mov byte ptr [rsi], dl ; jne 0x4990f ; mov rax, rsi ; ret
0x00000000001aa80c : mov byte ptr fs:[rcx], 0 ; ret
0x00000000001888ad : mov ch, 0 ; add ah, ah ; sbb esp, ebp ; jmp rsp
0x0000000000173742 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000174a83 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001aabe4 : mov ch, 0x51 ; cmc ; jmp qword ptr [rdx]
0x000000000019b614 : mov ch, 0x51 ; out dx, al ; jmp qword ptr [rdx]
0x00000000000d2082 : mov ch, 0x83 ; ret 0x8901
0x0000000000196adc : mov ch, 0x84 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000af4e2 : mov ch, 0x89 ; ret 0xe283
0x0000000000175e1f : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001767ca : mov ch, 0xab ; ret
0x0000000000003753 : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x373f ; ret 0x975
0x0000000000178031 : mov ch, 0xf0 ; call qword ptr [rax]
0x00000000001afd11 : mov ch, 0xf6 ; call qword ptr [rax]
0x000000000019a96c : mov ch, 0xff ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018d60d : mov ch, 2 ; add byte ptr [rax], dl ; and al, 0xfa ; jmp rsp
0x000000000004876c : mov ch, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000001b798c : mov ch, 5 ; add byte ptr [rax], al ; ret
0x0000000000160bb6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001ac498 : mov ch, bh ; cmc ; call qword ptr [rax]
0x00000000001347ae : mov ch, bl ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000197325 : mov ch, ch ; jmp qword ptr [rdx]
0x00000000001aa678 : mov ch, dl ; cmc ; jmp qword ptr [rsi]
0x000000000008bd7b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001887d5 : mov cl, 0 ; add byte ptr [rsi + rsi*8], al ; jmp 0x1887e1
0x00000000001aaa0c : mov cl, 0x22 ; sti ; jmp qword ptr [rdx]
0x0000000000003b60 : mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000007a9f7 : mov cl, 0x35 ; ret
0x0000000000034047 : mov cl, 0x38 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019b02c : mov cl, 0x3a ; out dx, al ; jmp qword ptr [rdx]
0x00000000001082eb : mov cl, 0x3d ; mov r11d, 0x3948002b ; ret 0xda75
0x00000000001ab7bc : mov cl, 0x5c ; cmc ; jmp qword ptr [rdx]
0x0000000000002bc5 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x0000000000108485 : mov cl, 0xd ; lodsd eax, dword ptr [rsi] ; mov ecx, 0x3948002b ; ret 0x840f
0x0000000000192209 : mov cl, 0xea ; call qword ptr [rax]
0x0000000000192221 : mov cl, 0xea ; call qword ptr [rdx]
0x0000000000199ae4 : mov cl, 0xef ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000189fe1 : mov cl, 0xf0 ; jmp rsp
0x00000000001af6dc : mov cl, 0xf1 ; cmc ; jmp qword ptr [rdx]
0x00000000001a5b61 : mov cl, 0xf4 ; jmp qword ptr [rcx]
0x000000000018775d : mov cl, 0xfc ; call qword ptr [rax + 0x20fffcb0]
0x000000000018759d : mov cl, 0xfc ; call rsi
0x0000000000187599 : mov cl, 0xfc ; inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x00000000000fdde7 : mov cl, 3 ; add al, 0xa ; ret
0x000000000010823b : mov cl, 5 ; idiv dword ptr [rbx + 0x3948002b] ; ret 0xda75
0x00000000000fb8f5 : mov cl, byte ptr [rax - 0x7d] ; ret
0x000000000008eec5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000087024 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000175bf2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000001a1275 : mov cl, dh ; jmp qword ptr [rdx]
0x00000000000a2e8b : mov cl, dl ; and cl, 0xf ; je 0xa2eb7 ; ret
0x0000000000175eac : mov cs, edi ; ret 0x8b36
0x00000000000d6302 : mov cs, esi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000002a295 : mov cs, word ptr [rax] ; add eax, 0x29480000 ; ret 0x8b49
0x000000000013d63e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000009ce00 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000007a5c6 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b1d9 : mov dh, 0 ; pop rbx ; ret
0x0000000000073653 : mov dh, 0 ; ret
0x000000000014d1a1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008bf64 : mov dh, 0x16 ; sub eax, edx ; ret
0x00000000000354b0 : mov dh, 0x17 ; test dl, dl ; jne 0x35496 ; ret
0x000000000005650f : mov dh, 0x30 ; add r12, 1 ; jmp 0x564e0
0x00000000000b8196 : mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000049b6d : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000000c3b2e : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000c379a : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000108e9f : mov dh, 0x42 ; dec dword ptr [rcx - 0x7d] ; ret
0x0000000000047e3d : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000059c6f : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011a622 : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000005fe6e : mov dh, 0x45 ; or al, 0x89 ; ret 0xeac0
0x00000000000962e6 : mov dh, 0x45 ; ret
0x00000000000964fb : mov dh, 0x45 ; ret 0x8348
0x00000000000962d3 : mov dh, 0x45 ; ret 0x8349
0x0000000000097a63 : mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000163661 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000163651 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000163621 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000163641 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000163631 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000000279f5 : mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000e22ad : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x00000000000979f6 : mov dh, 0x49 ; dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x0000000000027a3f : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000002a9f3 : mov dh, 0x4a ; inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000174be2 : mov dh, 0x4e ; ret 0x474c
0x0000000000117e4d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000033af2 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006cd84 : mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x000000000006d4c1 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000e7620 : mov dh, 0x54 ; add eax, 0xbe0f4101 ; ret 0xe883
0x0000000000163665 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000163655 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000163625 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000005025f : mov dh, 0x56 ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000163635 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000f5571 : mov dh, 0x57 ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000000000266ef : mov dh, 0x5c ; adc eax, 0x3d8d4800 ; ret
0x00000000001ab804 : mov dh, 0x5c ; cmc ; jmp qword ptr [rdx]
0x0000000000186bb4 : mov dh, 0x62 ; cld ; inc dword ptr [rsi + 0x62] ; cld ; call rsi
0x000000000003e5fc : mov dh, 0x75 ; add byte ptr [rax - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret 0x15
0x00000000000c801d : mov dh, 0x7b ; dec dword ptr [rcx - 0x7d] ; ret 0x4101
0x00000000001a1614 : mov dh, 0x89 ; int1 ; jmp qword ptr [rdx]
0x00000000001870a0 : mov dh, 0x8a ; cld ; inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x0000000000187590 : mov dh, 0xab ; cld ; jmp qword ptr [rsi]
0x0000000000176ea0 : mov dh, 0xb ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000187598 : mov dh, 0xb1 ; cld ; inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x0000000000086935 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000121a28 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012dd4c : mov dh, 0xc0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001215dd : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0061 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000c268f : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000036a6d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006c758 : mov dh, 0xc0 ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x0000000000054a53 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000c7c15 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000006c818 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x0000000000101e91 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005db7d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x0000000000022ca9 : mov dh, 0xc0 ; neg eax ; ret
0x0000000000125fd4 : mov dh, 0xc0 ; pop r12 ; ret
0x000000000012287e : mov dh, 0xc0 ; pop rbp ; ret
0x0000000000048a53 : mov dh, 0xc0 ; pop rbx ; neg eax ; pop rbp ; ret
0x00000000000f4bb7 : mov dh, 0xc0 ; pop rbx ; ret
0x00000000000375ba : mov dh, 0xc0 ; ret
0x00000000000a1a88 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000000a1ab0 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000007a726 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070b3e : mov dh, 0xc7 ; ret
0x0000000000175e24 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000e187c : mov dh, 0xc8 ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000acfd8 : mov dh, 0xca ; cmp dl, 0xff ; cmovne eax, ecx ; ret
0x00000000000b4c69 : mov dh, 0xd2 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000008bf8a : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000b8281 : mov dh, 0xd6 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000054b82 : mov dh, 0xdb ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000883d1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015fc94 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000000d43ac : mov dh, 0xed ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x000000000017802d : mov dh, 0xf0 ; push rax ; mov ch, 0xf0 ; call qword ptr [rax]
0x00000000001afd79 : mov dh, 0xf6 ; call qword ptr [rdi]
0x0000000000074e7f : mov dh, 0xf6 ; ret 0x7508
0x000000000010c5ad : mov dh, 0xf6 ; shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x000000000017c0ad : mov dh, 0xfa ; dec esp ; mov dh, 0xfa ; jmp rsp
0x000000000017c0b1 : mov dh, 0xfa ; jmp rsp
0x000000000007a5d1 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c49d9 : mov dh, 2 ; jmp 0xc417a
0x00000000000e0d95 : mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1372
0x000000000015fc91 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008bf61 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000883d4 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000001b4031 : mov dh, bh ; call qword ptr [rdx]
0x0000000000194c1c : mov dh, byte ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x00000000000a1c5e : mov dh, byte ptr [rdi + rbx*8 - 0xd] ; ret
0x00000000001b588c : mov dh, byte ptr [rdi + rsi*8] ; jmp qword ptr [rdx]
0x00000000001adf4d : mov dh, ch ; jmp qword ptr [rdx]
0x000000000017819d : mov dh, cl ; call rax
0x00000000001a165d : mov dh, cl ; jmp qword ptr [rdx]
0x00000000001a28d1 : mov dh, dl ; jmp qword ptr [rcx]
0x0000000000003a58 : mov dl, 0x1e ; ret
0x000000000019ad14 : mov dl, 0x2b ; out dx, al ; jmp qword ptr [rdx]
0x000000000003d8d5 : mov dl, 0x40 ; jle 0x3d895 ; jmp 0x3d8a2
0x000000000002e31f : mov dl, 0x4d ; add esi, edx ; jmp r14
0x0000000000186c10 : mov dl, 0x5f ; cld ; jmp qword ptr [rdx]
0x0000000000186c18 : mov dl, 0x65 ; cld ; inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x000000000016552d : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187344 : mov dl, 0x7c ; cld ; jmp qword ptr [rdx]
0x00000000000f9502 : mov dl, 0x82 ; sub al, 0 ; ret
0x0000000000187144 : mov dl, 0x86 ; cld ; inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x000000000002f957 : mov dl, 0x8b ; add al, 7 ; ret
0x00000000001ae51c : mov dl, 0x97 ; cmc ; jmp qword ptr [rdx]
0x000000000018763c : mov dl, 0xad ; cld ; inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x00000000000c26c5 : mov dl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a95a4 : mov dl, 0xea ; hlt ; jmp qword ptr [rdx]
0x000000000011efad : mov dl, 0xeb ; or dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x0000000000187555 : mov dl, 0xfc ; call rax
0x000000000019a9fc : mov dl, 0xff ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000114814 : mov dl, 2 ; cmove eax, edx ; ret
0x00000000000f63f2 : mov dl, 4 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f6312 : mov dl, 5 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000009dad3 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009daf2 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009db33 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000144420 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000009f200 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009dab0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a0c70 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000019a9b4 : mov dr1, edi ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000dabf2 : mov dr1, word ptr [rbx + rbp*8 + 0x39] ; ret 0xc789
0x000000000013cdb2 : mov dr1, word ptr [rip - 0xc000001] ; ret
0x00000000000fa372 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000c1cf3 : mov dword ptr [0x2d0], esi ; ret
0x00000000000f09c4 : mov dword ptr [r8 + 0x21], esi ; ret
0x00000000000f09bf : mov dword ptr [r8 + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x0000000000123ba9 : mov dword ptr [r8 + 0x6c], eax ; mov eax, 1 ; ret
0x00000000000a2fba : mov dword ptr [r8 + 4], ecx ; jne 0xa2f8f ; ret
0x0000000000123bba : mov dword ptr [r8], eax ; mov eax, 1 ; ret
0x0000000000117ef8 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000117e54 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000020c70 : mov dword ptr [r9 + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x0000000000108808 : mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x000000000012803c : mov dword ptr [rax + 0x10], edx ; mov eax, 1 ; ret
0x00000000000740d9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074119 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074f79 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000c3cd4 : mov dword ptr [rax + 0x18], esi ; jmp 0xc372a
0x0000000000072f39 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000d1f0b : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000d1f3d : mov dword ptr [rax + 0x20], esi ; xor eax, eax ; ret
0x00000000000f09c5 : mov dword ptr [rax + 0x21], esi ; ret
0x00000000000f09c0 : mov dword ptr [rax + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x00000000000740dd : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000075017 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000003c81e : mov dword ptr [rax + 0x60], edx ; call qword ptr [rbx]
0x0000000000123baa : mov dword ptr [rax + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000127f1c : mov dword ptr [rax + 0xc], edx ; mov eax, 1 ; ret
0x000000000005dcab : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x00000000000a2fbb : mov dword ptr [rax + 4], ecx ; jne 0xa2f8e ; ret
0x000000000007bbca : mov dword ptr [rax + 8], 0 ; ret
0x000000000005dc35 : mov dword ptr [rax + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000123b24 : mov dword ptr [rax + 8], edx ; mov eax, 1 ; ret
0x0000000000103d07 : mov dword ptr [rax + rax - 0x3ed70000], eax ; mov eax, ecx ; ret
0x00000000000e19e0 : mov dword ptr [rax + rax*4], edx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c592 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000012e9ad : mov dword ptr [rax], 0 ; pop rbx ; ret
0x000000000004df7e : mov dword ptr [rax], 0x16 ; jmp 0x4a1bb
0x00000000000f1958 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x0000000000036ec5 : mov dword ptr [rax], 0x16 ; or eax, 0xffffffff ; ret
0x00000000000f4c08 : mov dword ptr [rax], 0x16 ; pop rbx ; ret
0x00000000000f4bc3 : mov dword ptr [rax], 0x16 ; xor eax, eax ; pop rbx ; ret
0x00000000000b05b8 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000006f6c5 : mov dword ptr [rax], 0x89480000 ; ret 0x8b48
0x0000000000081160 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x0000000000081320 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000000f1118 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000bcde5 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000022cb6 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000000a2b43 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004bf31 : mov dword ptr [rax], eax ; jmp 0x4befb
0x0000000000061741 : mov dword ptr [rax], eax ; jmp 0x6170b
0x0000000000123bbb : mov dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000000000cb3bf : mov dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x00000000000e19c6 : mov dword ptr [rax], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000027045 : mov dword ptr [rax], ebx ; jmp 0x2700e
0x0000000000029c87 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29c58
0x000000000002ae57 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ae28
0x000000000004983c : mov dword ptr [rax], ecx ; mov byte ptr [rax + 8], 0 ; ret
0x00000000000265af : mov dword ptr [rax], ecx ; mov eax, 7 ; jmp 0x26582
0x0000000000074665 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000776da : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000f9651 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000117ef9 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000082646 : mov dword ptr [rax], edi ; ret
0x00000000000fa243 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a3811 : mov dword ptr [rax], edx ; jne 0xa380d ; ret
0x00000000000ebb24 : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000745c0 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000117e55 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000f09d3 : mov dword ptr [rax], edx ; or eax, 0xffffffff ; ret
0x00000000000f15bf : mov dword ptr [rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf1591
0x00000000000f181f : mov dword ptr [rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf17f1
0x000000000002fa74 : mov dword ptr [rax], edx ; ret
0x0000000000075291 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000010be7a : mov dword ptr [rax], esi ; jne 0x10be6d ; ret
0x00000000000de81c : mov dword ptr [rax], esp ; xor eax, eax ; jmp 0xde7e9
0x00000000000de81b : mov dword ptr [rax], r12d ; xor eax, eax ; jmp 0xde7ea
0x00000000000cb3be : mov dword ptr [rax], r8d ; or eax, 0xffffffff ; ret
0x00000000000e4162 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005eee1 : mov dword ptr [rbp - 0x11a0], ecx ; jmp rax
0x0000000000058a2c : mov dword ptr [rbp - 0x204], eax ; jmp 0x54ca0
0x000000000004a009 : mov dword ptr [rbp - 0x5b0], ecx ; jmp rax
0x0000000000023423 : mov dword ptr [rbp - 0x68], eax ; call rcx
0x00000000000f7c57 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf7c89
0x00000000000f7d28 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf7d5b
0x0000000000107668 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r14 ; call rax
0x0000000000107920 : mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000106ee5 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000107270 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000001076ec : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001072f0 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000050a5e : mov dword ptr [rbp - 0xb0], eax ; mov rdi, rbx ; call rax
0x00000000000e9ef3 : mov dword ptr [rbp - 0xd], edx ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000045f22 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000113372 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000113371 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002cb07 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000135d46 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000787f7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000bcec8 : mov dword ptr [rbx + 0x10], eax ; mov rdx, rbp ; xor ecx, ecx ; jmp 0xbce9e
0x0000000000078d09 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000101f44 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007edee : mov dword ptr [rbx + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e642 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000135cf3 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000101f74 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b0a3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000012e699 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3a4b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000072f65 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000086757 : mov dword ptr [rbx + 0x30], eax ; call rcx
0x0000000000111291 : mov dword ptr [rbx + 0x30], eax ; mov eax, 1 ; pop rbx ; ret
0x00000000000d4c4e : mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086751 : mov dword ptr [rbx + 0x40], eax ; mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x0000000000036a6f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000007b4cf : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0496 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x0000000000086812 : mov dword ptr [rbx + 0x48], ecx ; mov rdi, r9 ; call rcx
0x000000000007b10b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000007515a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079ae2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007416e : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074e41 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000786e7 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000002cb27 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000101f14 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000374a5 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007b32d : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000086acd : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d9d5f : mov dword ptr [rbx + rdi + 0x24], 0x39da7fbe ; ret 0xc189
0x00000000000da030 : mov dword ptr [rbx + rdi + 0x24], 0x39ec7fbe ; ret 0xc189
0x00000000000db568 : mov dword ptr [rbx + rdi + 4], 0x39da7fbe ; ret 0xc189
0x000000000012e9a2 : mov dword ptr [rbx], 0 ; call 0x12ac68
0x00000000000f4bf2 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000001b70cc : mov dword ptr [rbx], 0x6c70000 ; add byte ptr [rax], al ; ret
0x0000000000122001 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000135f6e : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008680f : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x000000000007b4d2 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ab72 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000f4bb1 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000129798 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000105a25 : mov dword ptr [rbx], ebp ; add al, ch ; ret
0x0000000000074f7c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000086755 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x000000000007b430 : mov dword ptr [rbx], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000019abf4 : mov dword ptr [rbx], edx ; out dx, al ; jmp qword ptr [rdx]
0x000000000007394c : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b0a6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000006e568 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000123b0c : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x0000000000127758 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x00000000001276b5 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000127785 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000021c7d : mov dword ptr [rcx + 0x968], edx ; ret
0x000000000015a522 : mov dword ptr [rcx + 3], edx ; ret
0x000000000015a513 : mov dword ptr [rcx + 4], edx ; ret
0x00000000000a1d31 : mov dword ptr [rcx + 4], esi ; jne 0xa1d42 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000015a584 : mov dword ptr [rcx + 5], edx ; ret
0x000000000015a594 : mov dword ptr [rcx + 6], edx ; ret
0x000000000015a563 : mov dword ptr [rcx + 7], edx ; ret
0x000000000015a554 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000a1d36 : mov dword ptr [rcx + 8], esi ; ret
0x00000000000967f6 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x0000000000020c71 : mov dword ptr [rcx + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x00000000000d9d4d : mov dword ptr [rcx + rdi + 0x24], 0x39ec7cbe ; ret 0xc189
0x00000000000db556 : mov dword ptr [rcx + rdi + 4], 0x39ec7cbe ; ret 0xc189
0x00000000000c5fe3 : mov dword ptr [rcx], 0xdc75d284 ; ret
0x00000000000c600d : mov dword ptr [rcx], 0xdf75d284 ; ret
0x000000000018af85 : mov dword ptr [rcx], 0xf5bfa400 ; call rsp
0x00000000001aa8b5 : mov dword ptr [rcx], 0xf5d6a800 ; jmp qword ptr [rsi]
0x00000000001aa8cd : mov dword ptr [rcx], 0xf5d6c000 ; jmp qword ptr [rsi]
0x00000000001aa8e5 : mov dword ptr [rcx], 0xf5d6d800 ; jmp qword ptr [rsi]
0x00000000001aa8fd : mov dword ptr [rcx], 0xf5d6f000 ; jmp qword ptr [rsi]
0x00000000001aa945 : mov dword ptr [rcx], 0xf5d70800 ; jmp qword ptr [rdi]
0x00000000001aa915 : mov dword ptr [rcx], 0xf5d70800 ; jmp qword ptr [rsi]
0x00000000001a6ae5 : mov dword ptr [rcx], eax ; add byte ptr [rax], cl ; loopne 0x1a6ae5 ; jmp rsp
0x00000000000a31a6 : mov dword ptr [rcx], eax ; jne 0xa3198 ; mov rax, rbx ; pop rbx ; ret
0x0000000000036f1a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000782b7 : mov dword ptr [rcx], eax ; ret
0x00000000000771d4 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000108809 : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000117efc : mov dword ptr [rcx], ecx ; ret
0x0000000000078101 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000117ec8 : mov dword ptr [rcx], edi ; ret
0x000000000008bad7 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x000000000015a4e1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015a500 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015a541 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015a520 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015a561 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015a571 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015a581 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015a591 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015a5a1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015a5b1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015a510 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000015a551 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000117e58 : mov dword ptr [rcx], edx ; ret
0x00000000000a31a5 : mov dword ptr [rcx], r8d ; jne 0xa3199 ; mov rax, rbx ; pop rbx ; ret
0x00000000000e4deb : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000e4e22 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x000000000009e56d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009f3bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009e5ab : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009f3fb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009e62d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009f47d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009cf3b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009dc0e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009cfbd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000038c1f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a0e2d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0e6b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0eed : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009dc90 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009d000 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009d020 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009cfe1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000e4e10 : mov dword ptr [rdi + 0x10c], esi ; xor al, al ; ret
0x000000000009e693 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009f4e3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009d003 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a0f53 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000012e301 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007b033 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000732f7 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000091f6a : mov dword ptr [rdi + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009e675 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009f4c5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009e6b3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009f503 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009cfe5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a0f35 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0f73 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000012e2cf : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000012e2a4 : mov dword ptr [rdi + 0x18], edx ; ret
0x000000000012e241 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012e266 : mov dword ptr [rdi + 0x18], esi ; ret
0x000000000012e244 : mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x0000000000127f7c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000012e3d1 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000d1b7a : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d1b7d : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000867bb : mov dword ptr [rdi + 0x33], esi ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000091e59 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000127f34 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x000000000007b063 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000037759 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000e448e : mov dword ptr [rdi + 0x80], edx ; ret
0x00000000001176e5 : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000009e5ed : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009f43d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009cf5d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a0ead : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009e58b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009f3db : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009e60d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009f45d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009cf1b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0e4b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0ecd : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000014cfe5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014ce28 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d0c8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000014cf75 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014cdb8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003d3b0 : mov dword ptr [rdi + 2], edx ; ret
0x000000000009e457 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009f287 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000014cf05 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014cd48 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ce47 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a0cf7 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000096923 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096883 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000003d3aa : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x0000000000096973 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009f269 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000014ccd8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000968d3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x000000000009ce39 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a0cd9 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000e44e0 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x0000000000096922 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096882 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x000000000009e4eb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009f32b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014cc68 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ceab : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a0d9b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009e50b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009f34b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000014cbf8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009cebb : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a0dbb : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009e4a9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009f2e9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009e52b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009f36b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000014cb88 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ce89 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a0d59 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0ddb : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000f3118 : mov dword ptr [rdi + 8], 0 ; ret
0x000000000007b037 : mov dword ptr [rdi + 8], eax ; ret
0x00000000000f0610 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000038ba4 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000004e743 : mov dword ptr [rdi + 8], edx ; jmp 0x4e70e
0x000000000009f2cb : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009e4c9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009f309 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009e48b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000383a4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000007364f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003cd1a : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a0d3b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0d79 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000f3108 : mov dword ptr [rdi + 8], esi ; ret
0x000000000008c599 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000008c5a2 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x00000000001440e5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144123 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000038b0f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000014446c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c638 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014464c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c5b8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014483c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c538 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144a0d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c4a9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144c0d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c419 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144e0d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c389 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009ddd0 : mov dword ptr [rdi - 1], edx ; ret
0x00000000001447ed : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000144605 : mov dword ptr [rdi - 2], edx ; ret
0x00000000001447e9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000967c7 : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000144bc9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000014429f : mov dword ptr [rdi - 4], edx ; ret
0x000000000009680b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000144bc6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000096825 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000144dc6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000096841 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000144fc6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000038a9a : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000144127 : mov dword ptr [rdi - 8], edx ; ret
0x000000000014429c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144398 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001442e4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c6b8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000048810 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000368f3 : mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000039cfe : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000000f3105 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000091c9a : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x0000000000038a94 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000038b9e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000037a76 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000053856 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000967d2 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x0000000000096950 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009e425 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009e477 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009e404 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009ce04 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009f227 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009dad7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000968c0 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009f255 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009daf5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009f2a7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009db37 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009e455 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009f285 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009ce45 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000096880 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x000000000009e4a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009f2e7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009ce87 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009e4c7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009f307 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009ce97 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000008c597 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000009cea8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009ceb8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009cec8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000003cd2a : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008c59f : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000968b0 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000968d0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x000000000009ce36 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009ce78 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000038a69 : mov dword ptr [rdi], ecx ; ret
0x000000000009e3f4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009f214 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e412 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009f242 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009e464 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009f294 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009ddf0 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009de31 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009de51 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009de61 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009de71 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009de81 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009de00 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009de41 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001fca8 : mov dword ptr [rdi], edx ; ret
0x00000000000a0c84 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a0cb2 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a0d04 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000096931 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000968a1 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x0000000000039cdf : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000096891 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00000000000e44c1 : mov dword ptr [rdi], esi ; xor al, al ; ret
0x0000000000117feb : mov dword ptr [rdx + 0x10], eax ; xor eax, eax ; ret
0x000000000006e357 : mov dword ptr [rdx + 0x140], ecx ; ret
0x0000000000078855 : mov dword ptr [rdx + 0x140], edi ; pop rbx ; ret
0x00000000000780fe : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000782b4 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000121b90 : mov dword ptr [rdx + 0x20], esi ; ret
0x00000000000257a9 : mov dword ptr [rdx + 0x50], ecx ; mov dword ptr [rdx + 0x54], eax ; ret
0x00000000000257ac : mov dword ptr [rdx + 0x54], eax ; ret
0x0000000000121b6c : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000121b70 : mov dword ptr [rdx + 0x68], ecx ; ret
0x000000000015c8a7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000099bcc : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000015c889 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000099bae : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000015c93b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000015c8b9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000158569 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000015c95b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000015c8d9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000158579 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000015c8f9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000015c97b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000099c50 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000015c919 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000015c80b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000099c32 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000001276f1 : mov dword ptr [rdx + 8], edi ; ret
0x00000000000be85a : mov dword ptr [rdx], eax ; add rsp, 0x40 ; mov eax, esi ; pop rbx ; ret
0x000000000015c834 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000015c862 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000015c7b4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000000f2374 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000039d93 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000099b49 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000be05e : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x0000000000036c67 : mov dword ptr [rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000071cff : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000cb111 : mov dword ptr [rdx], ecx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a1d85 : mov dword ptr [rdx], ecx ; jne 0xa1d7d ; ret
0x000000000003cd4c : mov dword ptr [rdx], ecx ; mov dword ptr [rsi], ecx ; ret
0x0000000000074456 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000039ce6 : mov dword ptr [rdx], ecx ; ret
0x00000000000e317b : mov dword ptr [rdx], edi ; ret
0x00000000000be6cb : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000be779 : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x00000000001276ee : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000009218f : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010acd8 : mov dword ptr [rip + 0x2b7ae2], edx ; pop rbp ; ret
0x00000000000fc630 : mov dword ptr [rip + 0x2c1cca], ebx ; pop rbx ; ret
0x00000000000f464a : mov dword ptr [rip + 0x2c9c60], edi ; ret
0x00000000000f24d5 : mov dword ptr [rip + 0x2cd445], eax ; mov rdx, rax ; jmp 0xf2477
0x00000000000f38e6 : mov dword ptr [rip + 0x2cdd44], eax ; mov rdx, rax ; jmp 0xf38c8
0x000000000008aa82 : mov dword ptr [rip + 0x3361e8], eax ; ret
0x0000000000037bf3 : mov dword ptr [rip + 0x386497], eax ; mov eax, edx ; ret
0x0000000000037bdc : mov dword ptr [rip + 0x3864be], edx ; ret
0x0000000000021b1b : mov dword ptr [rip + 0x39c70f], eax ; pop r12 ; ret
0x000000000001f5f0 : mov dword ptr [rip + 0x3a045a], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000225fd : mov dword ptr [rip + 0x3a15fd], edi ; pop rbx ; ret
0x0000000000022222 : mov dword ptr [rip + 0x3a19d8], eax ; pop rbx ; ret
0x0000000000022221 : mov dword ptr [rip + 0x3a19d8], r8d ; pop rbx ; ret
0x00000000000e3f14 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003d2d6 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003cc84 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003cc88 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000efcb6 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000e43ff : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x000000000003d320 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x000000000003d367 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000a3004 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000e3ef7 : mov dword ptr [rsi + 8], 0 ; ret
0x0000000000120cf1 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e3f10 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000b00c1 : mov dword ptr [rsi + rcx], edx ; jne 0xb00be ; ret
0x0000000000117383 : mov dword ptr [rsi - 0x76b7ffd6], eax ; ret 0x8948
0x0000000000120d0f : mov dword ptr [rsi], 0 ; ret
0x00000000000fa6f9 : mov dword ptr [rsi], 0x16 ; ret
0x0000000000096823 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x0000000000120d80 : mov dword ptr [rsi], 0xa ; ret
0x0000000000120d70 : mov dword ptr [rsi], 0xb ; ret
0x0000000000120dc0 : mov dword ptr [rsi], 0xc ; ret
0x00000000000a548e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xa5449
0x00000000000a7c2e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xa7be9
0x00000000000aa22e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xaa1e9
0x0000000000120db0 : mov dword ptr [rsi], 8 ; ret
0x000000000007d4fb : mov dword ptr [rsi], eax ; mov rax, r8 ; ret
0x00000000000fa6ec : mov dword ptr [rsi], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000732fb : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003cd4e : mov dword ptr [rsi], ecx ; ret
0x0000000000117bd0 : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x00000000001176e9 : mov dword ptr [rsi], edi ; ret
0x000000000010c4c9 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x0000000000036735 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x000000000008095c : mov dword ptr [rsp + 0x10], ecx ; call qword ptr [rax]
0x0000000000080a30 : mov dword ptr [rsp + 0x10], ecx ; call rdx
0x0000000000080a2b : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x0000000000105efd : mov dword ptr [rsp + 0x28], eax ; call 0x72126
0x0000000000080842 : mov dword ptr [rsp + 0x28], ebx ; call rax
0x0000000000080809 : mov dword ptr [rsp + 0x28], esi ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000080841 : mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000008083d : mov dword ptr [rsp + 0x30], edx ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000011f95a : mov dword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x00000000001231a4 : mov dword ptr [rsp + 8], eax ; call 0x1f476
0x00000000000867c0 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000028ba2 : mov dword ptr [rsp + 8], eax ; call r12
0x0000000000025bdf : mov dword ptr [rsp + 8], eax ; call r14
0x000000000002652e : mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025ae6 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000012d9d5 : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012e75c : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x000000000007def3 : mov dword ptr [rsp + 8], ecx ; call qword ptr [rax]
0x0000000000129b90 : mov dword ptr [rsp + 8], edi ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000027f22 : mov dword ptr [rsp + 8], esi ; mov rsi, qword ptr [rsp + 0x50] ; call rax
0x00000000001231a3 : mov dword ptr [rsp + 8], r8d ; call 0x1f477
0x0000000000036815 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000039e86 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000369e5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00000000001203e8 : mov dword ptr [rsp], eax ; call qword ptr [r11]
0x0000000000027942 : mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x00000000000cc9d7 : mov dword ptr [rsp], eax ; call rbx
0x000000000011dac4 : mov dword ptr [rsp], ecx ; call r12
0x00000000000bdc0d : mov dword ptr [rsp], edx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x00000000000c1cf2 : mov dword ptr fs:[0x2d0], esi ; ret
0x000000000004df7d : mov dword ptr fs:[rax], 0x16 ; jmp 0x4a1bc
0x00000000000f1957 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000f4c07 : mov dword ptr fs:[rax], 0x16 ; pop rbx ; ret
0x00000000000b05b7 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000008131f : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000bcde4 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000022cb5 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000f9650 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000ebb23 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000f09d2 : mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x00000000000f15be : mov dword ptr fs:[rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf1592
0x00000000000f181e : mov dword ptr fs:[rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf17f2
0x00000000000cb3bd : mov dword ptr fs:[rax], r8d ; or eax, 0xffffffff ; ret
0x0000000000113370 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000105a24 : mov dword ptr fs:[rbx], ebp ; add al, ch ; ret
0x0000000000036f19 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f2373 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c0994 : mov dword ptr fs:[rdx], eax ; mov rax, rdi ; ret
0x0000000000036c66 : mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000be6ca : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000be778 : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000fa6f8 : mov dword ptr fs:[rsi], 0x16 ; ret
0x00000000000fa6eb : mov dword ptr fs:[rsi], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000144600 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000009cdf0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000011f3e4 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000a1b48 : mov eax, 0x10 ; pop rbx ; ret
0x000000000011482a : mov eax, 0x100 ; nop ; ret
0x0000000000114824 : mov eax, 0x101 ; ret
0x0000000000114831 : mov eax, 0x102 ; ret
0x000000000011481c : mov eax, 0x104 ; ret
0x00000000000f0ffd : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000e4e03 : mov eax, 0x16 ; jbe 0xe4e18 ; ret
0x0000000000084797 : mov eax, 0x16 ; je 0x847a7 ; ret
0x00000000000e44b5 : mov eax, 0x16 ; je 0xe44c8 ; ret
0x000000000003e049 : mov eax, 0x1b8 ; add byte ptr [rax + 1], cl ; ret
0x00000000000cb608 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x00000000000a1b6b : mov eax, 0x20 ; pop rbx ; ret
0x00000000000c2570 : mov eax, 0x20 ; ret
0x000000000002ff17 : mov eax, 0x200 ; ret
0x00000000000a1b64 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000c0f99 : mov eax, 0x3948fffb ; ret
0x00000000000d62f5 : mov eax, 0x39c77f04 ; ret 0xc189
0x00000000000d62dd : mov eax, 0x39df7f04 ; ret 0xc189
0x0000000000097499 : mov eax, 0x3d ; jmp 0x97469
0x00000000000a1b5d : mov eax, 0x40 ; pop rbx ; ret
0x00000000000c25c0 : mov eax, 0x40 ; ret
0x0000000000173d3b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000008ca4a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x0000000000129409 : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000001650c4 : mov eax, 0x5c60025 ; ret 0x25b8
0x00000000000eb370 : mov eax, 0x5f ; syscall ; ret
0x00000000000a1b56 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000f7fea : mov eax, 0x64 ; test edx, edx ; cmovne eax, edx ; ret
0x00000000000c1d10 : mov eax, 0x66 ; syscall ; ret
0x00000000000c1d30 : mov eax, 0x68 ; syscall ; ret
0x00000000000c1d20 : mov eax, 0x6b ; syscall ; ret
0x00000000000c1d40 : mov eax, 0x6c ; syscall ; ret
0x00000000000c1d00 : mov eax, 0x6e ; syscall ; ret
0x00000000000c1f40 : mov eax, 0x6f ; syscall ; ret
0x00000000001a9a8d : mov eax, 0x71700001 ; cmc ; call rsp
0x00000000000c2479 : mov eax, 0x7d00 ; ret
0x00000000000c24a8 : mov eax, 0x7e ; ret
0x00000000000c23fb : mov eax, 0x7f ; ret
0x00000000000a1b4f : mov eax, 0x80 ; pop rbx ; ret
0x00000000000c0f5d : mov eax, 0x8948fffb ; ret
0x00000000000eba76 : mov eax, 0x894c1f74 ; ret 0x6348
0x0000000000003150 : mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000123c37 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c242d : mov eax, 0xc975fde8 ; ret
0x000000000010c4b8 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x0000000000108092 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000012aca6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000fa7f0 : mov eax, 0xe4 ; syscall ; ret
0x00000000000c249f : mov eax, 0xfa ; ret
0x00000000000c24c0 : mov eax, 0xfc17 ; ret
0x00000000000c24b0 : mov eax, 0xfffa ; ret
0x00000000000c094c : mov eax, 0xfffffff2 ; ret
0x0000000000108871 : mov eax, 0xffffffff ; add rsp, 8 ; ret
0x0000000000025867 : mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x00000000000753c1 : mov eax, 0xffffffff ; ja 0x753d8 ; ret
0x0000000000117ae0 : mov eax, 0xffffffff ; nop dword ptr [rax] ; ret
0x00000000000739e7 : mov eax, 0xffffffff ; pop r12 ; ret
0x00000000001177ef : mov eax, 0xffffffff ; pop r14 ; ret
0x0000000000075e85 : mov eax, 0xffffffff ; pop r15 ; ret
0x000000000007693d : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000002c2a7 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076c44 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000357de : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000036bf7 : mov eax, 0xffffffff ; ret
0x0000000000048772 : mov eax, 0xffffffff ; test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000f262e : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000164160 : mov eax, 1 ; jg 0x164179 ; neg eax ; ret
0x00000000000a2bd0 : mov eax, 1 ; jg 0xa2be2 ; neg eax ; ret
0x00000000001620b6 : mov eax, 1 ; jl 0x1620c9 ; neg eax ; ret
0x000000000012e8e2 : mov eax, 1 ; jne 0x12e8f7 ; ret
0x000000000012e922 : mov eax, 1 ; jne 0x12e937 ; ret
0x0000000000039ce1 : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x00000000000739d0 : mov eax, 1 ; pop r12 ; ret
0x000000000005386d : mov eax, 1 ; pop r13 ; ret
0x000000000005379f : mov eax, 1 ; pop r14 ; ret
0x0000000000074f0b : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101c6d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000000f8fd2 : mov eax, 1 ; pop rbx ; ret
0x000000000002c050 : mov eax, 1 ; ret
0x00000000000a2ef1 : mov eax, 2 ; ret
0x0000000000046e40 : mov eax, 3 ; jmp 0x46e10
0x00000000000f83b6 : mov eax, 3 ; pop rbx ; pop rbp ; ret
0x00000000000a2f01 : mov eax, 3 ; ret
0x00000000001136c3 : mov eax, 3 ; syscall ; ret
0x00000000000a2f11 : mov eax, 4 ; ret
0x00000000000e520d : mov eax, 5 ; pop r12 ; ret
0x00000000000a2f21 : mov eax, 5 ; ret
0x00000000000a2f31 : mov eax, 6 ; ret
0x00000000000265b1 : mov eax, 7 ; jmp 0x26580
0x000000000010607c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000a2f41 : mov eax, 7 ; ret
0x00000000000a1b72 : mov eax, 8 ; pop rbx ; ret
0x00000000000e426e : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c75eb : mov eax, dword ptr [r12 + 8] ; xor r12d, r12d ; jmp 0xc75c1
0x000000000010791c : mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000a177a : mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x0000000000135d58 : mov eax, dword ptr [rax + 0x108] ; jmp rax
0x00000000000fcd10 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000007448c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000fcac0 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b13c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000011c137 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x11c147 ; ret
0x00000000000f1a58 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xf1a6b ; ret
0x000000000007482c : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000074631 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000001079a0 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000fd427 : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007b688 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000127604 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006ffa3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007ba9c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000007026d : mov eax, dword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x0000000000070b84 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000127eb4 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000487a6 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002cd6e : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000f82a1 : mov eax, dword ptr [rax + 0xc8] ; ret
0x0000000000135c5f : mov eax, dword ptr [rax + 0xe8] ; jmp rax
0x000000000012cff5 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00000000000f827a : mov eax, dword ptr [rax + 8] ; ret
0x0000000000108467 : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x108439 ; leave ; ret
0x000000000002d1fa : mov eax, dword ptr [rax + rbx*8] ; test rax, rax ; je 0x2d20c ; call rax
0x000000000002ff15 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00000000000300d7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002fabf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000116a17 : mov eax, dword ptr [rax + rdx*8 + 4] ; pop rbx ; ret
0x0000000000120355 : mov eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018810d : mov eax, dword ptr [rax] ; add byte ptr [rsp + rbp*8 - 0x16], ah ; jmp rsp
0x000000000012cfea : mov eax, dword ptr [rax] ; jmp rax
0x000000000002cd6c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004bf2e : mov eax, dword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x4befe
0x000000000006173e : mov eax, dword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x6170e
0x000000000002feec : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000487a3 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011c419 : mov eax, dword ptr [rax] ; ret
0x00000000000837c4 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x837d4 ; call rax
0x00000000000d1bf8 : mov eax, dword ptr [rbp + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012db39 : mov eax, dword ptr [rbp + 8] ; mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000f5775 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000bd88b : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000023ff1 : mov eax, dword ptr [rbp - 0x60] ; call rax
0x0000000000072f61 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000121b11 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000c0e78 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0xc0e8a ; call rax
0x000000000012ab3a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x12ab50 ; pop rbx ; ret
0x000000000012aba6 : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x12ab64 ; pop rbx ; ret
0x00000000000c1075 : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0xc108b ; call rax
0x0000000000099bc9 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a177b : mov eax, dword ptr [rcx + 4] ; pop r12 ; ret
0x0000000000158566 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000158576 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000099c4d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000099c6d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000013915a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000013aa32 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000015c860 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000127710 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000099b75 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000015c7b1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000158481 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000015c831 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000099b46 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000007520f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007c5a0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007c5c8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000108160 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x108178 ; ret
0x000000000012e66c : mov eax, dword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e201 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000120cee : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000bd241 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a2b50 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xa2bd8 ; ret
0x00000000000a2b65 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xa2bd8 ; ret
0x0000000000120d67 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012e5e0 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000072fa1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a2b70 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa2bd8 ; ret
0x00000000000a2b8b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xa2bd8 ; ret
0x00000000000a2ba0 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xa2bd8 ; ret
0x00000000000a2bb5 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xa2bd8 ; ret
0x00000000000a2bc0 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa2bd8 ; ret
0x0000000000120d9f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072e91 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000070b81 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007c871 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000071408 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x71420 ; ret
0x00000000000e44d0 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f05c0 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000012d6f1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000121aa1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e009 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000012e019 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000012cff1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012cfe6 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000012b309 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000121a31 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000a3565 : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xa3541 ; ret
0x000000000002f958 : mov eax, dword ptr [rdi + rax] ; ret
0x0000000000072f00 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000072ed0 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000127fa0 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000108175 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000bd340 : mov eax, dword ptr [rdi] ; ret
0x00000000000735f0 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000073600 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000124844 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x124856 ; ret
0x0000000000124843 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x124857 ; ret
0x000000000012bad4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12bae6 ; ret
0x000000000012bad3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12bae7 ; ret
0x00000000000a3634 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xa3630 ; xor eax, eax ; ret
0x0000000000070b5b : mov eax, dword ptr [rdx + 0x48] ; cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000002fea3 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000035753 : mov eax, dword ptr [rdx + rax*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x00000000000a1c59 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa1c49 ; ret
0x000000000008eec6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001211d8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x0000000000076948 : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e3178 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000074667 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000753d0 : mov eax, dword ptr [rdx] ; ret
0x000000000007c581 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7c580 ; ret
0x0000000000133701 : mov eax, dword ptr [rip + 0x2883f9] ; jmp rax
0x00000000001336b1 : mov eax, dword ptr [rip + 0x288441] ; pop r12 ; jmp rax
0x0000000000133651 : mov eax, dword ptr [rip + 0x288499] ; pop r12 ; jmp rax
0x0000000000135226 : mov eax, dword ptr [rip + 0x28a664] ; call qword ptr [rax]
0x0000000000133762 : mov eax, dword ptr [rip + 0x28c128] ; call qword ptr [rax]
0x00000000001121b1 : mov eax, dword ptr [rip + 0x2ad839] ; ret
0x00000000000fd421 : mov eax, dword ptr [rip + 0x2c0a39] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000008263f : mov eax, dword ptr [rip + 0x33b88b] ; mov qword ptr [rax], rdi ; ret
0x0000000000080a68 : mov eax, dword ptr [rip + 0x33d34a] ; xor edi, edi ; call qword ptr [rax]
0x000000000007c851 : mov eax, dword ptr [rip + 0x342949] ; ret
0x0000000000037bb0 : mov eax, dword ptr [rip + 0x3864da] ; ret
0x0000000000037ba0 : mov eax, dword ptr [rip + 0x3864fa] ; ret
0x000000000002fa6d : mov eax, dword ptr [rip + 0x38e365] ; mov qword ptr [rax], rdx ; ret
0x000000000002c161 : mov eax, dword ptr [rip + 0x393959] ; ret
0x00000000000237e1 : mov eax, dword ptr [rip + 0x3a0461] ; ret
0x00000000000237d1 : mov eax, dword ptr [rip + 0x3a0481] ; ret
0x00000000000300d1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000300e1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000d1f39 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x0000000000117fe7 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x000000000002efe1 : mov eax, dword ptr [rsi + rdx*8 + 0x80] ; ret
0x000000000010791d : mov eax, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000745c2 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000aedd4 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000f544a : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000022176 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; jmp rax
0x0000000000021f3f : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000029c89 : mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29c56
0x000000000002ae59 : mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ae26
0x0000000000027040 : mov eax, dword ptr [rsp + 0x28] ; mov qword ptr [rax], rbx ; jmp 0x27013
0x000000000002a55c : mov eax, dword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000028740 : mov eax, dword ptr [rsp + 0x58] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000002813f : mov eax, dword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000c0b64 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x0000000000135f16 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x48 ; ret
0x0000000000036fc6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000f1286 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000f1598 : mov eax, dword ptr [rsp + 8] ; jmp 0xf1530
0x00000000000c75ec : mov eax, dword ptr [rsp + 8] ; xor r12d, r12d ; jmp 0xc75c0
0x00000000000f2410 : mov eax, dword ptr [rsp - 0x68] ; ret
0x0000000000133a24 : mov eax, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000124f14 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f09f7 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fd483 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fd4e4 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000051808 : mov eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000814d2 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022b6a : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000007d61b : mov eax, eax ; nop dword ptr [rax] ; ret
0x000000000003c8c9 : mov eax, eax ; or rax, rdx ; ret
0x0000000000070851 : mov eax, eax ; pop rbx ; ret
0x000000000004f1fa : mov eax, eax ; ret
0x0000000000103f3c : mov eax, eax ; sub eax, r9d ; ret
0x000000000007946a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001974c1 : mov eax, ebp ; call rdx
0x000000000007394a : mov eax, ebp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aed39 : mov eax, ebp ; pop r13 ; pop r14 ; ret
0x0000000000072419 : mov eax, ebp ; pop r13 ; ret
0x000000000006f609 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006da26 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004f143 : mov eax, ebp ; pop rbp ; ret
0x00000000000f4e70 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006edc5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c978d : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f0c5 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000384e3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000012a701 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b0578 : mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000092077 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bda02 : mov eax, ebx ; call rax
0x0000000000117dab : mov eax, ebx ; mov byte ptr [rdi + rdx], 0 ; pop rbx ; ret
0x00000000000f7ebf : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002cc76 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001f6e4 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003407f : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003ca6b : mov eax, ebx ; pop rbx ; ret
0x00000000000383a7 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000093369 : mov eax, ecx ; jmp 0x931cb
0x0000000000030753 : mov eax, ecx ; pop r13 ; ret
0x0000000000085122 : mov eax, ecx ; pop r14 ; ret
0x00000000000306d9 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003576f : mov eax, ecx ; pop rbx ; ret
0x0000000000035779 : mov eax, ecx ; ret
0x0000000000103d89 : mov eax, ecx ; sub eax, edx ; ret
0x0000000000108c1f : mov eax, edi ; add rsp, 8 ; ret
0x000000000002ff40 : mov eax, edi ; and eax, 0x7f ; ret
0x000000000010c566 : mov eax, edi ; and eax, 0xffffff ; ret
0x000000000010c540 : mov eax, edi ; bswap eax ; ret
0x0000000000049719 : mov eax, edi ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000497f5 : mov eax, edi ; cmovae rax, rsi ; ret
0x000000000003c8d1 : mov eax, edi ; cqo ; idiv rsi ; ret
0x00000000000f322a : mov eax, edi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000968e7 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a36ab : mov eax, edi ; nop dword ptr [rax] ; ret
0x00000000000fd5c0 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x0000000000101dfc : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000108e51 : mov eax, edi ; pop rbx ; ret
0x000000000018caf9 : mov eax, edi ; push rsp ; add al, byte ptr fs:[rax] ; ret 0xf88a
0x0000000000022cbc : mov eax, edi ; ret
0x000000000010c550 : mov eax, edi ; ror ax, 8 ; ret
0x000000000003c872 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000010aafa : mov eax, edi ; sar rax, 6 ; ret
0x000000000010c5e6 : mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000103f60 : mov eax, edi ; sub eax, esi ; ret
0x00000000000f2319 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000b4a0c : mov eax, edx ; add rsp, 8 ; ret
0x00000000000c1ccb : mov eax, edx ; jle 0xc1cd6 ; ret
0x000000000005dfc0 : mov eax, edx ; pop r12 ; ret
0x000000000009415c : mov eax, edx ; pop r14 ; ret
0x000000000005365b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004934f : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005de5b : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000039125 : mov eax, edx ; pop rbx ; ret
0x0000000000037bf9 : mov eax, edx ; ret
0x0000000000046d2e : mov eax, edx ; shl eax, 0x1e ; or eax, esi ; ret
0x0000000000103db9 : mov eax, edx ; sub eax, r9d ; ret
0x00000000000be061 : mov eax, esi ; add rsp, 8 ; ret
0x0000000000036b26 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000ba142 : mov eax, esi ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000497ec : mov eax, esi ; nop ; ret
0x00000000001097d5 : mov eax, esi ; pop r12 ; ret
0x00000000000bd31d : mov eax, esi ; pop r14 ; ret
0x00000000000c2794 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c35a : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000496e1 : mov eax, esi ; pop rbx ; ret
0x0000000000049924 : mov eax, esi ; ret
0x0000000000117f3b : mov eax, esi ; shl eax, 4 ; add eax, 8 ; ret
0x00000000000b167b : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000aecb5 : mov eax, esp ; pop r12 ; pop r13 ; ret
0x000000000006cd50 : mov eax, esp ; pop r12 ; ret
0x000000000007c18c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c984 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aecb4 : mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000aebe2 : mov eax, r12d ; pop r12 ; ret
0x000000000007c18b : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000725f5 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aed38 : mov eax, r13d ; pop r13 ; pop r14 ; ret
0x0000000000072418 : mov eax, r13d ; pop r13 ; ret
0x00000000000e50b5 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000051807 : mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000070850 : mov eax, r8d ; pop rbx ; ret
0x000000000004f1f9 : mov eax, r8d ; ret
0x0000000000103f3b : mov eax, r8d ; sub eax, r9d ; ret
0x00000000000f0795 : mov eax, r9d ; pop r13 ; ret
0x00000000000f0865 : mov eax, r9d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000103d88 : mov eax, r9d ; sub eax, edx ; ret
0x0000000000199ebd : mov ebp, 0x1ab00000 ; out dx, al ; call qword ptr [rdi]
0x0000000000199eed : mov ebp, 0x1ba00000 ; out dx, al ; call qword ptr [rcx]
0x00000000000f2549 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x0000000000096f81 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000096f91 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000096f71 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000b9f2f : mov ebp, 0x48ffffe1 ; add esp, 0x18 ; ret
0x000000000013cb41 : mov ebp, 0x63480003 ; ret 0xf66
0x0000000000178ed1 : mov ebp, 0xbd26fff3 ; jmp qword ptr [rsi]
0x00000000001728fd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000001985d7 : mov ebp, 0xd1cffed ; jb 0x1985a2 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000198897 : mov ebp, 0xd1cffed ; ret
0x000000000019884f : mov ebp, 0xd1cffed ; test al, 0xbc ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000178ef1 : mov ebp, 0xd508fff3 ; jmp qword ptr [rsi]
0x0000000000178ed9 : mov ebp, 0xd5e8fff3 ; jmp qword ptr [rsi]
0x0000000000178f81 : mov ebp, 0xd958fff3 ; jmp qword ptr [rsi]
0x0000000000178f59 : mov ebp, 0xd998fff3 ; jmp qword ptr [rsi]
0x0000000000129375 : mov ebp, 0xe8000186 ; ret 0xffd9
0x0000000000096ff1 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000096fd1 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000096fb1 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000970a2 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008a708 : mov ebp, 0xf80148c0 ; ret
0x000000000008a98c : mov ebp, 0xf80148c6 ; ret
0x0000000000174966 : mov ebp, 0xfb67d10d ; ret
0x000000000018ae95 : mov ebp, 0xfd540001 ; hlt ; call rsp
0x00000000000c3c80 : mov ebp, 0xfffffbd0 ; call r15
0x0000000000112594 : mov ebp, 0xfffffdfc ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd120
0x00000000000c5334 : mov ebp, 0xfffffe30 ; add byte ptr [rax - 0x77], cl ; ret 0x775
0x00000000000cc600 : mov ebp, 0xffffff58 ; call rbx
0x00000000000d8dc2 : mov ebp, dword ptr [rax + 0x70] ; mov r11, rax ; mov edx, r8d ; jmp 0xd8ddc
0x0000000000001bed : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000efb9d : mov ebp, dword ptr [rsi] ; call 0xebe04
0x000000000012ae69 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x12ae7d
0x00000000001970d5 : mov ebp, ebp ; jmp qword ptr [rdx]
0x0000000000114bed : mov ebp, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000036b2c : mov ebp, ecx ; jmp rdx
0x000000000006e456 : mov ebp, edx ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000001aa734 : mov ebp, es ; add dword ptr [rax], eax ; sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001adae5 : mov ebp, esi ; jmp qword ptr [rdx]
0x00000000000a5bf5 : mov ebp, esi ; setne dl ; jmp 0xa5c0c
0x00000000000aa955 : mov ebp, esi ; setne dl ; jmp 0xaa96c
0x000000000011dbd5 : mov ebp, esp ; call r15
0x000000000010abc4 : mov ebp, esp ; pop rbp ; ret
0x0000000000108531 : mov ebx, 0x1002b ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000199d05 : mov ebx, 0x14180000 ; out dx, al ; jmp qword ptr [rcx]
0x0000000000097a0c : mov ebx, 0x142c641 ; add bl, al ; mov r10, r8 ; jmp 0x97a12
0x000000000018d67d : mov ebx, 0x2bc40002 ; cli ; jmp rsp
0x000000000010823e : mov ebx, 0x3948002b ; ret 0xda75
0x000000000008abf1 : mov ebx, 0x39fffacf ; ret
0x00000000000ebd81 : mov ebx, 0x48fffffd ; add esp, 0x20 ; pop rbx ; ret
0x0000000000033d73 : mov ebx, 0x89490038 ; ret 0x65e9
0x00000000000d8905 : mov ebx, 0x8dfffffd ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000d0c91 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000d4eb1 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x000000000018abd9 : mov ebx, 0xa9f4fff3 ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x00000000001080c4 : mov ebx, 0xafb8341 ; je 0x1080d3 ; ret
0x0000000000186519 : mov ebx, 0xbbf1fffd ; std ; call qword ptr [rcx]
0x00000000001728fb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000123a86 : mov ebx, 0xc8 ; call rax
0x000000000018660d : mov ebx, 0xdc48fffd ; sti ; call qword ptr [rax]
0x0000000000058a37 : mov ebx, 1 ; jmp 0x54c9f
0x00000000000ba0c2 : mov ebx, 1 ; jmp 0xba091
0x000000000012166b : mov ebx, eax ; jne 0x121609 ; xor eax, eax ; pop rbx ; ret
0x00000000000d8dc6 : mov ebx, eax ; mov edx, r8d ; jmp 0xd8dd8
0x00000000000f0d3f : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012ea19 : mov ebx, eax ; test r14d, r14d ; jle 0x12ea61 ; call 0x12ac39
0x000000000007b47a : mov ebx, edi ; je 0x7b490 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a8331 : mov ebx, edi ; setne dl ; jmp 0xa834b
0x000000000002e826 : mov ebx, edi ; test rax, rax ; je 0x2e836 ; call rax
0x00000000000066b8 : mov ecx, 0x1200001d ; add byte ptr [rax + rax], cl ; push rax ; ret 7
0x0000000000108488 : mov ecx, 0x3948002b ; ret 0x840f
0x00000000000597d1 : mov ecx, 0x89000000 ; ret 0x348
0x00000000001728f9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000018ae3d : mov ecx, 0xd2e40001 ; hlt ; jmp rsp
0x00000000000819d9 : mov ecx, 0xf6000005 ; ret
0x00000000001781a1 : mov ecx, dr0 ; jmp qword ptr [rax]
0x000000000002d581 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2d593 ; call rcx
0x0000000000128226 : mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x0000000000103bf5 : mov ecx, dword ptr [rbp - 0x50] ; mov r10, qword ptr [rbp - 0x48] ; sete dl ; jmp 0x103b93
0x000000000011ec07 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x00000000001115f4 : mov ecx, dword ptr [rcx] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000dbb21 : mov ecx, dword ptr [rcx] ; sti ; call rcx
0x0000000000101fd2 : mov ecx, dword ptr [rcx] ; test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x00000000000471a6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000014284e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000007c591 : mov ecx, dword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x00000000001ade2e : mov ecx, dword ptr [rdx + 0xd1cfff5] ; mov bp, si ; jmp qword ptr [rdx]
0x000000000008eec3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000136257 : mov ecx, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000a3551 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xa354f ; ret
0x00000000000474e6 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000144bc3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144dc3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144fc3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009ce20 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009ce61 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000014cfe3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014cf73 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014cf03 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014ce25 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014cdb5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014cd45 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014ccd5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014cc65 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014cbf5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014cb85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d0c5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000009ce01 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a42e9 : mov ecx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000123f85 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x00000000000af7cb : mov ecx, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [r13] ; call r12
0x0000000000123d8e : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000012099e : mov ecx, dword ptr [rsp + 8] ; call rcx
0x000000000003d6f4 : mov ecx, eax ; jmp 0x3d5dc
0x0000000000120d48 : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f0873 : mov ecx, eax ; pop r12 ; mov eax, r9d ; pop r13 ; ret
0x0000000000096bd6 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000011dfe5 : mov ecx, ebp ; call rbx
0x00000000000a44a2 : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x000000000009685e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000096bc4 : mov ecx, edi ; mov qword ptr [rdx], rcx ; ret
0x0000000000070ee1 : mov ecx, edi ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x000000000012e22f : mov ecx, edx ; cmp rdx, rcx ; je 0x12e248 ; ret
0x000000000012e22e : mov ecx, edx ; cmp rdx, rcx ; je 0x12e249 ; ret
0x000000000003db6b : mov ecx, edx ; jmp 0x3da9c
0x000000000007ba97 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000001a156d : mov ecx, esi ; jmp qword ptr [rdx]
0x00000000000f31b0 : mov ecx, esi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000084795 : mov ecx, esi ; mov eax, 0x16 ; je 0x847a9 ; ret
0x00000000000a3d4b : mov ecx, esi ; mov rdi, qword ptr [r13] ; call r12
0x000000000018dc6c : mov ecx, fs ; add al, byte ptr [rax] ; add ecx, eax ; cli ; call rsp
0x0000000000102188 : mov edi, 0x2000004 ; call rax
0x00000000000b8230 : mov edi, 0x4a7c8d44 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000123285 : mov edi, 0xa00 ; call 0x1f4e7
0x00000000000d6349 : mov edi, 0xb8643b45 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x00000000000d62d9 : mov edi, 0xb86c3b41 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x00000000001781f0 : mov edi, 0xb8fff1e5 ; in eax, -0xf ; jmp rax
0x00000000000dbcc5 : mov edi, 0xbe443b44 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x0000000000178311 : mov edi, 0xc160fffd ; std ; jmp qword ptr [rax - 0x3d]
0x00000000001794c8 : mov edi, 0xc9fff49b ; wait ; hlt ; call rbx
0x000000000006e45a : mov edi, 0xe0 ; call rax
0x000000000006e42e : mov edi, 0xe0 ; jmp rax
0x00000000000a1a34 : mov edi, 0xf000000 ; popfq ; ret 0xea81
0x00000000000c4042 : mov edi, 0xf6000000 ; ret
0x000000000011f4b4 : mov edi, 1 ; call 0x12b757
0x000000000011ff63 : mov edi, 1 ; call 0x3c1e7
0x00000000000eee15 : mov edi, 1 ; call 0xeb087
0x00000000000e493b : mov edi, 7 ; call 0xf0c07
0x000000000002341f : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000075388 : mov edi, dword ptr [rax + 0x40] ; jmp 0x75354
0x00000000000f5323 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000006fbc2 : mov edi, dword ptr [rbp + 0x70] ; cmp edi, ebx ; je 0x6fbd7 ; call 0xebe12
0x00000000000c3c7f : mov edi, dword ptr [rbp - 0x430] ; call r15
0x00000000000bd915 : mov edi, dword ptr [rbp - 0x68] ; call r14
0x00000000000cc5ff : mov edi, dword ptr [rbp - 0xa8] ; call rbx
0x00000000000a3d4e : mov edi, dword ptr [rbp] ; call r12
0x00000000000f4f7a : mov edi, dword ptr [rbp] ; call rbx
0x000000000002376a : mov edi, dword ptr [rbx + 0x18] ; call rax
0x00000000001116ed : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x1116e9 ; pop rbx ; ret
0x00000000000f6a68 : mov edi, dword ptr [rbx] ; call r12
0x0000000000124841 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x124859 ; ret
0x000000000012bad1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12bae9 ; ret
0x00000000000471aa : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006e459 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006e42d : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000000f4f28 : mov edi, dword ptr [rdi] ; call rbx
0x00000000001063f4 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000174c26 : mov edi, dword ptr [rdx] ; ret
0x00000000000f4ee7 : mov edi, dword ptr [rsi] ; call rbx
0x000000000002bfed : mov edi, dword ptr [rsp + 0x10] ; call r15
0x0000000000025bdb : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002652a : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025ae2 : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000029f30 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000028519 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000028b9e : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r12
0x00000000000295b4 : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000027812 : mov edi, dword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002793d : mov edi, dword ptr [rsp + 0x70] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000022124 : mov edi, dword ptr [rsp + 8] ; add rsp, 0x18 ; jmp rax
0x00000000000f5445 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000f5370 : mov edi, dword ptr [rsp] ; call rbx
0x00000000000a3a66 : mov edi, dword ptr [rsp] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000ebe2e : mov edi, dword ptr [rsp] ; mov rdx, rax ; call 0x108108
0x0000000000129597 : mov edi, eax ; call qword ptr [r10]
0x00000000000cce18 : mov edi, eax ; call rbx
0x00000000000bd4e1 : mov edi, eax ; je 0xbd518 ; mov rdi, r15 ; call r14
0x000000000018cb11 : mov edi, eax ; jmp rsp
0x000000000004991d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x49911 ; mov rax, rsi ; ret
0x000000000011ec04 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000039187 : mov edi, ebp ; call 0x38409
0x000000000006fb87 : mov edi, ebp ; call 0xebe0d
0x000000000011feeb : mov edi, ebp ; call qword ptr [rax]
0x000000000012170a : mov edi, ebp ; call qword ptr [rbx]
0x00000000000f6b71 : mov edi, ebp ; call r14
0x000000000011f69a : mov edi, ebp ; call rax
0x00000000000f66b9 : mov edi, ebp ; call rbx
0x000000000012e401 : mov edi, ebp ; call rcx
0x000000000008608b : mov edi, ebp ; call rdx
0x000000000012d9fc : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000128223 : mov edi, ebp ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x0000000000123f82 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000123d8b : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011dfe2 : mov edi, ebp ; mov rcx, r13 ; call rbx
0x0000000000022f05 : mov edi, ebp ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000120b7e : mov edi, ebp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000070ee4 : mov edi, ebp ; xor r8d, r8d ; call r12
0x000000000010bba3 : mov edi, ebx ; call 0x77e84
0x0000000000121b18 : mov edi, ebx ; call qword ptr [rax]
0x000000000002c117 : mov edi, ebx ; call r12
0x000000000002396d : mov edi, ebx ; call r15
0x000000000006d770 : mov edi, ebx ; call r8
0x0000000000050a65 : mov edi, ebx ; call rax
0x000000000011dac1 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x000000000011dbd2 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000efb99 : mov edi, ebx ; mov r13d, dword ptr fs:[r14] ; call 0xebe08
0x0000000000135813 : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000f4e6d : mov edi, ebx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000012099b : mov edi, ebx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000857b6 : mov edi, ebx ; mov rdx, r15 ; call rax
0x0000000000074828 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007462d : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000134ffa : mov edi, ebx ; pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012ce70 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000165048 : mov edi, ebx ; test rdi, rdi ; jne 0x165042 ; pop rbx ; ret
0x0000000000086816 : mov edi, ecx ; call rcx
0x000000000017915c : mov edi, ecx ; lcall ptr [rsi] ; stc ; call rsp
0x0000000000080959 : mov edi, ecx ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x0000000000113269 : mov edi, edi ; call 0x1f4f4
0x00000000000e89f2 : mov edi, edi ; call 0x1f4f8
0x0000000000074c86 : mov edi, edi ; call 0x70f14
0x000000000006fbb2 : mov edi, edi ; call 0xebe0d
0x000000000011fce3 : mov edi, edi ; call qword ptr [rax]
0x00000000000bd4e6 : mov edi, edi ; call r14
0x0000000000085516 : mov edi, edi ; call rax
0x00000000000f5c4e : mov edi, edi ; call rbx
0x000000000006fba8 : mov edi, edi ; mov esi, ebx ; call 0xebe96
0x0000000000085fb3 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000fe0e4 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000108178 : mov edi, edx ; jmp rax
0x00000000000499a1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x49989 ; mov rax, rsi ; ret
0x0000000000105962 : mov edi, esi ; call 0x101c54
0x0000000000105a3b : mov edi, esi ; call 0x101d04
0x00000000000bb897 : mov edi, esi ; call 0xa1cc8
0x00000000000e26e0 : mov edi, esi ; call 0xde9c4
0x000000000008080e : mov edi, esi ; call qword ptr [rax]
0x0000000000120738 : mov edi, esi ; call rax
0x00000000000f5c2e : mov edi, esi ; call rbx
0x000000000019a804 : mov edi, esi ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000f5772 : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000023fee : mov edi, esi ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000105a99 : mov edi, esi ; xor eax, eax ; call 0x101d06
0x000000000001ffe2 : mov edi, esp ; call qword ptr [r14]
0x0000000000187119 : mov edi, esp ; call qword ptr [rdx]
0x00000000000833ba : mov edi, esp ; call rax
0x00000000000f5be5 : mov edi, esp ; call rbx
0x0000000000121269 : mov edi, esp ; call rdx
0x0000000000187059 : mov edi, esp ; inc dword ptr [rax - 0x75] ; cld ; call rax
0x0000000000187099 : mov edi, esp ; jmp qword ptr [rsi]
0x0000000000187259 : mov edi, esp ; jmp rax
0x000000000006fb86 : mov edi, r13d ; call 0xebe0e
0x000000000006fbb1 : mov edi, r15d ; call 0xebe0e
0x000000000006fba7 : mov edi, r15d ; mov esi, ebx ; call 0xebe97
0x00000000001147da : mov edx, 0x104 ; cmove eax, edx ; ret
0x00000000001147bc : mov edx, 0x107 ; cmove eax, edx ; ret
0x0000000000078856 : mov edx, 0x140 ; pop rbx ; ret
0x00000000000b39b2 : mov edx, 0x1dd ; call 0x2fc67
0x000000000018d665 : mov edx, 0x26440002 ; cli ; jmp rsp
0x00000000000d206f : mov edx, 0x75cf3840 ; ret
0x0000000000118ca2 : mov edx, 0x83fffffe ; ret 0x8303
0x00000000000671e2 : mov edx, 0x890000d2 ; ret
0x00000000001740de : mov edx, 0xcac982a4 ; call 0xffffffffaed9df5e
0x00000000000c2449 : mov edx, 0xffffffff ; cmovne rax, rdx ; ret
0x0000000000100170 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000012d9b4 : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000012d9fe : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000001a2b19 : mov edx, dr0 ; call qword ptr [rdi]
0x00000000001a2b69 : mov edx, dr0 ; call qword ptr [rdx]
0x00000000001a29e1 : mov edx, dr0 ; jmp qword ptr [rdi]
0x00000000000e42d3 : mov edx, dword ptr [r12 + 4] ; jmp 0xe42a2
0x0000000000072f35 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c0ff5 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xc100b ; call rdx
0x0000000000074458 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000021f3c : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000a4a38 : mov edx, dword ptr [rax] ; test edx, edx ; jne 0xa4a37 ; ret
0x000000000007e560 : mov edx, dword ptr [rax] ; test rdx, rdx ; je 0x7e570 ; call rdx
0x00000000001070b0 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001076e9 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000103bf9 : mov edx, dword ptr [rbp - 0x48] ; sete dl ; jmp 0x103b8f
0x0000000000131544 : mov edx, dword ptr [rbp - 0xc0] ; jmp 0x131516
0x0000000000078bce : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000010bd5f : mov edx, dword ptr [rbx] ; jmp 0x10bd29
0x000000000013aa2f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000013915d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000010836a : mov edx, dword ptr [rcx] ; test rdx, rdx ; jne 0x108368 ; leave ; ret
0x0000000000164d49 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x164d60 ; call rdx
0x000000000007859e : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; pop rbx ; ret
0x0000000000108171 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000037976 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000086af5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x86af9 ; ret
0x0000000000164c40 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x164c52 ; call rdx
0x0000000000106ee2 : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000d1f07 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x000000000009ce42 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009ce33 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009ce83 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b0091 : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xb0066 ; ret
0x000000000009ce93 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000107560 : mov edx, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000144601 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001449c0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144251 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009e410 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009f240 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ce10 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a0cb0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009e461 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009f291 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009ce51 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009e3f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009f211 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009cdf1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000102184 : mov edx, dword ptr [rsp + 0x18] ; mov edi, 0x2000004 ; call rax
0x0000000000102087 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000bdc11 : mov edx, dword ptr [rsp + 0x28] ; call rax
0x00000000000e42d4 : mov edx, dword ptr [rsp + 4] ; jmp 0xe42a1
0x00000000000ebe32 : mov edx, eax ; call 0x108104
0x00000000001005c0 : mov edx, eax ; jmp 0x1005b5
0x000000000010c8a8 : mov edx, eax ; jmp 0x10c843
0x0000000000127407 : mov edx, eax ; jmp 0x1273cb
0x00000000000494da : mov edx, eax ; jmp 0x494f2
0x000000000004c5e9 : mov edx, eax ; jmp 0x4c61f
0x000000000004c74d : mov edx, eax ; jmp 0x4c76d
0x0000000000070a7e : mov edx, eax ; jmp 0x70a3b
0x00000000000714e9 : mov edx, eax ; jmp 0x714a9
0x0000000000071ace : mov edx, eax ; jmp 0x71a92
0x0000000000071c3a : mov edx, eax ; jmp 0x71bf4
0x0000000000071f29 : mov edx, eax ; jmp 0x71ee9
0x0000000000077461 : mov edx, eax ; jmp 0x77407
0x0000000000077627 : mov edx, eax ; jmp 0x775eb
0x00000000000777c2 : mov edx, eax ; jmp 0x7777d
0x0000000000078043 : mov edx, eax ; jmp 0x78004
0x00000000000781ed : mov edx, eax ; jmp 0x781a6
0x0000000000097a14 : mov edx, eax ; jmp 0x97a0a
0x00000000000a5473 : mov edx, eax ; jmp 0xa5441
0x00000000000a74ee : mov edx, eax ; jmp 0xa7516
0x00000000000a7c13 : mov edx, eax ; jmp 0xa7be1
0x00000000000aa213 : mov edx, eax ; jmp 0xaa1e1
0x00000000000c41a1 : mov edx, eax ; jmp 0xc41bf
0x00000000000c4732 : mov edx, eax ; jmp 0xc46d1
0x00000000000d8dc9 : mov edx, eax ; jmp 0xd8dd5
0x00000000000e4bc4 : mov edx, eax ; jmp 0xe4bb7
0x00000000000f24dc : mov edx, eax ; jmp 0xf2470
0x00000000000f38ed : mov edx, eax ; jmp 0xf38c1
0x00000000000f7c5b : mov edx, eax ; jmp 0xf7c85
0x00000000000f7d2c : mov edx, eax ; jmp 0xf7d57
0x0000000000105a96 : mov edx, eax ; mov rdi, r14 ; xor eax, eax ; call 0x101d09
0x0000000000107274 : mov edx, ebp ; call rax
0x0000000000187f49 : mov edx, ebp ; jmp rsp
0x00000000000a419a : mov edx, ebp ; mov rdi, rbp ; call rbx
0x000000000012a58c : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012269e : mov edx, ebp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000010c436 : mov edx, ebp ; pop r12 ; pop r13 ; jmp rax
0x000000000002081b : mov edx, ebp ; sub rdx, rbx ; inc rdx ; jmp 0x20830
0x00000000000bcecc : mov edx, ebp ; xor ecx, ecx ; jmp 0xbce9a
0x00000000001072f4 : mov edx, ebx ; call rax
0x0000000000085fb6 : mov edx, ebx ; mov rsi, r13 ; call rax
0x0000000000086172 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000857b9 : mov edx, edi ; call rax
0x0000000000110e2a : mov edx, edi ; mov rdi, r12 ; call rax
0x000000000010766c : mov edx, esi ; call rax
0x00000000001a2841 : mov edx, esi ; jmp qword ptr [rax]
0x00000000001a2859 : mov edx, esi ; jmp qword ptr [rcx]
0x00000000000ac75a : mov edx, esi ; lea rdi, qword ptr [rdi + rax*8] ; call 0x38a18
0x0000000000076562 : mov edx, esi ; mov rdi, rbx ; call rax
0x00000000001227a1 : mov edx, esi ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000013625a : mov edx, esp ; add r9, r11 ; call rax
0x0000000000106ee9 : mov edx, esp ; call rax
0x0000000000085513 : mov edx, esp ; mov rdi, r15 ; call rax
0x000000000010c435 : mov edx, r13d ; pop r12 ; pop r13 ; jmp rax
0x00000000000d8dc8 : mov edx, r8d ; jmp 0xd8dd6
0x00000000000748e9 : mov es, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001aa2ae : mov es, word ptr [rbx] ; pop qword ptr [rdx] ; add ecx, dword ptr [rbx + 1] ; ret
0x000000000009f05e : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000004e50a : mov esi, 0x31e9ffff ; ret 0xffff
0x0000000000085d73 : mov esi, 0x3948feda ; ret 0x3574
0x00000000000dbce1 : mov esi, 0x39c77f04 ; ret 0xc189
0x00000000000dbcc9 : mov esi, 0x39df7f04 ; ret 0xc189
0x0000000000187550 : mov esi, 0x40fffcab ; mov dl, 0xfc ; call rax
0x000000000003de3f : mov esi, 0x448d4813 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a341e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000257a6 : mov esi, 0x4a890b40 ; push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x00000000000488de : mov esi, 0x5b0005b5 ; ret
0x00000000001871cc : mov esi, 0x64fffc85 ; test edi, esp ; call rsp
0x000000000004f1f3 : mov esi, 0x77cf390e ; fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000110ce7 : mov esi, 0x8348014f ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x0000000000040797 : mov esi, 0x8349016b ; ret
0x0000000000096a55 : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x1d], 0xf3 ; ret
0x000000000008557c : mov esi, 0x8948feda ; and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x00000000000850f5 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000047262 : mov esi, 0x89490012 ; ret 0x18b9
0x0000000000129d15 : mov esi, 0xa ; mov rdi, rax ; call qword ptr [r10]
0x0000000000096b4d : mov esi, 0xc0844507 ; jne 0x96b41 ; xor eax, eax ; ret
0x00000000001728fe : mov esi, 0xc2c1c0bf ; ret
0x00000000000886bb : mov esi, 0xc3d089d6 ; xor edx, edx ; mov eax, edx ; ret
0x0000000000101ec2 : mov esi, 0xc48348c5 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000969fd : mov esi, 0xc984070c ; jne 0x969f8 ; ret
0x0000000000096a85 : mov esi, 0xca390714 ; je 0x96a88 ; ret
0x00000000001980cf : mov esi, 0xd1cffed ; int1 ; stosd dword ptr [rdi], eax ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000969b1 : mov esi, 0xd2840714 ; jne 0x969b0 ; ret
0x0000000000002bcd : mov esi, 0xf8cbeb8f ; ret
0x00000000000f5c70 : mov esi, 1 ; call rbx
0x00000000000f5e5d : mov esi, 1 ; mov rdi, r12 ; call rbx
0x00000000000f5d29 : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00000000000f5ca1 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x000000000011fcdd : mov esi, 1 ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000129591 : mov esi, 1 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f60e7 : mov esi, 1 ; mov rdi, rbp ; call rbx
0x000000000006d76a : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006cdef : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000f60db : mov esi, 2 ; mov rdi, r12 ; call rbx
0x00000000000f5e4e : mov esi, 2 ; mov rdi, r13 ; call rbx
0x00000000000f5d1a : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00000000000f5c92 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000129750 : mov esi, 2 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f663c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000000f6693 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x00000000000f6713 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x000000000012a9e4 : mov esi, 3 ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f6813 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000129830 : mov esi, 3 ; mov rdi, rax ; call qword ptr [r10]
0x000000000011ffee : mov esi, 4 ; mov rdi, rbp ; call qword ptr [rax]
0x000000000012996b : mov esi, 6 ; mov rdi, rax ; call qword ptr [r10]
0x0000000000129a9b : mov esi, 7 ; mov rdi, rax ; call qword ptr [r10]
0x0000000000129c41 : mov esi, 8 ; mov rdi, rax ; call qword ptr [r10]
0x000000000012966b : mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000a389d : mov esi, dr1 ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000000bd911 : mov esi, dword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x0000000000022f08 : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000029182 : mov esi, dword ptr [rdx] ; adc eax, 0x3d8d4800 ; ret
0x0000000000065aab : mov esi, dword ptr [rip + 0x3584af] ; call rax
0x00000000000641b3 : mov esi, dword ptr [rip + 0x359da7] ; call rax
0x000000000005ed37 : mov esi, dword ptr [rip + 0x35f223] ; call rax
0x0000000000055fcd : mov esi, dword ptr [rip + 0x367f8d] ; call rax
0x000000000004efc3 : mov esi, dword ptr [rip + 0x36ef97] ; call rax
0x0000000000049e8f : mov esi, dword ptr [rip + 0x3740cb] ; call rax
0x00000000000474ea : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000011f498 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00000000000a42ee : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x000000000008278b : mov esi, dword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000000833b5 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000027f27 : mov esi, dword ptr [rsp + 0x50] ; call rax
0x000000000010208c : mov esi, dword ptr [rsp + 8] ; call rax
0x0000000000082ddb : mov esi, dword ptr [rsp] ; jmp rax
0x0000000000093d3a : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x93d55 ; jmp 0x93d0f
0x00000000000781e6 : mov esi, eax ; call 0x74464
0x00000000000eee13 : mov esi, eax ; mov edi, 1 ; call 0xeb089
0x00000000000decd0 : mov esi, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000011f3cd : mov esi, ebp ; add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000011ab0f : mov esi, ebp ; call 0x86d44
0x000000000003a243 : mov esi, ebp ; call r12
0x0000000000085fb9 : mov esi, ebp ; call rax
0x00000000000a3baf : mov esi, ebp ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000086175 : mov esi, ebp ; mov rdi, r12 ; call rax
0x000000000010bba0 : mov esi, ebp ; mov rdi, rbx ; call 0x77e87
0x000000000008632d : mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000134ffe : mov esi, ebp ; pop rbp ; jmp rax
0x000000000006fbaa : mov esi, ebx ; call 0xebe94
0x00000000000f6b6e : mov esi, ebx ; mov rdi, r13 ; call r14
0x0000000000086088 : mov esi, ebx ; mov rdi, r13 ; call rdx
0x000000000012b30d : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012e3fe : mov esi, ebx ; mov rdi, rbp ; call rcx
0x000000000018c069 : mov esi, edi ; call rsp
0x00000000000e26dd : mov esi, edi ; mov rdi, r14 ; call 0xde9c7
0x00000000001245da : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000007dea2 : mov esi, edx ; call qword ptr [rax]
0x00000000001063f8 : mov esi, edx ; call rax
0x0000000000001beb : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000085095 : mov esi, esi ; call rax
0x00000000001af539 : mov esi, esi ; jmp qword ptr [rdi]
0x000000000017a2ed : mov esi, esi ; jmp rsp
0x0000000000127f04 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000c2869 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000001276a4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000dbc5f : mov esi, esi ; ret 0x7408
0x0000000000072492 : mov esi, esp ; call 0x49c49
0x00000000000cb62a : mov esi, esp ; call 0xf0c09
0x0000000000121a35 : mov esi, esp ; call qword ptr [rax]
0x000000000010c433 : mov esi, esp ; mov edx, r13d ; pop r12 ; pop r13 ; jmp rax
0x000000000012db3d : mov esi, esp ; mov rdi, rbp ; call qword ptr [rax]
0x000000000012a58f : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000011dfdf : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000121b15 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000085303 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000011dbcf : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000781e5 : mov esi, r8d ; call 0x74465
0x00000000001a4d64 : mov esp, 0x1800016b ; hlt ; jmp qword ptr [rcx]
0x00000000001a8264 : mov esp, 0x180001a0 ; cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000001aa764 : mov esp, 0x180001c5 ; salc ; cmc ; jmp qword ptr [rsi]
0x0000000000188394 : mov esp, 0x24000097 ; and ebx, ebp ; call rsp
0x00000000001884f4 : mov esp, 0x240000a0 ; jmp 0x188502
0x00000000001651f7 : mov esp, 0x25 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001ac364 : mov esp, 0x280001e1 ; sti ; cmc ; call qword ptr [rax]
0x000000000018afa4 : mov esp, 0x340001c8 ; ret 0xfff5
0x000000000018c284 : mov esp, 0x3400022b ; add eax, edi ; call rsp
0x00000000001a0b64 : mov esp, 0x38000129 ; sal ecx, cl ; call rsi
0x0000000000187d7c : mov esp, 0x4000079 ; movsxd rbp, edx ; call rsp
0x000000000018df94 : mov esp, 0x4000164 ; add esp, edi ; call rsp
0x00000000000f2ec3 : mov esp, 0x401f0f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187efc : mov esp, 0x4400007f ; xchg dl, ch ; call rsp
0x000000000008ca87 : mov esp, 0x440f48c7 ; ret 0xc083
0x000000000012b5c2 : mov esp, 0x440f49dd ; fisttp qword ptr [rax - 0x7d] ; ret
0x000000000008bdc1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008bdf1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008bde1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000018c6dc : mov esp, 0x45000246 ; clc ; jmp rsp
0x0000000000193264 : mov esp, 0x48000050 ; jmp 0x193272
0x000000000018db6c : mov esp, 0x640002db ; mov bl, 0xfa ; call rsp
0x00000000001a1964 : mov esp, 0x68000137 ; jrcxz 0x1a1963 ; call rsp
0x0000000000188534 : mov esp, 0x740000a1 ; jmp 0x188542
0x000000000019bd64 : mov esp, 0x780000db ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rdi]
0x00000000001886f4 : mov esp, 0x840000aa ; xchg eax, ecx ; jmp 0x188702
0x000000000018a984 : mov esp, 0x8400019b ; jg 0x18a985 ; call rsp
0x0000000000028f6e : mov esp, 0x89fffffc ; ret 0xe283
0x0000000000044ede : mov esp, 0x9024 ; add bl, ch ; ret 0x2e66
0x000000000018c43c : mov esp, 0x94000233 ; adc al, 0xf8 ; call rsp
0x00000000001a2b64 : mov esp, 0x98000149 ; mov edx, dr0 ; call qword ptr [rdx]
0x000000000018a38c : mov esp, 0xa4000170 ; fyl2x ; call rsp
0x0000000000188344 : mov esp, 0xb4000095 ; adc bl, ch ; call rsp
0x000000000018b99c : mov esp, 0xb40001fa ; sbb esi, edi ; call rsp
0x000000000016dfc0 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x000000000018c48c : mov esp, 0xc2000236 ; sbb bh, al ; jmp rsp
0x000000000008ca76 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x0000000000189284 : mov esp, 0xc40000ff ; ret
0x000000000017c0ac : mov esp, 0xccfffab6 ; mov dh, 0xfa ; jmp rsp
0x0000000000088b5b : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000019861f : mov esp, 0xd1cffed ; ja 0x1985ea ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000198737 : mov esp, 0xd1cffed ; jno 0x198702 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018a36c : mov esp, 0xd400016f ; sal cl, 1 ; call rsp
0x00000000001b5d64 : mov esp, 0xd800027b ; fdivrp st(7) ; call rdi
0x000000000018969c : mov esp, 0xe4000121 ; xor ebp, edi ; call rsp
0x00000000000937fb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008bdd1 : mov esp, 0xf80148c0 ; ret
0x000000000004fd18 : mov esp, 0xfc239c1 ; ret 0xb941
0x0000000000187095 : mov esp, dr1 ; call qword ptr [rsi + 0x26fffc8b]
0x000000000012ae6c : mov esp, dword ptr [rax] ; jmp 0x12ae7a
0x0000000000021b41 : mov esp, eax ; call 0xa1a28
0x0000000000036b29 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x00000000000a74eb : mov esp, ebx ; mov r10, rax ; jmp 0xa7519
0x000000000018706d : mov esp, edi ; call qword ptr [rax]
0x0000000000187269 : mov esp, edi ; jmp qword ptr [rax]
0x000000000018712d : mov esp, edi ; jmp rdx
0x000000000019377c : mov fs, ebx ; jmp 0x193782
0x0000000000028e92 : mov fs, ecx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000194a69 : mov gs, ebp ; call qword ptr [rax]
0x00000000001948c9 : mov gs, ebp ; call qword ptr [rdx]
0x000000000019771d : mov gs, ebp ; jmp qword ptr [rdx]
0x000000000004e742 : mov qword ptr [r15 + 8], rdx ; jmp 0x4e70f
0x0000000000123b23 : mov qword ptr [r8 + 8], rdx ; mov eax, 1 ; ret
0x000000000004bf30 : mov qword ptr [r8], rax ; jmp 0x4befc
0x0000000000061740 : mov qword ptr [r8], rax ; jmp 0x6170c
0x0000000000123bf2 : mov qword ptr [r8], rax ; mov eax, 1 ; ret
0x0000000000117e57 : mov qword ptr [r9], r10 ; ret
0x0000000000117efb : mov qword ptr [r9], rcx ; ret
0x0000000000117ec7 : mov qword ptr [r9], rdi ; ret
0x00000000000740d8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074118 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074f78 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000072f38 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000d1f0a : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000d1f3c : mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x00000000000740dc : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075016 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000003c81d : mov qword ptr [rax + 0x60], rdx ; call qword ptr [rbx]
0x000000000007bbc9 : mov qword ptr [rax + 8], 0 ; ret
0x000000000005dc34 : mov qword ptr [rax + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000f1117 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000027044 : mov qword ptr [rax], rbx ; jmp 0x2700f
0x0000000000029c86 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29c59
0x000000000002ae56 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ae29
0x000000000004983b : mov qword ptr [rax], rcx ; mov byte ptr [rax + 8], 0 ; ret
0x0000000000074664 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000776d9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000082645 : mov qword ptr [rax], rdi ; ret
0x00000000000fa242 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000745bf : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002fa73 : mov qword ptr [rax], rdx ; ret
0x0000000000075290 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000005eee0 : mov qword ptr [rbp - 0x11a0], rcx ; jmp rax
0x000000000004a008 : mov qword ptr [rbp - 0x5b0], rcx ; jmp rax
0x0000000000023422 : mov qword ptr [rbp - 0x68], rax ; call rcx
0x00000000000f7c56 : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7c8a
0x00000000000f7d27 : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7d5c
0x0000000000107667 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r14 ; call rax
0x000000000002cb06 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000135d45 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000787f6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000078d08 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000012e641 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000135cf2 : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012e698 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b0a2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000e3a4a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000072f64 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000086811 : mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x00000000000f0495 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007b10a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000000786e6 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007b32c : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000086acc : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e9a1 : mov qword ptr [rbx], 0 ; call 0x12ac69
0x00000000000f4bf1 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000135f6d : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ab71 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x0000000000086754 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x0000000000123b0b : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x0000000000021c7c : mov qword ptr [rcx + 0x968], rdx ; ret
0x000000000015a583 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000015a593 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000015a5a3 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000015a5b3 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000771d3 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000015a540 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015a560 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015a570 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015a580 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015a590 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015a5a0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015a5b0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015a550 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000015a530 : mov qword ptr [rcx], rdx ; ret
0x00000000000e4dea : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000038c1e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000009e62c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009f47c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009cfbc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009cf9c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a0eec : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009dc8f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009cfff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009d01f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009cfe0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007b032 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000732f6 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000012e2a3 : mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000012e240 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012e265 : mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000127f7b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x0000000000091e58 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000127f33 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007b062 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000037758 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000e448d : mov qword ptr [rdi + 0x80], rdx ; ret
0x000000000009e5ec : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009f43c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009cf5c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a0eac : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009e60c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009f45c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009cf7c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0ecc : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000014ce27 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014cdb7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014cd47 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014ccd7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009e4ea : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009f32a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014cc67 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ceaa : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a0d9a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009e50a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009f34a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000014cbf7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ceba : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a0dba : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009e52a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009f36a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000014cb87 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ceca : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a0dda : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000f3117 : mov qword ptr [rdi + 8], 0 ; ret
0x00000000000383a3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000038ba3 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007b036 : mov qword ptr [rdi + 8], rax ; ret
0x000000000007364e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003cd19 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000f3107 : mov qword ptr [rdi + 8], rsi ; ret
0x000000000008c5a1 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000001440e4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144122 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000038b0e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000014446b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c637 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014464b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c5b7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014483b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c537 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144a0c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c4a8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144c0c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c418 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144e0c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c388 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009de10 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000038a99 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000001440e8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144126 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000014429b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144397 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001442e3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c6b7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000053855 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000038a68 : mov qword ptr [rdi], r9 ; ret
0x0000000000039cfd : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x00000000000f3104 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000091c99 : mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000037a75 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000009e476 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009db36 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009ce86 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009ce96 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009cea7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009ceb7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009cec7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000003cd29 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008c59e : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009ce77 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000091c18 : mov qword ptr [rdi], rcx ; ret
0x000000000009e463 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009f293 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009de30 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009de50 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009de60 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009de70 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009de80 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009de40 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001fca7 : mov qword ptr [rdi], rdx ; ret
0x00000000000a0d03 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000117fea : mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x000000000006e356 : mov qword ptr [rdx + 0x140], rcx ; ret
0x0000000000078854 : mov qword ptr [rdx + 0x140], rdi ; pop rbx ; ret
0x00000000000780fd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000782b3 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000121b8f : mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000121b6b : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000121b6f : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000015c93a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001585aa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000015c95a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000001585ca : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000015c97a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000001585ea : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000015c80a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000001584da : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000001276f0 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000015c7b3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000127747 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000158483 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000071cfe : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000074455 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000007c593 : mov qword ptr [rdx], rcx ; ret
0x00000000000e317a : mov qword ptr [rdx], rdi ; ret
0x00000000001276ed : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000010acd7 : mov qword ptr [rip + 0x2b7ae2], rdx ; pop rbp ; ret
0x00000000000fc62f : mov qword ptr [rip + 0x2c1cca], rbx ; pop rbx ; ret
0x00000000000f24d4 : mov qword ptr [rip + 0x2cd445], rax ; mov rdx, rax ; jmp 0xf2478
0x00000000000f38e5 : mov qword ptr [rip + 0x2cdd44], rax ; mov rdx, rax ; jmp 0xf38c9
0x000000000008aa81 : mov qword ptr [rip + 0x3361e8], rax ; ret
0x0000000000021b1a : mov qword ptr [rip + 0x39c70f], rax ; pop r12 ; ret
0x00000000000e3f13 : mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000120d2e : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003d2d5 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003cc87 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000e43fe : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000e3ef6 : mov qword ptr [rsi + 8], 0 ; ret
0x0000000000120cfe : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e3f0f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000007d4fa : mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x00000000000732fa : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000117bcf : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000001176e8 : mov qword ptr [rsi], rdi ; ret
0x000000000010c4c8 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000008095b : mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x0000000000080a2f : mov qword ptr [rsp + 0x10], rcx ; call rdx
0x0000000000080808 : mov qword ptr [rsp + 0x28], r14 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000105efc : mov qword ptr [rsp + 0x28], rax ; call 0x72127
0x000000000011f959 : mov qword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x00000000000867bf : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000029f33 : mov qword ptr [rsp + 8], rax ; call r14
0x000000000002851c : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000012e75b : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000007def2 : mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x0000000000129b8f : mov qword ptr [rsp + 8], rdi ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001203e7 : mov qword ptr [rsp], rax ; call qword ptr [r11]
0x0000000000027941 : mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000cc9d6 : mov qword ptr [rsp], rax ; call rbx
0x000000000011dac3 : mov qword ptr [rsp], rcx ; call r12
0x00000000000bdc0c : mov qword ptr [rsp], rdx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x00000000000301bc : mov qword ptr fs:[rax], rdx ; ret
0x000000000012ab70 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000103bf8 : mov r10, qword ptr [rbp - 0x48] ; sete dl ; jmp 0x103b90
0x0000000000097a13 : mov r10, r8 ; jmp 0x97a0b
0x00000000000a74ed : mov r10, rax ; jmp 0xa7517
0x00000000001740dd : mov r10d, 0xcac982a4 ; call 0xffffffffaed9df5f
0x0000000000131543 : mov r10d, dword ptr [rbp - 0xc0] ; jmp 0x131517
0x00000000000d8dc5 : mov r11, rax ; mov edx, r8d ; jmp 0xd8dd9
0x00000000000fbbfb : mov r11b, 0x66 ; nop ; xor eax, eax ; ret
0x00000000001082ed : mov r11d, 0x3948002b ; ret 0xda75
0x00000000000ba0c1 : mov r11d, 1 ; jmp 0xba092
0x00000000000a74ea : mov r12, r11 ; mov r10, rax ; jmp 0xa751a
0x0000000000021b40 : mov r12, rax ; call 0xa1a29
0x000000000012ae6b : mov r12d, dword ptr [rax] ; jmp 0x12ae7b
0x00000000000d8dc1 : mov r13, qword ptr [rax + 0x70] ; mov r11, rax ; mov edx, r8d ; jmp 0xd8ddd
0x00000000001adcf4 : mov r13, r14 ; jmp qword ptr [rdx]
0x00000000000a5bf4 : mov r13, r14 ; setne dl ; jmp 0xa5c0d
0x00000000000aa954 : mov r13, r14 ; setne dl ; jmp 0xaa96d
0x000000000011dbd4 : mov r13, rsp ; call r15
0x00000000000efb9c : mov r13d, dword ptr [r14] ; call 0xebe05
0x00000000000efb9b : mov r13d, dword ptr fs:[r14] ; call 0xebe06
0x00000000001adbd4 : mov r13d, esi ; jmp qword ptr [rdx]
0x000000000007dea1 : mov r14, rdx ; call qword ptr [rax]
0x00000000000bd4e0 : mov r15, rax ; je 0xbd519 ; mov rdi, r15 ; call r14
0x00000000001870a4 : mov r15b, spl ; call rsi
0x00000000000f5771 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000022175 : mov r8, qword ptr [rsp + 0x18] ; add rsp, 0x28 ; jmp rax
0x00000000000cca90 : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000103bf6 : mov r8b, 0x4c ; mov edx, dword ptr [rbp - 0x48] ; sete dl ; jmp 0x103b92
0x0000000000097498 : mov r8d, 0x3d ; jmp 0x9746a
0x0000000000071298 : mov r8d, esi ; ret
0x00000000000f31af : mov r9, rsi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000001a12bc : mov r9b, r14b ; jmp qword ptr [rdx]
0x00000000001a1304 : mov r9b, sil ; jmp qword ptr [rdx]
0x0000000000136256 : mov r9d, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000c094b : mov rax, -0xe ; ret
0x00000000000786f0 : mov rax, -1 ; pop rbx ; ret
0x0000000000036bf6 : mov rax, -1 ; ret
0x00000000000a2ee0 : mov rax, 1 ; ret
0x00000000000a2ef0 : mov rax, 2 ; ret
0x00000000000a2f00 : mov rax, 3 ; ret
0x00000000000a2f10 : mov rax, 4 ; ret
0x00000000000a2f20 : mov rax, 5 ; ret
0x00000000000a2f30 : mov rax, 6 ; ret
0x00000000000a2f40 : mov rax, 7 ; ret
0x0000000000135d57 : mov rax, qword ptr [rax + 0x108] ; jmp rax
0x00000000000fcd0f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000fcabf : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b13b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007482b : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000074630 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000010799f : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b687 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000127603 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006ffa2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007ba9b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000007026c : mov rax, qword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x0000000000070b83 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000127eb3 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f8298 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000f82a0 : mov rax, qword ptr [rax + 0xc8] ; ret
0x0000000000135c5e : mov rax, qword ptr [rax + 0xe8] ; jmp rax
0x000000000012cff4 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000000f8279 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002d1f9 : mov rax, qword ptr [rax + rbx*8] ; test rax, rax ; je 0x2d20d ; call rax
0x000000000002ff34 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002fabe : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000012cfe9 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002cd6b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004bf2d : mov rax, qword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x4beff
0x000000000006173d : mov rax, qword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x6170f
0x00000000000487a2 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011c418 : mov rax, qword ptr [rax] ; ret
0x00000000000837c3 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x837d5 ; call rax
0x00000000000f5774 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000bd88a : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000023ff0 : mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000072f60 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000c0e77 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0xc0e8b ; call rax
0x000000000012ab39 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x12ab51 ; pop rbx ; ret
0x000000000012aba5 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x12ab65 ; pop rbx ; ret
0x00000000000c1074 : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0xc108c ; call rax
0x0000000000158480 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000012e66b : mov rax, qword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e200 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000bd240 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000120d66 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072fa0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000120d9e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072e90 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000070b80 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007c870 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000012d6f0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000121aa0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e008 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000012e018 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000012cff0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012cfe5 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000121a30 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000108174 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002fed2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000001211d7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000e3177 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007c580 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c581 ; ret
0x0000000000133700 : mov rax, qword ptr [rip + 0x2883f9] ; jmp rax
0x00000000001336b0 : mov rax, qword ptr [rip + 0x288441] ; pop r12 ; jmp rax
0x0000000000133650 : mov rax, qword ptr [rip + 0x288499] ; pop r12 ; jmp rax
0x0000000000135225 : mov rax, qword ptr [rip + 0x28a664] ; call qword ptr [rax]
0x0000000000133761 : mov rax, qword ptr [rip + 0x28c128] ; call qword ptr [rax]
0x00000000001121b0 : mov rax, qword ptr [rip + 0x2ad839] ; ret
0x0000000000080a67 : mov rax, qword ptr [rip + 0x33d34a] ; xor edi, edi ; call qword ptr [rax]
0x000000000007c850 : mov rax, qword ptr [rip + 0x342949] ; ret
0x000000000002c160 : mov rax, qword ptr [rip + 0x393959] ; ret
0x00000000000237e0 : mov rax, qword ptr [rip + 0x3a0461] ; ret
0x00000000000237d0 : mov rax, qword ptr [rip + 0x3a0481] ; ret
0x000000000002efe0 : mov rax, qword ptr [rsi + rdx*8 + 0x80] ; ret
0x00000000000f5449 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000021f3e : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002703f : mov rax, qword ptr [rsp + 0x28] ; mov qword ptr [rax], rbx ; jmp 0x27014
0x000000000002a55b : mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000002873f : mov rax, qword ptr [rsp + 0x58] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000002813e : mov rax, qword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000003d078 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000f1285 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000f240f : mov rax, qword ptr [rsp - 0x68] ; ret
0x0000000000133a23 : mov rax, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013355c : mov rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fd482 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fd4e3 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000011c417 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000108d7f : mov rax, r10 ; ret
0x0000000000092191 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b167a : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006cd4f : mov rax, r12 ; pop r12 ; ret
0x000000000006c983 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006edc4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bd31c : mov rax, r14 ; pop r14 ; ret
0x00000000000814d1 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d61a : mov rax, r8 ; nop dword ptr [rax] ; ret
0x000000000007d4fd : mov rax, r8 ; ret
0x0000000000079469 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000073949 : mov rax, rbp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f608 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e251 : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f4e6f : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006f5db : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c978c : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007346f : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b0577 : mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000092076 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bda01 : mov rax, rbx ; call rax
0x00000000000f7ebe : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002cc75 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e60e : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003407e : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003ca6a : mov rax, rbx ; pop rbx ; ret
0x0000000000030752 : mov rax, rcx ; pop r13 ; ret
0x0000000000085121 : mov rax, rcx ; pop r14 ; ret
0x00000000000306d8 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003576e : mov rax, rcx ; pop rbx ; ret
0x0000000000035778 : mov rax, rcx ; ret
0x0000000000108c1e : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000049718 : mov rax, rdi ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000497f4 : mov rax, rdi ; cmovae rax, rsi ; ret
0x000000000003c8d0 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000f3229 : mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000968e6 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a36aa : mov rax, rdi ; nop dword ptr [rax] ; ret
0x0000000000101dfb : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000108e50 : mov rax, rdi ; pop rbx ; ret
0x000000000007c880 : mov rax, rdi ; ret
0x000000000010aaf9 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000b4a0b : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000070367 : mov rax, rdx ; pop r12 ; ret
0x00000000000bcf02 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070129 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e0ee : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000039124 : mov rax, rdx ; pop rbx ; ret
0x0000000000038579 : mov rax, rdx ; ret
0x00000000000be060 : mov rax, rsi ; add rsp, 8 ; ret
0x00000000000497eb : mov rax, rsi ; nop ; ret
0x00000000000c2793 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c359 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000496e0 : mov rax, rsi ; pop rbx ; ret
0x0000000000049923 : mov rax, rsi ; ret
0x0000000000036b2b : mov rbp, r9 ; jmp rdx
0x000000000010abc3 : mov rbp, rsp ; pop rbp ; ret
0x00000000000a8330 : mov rbx, r15 ; setne dl ; jmp 0xa834c
0x000000000012166a : mov rbx, rax ; jne 0x12160a ; xor eax, eax ; pop rbx ; ret
0x00000000000f0d3e : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000007b479 : mov rbx, rdi ; je 0x7b491 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002e825 : mov rbx, rdi ; test rax, rax ; je 0x2e837 ; call rax
0x000000000002d580 : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2d594 ; call rcx
0x0000000000128225 : mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x000000000011ec06 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000007c590 : mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000009ce60 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000123f84 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000123d8d : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012099d : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000003db6a : mov rcx, r10 ; jmp 0x3da9d
0x000000000011dfe4 : mov rcx, r13 ; call rbx
0x00000000000a44a1 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00000000000a3d4a : mov rcx, r14 ; mov rdi, qword ptr [r13] ; call r12
0x000000000003d6f3 : mov rcx, rax ; jmp 0x3d5dd
0x0000000000096bd5 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000096bc3 : mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x00000000000f536f : mov rdi, qword ptr [r12] ; call rbx
0x00000000000a3a65 : mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000a3d4d : mov rdi, qword ptr [r13] ; call r12
0x00000000000f4f79 : mov rdi, qword ptr [r13] ; call rbx
0x00000000000f4ee6 : mov rdi, qword ptr [r14] ; call rbx
0x00000000000f4f27 : mov rdi, qword ptr [r15] ; call rbx
0x000000000002341e : mov rdi, qword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000075387 : mov rdi, qword ptr [rax + 0x40] ; jmp 0x75355
0x00000000000f5322 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000c3c7e : mov rdi, qword ptr [rbp - 0x430] ; call r15
0x00000000000bd914 : mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000cc5fe : mov rdi, qword ptr [rbp - 0xa8] ; call rbx
0x00000000000f6a58 : mov rdi, qword ptr [rbp] ; call r12
0x00000000000f50ae : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000023769 : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000f6a67 : mov rdi, qword ptr [rbx] ; call r12
0x00000000000471a9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006e458 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006e42c : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000001063f3 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000002bfec : mov rdi, qword ptr [rsp + 0x10] ; call r15
0x0000000000025ae1 : mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000028518 : mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027811 : mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002793c : mov rdi, qword ptr [rsp + 0x70] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000022123 : mov rdi, qword ptr [rsp + 8] ; add rsp, 0x18 ; jmp rax
0x00000000000ebe2d : mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0x108109
0x000000000001ffe1 : mov rdi, r12 ; call qword ptr [r14]
0x00000000000833b9 : mov rdi, r12 ; call rax
0x00000000000f5be4 : mov rdi, r12 ; call rbx
0x0000000000121268 : mov rdi, r12 ; call rdx
0x000000000011feea : mov rdi, r13 ; call qword ptr [rax]
0x00000000000f6b70 : mov rdi, r13 ; call r14
0x00000000000f66b8 : mov rdi, r13 ; call rbx
0x000000000008608a : mov rdi, r13 ; call rdx
0x0000000000022f04 : mov rdi, r13 ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000070ee3 : mov rdi, r13 ; xor r8d, r8d ; call r12
0x0000000000105961 : mov rdi, r14 ; call 0x101c55
0x0000000000105a3a : mov rdi, r14 ; call 0x101d05
0x00000000000bb896 : mov rdi, r14 ; call 0xa1cc9
0x00000000000e26df : mov rdi, r14 ; call 0xde9c5
0x000000000008080d : mov rdi, r14 ; call qword ptr [rax]
0x0000000000120737 : mov rdi, r14 ; call rax
0x00000000000f5c2d : mov rdi, r14 ; call rbx
0x0000000000023fed : mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000105a98 : mov rdi, r14 ; xor eax, eax ; call 0x101d07
0x0000000000113268 : mov rdi, r15 ; call 0x1f4f5
0x00000000000e89f1 : mov rdi, r15 ; call 0x1f4f9
0x0000000000074c85 : mov rdi, r15 ; call 0x70f15
0x000000000011fce2 : mov rdi, r15 ; call qword ptr [rax]
0x00000000000bd4e5 : mov rdi, r15 ; call r14
0x0000000000085515 : mov rdi, r15 ; call rax
0x00000000000f5c4d : mov rdi, r15 ; call rbx
0x0000000000085fb2 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000086815 : mov rdi, r9 ; call rcx
0x0000000000129596 : mov rdi, rax ; call qword ptr [r10]
0x00000000000cce17 : mov rdi, rax ; call rbx
0x000000000011ec03 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000011fff3 : mov rdi, rbp ; call qword ptr [rax]
0x0000000000121709 : mov rdi, rbp ; call qword ptr [rbx]
0x000000000011f49c : mov rdi, rbp ; call r14
0x000000000011f699 : mov rdi, rbp ; call rax
0x00000000000a419c : mov rdi, rbp ; call rbx
0x000000000012e400 : mov rdi, rbp ; call rcx
0x0000000000126729 : mov rdi, rbp ; call rdx
0x0000000000123f81 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000123d8a : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011dfe1 : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000120b7d : mov rdi, rbp ; xor eax, eax ; pop rbp ; jmp rdx
0x000000000010bba2 : mov rdi, rbx ; call 0x77e85
0x0000000000121b17 : mov rdi, rbx ; call qword ptr [rax]
0x000000000002c116 : mov rdi, rbx ; call r12
0x000000000002396c : mov rdi, rbx ; call r15
0x000000000006d76f : mov rdi, rbx ; call r8
0x0000000000050a64 : mov rdi, rbx ; call rax
0x000000000011dac0 : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x000000000011dbd1 : mov rdi, rbx ; mov r13, rsp ; call r15
0x0000000000135812 : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000012099a : mov rdi, rbx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000857b5 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x0000000000074827 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007462c : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000134ff9 : mov rdi, rbx ; pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012ce6f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000080958 : mov rdi, rcx ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x0000000000108177 : mov rdi, rdx ; jmp rax
0x000000000011ed05 : mov rdi, rsp ; call rax
0x000000000012cee0 : mov rdi, rsp ; call rdx
0x0000000000108369 : mov rdx, qword ptr [r9] ; test rdx, rdx ; jne 0x108369 ; leave ; ret
0x0000000000072f34 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c0ff4 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xc100c ; call rdx
0x0000000000021f3b : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000007e55f : mov rdx, qword ptr [rax] ; test rdx, rdx ; je 0x7e571 ; call rdx
0x0000000000164d48 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x164d61 ; call rdx
0x0000000000164c3f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x164c53 ; call rdx
0x0000000000144250 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009ce50 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000bdc10 : mov rdx, qword ptr [rsp + 0x28] ; call rax
0x0000000000136259 : mov rdx, r12 ; add r9, r11 ; call rax
0x0000000000106ee8 : mov rdx, r12 ; call rax
0x0000000000085512 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x0000000000107273 : mov rdx, r13 ; call rax
0x00000000000a4199 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000012a58b : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000002081a : mov rdx, r13 ; sub rdx, rbx ; inc rdx ; jmp 0x20831
0x000000000010766b : mov rdx, r14 ; call rax
0x00000000000ac759 : mov rdx, r14 ; lea rdi, qword ptr [rdi + rax*8] ; call 0x38a19
0x0000000000076561 : mov rdx, r14 ; mov rdi, rbx ; call rax
0x00000000001227a0 : mov rdx, r14 ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000857b8 : mov rdx, r15 ; call rax
0x0000000000110e29 : mov rdx, r15 ; mov rdi, r12 ; call rax
0x00000000000494d9 : mov rdx, r8 ; jmp 0x494f3
0x00000000000ebe31 : mov rdx, rax ; call 0x108105
0x0000000000127406 : mov rdx, rax ; jmp 0x1273cc
0x000000000004c5e8 : mov rdx, rax ; jmp 0x4c620
0x000000000004c74c : mov rdx, rax ; jmp 0x4c76e
0x00000000000c41a0 : mov rdx, rax ; jmp 0xc41c0
0x00000000000c4731 : mov rdx, rax ; jmp 0xc46d2
0x00000000000f24db : mov rdx, rax ; jmp 0xf2471
0x00000000000f38ec : mov rdx, rax ; jmp 0xf38c2
0x00000000000f7c5a : mov rdx, rax ; jmp 0xf7c86
0x00000000000f7d2b : mov rdx, rax ; jmp 0xf7d58
0x000000000012269d : mov rdx, rbp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000bcecb : mov rdx, rbp ; xor ecx, ecx ; jmp 0xbce9b
0x00000000001072f3 : mov rdx, rbx ; call rax
0x0000000000085fb5 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000086171 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000bd910 : mov rsi, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x0000000000022f07 : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000065aaa : mov rsi, qword ptr [rip + 0x3584af] ; call rax
0x00000000000641b2 : mov rsi, qword ptr [rip + 0x359da7] ; call rax
0x000000000005ed36 : mov rsi, qword ptr [rip + 0x35f223] ; call rax
0x0000000000055fcc : mov rsi, qword ptr [rip + 0x367f8d] ; call rax
0x000000000004efc2 : mov rsi, qword ptr [rip + 0x36ef97] ; call rax
0x0000000000049e8e : mov rsi, qword ptr [rip + 0x3740cb] ; call rax
0x00000000000474e9 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000011f497 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00000000000a42ed : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000008278a : mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000000833b4 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000027f26 : mov rsi, qword ptr [rsp + 0x50] ; call rax
0x000000000010208b : mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000082dda : mov rsi, qword ptr [rsp] ; jmp rax
0x000000000012a58e : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000011dfde : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000085302 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000085fb8 : mov rsi, r13 ; call rax
0x00000000000a3bae : mov rsi, r13 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000086174 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000085094 : mov rsi, r14 ; call rax
0x00000000000e26dc : mov rsi, r15 ; mov rdi, r14 ; call 0xde9c8
0x000000000003a242 : mov rsi, rbp ; call r12
0x000000000010bb9f : mov rsi, rbp ; mov rdi, rbx ; call 0x77e88
0x000000000008632c : mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000134ffd : mov rsi, rbp ; pop rbp ; jmp rax
0x00000000000f6b6d : mov rsi, rbx ; mov rdi, r13 ; call r14
0x0000000000086087 : mov rsi, rbx ; mov rdi, r13 ; call rdx
0x000000000012b30c : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012e3fd : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000001245d9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000001063f7 : mov rsi, rdx ; call rax
0x0000000000121a34 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012db3c : mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000121b14 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000036b28 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000001adfd4 : mov sil, bpl ; jmp qword ptr [rdx]
0x00000000001ae01c : mov sil, r13b ; jmp qword ptr [rdx]
0x0000000000048828 : mov spl, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000187274 : mov spl, dil ; call rax
0x000000000002b3d9 : mov ss, word ptr [rax + 0x29480000] ; ret 0x8b49
0x00000000000f09c3 : mov word ptr [r8 + 0x21], si ; ret
0x00000000001a8234 : mov word ptr [rax + 0x3ae80001], fs ; cmc ; jmp qword ptr [rcx]
0x000000000018888c : mov word ptr [rax + rax - 0x13e6a100], dr0 ; call rsp
0x00000000000d6b22 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000008c591 : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000000d3adb : mov word ptr [rax - 0x7b], cs ; rol byte ptr [rcx + 0xf], 0x95 ; ret 0x840f
0x000000000009d650 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000000fcaaf : mov word ptr [rax], dx ; ret
0x0000000000192234 : mov word ptr [rax], es ; add al, cl ; mov cl, 0xea ; call qword ptr [rax]
0x00000000001898d4 : mov word ptr [rax], fs ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0x11], dl ; call rsp
0x00000000001a7f34 : mov word ptr [rbp + 0x33080001], ds ; cmc ; jmp qword ptr [rcx]
0x000000000018cd0c : mov word ptr [rbx + 2], dr0 ; add byte ptr [rdi - 8], al ; call rsp
0x000000000015a512 : mov word ptr [rcx + 4], dx ; ret
0x000000000015a553 : mov word ptr [rcx + 8], dx ; ret
0x0000000000196334 : mov word ptr [rcx - 0x56b80000], es ; in eax, dx ; call rcx
0x000000000010c848 : mov word ptr [rcx - 0x77], es ; xor cl, byte ptr [rcx - 0x7d] ; ret 0x4d04
0x000000000015a4e0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015a4d0 : mov word ptr [rcx], dx ; ret
0x0000000000190b34 : mov word ptr [rcx], gs ; add byte ptr [rax], al ; mov byte ptr [rcx - 0x16], ch ; jmp qword ptr [rcx]
0x000000000005e53d : mov word ptr [rcx], ss ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000009e56c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009f3bc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009cefc : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a0e2c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009e674 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009f4c4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009cfe4 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a0f34 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000018a914 : mov word ptr [rdi + 0x790d0001], ss ; call rsp
0x000000000014d0c7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000003d3af : mov word ptr [rdi + 2], dx ; ret
0x0000000000096972 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009f268 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000968d2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x000000000009ce38 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a0cd8 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009f2ca : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009e48a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009ce7a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a0d3a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000001447ec : mov word ptr [rdi - 2], cx ; ret
0x0000000000144604 : mov word ptr [rdi - 2], dx ; ret
0x00000000001447e8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009ce03 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009dad6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000014d0cb : mov word ptr [rdi], cx ; ret
0x000000000009e3f3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009f213 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009cdf3 : mov word ptr [rdi], dx ; ret
0x00000000000a0c83 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x0000000000096930 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000096890 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000e44c0 : mov word ptr [rdi], si ; xor al, al ; ret
0x00000000001a7c34 : mov word ptr [rdx + 0x2ef80001], ds ; cmc ; jmp qword ptr [rcx]
0x00000000001a5c34 : mov word ptr [rdx + 1], dr1 ; add al, ch ; mov bl, 0xf4 ; jmp qword ptr [rcx]
0x000000000018c9dc : mov word ptr [rdx + 2], ds ; add dl, ch ; jbe 0x18c9e2 ; call rsp
0x000000000015c888 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000099bad : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000099c31 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000018ca14 : mov word ptr [rdx + rax], ds ; stc ; js 0x18ca1a ; call rsp
0x00000000001a6434 : mov word ptr [rdx - 0x3377ffff], es ; hlt ; jmp qword ptr [rcx]
0x000000000015c833 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000099b48 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000019d27a : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x0000000000189bd4 : mov word ptr [rip - 0x2d6fffff], dr0 ; out dx, eax ; call rsp
0x000000000018cff4 : mov word ptr [rsi + 0x5d3d0002], es ; stc ; call rsp
0x00000000000efcb5 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003d31f : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003d366 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000e44a3 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001a2034 : mov word ptr [rsi], dr1 ; add dword ptr [rax], eax ; sbb ch, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a0834 : mov word ptr [rsi], fs ; add dword ptr [rax], eax ; sbb dl, cl ; int1 ; call qword ptr [rsi]
0x0000000000036814 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000369e4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000022f03 : movabs al, byte ptr [0x201a748b48ef894c] ; call rax
0x00000000000422f4 : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x000000000001b018 : movabs al, byte ptr [0x880000000000185b] ; ret 0x3b
0x000000000002d8dc : movabs al, byte ptr [0x8948c085480000de] ; ret
0x00000000000b1edc : movabs al, byte ptr [0x8948c08548fff898] ; ret
0x000000000003fbef : movabs al, byte ptr [0x8948fe8944000000] ; ret 0x8948
0x000000000004013e : movabs al, byte ptr [0xc748c03145000000] ; ret
0x0000000000075383 : movabs al, byte ptr [0xeb40788b48000000] ; ret
0x0000000000198806 : movabs al, byte ptr [0xedbc800d1cffedbd] ; jmp qword ptr [rdx]
0x00000000001ab596 : movabs al, byte ptr [0xf55cf40d1cfff55d] ; jmp qword ptr [rdx]
0x0000000000108544 : movabs byte ptr [0xf30474c08548002b], al ; ret
0x00000000001a9366 : movabs byte ptr [0xf4ea900d1cfff4eb], al ; jmp qword ptr [rdx]
0x00000000001ad5b6 : movabs byte ptr [0xf582030d1cfff583], al ; jmp qword ptr [rdx]
0x00000000000d1d63 : movabs dword ptr [0x5bffffff67820fca], eax ; ret
0x00000000000e338e : movabs dword ptr [0x83305e8b49000003], eax ; ret
0x000000000007a201 : movabs dword ptr [0x8341001f0ffffffc], eax ; ret 0x4101
0x000000000002104b : movabs dword ptr [0x8348c6ff411572c1], eax ; ret
0x0000000000069ed9 : movabs dword ptr [0x8949c08548fffb55], eax ; ret
0x00000000001a9746 : movabs dword ptr [0xf4ec060d1cfff4ec], eax ; jmp qword ptr [rdx]
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x00000000000354eb : movabs eax, dword ptr [0x8948c08548fffe9f] ; ret
0x00000000000e390b : movabs eax, dword ptr [0x8948e98948fffa50] ; ret 0x894c
0x00000000001995ce : movabs eax, dword ptr [0xeddba10d1cffedfb] ; jmp qword ptr [rdx]
0x00000000000f6063 : movabs eax, dword ptr [0xff894cf631000008] ; call rbx
0x00000000000361c6 : movapd xmm0, xmm1 ; ret
0x0000000000036344 : movaps xmm0, xmm1 ; jne 0x36359 ; add rsp, 8 ; ret
0x000000000003661f : movaps xmm0, xmm1 ; jne 0x36639 ; add rsp, 8 ; ret
0x00000000000361c7 : movaps xmm0, xmm1 ; ret
0x0000000000142d72 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000142d6e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000142e1c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000362d6 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000360e6 : movd mm0, eax ; ret
0x00000000000362d5 : movd mm0, rax ; mov dword ptr [rdi], edx ; ret
0x00000000000360e5 : movd mm0, rax ; ret
0x0000000000036502 : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x000000000003614f : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036496 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000361c3 : movd mm1, edi ; movapd xmm0, xmm1 ; ret
0x000000000003614e : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000361c2 : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x00000000000365f0 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x000000000003646c : movd xmm0, eax ; ret
0x0000000000036501 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000036495 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000009ced0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009e72d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009f57d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009dd90 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009d09d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009f7e3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009dfd3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000014cd9f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014cd2f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014ccbf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014cc4f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e6cd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009f51d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009d03d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000014cbdf : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e6ed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009f53d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009d05d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000014cb6f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e70d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009f55d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009d07d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000014d18f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d11f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d0af : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d03f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014cfcf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014cf5f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014ceef : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014ce7f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014ce0f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008c4f6 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x000000000014c2fb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000014c36b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009de90 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009f384 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009e544 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009dbb7 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009cee4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009cf27 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009cf17 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009cf98 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009cf58 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009cf78 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009cef8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009d099 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009d039 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009d059 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009d079 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009ced4 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a0df4 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000014cb74 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000099c92 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000099cb2 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000099cd2 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x0000000000099b1c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000099ac6 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000099c93 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000099cb3 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000099cd3 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x0000000000099b1d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000099ac7 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000009ced1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009e72e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009f57e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009dd91 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009d09e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a0fee : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009f7e4 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009dfd4 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a1064 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000014cda0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014cd30 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014ccc0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014cc50 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e6ce : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009f51e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009d03e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a0f8e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000014cbe0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e6ee : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009f53e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009d05e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a0fae : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000014cb70 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e70e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009f55e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009d07e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a0fce : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000014d190 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d120 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d0b0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d040 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014cfd0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014cf60 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014cef0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014ce80 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014ce10 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008c4e3 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8c4f8 ; ret
0x000000000008c4e2 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8c4f9 ; ret
0x000000000008c4f8 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000014c2fc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000014c36c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014caa7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014ca27 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c997 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c917 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c897 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c817 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c797 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c717 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c697 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c617 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c597 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c517 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c487 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c3f7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c367 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009de91 : movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009f385 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009e545 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009dbb8 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009cee5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009cf38 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009dc0b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009cf28 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009cf18 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009cf99 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009cf59 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009cf79 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009cef9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009d09a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009d03a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009d05a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009d07a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009ced5 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a0df5 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000014cb75 : movq qword ptr [rdi], mm1 ; ret
0x00000000000362d4 : movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x00000000000360e4 : movq xmm0, rax ; ret
0x000000000003614d : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000361c1 : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x000000000018b8e8 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0xf7 ; jmp rsp
0x000000000018c34c : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr cs:[rax] ; in al, 5 ; clc ; call rsp
0x0000000000192b4c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], al ; cmp byte ptr [rdx], 0xfa ; jmp qword ptr [rcx]
0x00000000000d0c92 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd0c25
0x00000000000e1e86 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000001b634c : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rdx], 0xf7f5c000 ; call rdx
0x00000000001a084c : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr es:[rax], eax ; and dl, cl ; int1 ; call qword ptr [rbx]
0x000000000018cdf8 : movsb byte ptr [rdi], byte ptr [rsi] ; add ecx, edi ; jmp rsp
0x00000000001a484c : movsb byte ptr [rdi], byte ptr [rsi] ; add word ptr [rax], ax ; xor byte ptr [rcx], cl ; hlt ; jmp rdx
0x00000000001877b9 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000001879b9 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp qword ptr [rax + 0x20fffca3]
0x00000000001879b5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000187839 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp rdx
0x00000000000f50ab : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; jge 0xf50b9 ; call rbx
0x00000000000f50aa : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; jge 0xf50ba ; call rbx
0x00000000000f500a : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f509d : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rcx - 0x75] ; jge 0xf50ab ; call rbx
0x000000000018a390 : movsb byte ptr [rdi], byte ptr [rsi] ; fyl2x ; call rsp
0x00000000001945f9 : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; call rdx
0x0000000000174aa2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001a064c : movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x1a0643 ; jmp qword ptr [rdx]
0x000000000018ce9c : movsb byte ptr [rdi], byte ptr [rsi] ; jge 0x18cea8 ; add byte ptr [rbx + rdx - 7], dl ; call rsp
0x0000000000192fbc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x192fc2
0x00000000001a2d4d : movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rdx]
0x0000000000175cfd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x175d56 ; jmp 0x175c97
0x000000000018da40 : movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x18da40 ; jmp rsp
0x000000000018a270 : movsb byte ptr [rdi], byte ptr [rsi] ; mov bh, 0xf1 ; jmp rsp
0x00000000001887d4 : movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, 0 ; add byte ptr [rsi + rsi*8], al ; jmp 0x1887e2
0x00000000001a191c : movsb byte ptr [rdi], byte ptr [rsi] ; mov dh, cl ; jmp qword ptr [rdx]
0x000000000011a9fd : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000188a4c : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000000b39b8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff7
0x00000000000589f0 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x00000000001aa44c : movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001aad4c : movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add dword ptr [rax], eax ; sbb ah, 0xf5 ; call qword ptr [rax]
0x000000000018c4c8 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0xf8 ; jmp rsp
0x000000000019fb4c : movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rcx], eax ; add al, al ; sbb cl, dh ; jmp qword ptr [rcx]
0x000000000018acbc : movsb byte ptr [rdi], byte ptr [rsi] ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; cmp esp, esi ; call rsp
0x00000000001863b1 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; inc dword ptr [rdx - 0x5b] ; std ; call qword ptr [rdx]
0x00000000001ae564 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edi ; cmc ; jmp qword ptr [rdx]
0x000000000018d134 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, esi ; add al, byte ptr [rax] ; mov ah, 0x7f ; stc ; call rsp
0x000000000019abac : movsd dword ptr [rdi], dword ptr [rsi] ; adc ebp, esi ; jmp qword ptr [rdx]
0x00000000001885ed : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; push rsi ; jmp 0x1885f9
0x00000000001877b5 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call qword ptr [rax + 0x10fffca4]
0x00000000001877b1 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000001879b1 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rax + 0x20fffca4]
0x00000000001879ad : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000187831 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp rdx
0x0000000000025513 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp dword ptr [rax], eax ; call 0x24929
0x00000000000f4f69 : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f4f76 : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rcx - 0x75] ; jge 0xf4f84 ; call rbx
0x00000000000b3677 : movsd dword ptr [rdi], dword ptr [rsi] ; fdiv dword ptr [rax] ; add byte ptr [rcx - 0x76dbdbbc], cl ; ret
0x0000000000176335 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000018ab61 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp rsp
0x0000000000175bf1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000038ac2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000073347 : movsd dword ptr [rdi], dword ptr [rsi] ; sar edx, -1 ; xor eax, eax ; pop rbx ; ret
0x00000000001863b5 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rdx]
0x0000000000186415 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rsi
0x000000000018ab60 : movsd dword ptr [rdi], dword ptr fs:[rsi] ; jmp rsp
0x0000000000036152 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003611b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000b0788 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000039e43 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000036499 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000036480 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000039dfd : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000101ec1 : movsx eax, ch ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000969fc : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x969f9 ; ret
0x0000000000096a84 : movsx edx, byte ptr [rdi + rax] ; cmp edx, ecx ; je 0x96a89 ; ret
0x00000000000969b0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x969b1 ; ret
0x00000000000886ba : movsx edx, dh ; mov eax, edx ; ret
0x00000000000886b9 : movsx edx, sil ; mov eax, edx ; ret
0x00000000000c76f9 : movsxd r10, r10d ; sub r10, rdi ; sub r10, rax ; jmp 0xc7724
0x000000000002e31c : movsxd r14, dword ptr [r10 + r14*4] ; add r14, r10 ; jmp r14
0x0000000000091d5e : movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x000000000002de6c : movsxd r8, dword ptr [rdx + r8*4] ; add r8, rdx ; jmp r8
0x0000000000087021 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014a77b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000014284b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000096860 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000096798 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x00000000000838bf : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000006c75a : movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x000000000004dd93 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x000000000005f060 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r13 ; jmp rax
0x0000000000034ed9 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000054a55 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000006d0b8 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000127094 : movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x0000000000030790 : movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x0000000000022b6c : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c81a : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00000000000a1a67 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003cad6 : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000013cbf7 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000013cab7 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x000000000013cb7e : movsxd rax, ecx ; ret
0x000000000019364c : movsxd rax, edi ; jmp 0x193652
0x0000000000187d81 : movsxd rbp, edx ; call rsp
0x00000000000e2b4e : movsxd rbx, dword ptr [r10 + rbx*4] ; add rbx, r10 ; jmp rbx
0x000000000009d50a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000015fc7d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000009cc99 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000d43ae : movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x0000000000091aed : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000127f06 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000decd2 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000006d180 : movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x000000000013caa9 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000013cb08 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x000000000013cd01 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x000000000018c8e1 : movsxd rdi, eax ; jmp rsp
0x00000000000f25d2 : movsxd rdi, ecx ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000300d5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ff65 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000001874e1 : movsxd rdi, esp ; call qword ptr [rax]
0x0000000000186c2d : movsxd rdi, esp ; call qword ptr [rdx]
0x0000000000186b71 : movsxd rdi, esp ; call rax
0x0000000000186b6d : movsxd rdi, esp ; inc dword ptr [rax + 0x63] ; cld ; call rax
0x0000000000186bad : movsxd rdi, esp ; jmp qword ptr [rsi]
0x0000000000186d6d : movsxd rdi, esp ; jmp rax
0x000000000014291f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000e7279 : movsxd rdx, dword ptr [rax + r11*4] ; add rax, rdx ; jmp rax
0x00000000000647ff : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x0000000000054b84 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000083575 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000b5308 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000c286b : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000006d293 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000b4c6b : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000034c70 : movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x0000000000117ec2 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000117da9 : movsxd rdx, edx ; mov eax, ebx ; mov byte ptr [rdi + rdx], 0 ; pop rbx ; ret
0x00000000000c76fa : movsxd rdx, edx ; sub r10, rdi ; sub r10, rax ; jmp 0xc7723
0x00000000001276a6 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000a1b3f : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a1aff : movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x00000000001a8ff1 : movsxd rsi, ebp ; call rsp
0x000000000018be41 : movsxd rsi, edi ; jmp rsp
0x00000000001635ec : movsxd rsi, esi ; ret 0x7520
0x00000000001a4b99 : movsxd rsi, esp ; jmp qword ptr [rax]
0x00000000001a4be1 : movsxd rsi, esp ; jmp qword ptr [rbx]
0x00000000001a4bc9 : movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000000f05da : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000003d029 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000b0789 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x0000000000039dfe : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000039e44 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x0000000000036153 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003611c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000036481 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000121a27 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012dd4b : movzx eax, al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001215dc : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0060 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000c268e : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000036a6c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000101e90 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005db7c : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000022ca8 : movzx eax, al ; neg eax ; ret
0x0000000000125fd3 : movzx eax, al ; pop r12 ; ret
0x000000000012287d : movzx eax, al ; pop rbp ; ret
0x0000000000048a52 : movzx eax, al ; pop rbx ; neg eax ; pop rbp ; ret
0x00000000000f4bb6 : movzx eax, al ; pop rbx ; ret
0x00000000000375b9 : movzx eax, al ; ret
0x000000000002fd35 : movzx eax, ax ; ret
0x0000000000070b3d : movzx eax, bh ; ret
0x000000000007a724 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125d6e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007bda6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007a5c5 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b1d8 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000073652 : movzx eax, byte ptr [rax] ; ret
0x00000000000883b8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000015fc90 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008bf60 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000883d3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007a5d0 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c49d8 : movzx eax, byte ptr [rdx] ; jmp 0xc417b
0x000000000007a725 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1a87 : movzx eax, cl ; pop rbx ; ret
0x0000000000070b3c : movzx eax, dil ; ret
0x00000000000a1aaf : movzx eax, dl ; pop rbx ; ret
0x000000000002feee : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000e44a0 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000a120a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa1209 ; ret
0x00000000000a12ba : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa12b9 ; ret
0x0000000000160b34 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000883d0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015fc93 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000fbbb2 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000354af : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x35497 ; ret
0x0000000000097dc1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001356c9 : movzx edx, byte ptr [rsi + rcx] ; mov byte ptr [rax + rcx], dl ; ret
0x000000000013726f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000097c53 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000163614 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000163674 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000163664 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000163654 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000163644 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000163634 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000163624 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000014cac0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001608e7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00000000001635fb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000014d1a0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008bf63 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008bf89 : movzx edx, dl ; sub eax, edx ; ret
0x000000000014ca40 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000014d130 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000005650e : movzx esi, byte ptr [rax] ; add r12, 1 ; jmp 0x564e1
0x000000000010c5c3 : movzx esi, si ; or eax, esi ; bswap eax ; ret
0x000000000005650d : movzx r14d, byte ptr [rax] ; add r12, 1 ; jmp 0x564e2
0x00000000000ecdf4 : movzx rax, al ; ret
0x0000000000082652 : mul bl ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000008a7d7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a8e84 : mul dl ; hlt ; jmp qword ptr [rdx]
0x000000000006ae00 : mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x000000000003e2cd : mulps xmm0, xmm0 ; pop r15 ; ret
0x00000000000410ec : mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e2cc : mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000198f6c : neg ch ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000f212e : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001295d6 : neg eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000129bb5 : neg eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000cb3bb : neg eax ; mov dword ptr fs:[rax], r8d ; or eax, 0xffffffff ; ret
0x0000000000036f17 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000c0992 : neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, rdi ; ret
0x0000000000036c64 : neg eax ; mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa6e9 : neg eax ; mov dword ptr fs:[rsi], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007a42a : neg eax ; pop r13 ; ret
0x00000000000a4e03 : neg eax ; pop r15 ; ret
0x0000000000048a56 : neg eax ; pop rbp ; ret
0x0000000000101e93 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005db7f : neg eax ; pop rbx ; ret
0x0000000000022cab : neg eax ; ret
0x0000000000085ba1 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000001087fc : neg ecx ; cmp edx, 0xea ; cmovne eax, ecx ; ret
0x000000000007ded1 : neg edi ; call qword ptr [rax]
0x00000000000ebbda : neg edx ; cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0xebba4
0x00000000000ebaca : neg edx ; cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x00000000000f09d0 : neg edx ; mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x00000000000a4e02 : neg rax ; pop r15 ; ret
0x000000000007ded0 : neg rdi ; call qword ptr [rax]
0x000000000019d1c0 : nop ; adc bh, dl ; call qword ptr [rax]
0x0000000000186ad0 : nop ; adc esp, edi ; call rax
0x000000000018d075 : nop ; add al, byte ptr [rax] ; and al, 0x6a ; stc ; jmp rsp
0x0000000000044ee0 : nop ; add byte ptr [rax], al ; add bl, ch ; ret 0x2e66
0x000000000014c1f7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000002c26c : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a75ce : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000004554e : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000015ff9c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f1bcd : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b24c2 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000b718d : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001b0fb1 : nop ; add dword ptr [rbx], eax ; ret
0x000000000004dd96 : nop ; add rax, r12 ; jmp rax
0x000000000005f063 : nop ; add rax, r13 ; jmp rax
0x00000000000b530b : nop ; add rax, rdx ; jmp rax
0x00000000000aeddf : nop ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000c2c0f : nop ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000237bf : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007347f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001afc6c : nop ; and dh, dh ; jmp qword ptr [rdx]
0x000000000008bdbf : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000096f5f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000970ef : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000001874e8 : nop ; cld ; call qword ptr [rax]
0x00000000001ac3e0 : nop ; cld ; cmc ; call qword ptr [rax]
0x00000000001782a5 : nop ; cld ; jmp qword ptr [rax]
0x000000000019f8d0 : nop ; cld ; jmp qword ptr [rbx]
0x000000000017abe9 : nop ; cli ; call qword ptr [rax]
0x000000000017abe5 : nop ; cli ; inc dword ptr [rax] ; nop ; cli ; call qword ptr [rax]
0x000000000017abed : nop ; cli ; jmp qword ptr [rax]
0x00000000001a82e0 : nop ; cmp esi, ebp ; jmp qword ptr [rcx]
0x0000000000178278 : nop ; cmp esp, 0xff ; mov al, 0x84 ; cld ; call rax
0x00000000001869ec : nop ; cmp esp, edi ; jmp qword ptr [rax]
0x00000000001877a8 : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax]
0x00000000001877a0 : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rax]
0x00000000001a4ca0 : nop ; hlt ; jmp qword ptr [rcx]
0x00000000001b44d9 : nop ; idiv edi ; ret
0x00000000001874f8 : nop ; insb byte ptr [rdi], dx ; cld ; call qword ptr [rax]
0x00000000001a0000 : nop ; int1 ; jmp qword ptr [rcx]
0x0000000000187508 : nop ; jb 0x18750a ; call qword ptr [rax]
0x000000000018746c : nop ; jg 0x18746e ; call qword ptr [rax]
0x000000000018747c : nop ; jge 0x18747e ; call qword ptr [rax]
0x0000000000187474 : nop ; jle 0x187476 ; call qword ptr [rax]
0x0000000000195d94 : nop ; jle 0x195d87 ; jmp qword ptr [rdx]
0x00000000001012ef : nop ; jmp 0x101033
0x00000000000b19af : nop ; jmp 0xb1955
0x0000000000187544 : nop ; jno 0x187546 ; call qword ptr [rax]
0x00000000001a53f0 : nop ; jnp 0x1a53ea ; jmp qword ptr [rcx]
0x0000000000187588 : nop ; lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000187760 : nop ; mov al, 0xfc ; jmp qword ptr [rax]
0x000000000017802c : nop ; mov dh, 0xf0 ; push rax ; mov ch, 0xf0 ; call qword ptr [rax]
0x000000000014441f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000120d6f : nop ; mov dword ptr [rsi], 0xb ; ret
0x00000000001445ff : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000c24af : nop ; mov eax, 0xfffa ; ret
0x00000000000746ff : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b50f : nop ; mov eax, 0xffffffff ; ret
0x00000000000a3c3f : nop ; mov eax, 1 ; ret
0x000000000010791b : nop ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000a2b6f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa2bd9 ; ret
0x00000000000a2bbf : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa2bd9 ; ret
0x00000000000bd33f : nop ; mov eax, dword ptr [rdi] ; ret
0x00000000000735ef : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000037b9f : nop ; mov eax, dword ptr [rip + 0x3864fa] ; ret
0x000000000010c54f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000001449bf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009e40f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000187268 : nop ; mov esp, edi ; jmp qword ptr [rax]
0x00000000000786ef : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007c7ef : nop ; mov rax, -1 ; ret
0x0000000000072f9f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000072e8f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000012cfef : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012d0df : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000003c8cf : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000496df : nop ; mov rax, rsi ; pop rbx ; ret
0x000000000007c58f : nop ; mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000010766a : nop ; mov rdx, r14 ; call rax
0x00000000000e44bf : nop ; mov word ptr [rdi], si ; xor al, al ; ret
0x000000000009cecf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001877b8 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000001877b0 : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000001874e0 : nop ; movsxd rdi, esp ; call qword ptr [rax]
0x00000000000e449f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000186648 : nop ; out -5, eax ; call qword ptr [rax + 0x20fffbe9]
0x00000000001866e8 : nop ; out 0xfb, al ; call qword ptr [rax + 0x20fffbe8]
0x000000000018753c : nop ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000001a5060 : nop ; outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x0000000000187500 : nop ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x000000000003666f : nop ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000001034cf : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016552f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cb70f : nop ; pop rbx ; pop rbp ; ret
0x00000000000865ff : nop ; pop rbx ; ret
0x0000000000187514 : nop ; pop rdi ; cld ; call qword ptr [rax]
0x0000000000192e10 : nop ; pop rdx ; jmp 0x192e16
0x00000000000218f0 : nop ; push rax ; or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x0000000000186f8c : nop ; push rbp ; cld ; jmp qword ptr [rax]
0x000000000010abbf : nop ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000177f04 : nop ; push rsi ; out dx, eax ; call qword ptr [rax + 0x10ffef56]
0x0000000000177f70 : nop ; push rsi ; out dx, eax ; call qword ptr [rax - 0x2f0010aa]
0x0000000000177f08 : nop ; push rsi ; out dx, eax ; call qword ptr [rax]
0x0000000000177f74 : nop ; push rsi ; out dx, eax ; call rax
0x0000000000177f34 : nop ; push rsi ; out dx, eax ; inc dword ptr [rax] ; push rsi ; out dx, eax ; call qword ptr [rax]
0x0000000000177f60 : nop ; push rsi ; out dx, eax ; push qword ptr [rax] ; push rsi ; out dx, eax ; call qword ptr [rax]
0x000000000001b338 : nop ; ret
0x000000000001b038 : nop ; ret 0x3b
0x0000000000002f66 : nop ; ret 0x5bdb
0x00000000001aa8a0 : nop ; salc ; cmc ; jmp qword ptr [rsi]
0x0000000000189bd8 : nop ; shr bh, cl ; call rsp
0x0000000000186938 : nop ; stc ; sti ; jmp rax
0x00000000001ac480 : nop ; std ; cmc ; call qword ptr [rax]
0x000000000007c5cf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000088b6f : nop ; test rsi, rsi ; jne 0x88b82 ; xor rax, rax ; ret
0x00000000001a7d70 : nop ; xor ch, dh ; jmp qword ptr [rcx]
0x0000000000070b6f : nop ; xor eax, eax ; ret
0x00000000001b5c2c : nop ; xor esi, edi ; jmp qword ptr [rdx]
0x000000000008be3f : nop ; xor rax, rax ; ret
0x00000000000368fb : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000011a103 : nop dword ptr [rax + rax] ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000753cb : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000103f5b : nop dword ptr [rax + rax] ; mov eax, edi ; sub eax, esi ; ret
0x000000000009ce0b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000bd23b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000047023 : nop dword ptr [rax + rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000035773 : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x0000000000091613 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000007a61b : nop dword ptr [rax + rax] ; or eax, 0x20 ; jmp 0x7a5f0
0x00000000000d262b : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004701b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000012e98b : nop dword ptr [rax + rax] ; push rbx ; call 0x12ac38
0x000000000002efd3 : nop dword ptr [rax + rax] ; ret
0x000000000004883b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000038523 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a2bdb : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000005dcb5 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000a2eac : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000165265 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000735dd : nop dword ptr [rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000165c59 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000a378d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a377d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a3785 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000108805 : nop dword ptr [rax] ; mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x00000000000c25bd : nop dword ptr [rax] ; mov eax, 0x40 ; ret
0x00000000000c24a5 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x0000000000070b65 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000103f65 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012bf7d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x000000000002ff3d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x0000000000070855 : nop dword ptr [rax] ; mov eax, edi ; ret
0x000000000006decc : nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009dadd : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000091c14 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x00000000000a38e5 : nop dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000003577c : nop dword ptr [rax] ; mov rax, rcx ; pop rbx ; ret
0x0000000000108e4c : nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x000000000007b1d5 : nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000003c865 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2ecd : nop dword ptr [rax] ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000034a9c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002dd61 : nop dword ptr [rax] ; ret
0x00000000000a307c : nop dword ptr [rax] ; sub eax, r8d ; ret
0x000000000006e4d5 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000009da97 : nop dword ptr cs:[rax + rax] ; ret
0x00000000000368fa : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x00000000000753ca : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000a4a02 : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000009e07a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000004701a : nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000002efd2 : nop word ptr [rax + rax] ; ret
0x00000000000d1d32 : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000003c0c2 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a2bda : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x0000000000071f25 : not dword ptr [rcx - 0x3d770000] ; jmp 0x71eed
0x00000000000b4355 : not eax ; add eax, 0x16e ; ret
0x000000000012e8b1 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000036010 : not eax ; and eax, ecx ; ret
0x00000000000366bf : not eax ; and eax, edx ; ret
0x00000000000375f3 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000d1c3e : not eax ; pop rbx ; and eax, 2 ; pop rbp ; ret
0x00000000000375f2 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000018689d : or ah, bh ; call rax
0x00000000001868fd : or ah, bh ; inc dword ptr [rax] ; or bh, ah ; call rax
0x00000000001867d9 : or ah, bh ; jmp rax
0x00000000001381e7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013bdf9 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138215 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000f10fa : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f82a2 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000081162 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000081322 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000004529 : or al, 0 ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; push rax ; ret 0xb
0x000000000000a9c1 : or al, 0 ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret 0xb
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000b39b0 : or al, 0 ; mov edx, 0x1dd ; call 0x2fc69
0x00000000000b5306 : or al, 0 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000000fa1e : or al, 0 ; push rax ; call qword ptr [rax]
0x000000000000a1e6 : or al, 0 ; push rax ; ret 0x10
0x000000000000452e : or al, 0 ; push rax ; ret 0xb
0x00000000000066be : or al, 0 ; push rax ; ret 7
0x0000000000088429 : or al, 0 ; ret
0x000000000000f8e6 : or al, 0 ; ret 0x10
0x000000000004bdfd : or al, 0x13 ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000061615 : or al, 0x13 ; add rdx, r14 ; call qword ptr [r11 + rax*8]
0x0000000000092bd2 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x92bc9 ; ret
0x00000000000883b6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000011dac5 : or al, 0x24 ; call r12
0x00000000000fa4fa : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x0000000000108278 : or al, 0x41 ; pop rsp ; ret
0x00000000001a28b4 : or al, 0x47 ; add dword ptr [rax], eax ; call 0x221a1b4d
0x000000000003cada : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000c0b67 : or al, 0x48 ; add esp, 0x28 ; ret
0x0000000000135f19 : or al, 0x48 ; add esp, 0x48 ; ret
0x0000000000036623 : or al, 0x48 ; add esp, 8 ; ret
0x00000000001176e7 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000006e42b : or al, 0x48 ; mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000000b04ca : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a4cb4 : or al, 0x6b ; add dword ptr [rax], eax ; test al, 0x65 ; hlt ; jmp qword ptr [rcx]
0x00000000001a51b4 : or al, 0x70 ; add dword ptr [rax], eax ; pop rax ; jbe 0x1a51b6 ; jmp qword ptr [rcx]
0x00000000001ac8dc : or al, 0x72 ; cmc ; jmp qword ptr [rdx]
0x000000000008b9b8 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000006ca8a : or al, 0x7e ; ret
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000009d50c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a1895 : or al, 0x83 ; rol byte ptr [rcx], 0x83 ; ret 0x4101
0x0000000000050261 : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000096862 : or al, 0x88 ; add rax, r9 ; jmp rax
0x0000000000091aef : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000005fe70 : or al, 0x89 ; ret 0xeac0
0x00000000000decd4 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000087023 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000008eec4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014a77d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000014284d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000006d182 : or al, 0x8e ; add rsi, rcx ; jmp rsi
0x000000000015fc7f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009cc9b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001a7db4 : or al, 0x9c ; add dword ptr [rax], eax ; or byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000d43b0 : or al, 0xa8 ; add rax, rcx ; jmp rax
0x0000000000002baa : or al, 0xaf ; xbegin 0xfffffffff8c6efae ; ret
0x0000000000142851 : or al, 0xb ; jmp r9
0x000000000009cc9f : or al, 0xb ; jmp rcx
0x0000000000127f08 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000012ef37 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000fdde6 : or al, 0xb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000127f1e : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001aa8b4 : or al, 0xc7 ; add dword ptr [rax], eax ; test al, 0xd6 ; cmc ; jmp qword ptr [rsi]
0x000000000018fc65 : or al, 0xea ; jmp qword ptr [rdx]
0x00000000000a2ac5 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009d793 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000014ccc3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006cd86 : or al, 0xf6 ; ret 0x7404
0x000000000006d4c3 : or al, 0xf6 ; ret 0xf04
0x00000000001b1d09 : or al, 0xf7 ; call qword ptr [rsi]
0x000000000002d582 : or al, 0xf8 ; test rcx, rcx ; je 0x2d592 ; call rcx
0x00000000001868e5 : or al, 0xfc ; jmp qword ptr [rax]
0x0000000000186885 : or al, 0xfc ; jmp rax
0x0000000000189465 : or al, 1 ; add bl, dl ; std ; out dx, al ; jmp rsp
0x00000000000e4d22 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000e4e12 : or al, 1 ; add byte ptr [rax], al ; xor al, al ; ret
0x000000000009d9d0 : or al, 5 ; add byte ptr [rax], al ; ret
0x00000000001946d1 : or al, 7 ; or byte ptr [rbx + rcx + 2], al ; ret
0x00000000000969fe : or al, 7 ; test cl, cl ; jne 0x969f7 ; ret
0x00000000001aeab4 : or al, 9 ; add al, byte ptr [rax] ; cmp byte ptr [rdx - 0xa], bl ; call qword ptr [rdi]
0x00000000001a6ae8 : or al, ah ; hlt ; jmp rsp
0x000000000018c381 : or al, bh ; jmp rsp
0x0000000000123287 : or al, byte ptr [rax] ; add al, ch ; push rcx ; ret 0xffef
0x00000000001373bd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139fd1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001373e1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000cc68 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000b44a : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000129d16 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000120d82 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f5bba : or al, byte ptr [rax] ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call rbx
0x00000000000ce866 : or al, byte ptr [rax] ; jmp 0xce781
0x00000000000346a6 : or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000000a3552 : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000dca04 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x4101
0x00000000000dcd1c : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8001
0x00000000000c6f59 : or al, byte ptr [rcx - 0x7d] ; jmp qword ptr [rcx]
0x00000000000c8828 : or al, byte ptr [rcx - 0x80] ; jmp qword ptr [rcx]
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000013f3a7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008b85b : or al, ch ; lahf ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000001231a7 : or al, ch ; ret
0x000000000002c3d8 : or al, ch ; ret 0x5ab
0x00000000000f9a88 : or al, ch ; ret 0xf3c5
0x00000000000ab728 : or al, ch ; ret 0xf8cd
0x00000000000e411f : or al, ch ; retf ; jmp 0xffffffffc348412b
0x0000000000186901 : or bh, ah ; call rax
0x00000000001868e1 : or bh, ah ; jmp qword ptr [rax]
0x000000000012e0c4 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001a69c8 : or bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000000732dd : or bh, byte ptr [rax - 1] ; ret
0x00000000000d1c3d : or bh, dh ; rcr byte ptr [rbx - 0x7d], 1 ; loopne 0xd1c4e ; pop rbp ; ret
0x00000000000f3c7f : or bh, dh ; ret 0xfc07
0x00000000001aa948 : or bh, dl ; cmc ; jmp qword ptr [rdi]
0x00000000001aa918 : or bh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000a378b : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000117f42 : or bl, al ; nop dword ptr [rax] ; ret
0x0000000000118113 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001a4418 : or bl, bh ; jmp qword ptr [rdi]
0x00000000000d207f : or bl, byte ptr [rbp + 0x75] ; mov ch, 0x83 ; ret 0x8901
0x00000000000022cc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b5e ; ret
0x00000000000bc7d5 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b47d : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005dce2 : or bl, ch ; add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x000000000011c7fc : or bl, ch ; ret 0x4890
0x000000000004e745 : or bl, ch ; ret 0x8348
0x000000000014ce83 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002f96f : or bl, dh ; ret
0x000000000018fc1c : or bpl, r10b ; jmp qword ptr [rdx]
0x00000000000d0b48 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000d473b : or byte ptr [r10], r12b ; jmp 0xd43cf
0x00000000000d0ac1 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000c622b : or byte ptr [r11 + 0x5d], bl ; ret
0x0000000000035718 : or byte ptr [r11 + r9*4 + 0x57], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000d47b1 : or byte ptr [r11], r12b ; jmp 0xd43cf
0x0000000000083df4 : or byte ptr [r13 - 0x77], r9b ; ret
0x0000000000099c2f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d0ab7 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d0b7e : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x00000000001312fc : or byte ptr [r15], 0x94 ; ret 0xea83
0x00000000000b0abd : or byte ptr [r8 + 0x29], cl ; ret
0x0000000000035c35 : or byte ptr [r8 + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d4c
0x00000000000d0b91 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000012e00a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x0000000000099c0e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x00000000001584d8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000121b12 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000012b30a : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000012db3a : or byte ptr [r8 - 0x77], r9b ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x00000000000cbe35 : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x000000000003c0f2 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000008169f : or byte ptr [r8 - 0x7d], cl ; sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x000000000013f582 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d4721 : or byte ptr [r8], r12b ; jmp 0xd43cf
0x0000000000008959 : or byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000e3451 : or byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000099c6e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000130753 : or byte ptr [r9], dil ; ret 0x850f
0x00000000000d0b21 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d4797 : or byte ptr [r9], r12b ; jmp 0xd43cf
0x00000000000d0ae1 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x000000000011f3e3 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x000000000007decc : or byte ptr [rax + 0x21], cl ; xlatb ; neg rdi ; call qword ptr [rax]
0x00000000000b0abe : or byte ptr [rax + 0x29], cl ; ret
0x000000000007cbd7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000030622 : or byte ptr [rax + 0x39], cl ; fbstp dword ptr [rbp + rax - 0x18] ; ret
0x000000000008ae69 : or byte ptr [rax + 0x39], cl ; ret
0x000000000008314b : or byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000da1a3 : or byte ptr [rax + 0x63], cl ; ret 0xc148
0x0000000000035c36 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d4c
0x000000000003606b : or byte ptr [rax + 1], 0xd0 ; shr rax, 0x3f ; ret
0x0000000000101c6c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000123b26 : or byte ptr [rax + 1], bh ; ret
0x0000000000032933 : or byte ptr [rax + 1], cl ; ret
0x00000000000f83b5 : or byte ptr [rax + 3], bh ; pop rbx ; pop rbp ; ret
0x00000000000265b0 : or byte ptr [rax + 7], bh ; jmp 0x26581
0x000000000010607b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000d0b92 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b031d : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000017a090 : or byte ptr [rax - 0x580a000b], ch ; cmc ; jmp rcx
0x00000000000c6328 : or byte ptr [rax - 0x73], cl ; add bl, byte ptr [r11 + 0x5d] ; ret
0x000000000008be69 : or byte ptr [rax - 0x73], cl ; add eax, 0x1f ; ret
0x0000000000091640 : or byte ptr [rax - 0x73], cl ; add eax, 0x6878 ; ret
0x00000000000a37cd : or byte ptr [rax - 0x73], cl ; add eax, 0xbdacb ; ret
0x00000000000a37b9 : or byte ptr [rax - 0x73], cl ; add eax, 0xc84f ; ret
0x000000000008be7d : or byte ptr [rax - 0x73], cl ; add eax, 0xd3ddb ; ret
0x00000000000a2c09 : or byte ptr [rax - 0x73], cl ; add eax, 0xd48f ; ret
0x00000000000c6228 : or byte ptr [rax - 0x73], cl ; or byte ptr [r11 + 0x5d], bl ; ret
0x0000000000038f71 : or byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000fd481 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fd4e2 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000000f5448 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000f5321 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000027f25 : or byte ptr [rax - 0x75], cl ; je 0x27f54 ; push rax ; call rax
0x000000000012e00b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006e489 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000120d9d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000127eb2 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000099c0f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x000000000012e780 : or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x00000000001072f2 : or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000099b20 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010aaf8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x000000000003407d : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000012b30b : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000134ff8 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov esi, ebp ; pop rbp ; jmp rax
0x000000000012ce6e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000d1f3b : or byte ptr [rax - 0x77], cl ; jo 0xd1f67 ; xor eax, eax ; ret
0x0000000000035c32 : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d4c
0x00000000001584d9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012db3b : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x0000000000121b13 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000003a241 : or byte ptr [rax - 0x77], cl ; out dx, al ; call r12
0x000000000007e0ed : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000003c6d8 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000cbe36 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000003c0f3 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d6520 : or byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000d1f3a : or byte ptr [rax - 0x77], r9b ; jo 0xd1f68 ; xor eax, eax ; ret
0x0000000000086af7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000086b69 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x000000000008138b : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002f72e : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000d15fc : or byte ptr [rax - 0x7d], cl ; ret 0x3901
0x0000000000091ca6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000091d2e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000326a2 : or byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000000000eeace : or byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000053743 : or byte ptr [rax - 0x7d], cl ; ret 0x8404
0x0000000000053812 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000816a0 : or byte ptr [rax - 0x7d], cl ; sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x00000000000218a9 : or byte ptr [rax - 0x7f], cl ; ret
0x0000000000076c43 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000013761c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000135d59 : or byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000d4722 : or byte ptr [rax], ah ; jmp 0xd43ce
0x00000000000218f2 : or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000007d3bf : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000013761d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a171 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137641 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000b148a : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000007bbcc : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000001e208 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret 0x17
0x000000000001e430 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret
0x000000000001a3c8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001ac20 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17c5
0x000000000001bef8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17c6
0x0000000000018760 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17cf
0x000000000001a2a8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xlatb ; ret 0x17
0x000000000000895a : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000129c42 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000a1b73 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000120db2 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000113be0 : or byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000f7efd : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000049840 : or byte ptr [rax], al ; ret
0x00000000000a0d3d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0d7b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0d1b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000005d46b : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000013db7e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c75ef : or byte ptr [rbp + 0x31], al ; in al, -0x15 ; ret
0x0000000000117ddd : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x000000000012d47d : or byte ptr [rbp - 0x14438a40], al ; ret 0x1f0f
0x00000000000b0096 : or byte ptr [rbp - 0x3c], dh ; ret
0x00000000000a3699 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000000289f7 : or byte ptr [rbp - 0x77], al ; ret 0x8948
0x0000000000083df5 : or byte ptr [rbp - 0x77], cl ; ret
0x0000000000108469 : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x3f], 0xc9 ; ret
0x00000000001ab5e4 : or byte ptr [rbp - 0xb], bl ; jmp qword ptr [rdx]
0x000000000010799c : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000001af10 : or byte ptr [rbx + 0x18], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x3b
0x0000000000120b7b : or byte ptr [rbx + 0x48], bl ; mov edi, ebp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000003c93 : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x0000000000121c1b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x0000000000074492 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000007a425 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000003cee4 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000073857 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000237c3 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012287b : or byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; ret
0x00000000001903f3 : or byte ptr [rbx + rcx + 0x52], al ; ret
0x00000000001946d3 : or byte ptr [rbx + rcx + 2], al ; ret
0x0000000000035719 : or byte ptr [rbx + rcx*4 + 0x57], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000cbacf : or byte ptr [rbx - 0x76b3fe20], al ; out 0x89, al ; ret 0xca83
0x00000000001b2ac8 : or byte ptr [rbx - 9], cl ; jmp qword ptr [rax]
0x00000000000d47b2 : or byte ptr [rbx], ah ; jmp 0xd43ce
0x00000000001312fa : or byte ptr [rbx], bh ; or byte ptr [r15], 0x94 ; ret 0xea83
0x00000000001a7f38 : or byte ptr [rbx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001312f9 : or byte ptr [rbx], dil ; or byte ptr [r15], 0x94 ; ret 0xea83
0x0000000000039c6b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000005365a : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000001f6e3 : or byte ptr [rcx + 0x415d5bd8], 0x5c ; ret
0x000000000011cf95 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000e2b4d : or byte ptr [rcx + 0x63], cl ; sbb al, 0x9a ; add rbx, r10 ; jmp rbx
0x00000000000384db : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000039120 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000131273 : or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x00000000000384e2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000000e3452 : or byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000099c6f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000d2567 : or byte ptr [rcx - 0x76b7ffa3], cl ; ret
0x0000000000121287 : or byte ptr [rcx - 0x77], al ; call 0x4cd49be1
0x000000000004e741 : or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; ret 0x8348
0x000000000004cda6 : or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; jmp rcx
0x0000000000034b87 : or byte ptr [rcx - 0x77], cl ; ret 0x1074
0x0000000000050d2c : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x48e8
0x00000000000f139f : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx + 0x29], cl ; fimul dword ptr [rcx + 0x39] ; ret 0x820f
0x00000000000d4798 : or byte ptr [rcx], ah ; jmp 0xd43ce
0x0000000000135d5a : or byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x00000000000e4d32 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003719f : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000e4e24 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000816a5 : or byte ptr [rcx], al ; jmp 0x8166f
0x00000000000d0b67 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d0ae2 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000b0093 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x00000000000e0d97 : or byte ptr [rcx], bh ; ret 0x1372
0x0000000000130754 : or byte ptr [rcx], bh ; ret 0x850f
0x00000000000d0b22 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000001a7db8 : or byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x000000000010ac30 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000002474c : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e3260 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000048f02 : or byte ptr [rcx], dh ; ror byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x00000000001765be : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001aa534 : or byte ptr [rdi + 0xb], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000000de818 : or byte ptr [rdi + rax + 0x44], dh ; mov dword ptr [rax], esp ; xor eax, eax ; jmp 0xde7ed
0x0000000000059f6e : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000055df7 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000055176 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000055a37 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x00000000001b1d08 : or byte ptr [rdi + rsi*8], cl ; call qword ptr [rsi]
0x00000000001a50a8 : or byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x00000000000296d4 : or byte ptr [rdi], 0x94 ; ret 0xb60f
0x00000000001312fd : or byte ptr [rdi], 0x94 ; ret 0xea83
0x00000000000fa15a : or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x000000000002fd34 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000007b32f : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000073651 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000c3b2c : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000022ca7 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000048a51 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; neg eax ; pop rbp ; ret
0x00000000000465b8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000142e1b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000008b13c : or byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x0000000000021f7f : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc031
0x00000000001aef2b : or byte ptr [rdx + 0xe], al ; adc byte ptr [rbx + 0xa550202], al ; ret
0x000000000019e4d0 : or byte ptr [rdx - 0x10], 0xff ; ret
0x0000000000192dc8 : or byte ptr [rdx - 0x15], bl ; jmp qword ptr [rsi]
0x00000000001788c4 : or byte ptr [rdx - 0x6e38000e], dl ; call rax
0x000000000017819c : or byte ptr [rdx - 0x732f000f], 0xf1 ; jmp qword ptr [rax]
0x00000000000d473c : or byte ptr [rdx], ah ; jmp 0xd43ce
0x000000000010c30b : or byte ptr [rdx], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000d0ac2 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d0b49 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000000f05c2 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000f05c1 : or byte ptr [rip + 0x100f], r12b ; ret
0x000000000002a296 : or byte ptr [rip + 0x29480000], al ; ret 0x8b49
0x00000000000f08b8 : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9e75
0x00000000000d0bb5 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000009c821 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000011fcdc : or byte ptr [rsi + 1], bh ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000099c30 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d0b7f : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000001a7b78 : or byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000d0ab8 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003c92 : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d4a1a : or byte ptr gs:[rax - 0x77], cl ; ret
0x00000000000f7efc : or byte ptr gs:[rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000165e20 : or ch, 0xeb ; call qword ptr [rax]
0x0000000000189561 : or ch, bh ; jmp rsp
0x0000000000093d41 : or ch, bl ; ret 0x1f0f
0x00000000000fd424 : or ch, byte ptr [rax + rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000018fc1d : or ch, dl ; jmp qword ptr [rdx]
0x0000000000178ef4 : or ch, dl ; jmp qword ptr [rsi]
0x000000000018fe51 : or ch, dl ; jmp rcx
0x000000000003686b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000b015e : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000075cd8 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000000e3ad6 : or cl, byte ptr [rax - 0x77] ; ret 0x1e8
0x0000000000041bbc : or cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x0000000000129ffa : or cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x00000000000b2fba : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c41a9 : or cl, byte ptr [rax - 0x7d] ; ret 0x8001
0x000000000005e5a4 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000074457 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x000000000010c5e5 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x0000000000136258 : or cl, byte ptr [rcx + rcx*4 - 0x1e] ; add r9, r11 ; call rax
0x000000000010c565 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x00000000001946d0 : or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x0000000000036647 : or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x000000000015a406 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000130521 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000057dc6 : or cl, ch ; and ebp, 0x8348ffff ; ret 0xeb08
0x000000000004cdaa : or cl, ch ; jmp rcx
0x00000000000bcdd7 : or cl, ch ; ret
0x0000000000067693 : or cl, ch ; ret 0xfff0
0x00000000000cd2c4 : or cl, ch ; ret 0xfff8
0x000000000003ab40 : or cl, ch ; ret 0xfffa
0x0000000000002bc7 : or cl, cl ; clc ; ret
0x000000000008aa65 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000109162 : or dh, ah ; dec dword ptr [rax - 0x7f] ; ret
0x000000000004983d : or dh, al ; or byte ptr [rax], al ; ret
0x000000000014cda3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fddea : or dh, bl ; ret
0x000000000007084d : or dh, byte ptr [rbp + 0x23] ; mov eax, r8d ; pop rbx ; ret
0x000000000007119c : or dh, byte ptr [rbp + 0x3f] ; ret
0x0000000000071296 : or dh, byte ptr [rbp + 0x43] ; mov eax, esi ; ret
0x0000000000072061 : or dh, byte ptr [rbp + 0x60] ; pop rbx ; ret
0x0000000000070501 : or dh, byte ptr [rbp + 0x63] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001097d0 : or dh, byte ptr [rbp + 0x69] ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000005dce6 : or dh, byte ptr [rbp + 2] ; ret
0x00000000000a1d86 : or dh, byte ptr [rbp - 0x11] ; ret
0x0000000000092f34 : or dh, byte ptr [rcx] ; dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x0000000000135e75 : or dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000000d1bea : or dh, byte ptr [rdi + rax*2 + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001aca49 : or dh, dh ; call rax
0x000000000007feeb : or dh, dh ; ret 0x7404
0x0000000000081299 : or dh, dh ; ret 0x7502
0x0000000000104957 : or dh, dh ; ret 0x7508
0x0000000000081a2a : or dh, dh ; ret 0xf01
0x000000000007ff07 : or dh, dh ; ret 0xf04
0x00000000000310cf : or dh, dh ; ret 0xfdf
0x0000000000034edc : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x00000000001117e4 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2b1734 ; call rax
0x0000000000123a83 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x0000000000103464 : or dword ptr [rax - 0x75], ecx ; adc byte ptr [rax + 0x39], cl ; ret
0x000000000005d64a : or dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000011c470 : or dword ptr [rax - 0x7d], ecx ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011efaf : or dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000c7980 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000086cfe : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000021c80 : or dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000447fc : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000000000194a65 : or dword ptr [rax], eax ; add byte ptr [rax - 0x72], ch ; in eax, dx ; call qword ptr [rax]
0x000000000013754d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013da2f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001374a7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000071422 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000022cb8 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000012966c : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000e426f : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088e13 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000804ca : or dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000009bd75 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000dfbf4 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e7277 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + r11*4] ; add rax, rdx ; jmp rax
0x00000000000dc8f7 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000111387 : or dword ptr [rbp + rcx*4 + 0x68], ecx ; add eax, ebp ; jmp rax
0x000000000018e64c : or dword ptr [rbp - 0x17], ebx ; jmp qword ptr [rdx]
0x00000000001610b6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000101356 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000121566 : or dword ptr [rbx + 0x5d], ebx ; xor eax, eax ; pop r12 ; ret
0x00000000000816a2 : or dword ptr [rbx + rbp + 8], 1 ; jmp 0x81672
0x00000000000847b6 : or dword ptr [rbx - 0xd], ebx ; ret
0x000000000006e466 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078d20 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007d078 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x000000000019265a : or dword ptr [rbx], eax ; ret 0xa03
0x0000000000084044 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000d4058 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x0000000000083e5e : or dword ptr [rcx - 0x7d], ecx ; sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000d1ed0 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x00000000000375d3 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x00000000000f0677 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000037796 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000015a3e6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000a8a00 : or dword ptr [rdi], ecx ; xchg dword ptr [rax + rdx - 0x7cb80000], ebx ; ret
0x00000000000f9e1a : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f985a : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a7824 : or dword ptr [rdi], ecx ; xchg ecx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000acc24 : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000003608b : or eax, 0x14f840 ; orpd xmm0, xmm1 ; ret
0x00000000001201da : or eax, 0x18c48348 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000009e6d1 : or eax, 0x1c478d48 ; ret
0x000000000009f521 : or eax, 0x1d478d48 ; ret
0x000000000015a468 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000007a620 : or eax, 0x20 ; jmp 0x7a5eb
0x0000000000165bf7 : or eax, 0x25af24 ; jne 0x165c24 ; ret
0x00000000000f0b41 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000a3e7a : or eax, 0x358d4800 ; ret 0xd9d
0x00000000000a76ec : or eax, 0x3d8d4800 ; ret
0x00000000000b2bc3 : or eax, 0x440f4800 ; ret 0x8d48
0x00000000000939f2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000b4a0a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x00000000000f51df : or eax, 0x49fff2a3 ; mov edi, dword ptr [rbp] ; call rbx
0x000000000005d552 : or eax, 0x5bd88948 ; ret
0x000000000009d7b5 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000001380f7 : or eax, 0x83480000 ; ret 0x4910
0x0000000000139c91 : or eax, 0x83480000 ; ret 0xe910
0x0000000000138125 : or eax, 0x83480000 ; ret 0xeb10
0x00000000001659cd : or eax, 0x83489066 ; ret 0x4810
0x000000000009ee69 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000067854 : or eax, 0x89000003 ; ret 0x348
0x00000000000ad00c : or eax, 0x89440031 ; ret 0x5441
0x0000000000041b96 : or eax, 0x894c0000 ; ret
0x000000000008aae2 : or eax, 0x8c48348 ; ret
0x000000000002f5ef : or eax, 0xe9000000 ; ret
0x0000000000175bf3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000186865 : or eax, 0xf20fffc ; cld ; jmp qword ptr [rax]
0x000000000014cc53 : or eax, 0xf7f0ff3 ; ret
0x00000000000d47b5 : or eax, 0xf7fffffc ; ret 0
0x0000000000194c5d : or eax, 0xffed72ad ; sbb al, 0xd ; ret
0x00000000001969d5 : or eax, 0xffed8586 ; sbb al, 0xd ; ret 0xed84
0x0000000000198895 : or eax, 0xffedbd16 ; sbb al, 0xd ; ret
0x000000000019b1d5 : or eax, 0xffee5e9e ; sbb al, 0xd ; ret 0xee3c
0x00000000001a2dd5 : or eax, 0xfff3b072 ; sbb al, 0xd ; ret
0x00000000001ab07d : or eax, 0xfff55bc7 ; sbb al, 0xd ; ret
0x00000000001ad76d : or eax, 0xfff5834a ; sbb al, 0xd ; ret 0xf582
0x00000000001ade75 : or eax, 0xfff58a4a ; sbb al, 0xd ; ret 0xf589
0x00000000001af28d : or eax, 0xfff5e24a ; sbb al, 0xd ; ret 0xf5e1
0x00000000000f15c2 : or eax, 0xffffffff ; jmp 0xf158e
0x00000000000f1822 : or eax, 0xffffffff ; jmp 0xf17ee
0x0000000000036c6a : or eax, 0xffffffff ; ret
0x00000000001aa536 : or eax, dword ptr [rax] ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000001372ed : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139e31 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137311 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000fb60 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x48
0x0000000000120d72 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c6451 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000c2bc1 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000088536 : or eax, dword ptr [rax] ; ret
0x00000000001946d5 : or eax, dword ptr [rdx] ; ret
0x0000000000037b73 : or eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000362d2 : or eax, ecx ; movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x00000000000fa4e6 : or eax, edi ; ret
0x0000000000091c97 : or eax, edx ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x00000000000364ff : or eax, edx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000fa522 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003c8cc : or eax, edx ; ret
0x00000000000363c9 : or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x000000000010c5b2 : or eax, esi ; bswap eax ; ret
0x00000000000f060e : or eax, esi ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000fa525 : or eax, esi ; or rax, rdi ; ret
0x0000000000046d33 : or eax, esi ; ret
0x000000000007c5c4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001b66fb : or ebp, edx ; add dword ptr [rbx], eax ; ret
0x0000000000074e14 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000dbb22 : or ebx, edi ; call rcx
0x00000000001a9c8c : or ebx, esi ; hlt ; jmp qword ptr [rdx]
0x000000000014ce13 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000007140e : or ebx, esi ; ret
0x0000000000083592 : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000078f1f : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x000000000008c5e8 : or ecx, dword ptr [rax + rax] ; ret
0x000000000003d180 : or ecx, dword ptr [rax - 0x77] ; ret 0xb848
0x000000000002a7ee : or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x0000000000077e33 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f38c7 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000103e2d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000000218f6 : or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000007d079 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000a2b64 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000a2bb4 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000257a8 : or ecx, dword ptr [rcx + 0x4289504a] ; push rsp ; ret
0x0000000000020819 : or ecx, dword ptr [rcx + rcx*4 - 0x16] ; sub rdx, rbx ; inc rdx ; jmp 0x20832
0x0000000000102a8f : or ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000009d773 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x0000000000036854 : or ecx, eax ; je 0x367fc ; ret
0x00000000001a91b4 : or ecx, ebp ; hlt ; jmp qword ptr [rdx]
0x00000000001931d4 : or edi, dword ptr [rax + 0xa] ; ret
0x0000000000126834 : or edi, dword ptr [rax + 1] ; ret
0x00000000001211c4 : or edi, dword ptr [rax + 2] ; ret
0x00000000001063d4 : or edi, dword ptr [rax + 7] ; ret
0x000000000016517f : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a1107 : or edi, edi ; loope 0xa117a ; nop dword ptr [rax + rax] ; ret
0x0000000000186905 : or edi, esp ; call rax
0x0000000000186861 : or edi, esp ; jmp qword ptr [rax]
0x0000000000186881 : or edi, esp ; jmp rax
0x00000000001a3157 : or edx, dword ptr [rax + rax] ; add byte ptr [rax], al ; mov ah, 0x4f ; add dword ptr [rax], eax ; ret 0xe7da
0x00000000000b32a1 : or esi, dword ptr [rcx] ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfff6
0x000000000011ee54 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000828d0 : or esi, dword ptr [rcx] ; salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x000000000006e566 : or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014cd33 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fa6b4 : or esi, ebx ; ret
0x000000000019f989 : or esi, ecx ; jmp rcx
0x0000000000101fd3 : or esi, esi ; jno 0x101fe1 ; cmovne eax, edx ; ret
0x000000000006e467 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078d21 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f5f : or esp, dword ptr [rdx] ; js 0x2f19 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000efcb4 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000018687d : or esp, edi ; call qword ptr [rax]
0x000000000018685d : or esp, edi ; inc dword ptr [rax + 0xb] ; cld ; jmp qword ptr [rax]
0x00000000001092b5 : or esp, esi ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000001a4851 : or esp, esi ; jmp rdx
0x00000000000816a1 : or qword ptr [rbx + rbp + 8], 1 ; jmp 0x81673
0x00000000000d1ecf : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x00000000000375d2 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000037795 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000015a3e5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000014ce82 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000014ce12 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000014cda2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000104956 : or r14b, r14b ; ret 0x7508
0x000000000014cd32 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001931d3 : or r15d, dword ptr [rax + 0xa] ; ret
0x00000000001aa535 : or r8d, dword ptr [r8] ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000088535 : or r8d, dword ptr [r8] ; ret
0x00000000001946d4 : or r8d, dword ptr [rdx] ; ret
0x00000000000cd2c3 : or r9b, r13b ; ret 0xfff8
0x0000000000036853 : or r9d, r8d ; je 0x367fd ; ret
0x000000000015a467 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000f15c1 : or rax, 0xffffffffffffffff ; jmp 0xf158f
0x00000000000f1821 : or rax, 0xffffffffffffffff ; jmp 0xf17ef
0x0000000000036c69 : or rax, 0xffffffffffffffff ; ret
0x000000000013f282 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000037b72 : or rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000091c96 : or rax, r10 ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x00000000000fa527 : or rax, rdi ; ret
0x000000000003c8cb : or rax, rdx ; ret
0x00000000000fa524 : or rax, rsi ; or rax, rdi ; ret
0x0000000000036090 : orpd xmm0, xmm1 ; ret
0x0000000000036091 : orps xmm0, xmm1 ; ret
0x000000000003642e : orps xmm0, xmm3 ; ret
0x000000000005b0b7 : out -0x18, eax ; ret
0x0000000000069db8 : out -0x18, eax ; ret 0xfb56
0x0000000000025328 : out -0x18, eax ; ret 0xffa1
0x00000000001996f4 : out -0x25, eax ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000174aa0 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000003b921 : out -0x77, eax ; ret
0x00000000000e6ad8 : out -0x77, eax ; ret 0x8b49
0x000000000002ff53 : out -0x80, eax ; sete al ; ret
0x00000000001767c8 : out -0xb, eax ; mov ch, 0xab ; ret
0x000000000014c69a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001a1b79 : out -0xf, eax ; jmp rsi
0x00000000000618a8 : out -1, eax ; dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x0000000000177911 : out -1, eax ; inc esp ; out -1, eax ; jmp qword ptr [rcx]
0x0000000000177915 : out -1, eax ; jmp qword ptr [rcx]
0x0000000000186649 : out -5, eax ; call qword ptr [rax + 0x20fffbe9]
0x00000000001866a9 : out -5, eax ; call qword ptr [rax]
0x0000000000186689 : out -5, eax ; inc dword ptr [rax - 0x17] ; sti ; call rax
0x000000000018cd11 : out -8, eax ; call rsp
0x000000000007ffc5 : out 0x33, eax ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000001ffe3 : out 0x41, eax ; call qword ptr [rsi]
0x000000000010c434 : out 0x44, al ; mov edx, ebp ; pop r12 ; pop r13 ; jmp rax
0x0000000000188488 : out 0x45, al ; jmp 0x18848e
0x00000000000a31a9 : out 0x48, al ; mov eax, ebx ; pop rbx ; ret
0x000000000012db3e : out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x000000000012a590 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000011dfe0 : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x0000000000121b16 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000085304 : out 0x48, al ; mov edi, ebx ; call rax
0x000000000011dbd0 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000a2c50 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038578 : out 0x48, eax ; mov eax, edx ; ret
0x0000000000001b12 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x000000000007bdc3 : out 0x5b, al ; ret
0x000000000012b868 : out 0x5b, eax ; ret
0x00000000001ab84c : out 0x5c, al ; cmc ; jmp qword ptr [rdx]
0x0000000000196064 : out 0x7e, al ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000118bb5 : out 0x89, al ; fucompi st(0) ; ret
0x00000000000cbad5 : out 0x89, al ; ret 0xca83
0x0000000000179394 : out 0x95, al ; hlt ; jmp rsi
0x000000000019bb0b : out 0xa, al ; ret
0x0000000000186418 : out 0xa5, al ; std ; jmp rsi
0x000000000018641c : out 0xa6, al ; std ; jmp rsi
0x0000000000002462 : out 0xa9, al ; ret 0xbd07
0x00000000001232a6 : out 0xc1, al ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000001a8d6c : out 0xdf, al ; hlt ; jmp qword ptr [rdx]
0x0000000000072493 : out 0xe8, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ja 0x7249d ; dec dword ptr [rax - 0x7f] ; ret
0x000000000010915f : out 0xe8, al ; fisttp dword ptr [rdx] ; hlt ; dec dword ptr [rax - 0x7f] ; ret
0x000000000005c2dd : out 0xe8, al ; lea edx, dword ptr [rbx + 3] ; add byte ptr [rcx - 0x77], cl ; ret 0x92e9
0x0000000000194755 : out 0xec, al ; jmp qword ptr [rdx]
0x0000000000178201 : out 0xf1, al ; call qword ptr [rax]
0x000000000014c61a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000092bd9 : out 0xf3, al ; ret
0x00000000001b1119 : out 0xf6, al ; jmp rdx
0x00000000001866e9 : out 0xfb, al ; call qword ptr [rax + 0x20fffbe8]
0x0000000000186729 : out 0xfb, al ; call qword ptr [rax]
0x00000000001866c9 : out 0xfb, al ; call rax
0x0000000000045b28 : out 0xff, al ; dec dword ptr [rax + 0x39] ; ret
0x0000000000044f8c : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000082ed6 : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000067a5f : out 0xff, al ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000177909 : out 0xff, al ; jmp qword ptr [rsi]
0x000000000012d47a : out 0xff, al ; push rax ; or byte ptr [rbp - 0x14438a40], al ; ret 0x1f0f
0x00000000000c7630 : out 1, al ; add byte ptr [rax], al ; lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc7606
0x00000000000712a4 : out 1, al ; mov eax, esi ; ret
0x00000000000d2743 : out 4, al ; jne 0xd26f5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011810d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000115955 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000091b09 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000019ab64 : out dx, al ; adc ch, dh ; jmp qword ptr [rdx]
0x00000000000712a1 : out dx, al ; add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x000000000019d03d : out dx, al ; add byte ptr [rax], al ; cli ; out dx, al ; call qword ptr [rcx]
0x00000000001252e1 : out dx, al ; add cl, byte ptr [rcx - 0x77] ; ret 0xc148
0x0000000000117c2f : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x117c3c ; ret
0x000000000009737b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000117c2c : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x117c3f ; ret
0x000000000011f3ce : out dx, al ; add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000011ab10 : out dx, al ; call 0x86d43
0x0000000000177186 : out dx, al ; call qword ptr [rax]
0x0000000000199ef2 : out dx, al ; call qword ptr [rcx]
0x0000000000199ec2 : out dx, al ; call qword ptr [rdi]
0x000000000019a4d2 : out dx, al ; call qword ptr [rdx]
0x000000000019a45a : out dx, al ; call qword ptr [rsi]
0x000000000003a244 : out dx, al ; call r12
0x0000000000085fba : out dx, al ; call rax
0x0000000000188bea : out dx, al ; call rsp
0x0000000000188be2 : out dx, al ; dec dword ptr [rsi + rcx*8 + 0x608f0000] ; out dx, al ; call rsp
0x0000000000001b10 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000175bf7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00000000001a8bec : out dx, al ; fdivrp st(4) ; jmp qword ptr [rdx]
0x00000000001a1c91 : out dx, al ; int1 ; call qword ptr [rdx]
0x00000000001a1ce1 : out dx, al ; int1 ; jmp qword ptr [rcx]
0x000000000019a372 : out dx, al ; jmp qword ptr [rax]
0x0000000000199d0a : out dx, al ; jmp qword ptr [rcx]
0x000000000019aad6 : out dx, al ; jmp qword ptr [rdx]
0x000000000019d14a : out dx, al ; jmp qword ptr [rsi]
0x000000000019929a : out dx, al ; jmp rax
0x000000000019b7ea : out dx, al ; jmp rcx
0x000000000019cc52 : out dx, al ; jmp rdx
0x0000000000188f92 : out dx, al ; jmp rsp
0x0000000000003759 : out dx, al ; jne 0x3739 ; ret 0x975
0x000000000017718e : out dx, al ; lcall ptr [rax + 0x10ffee74] ; jbe 0x17718e ; call qword ptr [rax]
0x0000000000188faa : out dx, al ; lcall ptr [rsp + rbp*8 - 0x64ec0000] ; out dx, al ; jmp rsp
0x0000000000189462 : out dx, al ; lcall ptr [rsp + rcx - 0x22cffff] ; out dx, al ; jmp rsp
0x00000000000a3bb0 : out dx, al ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000001890ba : out dx, al ; ljmp ptr [rsp + rsi*8 - 0x564c0000] ; out dx, al ; jmp rsp
0x000000000000314f : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000014446a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a3a64 : out dx, al ; mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000086176 : out dx, al ; mov rdi, r12 ; call rax
0x000000000010bba1 : out dx, al ; mov rdi, rbx ; call 0x77e86
0x000000000008632e : out dx, al ; mov rdi, rbx ; call rax
0x000000000014ca2a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013d8de : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000134fff : out dx, al ; pop rbp ; jmp rax
0x00000000001771b2 : out dx, al ; push qword ptr [rax + 0x75] ; out dx, al ; call qword ptr [rax]
0x000000000018923a : out dx, al ; push qword ptr [rbp + rdi*8 - 0x416c0000] ; out dx, al ; jmp rsp
0x00000000001892fa : out dx, al ; push qword ptr [rdx + rax - 0x2b2bffff] ; out dx, al ; jmp rsp
0x0000000000002592 : out dx, al ; ret 0x88ad
0x00000000000a3639 : out dx, al ; xor eax, eax ; ret
0x00000000000a1efd : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000091f85 : out dx, eax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000019d18d : out dx, eax ; add byte ptr [rax], al ; add cl, bl ; stc ; call qword ptr [rax]
0x000000000019d12d : out dx, eax ; add byte ptr [rax], al ; cmp bl, 0xee ; call qword ptr [rax]
0x000000000019d145 : out dx, eax ; add byte ptr [rax], al ; js 0x19d14b ; out dx, al ; jmp qword ptr [rsi]
0x000000000019d0fd : out dx, eax ; add byte ptr [rax], al ; loopne 0x19d104 ; stc ; call qword ptr [rax]
0x0000000000049667 : out dx, eax ; add ecx, ebp ; ret
0x000000000008c33e : out dx, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001651b0 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000039188 : out dx, eax ; call 0x38408
0x000000000006fb88 : out dx, eax ; call 0xebe0c
0x0000000000177f06 : out dx, eax ; call qword ptr [rax + 0x10ffef56]
0x0000000000177f72 : out dx, eax ; call qword ptr [rax - 0x2f0010aa]
0x000000000011feec : out dx, eax ; call qword ptr [rax]
0x000000000012170b : out dx, eax ; call qword ptr [rbx]
0x000000000019deea : out dx, eax ; call qword ptr [rdi]
0x00000000000f6b72 : out dx, eax ; call r14
0x000000000011f69b : out dx, eax ; call rax
0x00000000000f66ba : out dx, eax ; call rbx
0x000000000012e402 : out dx, eax ; call rcx
0x000000000008608c : out dx, eax ; call rdx
0x00000000001895f2 : out dx, eax ; call rsp
0x00000000001abb91 : out dx, eax ; cmc ; call qword ptr [rax]
0x00000000001abb49 : out dx, eax ; cmc ; call qword ptr [rdi]
0x00000000001898d2 : out dx, eax ; dec dword ptr [rax + 0x51180001] ; out dx, eax ; call rsp
0x0000000000128865 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000001232a8 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000189bd2 : out dx, eax ; dec dword ptr [rbp + rsi - 0x2d6fffff] ; out dx, eax ; call rsp
0x0000000000189ad2 : out dx, eax ; dec dword ptr [rsp + rbp - 0x311cffff] ; out dx, eax ; call rsp
0x0000000000189822 : out dx, eax ; dec esp ; sub byte ptr [rcx], al ; add byte ptr [rsi + rcx*2 - 0x11], dh ; jmp rsp
0x00000000001999c5 : out dx, eax ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000177f36 : out dx, eax ; inc dword ptr [rax] ; push rsi ; out dx, eax ; call qword ptr [rax]
0x00000000001222ac : out dx, eax ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x00000000001895ea : out dx, eax ; inc dword ptr [rdi + rdx + 0x17940001] ; out dx, eax ; call rsp
0x000000000018955a : out dx, eax ; inc esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdx + rcx - 0x11], dh ; jmp rsp
0x000000000019daba : out dx, eax ; jmp qword ptr [rax]
0x000000000019e0e2 : out dx, eax ; jmp qword ptr [rbx]
0x000000000019daea : out dx, eax ; jmp qword ptr [rdx]
0x000000000011fa48 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x0000000000189d8a : out dx, eax ; jmp qword ptr [rsi + rcx*2 + 1]
0x000000000019d2c2 : out dx, eax ; jmp qword ptr [rsi]
0x000000000019de0a : out dx, eax ; jmp rdi
0x0000000000189532 : out dx, eax ; jmp rsp
0x0000000000189b62 : out dx, eax ; lcall ptr [rcx + rsi - 0x2f15ffff] ; out dx, eax ; jmp rsp
0x0000000000189c62 : out dx, eax ; lcall ptr [rdx + rdi - 0x2b66ffff] ; out dx, eax ; jmp rsp
0x000000000018952a : out dx, eax ; lcall ptr [rdx + rdx + 0x7fe0001] ; out dx, eax ; jmp rsp
0x0000000000189862 : out dx, eax ; lcall ptr [rsp + rbx + 0x4f820001] ; out dx, eax ; jmp rsp
0x0000000000108370 : out dx, eax ; leave ; ret
0x000000000012d9b3 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000012d9fd : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000014429a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144396 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001442e2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000f8278 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000038c60 : out dx, eax ; mov rax, rdx ; ret
0x0000000000128224 : out dx, eax ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x0000000000123f83 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000123d8c : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011dfe3 : out dx, eax ; mov rcx, r13 ; call rbx
0x0000000000022f06 : out dx, eax ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000014caaa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013d9dd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000019e0f9 : out dx, eax ; out dx, eax ; call rsp
0x0000000000075061 : out dx, eax ; pop rbx ; ret
0x00000000001ab2ac : out dx, eax ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000177f62 : out dx, eax ; push qword ptr [rax] ; push rsi ; out dx, eax ; call qword ptr [rax]
0x00000000001899ea : out dx, eax ; push qword ptr [rcx + rax*2 + 1] ; add byte ptr [rdi], dh ; out dx, eax ; call rsp
0x000000000015fd03 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015fd18 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015fd2d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000364b7 : out dx, eax ; ret
0x000000000002906b : out dx, eax ; ret 0
0x00000000000a1353 : out dx, eax ; ret 0xf66
0x000000000016121c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000161205 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001611ee : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000015fcaa : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001790f4 : out dx, eax ; std ; jmp rax
0x0000000000186959 : out dx, eax ; sti ; call rax
0x000000000013223e : out dx, eax ; sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000019691c : out dx, eax ; test ch, ch ; jmp qword ptr [rdx]
0x0000000000120b7f : out dx, eax ; xor eax, eax ; pop rbp ; jmp rdx
0x00000000000381d0 : out dx, eax ; xor eax, eax ; ret
0x0000000000070ee5 : out dx, eax ; xor r8d, r8d ; call r12
0x000000000013959e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001790e8 : outsb dx, byte ptr [rsi] ; add dh, ah ; push qword ptr [rbx] ; sti ; call qword ptr [rax]
0x00000000001a4fad : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], ch ; jmp qword ptr [rcx]
0x00000000000b4358 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000001621be : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000018a31d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; in al, -0x31 ; int1 ; jmp rsp
0x00000000001a5045 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; js 0x1a50be ; hlt ; jmp qword ptr [rcx]
0x00000000001a505d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a50a5 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; or byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x00000000001a5015 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a5075 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0x6e ; hlt ; jmp qword ptr [rcx]
0x0000000000004b08 : outsb dx, byte ptr [rsi] ; add eax, 0 ; add byte ptr [rax], al ; ret 0x26
0x00000000001786b9 : outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x00000000001786b1 : outsb dx, byte ptr [rsi] ; call rax
0x00000000001874fd : outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x10fffc6f]
0x000000000018753d : outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x000000000018da01 : outsb dx, byte ptr [rsi] ; cli ; jmp rsp
0x00000000001ac795 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x0000000000036503 : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x00000000001a5019 : outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000019492d : outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001786d5 : outsb dx, byte ptr [rsi] ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; call qword ptr [rax]
0x00000000001763a3 : outsb dx, byte ptr [rsi] ; ja 0x17632c ; ret 0x48f
0x0000000000195c54 : outsb dx, byte ptr [rsi] ; jle 0x195c47 ; jmp qword ptr [rdx]
0x0000000000071ac1 : outsb dx, byte ptr [rsi] ; mov eax, edx ; pop rbx ; ret
0x00000000001786b5 : outsb dx, byte ptr [rsi] ; push rax ; outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x00000000001740e4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x000000000018fcee : outsb dx, byte ptr [rsi] ; sbb eax, 0xd1cffea ; push rbp ; adc edx, ebp ; jmp qword ptr [rdx]
0x00000000000d4d82 : outsb dx, byte ptr [rsi] ; sub byte ptr [rbx + rcx*4 + 0x76], cl ; xor byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000008c9aa : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000006f7fd : outsd dx, dword ptr [rsi] ; adc dword ptr [rip - 0x766b1500], esi ; ret 0x8b48
0x00000000000ff8c5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a50bd : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xc], ch ; jmp qword ptr [rcx]
0x00000000001a519d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; jbe 0x1a519d ; jmp qword ptr [rcx]
0x00000000001a5185 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; sub byte ptr [rsi - 0xc], dh ; jmp qword ptr [rcx]
0x00000000000f1cd2 : outsd dx, dword ptr [rsi] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000001188f7 : outsd dx, dword ptr [rsi] ; add rsp, 8 ; ret
0x00000000001786d9 : outsd dx, dword ptr [rsi] ; call qword ptr [rax]
0x0000000000178709 : outsd dx, dword ptr [rsi] ; call rax
0x0000000000187501 : outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000131a58 : outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000006adfb : outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000087178 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d07e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001a50a9 : outsd dx, dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x0000000000194975 : outsd dx, dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000178705 : outsd dx, dword ptr [rsi] ; inc eax ; outsd dx, dword ptr [rsi] ; call rax
0x000000000003d123 : outsd dx, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001781ad : outsd dx, dword ptr [rsi] ; int1 ; dec eax ; cdq ; int1 ; jmp rax
0x00000000001786dd : outsd dx, dword ptr [rsi] ; jmp qword ptr [rax]
0x000000000017870d : outsd dx, dword ptr [rsi] ; jmp rax
0x000000000006adff : outsd dx, dword ptr [rsi] ; mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x000000000016101d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000001610bd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008a7da : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008a7df : outsd dx, dword ptr [rsi] ; ret
0x0000000000174aa6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000144bd7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000001610c2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000008a82a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000006af34 : outsd dx, dword ptr [rsi] ; shl byte ptr [rsi + 0xf], cl ; outsd dx, dword ptr [rsi] ; mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000186319 : outsd dx, dword ptr [rsi] ; sti ; call rax
0x0000000000174aa5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000186829 : paddb mm7, mm7 ; adc byte ptr [rcx], 0xfc ; call qword ptr [rax]
0x0000000000186849 : paddb mm7, mm7 ; push rax ; adc esp, edi ; jmp rax
0x00000000001371e2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000a2ea4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000a2e8f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000001371e1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000175ea5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000175ea6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000000968d1 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x0000000000096ea5 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x00000000000421dd : pminsw mm7, mm7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000363a1 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000036671 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x0000000000096eb3 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000096f55 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x96fd9 ; xor eax, eax ; ret
0x00000000000363a0 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000036670 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000000889e6 : pmovmskb edx, mm4 ; test edx, edx ; je 0x889fa ; bsf eax, edx ; ret
0x000000000018a7fd : pop qword ptr [rcx] ; add ah, al ; pop rbx ; jmp rsp
0x000000000018d065 : pop qword ptr [rdx] ; add byte ptr [rcx + rbp*2], ah ; stc ; call rsp
0x00000000001afe34 : pop qword ptr [rdx] ; add dl, byte ptr [rsi + 0x41380e0a] ; ret
0x00000000001aa2b0 : pop qword ptr [rdx] ; add ecx, dword ptr [rbx + 1] ; ret
0x0000000000108074 : pop r10 ; ret
0x000000000017632f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000070272 : pop r12 ; jmp rax
0x000000000005386b : pop r12 ; mov eax, 1 ; pop r13 ; ret
0x00000000000aed36 : pop r12 ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x0000000000072416 : pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000f0793 : pop r12 ; mov eax, r9d ; pop r13 ; ret
0x0000000000030750 : pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007a428 : pop r12 ; neg eax ; pop r13 ; ret
0x000000000010c438 : pop r12 ; pop r13 ; jmp rax
0x0000000000094158 : pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bd318 : pop r12 ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000008511d : pop r12 ; pop r13 ; mov rax, rcx ; pop r14 ; ret
0x00000000000830b1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f81f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b93 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fff4 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024880 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006cfec : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001ff75 : pop r12 ; pop r13 ; ret
0x00000000000aecf0 : pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000ad0c7 : pop r12 ; pop r14 ; ret
0x000000000003b8d2 : pop r12 ; pop rbp ; ret
0x000000000001f6e8 : pop r12 ; ret
0x0000000000122584 : pop r12 ; sete al ; movzx eax, al ; ret
0x000000000011d51f : pop r12 ; sub eax, 1 ; pop r13 ; ret
0x000000000007b7fa : pop r12 ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000010c43a : pop r13 ; jmp rax
0x00000000001177ed : pop r13 ; mov eax, 0xffffffff ; pop r14 ; ret
0x000000000005379d : pop r13 ; mov eax, 1 ; pop r14 ; ret
0x000000000009415a : pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bd31a : pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000008511f : pop r13 ; mov rax, rcx ; pop r14 ; ret
0x00000000001009f2 : pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a4dfe : pop r13 ; pop r14 ; neg rax ; pop r15 ; ret
0x00000000000439d2 : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000001031f1 : pop r13 ; pop r14 ; pop r15 ; jmp 0x1f4f8
0x00000000000830b3 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f821 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b95 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fff6 : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024882 : pop r13 ; pop r14 ; ret
0x00000000000759b6 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000d4ea2 : pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006cfee : pop r13 ; pop rbp ; ret
0x000000000001ff77 : pop r13 ; ret
0x0000000000074c2b : pop r13 ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x00000000000aecf2 : pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000003879a : pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000075e83 : pop r14 ; mov eax, 0xffffffff ; pop r15 ; ret
0x00000000000410ea : pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e2ca : pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000001009f4 : pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a4e00 : pop r14 ; neg rax ; pop r15 ; ret
0x00000000000439d4 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000001031f3 : pop r14 ; pop r15 ; jmp 0x1f4f6
0x00000000000830b5 : pop r14 ; pop r15 ; jmp rax
0x000000000001f823 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b97 : pop r14 ; pop r15 ; ret
0x000000000001fff8 : pop r14 ; pop rbp ; ret
0x0000000000024884 : pop r14 ; ret
0x00000000000759b8 : pop r14 ; sar rax, 2 ; ret
0x00000000000d4ea4 : pop r14 ; xor eax, eax ; pop r15 ; ret
0x00000000000439d6 : pop r15 ; fmulp st(1) ; ret
0x00000000001031f5 : pop r15 ; jmp 0x1f4f4
0x00000000000830b7 : pop r15 ; jmp rax
0x000000000001f825 : pop r15 ; pop rbp ; ret
0x0000000000022b99 : pop r15 ; ret
0x0000000000127786 : pop r8 ; mov eax, 1 ; ret
0x00000000001860ff : pop r9 ; clc ; ret 0x6e1f
0x00000000001867d0 : pop rax ; add al, 0xfc ; jmp qword ptr [rax]
0x0000000000127ece : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000199298 : pop rax ; add esi, ebp ; jmp rax
0x000000000012202b : pop rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000018fee8 : pop rax ; and dl, ch ; call qword ptr [rsi]
0x0000000000128094 : pop rax ; call rax
0x000000000018c879 : pop rax ; clc ; call rsp
0x0000000000186ef9 : pop rax ; cld ; call rsp
0x0000000000186dbd : pop rax ; cld ; jmp qword ptr [rax + 0x10fffc57]
0x0000000000186db9 : pop rax ; cld ; jmp qword ptr [rax]
0x00000000000d1e57 : pop rax ; cmp al, 0x11 ; je 0xd1e67 ; xor eax, eax ; ret
0x0000000000178f84 : pop rax ; fpatan ; jmp qword ptr [rsi]
0x0000000000178501 : pop rax ; inc dword ptr [rax] ; pop rcx ; call qword ptr [rax]
0x00000000001784dd : pop rax ; inc dword ptr [rax] ; pop rcx ; jmp qword ptr [rax]
0x00000000001784f1 : pop rax ; inc eax ; pop rax ; call rax
0x00000000001784d5 : pop rax ; inc eax ; pop rax ; jmp rax
0x00000000001a00d8 : pop rax ; int1 ; call qword ptr [rdx]
0x00000000001a51b8 : pop rax ; jbe 0x1a51b2 ; jmp qword ptr [rcx]
0x00000000000c26da : pop rax ; je 0xc2708 ; mov eax, 1 ; ret
0x00000000000c26d9 : pop rax ; je 0xc2709 ; mov eax, 1 ; ret
0x0000000000192f2c : pop rax ; jmp 0x192f32
0x00000000001784c1 : pop rax ; jmp qword ptr [rax]
0x00000000001784d9 : pop rax ; jmp rax
0x0000000000127ed6 : pop rax ; jmp rcx
0x0000000000192058 : pop rax ; mov al, 0xea ; jmp qword ptr [rdx]
0x0000000000027815 : pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000127787 : pop rax ; mov eax, 1 ; ret
0x000000000002ff14 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002fea2 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000121b6e : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000028743 : pop rax ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000003ab3f : pop rax ; or cl, ch ; ret 0xfffa
0x000000000009bd74 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000019f988 : pop rax ; or esi, ecx ; jmp rcx
0x000000000011ff00 : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001f5f6 : pop rax ; pop rbx ; pop rbp ; ret
0x000000000001af88 : pop rax ; pop rbx ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x3b
0x00000000000fa379 : pop rax ; pop rdi ; call rax
0x000000000019c544 : pop rax ; pop rdi ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b0288 : pop rax ; push rcx ; sti ; call rsi
0x000000000001b290 : pop rax ; ret
0x000000000001af90 : pop rax ; ret 0x3b
0x000000000018f399 : pop rax ; std ; jmp qword ptr [rax]
0x0000000000172aa8 : pop rax ; sub ah, ch ; jmp rcx
0x000000000011ff41 : pop rax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d884f : pop rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000d2569 : pop rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005e637 : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000121c1d : pop rbp ; add eax, edx ; ret
0x0000000000108275 : pop rbp ; and eax, 0xc ; pop r12 ; ret
0x00000000001874d1 : pop rbp ; cld ; call qword ptr [rax]
0x00000000001ab5e5 : pop rbp ; cmc ; jmp qword ptr [rdx]
0x0000000000074494 : pop rbp ; jmp rax
0x000000000011f3d5 : pop rbp ; jmp rcx
0x0000000000120b82 : pop rbp ; jmp rdx
0x00000000000a17cc : pop rbp ; lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x00000000000739e6 : pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x00000000001177ee : pop rbp ; mov eax, 0xffffffff ; pop r14 ; ret
0x00000000000739cf : pop rbp ; mov eax, 1 ; pop r12 ; ret
0x000000000005379e : pop rbp ; mov eax, 1 ; pop r14 ; ret
0x00000000000e520c : pop rbp ; mov eax, 5 ; pop r12 ; ret
0x00000000000a1779 : pop rbp ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000005dfbf : pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000009415b : pop rbp ; mov eax, edx ; pop r14 ; ret
0x00000000001097d4 : pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000aecb3 : pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000aebe1 : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000001adae4 : pop rbp ; mov ebp, esi ; jmp qword ptr [rdx]
0x000000000006cd4e : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000bd31b : pop rbp ; mov rax, r14 ; pop r14 ; ret
0x0000000000085120 : pop rbp ; mov rax, rcx ; pop r14 ; ret
0x0000000000070366 : pop rbp ; mov rax, rdx ; pop r12 ; ret
0x00000000000f508f : pop rbp ; movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000125fd2 : pop rbp ; movzx eax, al ; pop r12 ; ret
0x000000000019c425 : pop rbp ; out dx, al ; jmp qword ptr [rdx]
0x0000000000082cd3 : pop rbp ; pop r12 ; jmp rax
0x0000000000072415 : pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000f0792 : pop rbp ; pop r12 ; mov eax, r9d ; pop r13 ; ret
0x000000000003074f : pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007a427 : pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x0000000000094157 : pop rbp ; pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000830b0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000022b92 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002487f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001ff74 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aecef : pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000ad0c6 : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001f6e7 : pop rbp ; pop r12 ; ret
0x0000000000122583 : pop rbp ; pop r12 ; sete al ; movzx eax, al ; ret
0x00000000000410e9 : pop rbp ; pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e2c9 : pop rbp ; pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000001009f3 : pop rbp ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a4dff : pop rbp ; pop r14 ; neg rax ; pop r15 ; ret
0x00000000000439d3 : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000001031f2 : pop rbp ; pop r14 ; pop r15 ; jmp 0x1f4f7
0x00000000000830b4 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000001f822 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b96 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000001fff7 : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000024883 : pop rbp ; pop r14 ; ret
0x00000000000759b7 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x00000000000d4ea3 : pop rbp ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006cfef : pop rbp ; pop rbp ; ret
0x00000000000384e8 : pop rbp ; pop rbx ; ret
0x000000000001f593 : pop rbp ; ret
0x000000000001b349 : pop rbp ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x000000000001b331 : pop rbp ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000018cff9 : pop rbp ; stc ; call rsp
0x00000000001862f9 : pop rbp ; sti ; push qword ptr [rax] ; pop rdi ; sti ; call qword ptr [rax]
0x0000000000070ef8 : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000074c2c : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x000000000011105f : pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x000000000007a351 : pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000aecf3 : pop rbp ; xor eax, eax ; pop r14 ; ret
0x0000000000106401 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x00000000001a3d3d : pop rbx ; add dword ptr [rax], eax ; push rax ; jb 0x1a3d3c ; jmp rax
0x00000000000b2bc1 : pop rbx ; and al, 0xd ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000173678 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a1adf : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000a1b1f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000d1c40 : pop rbx ; and eax, 2 ; pop rbp ; ret
0x0000000000186ee1 : pop rbx ; cld ; call rsp
0x0000000000186da5 : pop rbx ; cld ; jmp qword ptr [rax + 0x20fffc5a]
0x0000000000186da1 : pop rbx ; cld ; jmp qword ptr [rax]
0x00000000001ab1dd : pop rbx ; cmc ; jmp qword ptr [rdx]
0x0000000000173676 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006ed73 : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007387e : pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x00000000001913f4 : pop rbx ; jge 0x1913e4 ; jmp qword ptr [rdx]
0x000000000006ffaa : pop rbx ; jmp rax
0x000000000018a801 : pop rbx ; jmp rsp
0x000000000007693c : pop rbx ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000d0b12 : pop rbx ; mov eax, 1 ; ret
0x00000000000487a5 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000a1b89 : pop rbx ; mov eax, eax ; ret
0x00000000000c0cb3 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006da25 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004f142 : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000019884e : pop rbx ; mov ebp, 0xd1cffed ; test al, 0xbc ; in eax, dx ; jmp qword ptr [rdx]
0x000000000007482a : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007462f : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000006f607 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e250 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000120b7c : pop rbx ; mov rdi, rbp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000134ffc : pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012287c : pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000048a55 : pop rbx ; neg eax ; pop rbp ; ret
0x000000000019c3dd : pop rbx ; out dx, al ; jmp qword ptr [rdx]
0x000000000001fff3 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006cfeb : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000003b8d1 : pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000121c1c : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000108274 : pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
0x0000000000074493 : pop rbx ; pop rbp ; jmp rax
0x00000000000739e5 : pop rbx ; pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x00000000000739ce : pop rbx ; pop rbp ; mov eax, 1 ; pop r12 ; ret
0x00000000000e520b : pop rbx ; pop rbp ; mov eax, 5 ; pop r12 ; ret
0x00000000000a1778 : pop rbx ; pop rbp ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000005dfbe : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000001097d3 : pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000aecb2 : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x000000000006cd4d : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000070365 : pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000125fd1 : pop rbx ; pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000082cd2 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000072414 : pop rbx ; pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000f0791 : pop rbx ; pop rbp ; pop r12 ; mov eax, r9d ; pop r13 ; ret
0x000000000003074e : pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007a426 : pop rbx ; pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000002487e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001ff73 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ad0c5 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001f6e6 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f592 : pop rbx ; pop rbp ; ret
0x000000000011105e : pop rbx ; pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x000000000007a350 : pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000022228 : pop rbx ; ret
0x0000000000001b14 : pop rbx ; ret 0x2a63
0x0000000000176960 : pop rbx ; ret 0x6f9
0x000000000001b049 : pop rbx ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x3b
0x000000000001af89 : pop rbx ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x3b
0x000000000001af71 : pop rbx ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x3b
0x000000000001af41 : pop rbx ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x00000000000a4028 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000178505 : pop rcx ; call qword ptr [rax]
0x00000000001858f0 : pop rcx ; clc ; ret 0x6e1f
0x0000000000186ef1 : pop rcx ; cld ; call rsp
0x0000000000186db5 : pop rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x0000000000186db1 : pop rcx ; cld ; jmp qword ptr [rax]
0x00000000001784e1 : pop rcx ; jmp qword ptr [rax]
0x00000000000e2b4c : pop rcx ; or byte ptr [rcx + 0x63], cl ; sbb al, 0x9a ; add rbx, r10 ; jmp rbx
0x0000000000001b13 : pop rcx ; pop rbx ; ret 0x2a63
0x00000000000f9b02 : pop rcx ; ret 0xc383
0x000000000018f211 : pop rcx ; std ; jmp qword ptr [rdi]
0x0000000000142e18 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000018ca65 : pop rdi ; add al, byte ptr [rax] ; je 0x18c9f3 ; clc ; call rsp
0x000000000018ca55 : pop rdi ; add al, byte ptr [rax] ; ret 0xf880
0x00000000000eb43a : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000013e06d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fa37a : pop rdi ; call rax
0x00000000001874d5 : pop rdi ; cld ; call qword ptr [rax + 0x10fffc60]
0x0000000000187515 : pop rdi ; cld ; call qword ptr [rax]
0x0000000000186c11 : pop rdi ; cld ; jmp qword ptr [rdx]
0x00000000000439d7 : pop rdi ; fmulp st(1) ; ret
0x0000000000144839 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144649 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000175c1e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001031f6 : pop rdi ; jmp 0x1f4f3
0x00000000000830b8 : pop rdi ; jmp rax
0x0000000000174be1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000006fba6 : pop rdi ; mov edi, r15d ; mov esi, ebx ; call 0xebe98
0x000000000019c4fd : pop rdi ; out dx, al ; jmp qword ptr [rdx]
0x0000000000144469 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144299 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144395 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001442e1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000001f826 : pop rdi ; pop rbp ; ret
0x0000000000022b9a : pop rdi ; ret
0x0000000000116d5d : pop rdi ; ret 0x2a
0x000000000001b271 : pop rdi ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x000000000001b259 : pop rdi ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000188890 : pop rdi ; sbb esp, ebp ; call rsp
0x00000000001862fd : pop rdi ; sti ; call qword ptr [rax]
0x00000000001793d0 : pop rdi ; wait ; hlt ; call rsi
0x000000000001f5f2 : pop rdx ; add al, 0x3a ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000018c9ad : pop rdx ; add al, byte ptr [rax] ; pop rsp ; je 0x18c9b1 ; jmp rsp
0x0000000000138966 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000000794e7 : pop rdx ; cdqe ; ret
0x0000000000186ee9 : pop rdx ; cld ; call rsp
0x0000000000186dad : pop rdx ; cld ; jmp qword ptr [rax + 0x20fffc59]
0x0000000000186da9 : pop rdx ; cld ; jmp qword ptr [rax]
0x00000000001aaf6d : pop rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000003a56 : pop rdx ; int1 ; mov dl, 0x1e ; ret
0x0000000000175801 : pop rdx ; je 0x1757cb ; ret 0xacfc
0x0000000000195f54 : pop rdx ; jle 0x195f47 ; jmp qword ptr [rdx]
0x0000000000192dc9 : pop rdx ; jmp 0x192dcd
0x0000000000192e11 : pop rdx ; jmp 0x192e15
0x0000000000192e81 : pop rdx ; jmp 0x192e85
0x0000000000003151 : pop rdx ; jmp 0xffffffff88c2d2fe
0x00000000001971dc : pop rdx ; mov ebp, ebp ; jmp qword ptr [rdx]
0x00000000001767c7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000108073 : pop rdx ; pop r10 ; ret
0x000000000008278f : pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000108099 : pop rdx ; pop rsi ; ret
0x0000000000001b8e : pop rdx ; ret
0x0000000000107e12 : pop rdx ; ret 0x2b
0x00000000001115c2 : pop rdx ; sbb dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x201
0x0000000000085d32 : pop rdx ; scasb al, byte ptr [rdi] ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x0000000000176330 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000a34b5 : pop rdx ; test al, 0xf0 ; jne 0xa34e9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000002c112 : pop rdx ; wait ; adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x000000000013df6e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004e1be : pop rsi ; add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000187511 : pop rsi ; cld ; call qword ptr [rax + 0x10fffc5f]
0x00000000000ed92a : pop rsi ; cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000003879b : pop rsi ; idiv r9 ; pop r15 ; ret
0x000000000017804c : pop rsi ; mov bh, 0xf0 ; jmp rdi
0x0000000000075e84 : pop rsi ; mov eax, 0xffffffff ; pop r15 ; ret
0x00000000000c3c7d : pop rsi ; mov rdi, qword ptr [rbp - 0x430] ; call r15
0x00000000000410eb : pop rsi ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e2cb : pop rsi ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000001009f5 : pop rsi ; neg eax ; pop r15 ; ret
0x00000000000a4e01 : pop rsi ; neg rax ; pop r15 ; ret
0x0000000000091ca5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000019c4b5 : pop rsi ; out dx, al ; jmp qword ptr [rdx]
0x00000000000439d5 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x00000000001031f4 : pop rsi ; pop r15 ; jmp 0x1f4f5
0x00000000000830b6 : pop rsi ; pop r15 ; jmp rax
0x000000000001f824 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000022b98 : pop rsi ; pop r15 ; ret
0x000000000001fff9 : pop rsi ; pop rbp ; ret
0x0000000000024885 : pop rsi ; ret
0x0000000000105a9e : pop rsi ; ret 0xffff
0x00000000000759b9 : pop rsi ; sar rax, 2 ; ret
0x00000000000ed944 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000001b169 : pop rsi ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x3b
0x000000000001b031 : pop rsi ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x3b
0x000000000001b241 : pop rsi ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000d4ea5 : pop rsi ; xor eax, eax ; pop r15 ; ret
0x00000000001b5c74 : pop rsi ; xor esi, edi ; jmp qword ptr [rdx]
0x00000000001397b0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000266f0 : pop rsp ; adc eax, 0x3d8d4800 ; ret
0x0000000000138c64 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018ca15 : pop rsp ; add al, byte ptr [rax] ; stc ; js 0x18ca19 ; call rsp
0x0000000000193ea5 : pop rsp ; add byte ptr [rax], al ; call 0x22192b4f
0x0000000000194804 : pop rsp ; add byte ptr [rax], al ; clc ; jle 0x1947ff ; jmp rcx
0x000000000018a03d : pop rsp ; add dword ptr [rax], eax ; hlt ; ret 0xfff0
0x000000000018a035 : pop rsp ; add dword ptr [rax], eax ; ret 0xfff0
0x000000000013a4b0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x0000000000032d4b : pop rsp ; add eax, 0xc6834900 ; or byte ptr [rax + 1], cl ; ret
0x0000000000080843 : pop rsp ; and al, 0x28 ; call rax
0x00000000000b0785 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000186ed9 : pop rsp ; cld ; call rsp
0x0000000000186d9d : pop rsp ; cld ; jmp qword ptr [rax + 0x20fffc5b]
0x0000000000186d99 : pop rsp ; cld ; jmp qword ptr [rax]
0x00000000001ab555 : pop rsp ; cmc ; jmp qword ptr [rdx]
0x00000000001b1d04 : pop rsp ; cmp eax, dword ptr [rdx] ; add byte ptr [rax], cl ; or al, 0xf7 ; call qword ptr [rsi]
0x000000000018c9b0 : pop rsp ; je 0x18c9ae ; jmp rsp
0x00000000001a5e04 : pop rsp ; jl 0x1a5e0f ; add byte ptr [rax - 0x47], cl ; hlt ; call rdi
0x0000000000070273 : pop rsp ; jmp rax
0x000000000019596c : pop rsp ; jp 0x19595f ; jmp qword ptr [rdx]
0x00000000001af10c : pop rsp ; loope 0x1af107 ; jmp qword ptr [rdx]
0x000000000005386c : pop rsp ; mov eax, 1 ; pop r13 ; ret
0x0000000000053937 : pop rsp ; mov eax, edx ; pop rbx ; ret
0x00000000000aed37 : pop rsp ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x0000000000072417 : pop rsp ; mov eax, r13d ; pop r13 ; ret
0x00000000000f0794 : pop rsp ; mov eax, r9d ; pop r13 ; ret
0x000000000013cb40 : pop rsp ; mov ebp, 0x63480003 ; ret 0xf66
0x0000000000199d04 : pop rsp ; mov ebx, 0x14180000 ; out dx, al ; jmp qword ptr [rcx]
0x0000000000030751 : pop rsp ; mov rax, rcx ; pop r13 ; ret
0x000000000007a429 : pop rsp ; neg eax ; pop r13 ; ret
0x000000000018d074 : pop rsp ; nop ; add al, byte ptr [rax] ; and al, 0x6a ; stc ; jmp rsp
0x0000000000137640 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001946cf : pop rsp ; or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x000000000010c439 : pop rsp ; pop r13 ; jmp rax
0x0000000000094159 : pop rsp ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bd319 : pop rsp ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000008511e : pop rsp ; pop r13 ; mov rax, rcx ; pop r14 ; ret
0x00000000001009f1 : pop rsp ; pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000439d1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000001031f0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp 0x1f4f9
0x00000000000830b2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f820 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b94 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fff5 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024881 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000759b5 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000d4ea1 : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006cfed : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000001ff76 : pop rsp ; pop r13 ; ret
0x00000000000aecf1 : pop rsp ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000ad0c8 : pop rsp ; pop r14 ; ret
0x000000000003b8d3 : pop rsp ; pop rbp ; ret
0x00000000001a7f04 : pop rsp ; popfq ; add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x0000000000193204 : pop rsp ; push rax ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x15], ah ; jmp qword ptr [rbx]
0x00000000000037f8 : pop rsp ; ret
0x000000000019a404 : pop rsp ; ret 0
0x0000000000003159 : pop rsp ; ret 0x52c0
0x000000000008cc80 : pop rsp ; ret 0xa
0x00000000000efba0 : pop rsp ; ret 0xffff
0x0000000000178de0 : pop rsp ; sal bl, 0xff ; std ; ret 0xfff3
0x000000000001b289 : pop rsp ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000122585 : pop rsp ; sete al ; movzx eax, al ; ret
0x000000000017a54e : pop rsp ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbx + rdx*8 - 0xa], ch ; call rdx
0x000000000011d520 : pop rsp ; sub eax, 1 ; pop r13 ; ret
0x000000000007b7fb : pop rsp ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000018d245 : popfq ; add al, byte ptr [rax] ; add al, 0xa0 ; stc ; jmp rsp
0x00000000001a7f05 : popfq ; add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x00000000001a7f35 : popfq ; add dword ptr [rax], eax ; or byte ptr [rbx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7eed : popfq ; add dword ptr [rax], eax ; sal byte ptr [rdx], 0xf5 ; jmp qword ptr [rcx]
0x000000000010ad97 : popfq ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001782c9 : popfq ; cld ; call qword ptr [rax]
0x0000000000179545 : popfq ; hlt ; call qword ptr [rcx]
0x0000000000179595 : popfq ; hlt ; jmp rcx
0x000000000017958d : popfq ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call rdi
0x00000000001a01f1 : popfq ; int1 ; call qword ptr [rax]
0x00000000000973bd : popfq ; mov rax, rdi ; ret
0x000000000004ff6b : popfq ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000a3e79 : popfq ; or eax, 0x358d4800 ; ret 0xd9d
0x00000000000a1a39 : popfq ; ret 0xea81
0x000000000013ae90 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cb72 : psllq mm1, qword ptr [r15] ; jg 0x14cb8d ; ret
0x000000000014f642 : psllq mm1, qword ptr [r15] ; jg 0x14f65d ; ret
0x0000000000152162 : psllq mm1, qword ptr [r15] ; jg 0x15217d ; ret
0x000000000014cb73 : psllq mm1, qword ptr [rdi] ; jg 0x14cb8c ; ret
0x000000000014f643 : psllq mm1, qword ptr [rdi] ; jg 0x14f65c ; ret
0x0000000000152163 : psllq mm1, qword ptr [rdi] ; jg 0x15217c ; ret
0x000000000009cf16 : psllq mm1, qword ptr [rdi] ; jg 0x9cf2a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009cf15 : psllq mm1, qword ptr [rdi] ; jg 0x9cf2b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009cf77 : psllq mm1, qword ptr [rdi] ; jg 0x9cf8c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009dbe6 : psllq mm1, qword ptr [rdi] ; jg 0x9dbfa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dbe5 : psllq mm1, qword ptr [rdi] ; jg 0x9dbfb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dc47 : psllq mm1, qword ptr [rdi] ; jg 0x9dc5c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009fff6 : psllq mm1, qword ptr [rdi] ; jg 0xa000a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009fff5 : psllq mm1, qword ptr [rdi] ; jg 0xa000b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0057 : psllq mm1, qword ptr [rdi] ; jg 0xa006c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0ac6 : psllq mm1, qword ptr [rdi] ; jg 0xa0ada ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0ac5 : psllq mm1, qword ptr [rdi] ; jg 0xa0adb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0b27 : psllq mm1, qword ptr [rdi] ; jg 0xa0b3c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b3e8f : psubb mm1, qword ptr [rax - 0x77] ; ret
0x000000000018624d : psubq mm7, mm7 ; and byte ptr [rsi], bl ; sti ; call qword ptr [rax]
0x00000000000d8dc3 : push -0x3c76b690 ; mov edx, r8d ; jmp 0xd8ddb
0x00000000001797b4 : push -0x47000b65 ; wait ; hlt ; call rsi
0x000000000018cb85 : push -0x69cbfffe ; clc ; call rsp
0x0000000000002bdd : push -0x7329150 ; ret
0x0000000000128bf4 : push -0x76b70011 ; ret
0x000000000017abfc : push -0x7f000570 ; nop ; cli ; jmp qword ptr [rax]
0x00000000001621a4 : push -0x9ffffff ; ret 0x7501
0x0000000000021c7f : push -0xcfffff7 ; ret
0x00000000000a34a7 : push -0xfb872b8 ; ret
0x0000000000005840 : push 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c
0x0000000000186990 : push 0x30fffc2c ; cld ; call qword ptr [rax]
0x000000000011ed34 : push 0x5b002a49 ; ret
0x000000000011f6cd : push 0x5c415d5b ; pop r13 ; ret
0x00000000001785f5 : push 0x68f0fff2 ; jmp qword ptr [rax]
0x00000000001874ed : push 0x6990fffc ; cld ; call qword ptr [rax]
0x00000000001763a2 : push 0x6e ; ja 0x17632d ; ret 0x48f
0x00000000001955d4 : push 0x76 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a6df : push 0xd1cffee ; add bh, dl ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a727 : push 0xd1cffee ; sub al, 0xfb ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a8b1c : push 0xde ; hlt ; jmp qword ptr [rdx]
0x0000000000178625 : push 0xf2 ; call qword ptr [rax]
0x0000000000178621 : push 0xf2 ; jmp rax
0x00000000001ac595 : push 0xf5 ; jmp qword ptr [rdx]
0x000000000018c931 : push 0xf8 ; jmp rsp
0x000000000018d079 : push 0xf9 ; jmp rsp
0x0000000000187531 : push 0xfc ; call qword ptr [rax + 0x10fffc6b]
0x00000000001a4bc5 : push 1 ; add al, bl ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001a4bdd : push 1 ; add al, dh ; movsxd rsi, esp ; jmp qword ptr [rbx]
0x000000000012761e : push 2 ; add rdi, 0x68 ; jmp rcx
0x000000000009d972 : push 5 ; add byte ptr [rax], al ; ret
0x0000000000186223 : push qword ptr [rax + 0x14] ; sti ; inc dword ptr [rax + 0x15] ; sti ; call qword ptr [rax]
0x0000000000186adb : push qword ptr [rax + 0x18] ; cld ; inc eax ; sbb esp, edi ; call qword ptr [rax]
0x000000000018628b : push qword ptr [rax + 0x1d] ; sti ; jmp rax
0x0000000000186b2f : push qword ptr [rax + 0x1f] ; cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x0000000000186ab3 : push qword ptr [rax + 0x2c] ; cld ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000186b6b : push qword ptr [rax + 0x40fffc63] ; movsxd rdi, esp ; call rax
0x000000000018726f : push qword ptr [rax + 0x40fffc88] ; mov ah, bh ; call rax
0x0000000000187057 : push qword ptr [rax + 0x40fffc8b] ; mov edi, esp ; call rax
0x0000000000187767 : push qword ptr [rax + 0x40fffcaf] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x000000000017312f : push qword ptr [rax + 0x41] ; in eax, dx ; jmp rax
0x00000000000220a0 : push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x0000000000178443 : push qword ptr [rax + 0x55] ; jmp qword ptr [rax - 0x2f000dab]
0x000000000017862f : push qword ptr [rax + 0x6b] ; jmp qword ptr [rax - 0x2f000d95]
0x00000000001781ab : push qword ptr [rax + 0x6f] ; int1 ; dec eax ; cdq ; int1 ; jmp rax
0x0000000000186323 : push qword ptr [rax + 0x73] ; sti ; inc eax ; je 0x18632e ; call qword ptr [rax]
0x00000000001771b3 : push qword ptr [rax + 0x75] ; out dx, al ; call qword ptr [rax]
0x00000000001874c3 : push qword ptr [rax + 0x7c] ; cld ; jmp rax
0x00000000001872bf : push qword ptr [rax + 0x7d] ; cld ; jmp rax
0x00000000000fa61d : push qword ptr [rax + rcx + 0x5b] ; pop rbp ; ret
0x00000000000bd38e : push qword ptr [rax + rsi - 0x77] ; ret 0xe283
0x000000000018d50b : push qword ptr [rax + rsi*4 - 0x3dbfffe] ; stc ; jmp rsp
0x000000000017861f : push qword ptr [rax - 0x1f000d96] ; push 0xf2 ; call qword ptr [rax]
0x0000000000186783 : push qword ptr [rax - 0x2b] ; sti ; inc eax ; salc ; sti ; call qword ptr [rax]
0x000000000017717f : push qword ptr [rax - 0x2f00118b] ; jne 0x17717d ; call qword ptr [rax]
0x0000000000178703 : push qword ptr [rax - 0x3f000d91] ; outsd dx, dword ptr [rsi] ; call rax
0x000000000017847b : push qword ptr [rax - 0x3f000daa] ; push rsi ; call rax
0x00000000001783a7 : push qword ptr [rax - 0x3f000db5] ; call rax
0x000000000017836b : push qword ptr [rax - 0x3f000db6] ; call rax
0x00000000001864c3 : push qword ptr [rax - 0x54] ; std ; call qword ptr [rax]
0x000000000018774f : push qword ptr [rax - 0x55] ; cld ; jmp rax
0x00000000001877c7 : push qword ptr [rax - 0x5e] ; cld ; jmp rax
0x00000000001879cb : push qword ptr [rax - 0x5f] ; cld ; call rax
0x0000000000186387 : push qword ptr [rax - 0x68] ; sti ; jmp qword ptr [rax]
0x00000000001782b3 : push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x0000000000186963 : push qword ptr [rax - 0xd] ; sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x00000000001868af : push qword ptr [rax] ; add edi, esp ; push rax ; add al, 0xfc ; call rax
0x0000000000186993 : push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000018669f : push qword ptr [rax] ; jrcxz 0x1866a2 ; call qword ptr [rax]
0x000000000009c77f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000018687b : push qword ptr [rax] ; or esp, edi ; call qword ptr [rax]
0x00000000001862fb : push qword ptr [rax] ; pop rdi ; sti ; call qword ptr [rax]
0x00000000001862db : push qword ptr [rax] ; push rax ; sti ; call qword ptr [rax]
0x0000000000186fbf : push qword ptr [rax] ; push rdi ; cld ; jmp qword ptr [rax + 0x10fffc56]
0x0000000000177f63 : push qword ptr [rax] ; push rsi ; out dx, eax ; call qword ptr [rax]
0x00000000001782c3 : push qword ptr [rax] ; pushfq ; cld ; jmp qword ptr [rax + 0x10fffc9d]
0x0000000000187997 : push qword ptr [rax] ; test al, 0xfc ; jmp qword ptr [rax + 0x20fffca7]
0x0000000000163b28 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x00000000000769cb : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000000fccf8 : push qword ptr [rbp + rax - 0x7d] ; ret 0x8901
0x0000000000132f90 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x000000000018923b : push qword ptr [rbp + rdi*8 - 0x416c0000] ; out dx, al ; jmp rsp
0x0000000000038c5e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000001116f2 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x000000000011c17b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016504c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x0000000000038576 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bdc1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000018dcf3 : push qword ptr [rbp - 0x29ebfffe] ; cli ; jmp rsp
0x00000000000c0d85 : push qword ptr [rbx + 0x31] ; ret
0x00000000000cb558 : push qword ptr [rbx + 0x34] ; ret
0x0000000000036f0c : push qword ptr [rbx + 1] ; ret
0x00000000000eaf89 : push qword ptr [rbx + 3] ; mov eax, edx ; ret
0x0000000000047116 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x000000000007505c : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000000fa6b2 : push qword ptr [rbx + rcx - 0xd] ; ret
0x000000000018c7cb : push qword ptr [rbx + rcx*2 + 2] ; add byte ptr [rdx + rcx*2], al ; clc ; call rsp
0x000000000018de33 : push qword ptr [rbx + rcx*8 - 0x141bffff] ; cli ; jmp rsp
0x000000000007de9c : push qword ptr [rbx] ; add byte ptr [rcx], dh ; dec dword ptr [rcx - 0x77] ; salc ; call qword ptr [rax]
0x00000000001790eb : push qword ptr [rbx] ; sti ; call qword ptr [rax]
0x00000000001899eb : push qword ptr [rcx + rax*2 + 1] ; add byte ptr [rdi], dh ; out dx, eax ; call rsp
0x000000000018db0b : push qword ptr [rcx + rbx*8 - 0x56cbfffe] ; cli ; jmp rsp
0x000000000018ae3b : push qword ptr [rcx + rdi*4 - 0x2d1bffff] ; hlt ; jmp rsp
0x00000000000cd91a : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x0000000000076e34 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000577f3 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x000000000005c89d : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x0000000000071946 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000cde33 : push qword ptr [rcx] ; shr cl, cl ; ret 0xfff9
0x00000000000eb04a : push qword ptr [rdi + 0x17] ; ret
0x00000000000eb099 : push qword ptr [rdi + 0x18] ; ret
0x00000000000eb1ff : push qword ptr [rdi + 0x1a] ; ret
0x00000000000eb1a6 : push qword ptr [rdi + 0x1b] ; ret
0x0000000000036c3c : push qword ptr [rdi + 0x1e] ; ret
0x00000000000eb142 : push qword ptr [rdi + 0x1f] ; ret
0x00000000000f2f78 : push qword ptr [rdi + 0x21] ; ret
0x00000000000eb5ae : push qword ptr [rdi + 0x35] ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000ed04e : push qword ptr [rdi + 0x66] ; add rsp, 0x38 ; ret
0x00000000000f1cd0 : push qword ptr [rdi + 0x6f] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000eba8e : push qword ptr [rdi + 0x6f] ; ret
0x0000000000036f7b : push qword ptr [rdi + 1] ; ret
0x0000000000036ee5 : push qword ptr [rdi + 2] ; ret
0x00000000000ecf02 : push qword ptr [rdi + 3] ; cdqe ; ret
0x00000000000fa2f2 : push qword ptr [rdi + 3] ; pop rbx ; pop rbp ; ret
0x00000000000753c5 : push qword ptr [rdi + 8] ; ret
0x0000000000186c17 : push qword ptr [rdx + 0x42fffc65] ; cld ; call rdx
0x0000000000187143 : push qword ptr [rdx + 0x42fffc86] ; xchg ah, bh ; call rdx
0x000000000018763b : push qword ptr [rdx + 0x42fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rdx
0x0000000000186e3f : push qword ptr [rdx + 0x57] ; cld ; jmp rdx
0x00000000001892fb : push qword ptr [rdx + rax - 0x2b2bffff] ; out dx, al ; jmp rsp
0x000000000018a26b : push qword ptr [rdx + rbp*2 - 0x485bffff] ; int1 ; jmp rsp
0x000000000018c9ab : push qword ptr [rdx + rbx*2 + 2] ; add byte ptr [rsp + rsi*2 - 8], bl ; jmp rsp
0x000000000006ebc3 : push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000001882c3 : push qword ptr [rdx + rdx*4 + 0x2f40000] ; jmp 0x1882d3
0x0000000000114813 : push qword ptr [rdx - 0x3dbbf0fe] ; ret
0x0000000000187817 : push qword ptr [rdx - 0x58] ; cld ; jmp rdx
0x000000000018709f : push qword ptr [rsi + 0x46fffc8a] ; mov bh, ah ; call rsi
0x0000000000187597 : push qword ptr [rsi + 0x46fffcb1] ; mov cl, 0xfc ; call rsi
0x00000000000fcaa9 : push qword ptr [rsi + rax - 0x7d] ; ret 0x6601
0x0000000000074e7d : push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x0000000000186cdf : push qword ptr [rsp + 0x6444fffc] ; cld ; call rsp
0x0000000000187703 : push qword ptr [rsp + rbp*4 - 0x53bb0004] ; cld ; call rsp
0x000000000018a03b : push qword ptr [rsp + rbx*2] ; add dword ptr [rax], eax ; hlt ; ret 0xfff0
0x00000000001276b6 : push r12 ; mov eax, 1 ; ret
0x000000000007b10c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000188598 : push r9 ; jmp 0x18859e
0x000000000019b584 : push r9 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000080253 : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000012803d : push rax ; adc byte ptr [rax + 1], bh ; ret
0x00000000000740da : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007c5d1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000011fc1d : push rax ; adc dh, dh ; ret 0x7401
0x000000000018684c : push rax ; adc esp, edi ; jmp rax
0x00000000001867f0 : push rax ; add al, 0xfc ; call qword ptr [rax]
0x00000000001868b3 : push rax ; add al, 0xfc ; call rax
0x00000000001931ed : push rax ; add byte ptr [rax], al ; adc byte ptr [rsi - 0x15], ah ; call qword ptr [rdi]
0x000000000007b10d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000193265 : push rax ; add byte ptr [rax], al ; jmp 0x193271
0x0000000000193205 : push rax ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x15], ah ; jmp qword ptr [rbx]
0x000000000007364c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000b22c0 : push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x00000000000f794a : push rax ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x000000000012e0c6 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000018625b : push rax ; and bl, bh ; jmp rax
0x000000000013385f : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x000000000011f4b2 : push rax ; and byte ptr [rdi + 1], bh ; call 0x12b759
0x00000000001b2280 : push rax ; and esi, edi ; call qword ptr [rdx]
0x000000000000fa20 : push rax ; call qword ptr [rax]
0x0000000000027f2a : push rax ; call rax
0x000000000018c841 : push rax ; clc ; call rsp
0x0000000000186b54 : push rax ; cld ; jmp rax
0x00000000000e390c : push rax ; cli ; dec dword ptr [rax - 0x77] ; jmp 0x4cd0c266
0x00000000001aaa9d : push rax ; cmc ; jmp qword ptr [rdx]
0x000000000006ed9b : push rax ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000f09c1 : push rax ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x00000000000fa6af : push rax ; cmp edx, 0xff ; je 0xfa6c7 ; ret
0x0000000000179f28 : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rbx
0x000000000017a010 : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rbx
0x00000000000b185c : push rax ; div byte ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x0000000000186734 : push rax ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x00000000001781fb : push rax ; in eax, -0xf ; inc dword ptr [rax] ; out 0xf1, al ; call qword ptr [rax]
0x000000000017837b : push rax ; inc dword ptr [rax] ; call qword ptr [rax]
0x0000000000178697 : push rax ; insd dword ptr [rdi], dx ; call qword ptr [rax]
0x000000000010a44a : push rax ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000001a3d40 : push rax ; jb 0x1a3d39 ; jmp rax
0x0000000000178263 : push rax ; jge 0x178267 ; call qword ptr [rax]
0x0000000000186343 : push rax ; jge 0x18634a ; inc dword ptr [rax + 0x7f] ; sti ; call rax
0x00000000001872bb : push rax ; jge 0x1872c3 ; push qword ptr [rax + 0x7d] ; cld ; jmp rax
0x0000000000166394 : push rax ; jl 0x16638a ; inc dword ptr [rax + 0x7d] ; in al, dx ; jmp qword ptr [rax]
0x00000000001780a1 : push rax ; jmp qword ptr [rax - 0x1f000f00]
0x000000000017719c : push rax ; jne 0x177190 ; call qword ptr [rax]
0x00000000001874cc : push rax ; jnp 0x1874d2 ; push rax ; pop rbp ; cld ; call qword ptr [rax]
0x000000000018748f : push rax ; jp 0x187497 ; call qword ptr [rax + 0x10fffc82]
0x000000000018669c : push rax ; loope 0x1866a1 ; push qword ptr [rax] ; jrcxz 0x1866a5 ; call qword ptr [rax]
0x000000000018671c : push rax ; loopne 0x186721 ; inc dword ptr [rax - 0x1e] ; sti ; call qword ptr [rax]
0x000000000017802f : push rax ; mov ch, 0xf0 ; call qword ptr [rax]
0x00000000001afd10 : push rax ; mov ch, 0xf6 ; call qword ptr [rax]
0x00000000000257ab : push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x0000000000028ba1 : push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x00000000000295b7 : push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x00000000001adb2c : push rax ; mov ebp, esi ; jmp qword ptr [rdx]
0x0000000000187258 : push rax ; mov edi, esp ; jmp rax
0x0000000000127eb6 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002a55f : push rax ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000001063f6 : push rax ; mov rsi, rdx ; call rax
0x00000000000f509c : push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rcx - 0x75] ; jge 0xf50ac ; call rbx
0x0000000000186d6c : push rax ; movsxd rdi, esp ; jmp rax
0x000000000018689b : push rax ; or ah, bh ; call rax
0x0000000000127f1d : push rax ; or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001868e0 : push rax ; or bh, ah ; jmp qword ptr [rax]
0x0000000000123b25 : push rax ; or byte ptr [rax + 1], bh ; ret
0x00000000000218f1 : push rax ; or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000012d47c : push rax ; or byte ptr [rbp - 0x14438a40], al ; ret 0x1f0f
0x000000000004e740 : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; ret 0x8348
0x000000000004cda5 : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; jmp rcx
0x000000000007feea : push rax ; or dh, dh ; ret 0x7404
0x000000000007ff06 : push rax ; or dh, dh ; ret 0xf04
0x000000000013754c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001786b7 : push rax ; outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x00000000001786d3 : push rax ; outsb dx, byte ptr [rsi] ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; call qword ptr [rax]
0x0000000000186848 : push rax ; paddb mm7, mm7 ; push rax ; adc esp, edi ; jmp rax
0x00000000001860fe : push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001784ff : push rax ; pop rax ; inc dword ptr [rax] ; pop rcx ; call qword ptr [rax]
0x00000000001874cf : push rax ; pop rbp ; cld ; call qword ptr [rax]
0x00000000001862f8 : push rax ; pop rbp ; sti ; push qword ptr [rax] ; pop rdi ; sti ; call qword ptr [rax]
0x0000000000187510 : push rax ; pop rsi ; cld ; call qword ptr [rax + 0x10fffc5f]
0x000000000001b030 : push rax ; pop rsi ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x3b
0x00000000001862e3 : push rax ; push rbx ; sti ; call rax
0x000000000017848b : push rax ; push rsi ; inc dword ptr [rax] ; push rdi ; call qword ptr [rax]
0x000000000001b278 : push rax ; ret
0x000000000000a1e8 : push rax ; ret 0x10
0x000000000001af78 : push rax ; ret 0x3b
0x0000000000004530 : push rax ; ret 0xb
0x00000000001aa930 : push rax ; ret 0xfff8
0x00000000000066c0 : push rax ; ret 7
0x00000000000b5121 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x0000000000186243 : push rax ; sbb bh, bl ; inc eax ; sbb edi, ebx ; jmp rax
0x000000000007c5c6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000074f7a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001025d1 : push rax ; sbb dh, dh ; ret 0x7504
0x000000000018623c : push rax ; sbb ebx, edi ; jmp qword ptr [rax]
0x0000000000187578 : push rax ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x0000000000186490 : push rax ; scasb al, byte ptr [rdi] ; std ; jmp rax
0x00000000001079f5 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000001a4330 : push rax ; stc ; jmp qword ptr [rax]
0x00000000001862dd : push rax ; sti ; call qword ptr [rax]
0x00000000001864bc : push rax ; stosd dword ptr [rdi], eax ; std ; jmp rax
0x0000000000178283 : push rax ; xchg ah, bh ; call qword ptr [rax]
0x0000000000186383 : push rax ; xchg eax, esi ; sti ; push qword ptr [rax - 0x68] ; sti ; jmp qword ptr [rax]
0x00000000001ad9ec : push rax ; xchg ebp, esi ; jmp qword ptr [rdx]
0x0000000000187080 : push rax ; xchg esp, edi ; jmp rax
0x000000000007bdbd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000001a7e00 : push rax ; xor ebp, esi ; jmp qword ptr [rcx]
0x000000000018699b : push rax ; xor esp, edi ; call rax
0x00000000000e3455 : push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000012c42d : push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000012c585 : push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000001641f6 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000018fcf4 : push rbp ; adc edx, ebp ; jmp qword ptr [rdx]
0x00000000000e4163 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d945f : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000018c92d : push rbp ; add al, byte ptr [rax] ; cwde ; push 0xf8 ; jmp rsp
0x000000000012384d : push rbp ; add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x0000000000028e78 : push rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000001a36d5 : push rbp ; add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; call qword ptr [rcx]
0x0000000000178449 : push rbp ; call rax
0x0000000000186f51 : push rbp ; cld ; call rax
0x0000000000186f8d : push rbp ; cld ; jmp qword ptr [rax]
0x0000000000186ed1 : push rbp ; cld ; jmp rsp
0x0000000000186f4d : push rbp ; cld ; ljmp ptr [rdx] ; push rbp ; cld ; call rax
0x000000000017a093 : push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rcx
0x00000000000e9ef4 : push rbp ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000008a6a7 : push rbp ; fisttp word ptr [rax + rax] ; ret
0x0000000000001cb1 : push rbp ; je 0x1cdf ; ret
0x0000000000178445 : push rbp ; jmp qword ptr [rax - 0x2f000dab]
0x0000000000178439 : push rbp ; jmp qword ptr [rax]
0x0000000000067509 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rax - 0x76fffff5], ebp ; ret 0x348
0x0000000000067482 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76ffffe9], edx ; ret 0x348
0x0000000000067931 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76fffffd], ebp ; ret 0x348
0x000000000006757b : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rdi - 0x76fffff6], esp ; ret 0x348
0x0000000000067850 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rip - 0x76fffffd], ecx ; ret 0x348
0x0000000000107669 : push rbp ; nop ; mov rdx, r14 ; call rax
0x000000000013bfd8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001072f1 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000081298 : push rbp ; or dh, dh ; ret 0x7502
0x0000000000177f79 : push rbp ; out dx, eax ; call qword ptr [rax + 0x10ffef56]
0x0000000000131a57 : push rbp ; outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000012e9c9 : push rbp ; push rbx ; xor ebx, ebx ; call 0x12ac66
0x0000000000104952 : push rbp ; sbb byte ptr [rcx - 0x75], al ; or r14b, r14b ; ret 0x7508
0x00000000001076ea : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000025be : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x255b ; loop 0x25a6 ; ret 0x23cb
0x0000000000104bd5 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000010abc0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008bdba : push rbp ; xor rax, rax ; ret
0x00000000000d4ab8 : push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000f7eb1 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000033af3 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001034ec : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x000000000012e990 : push rbx ; call 0x12ac33
0x0000000000002043 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000178415 : push rbx ; inc dword ptr [rax] ; push rsp ; jmp qword ptr [rax]
0x000000000017840d : push rbx ; inc eax ; push rbx ; jmp rax
0x0000000000074e42 : push rbx ; je 0x74ea6 ; pop rbp ; pop r12 ; ret
0x00000000000c26ad : push rbx ; je 0xc2680 ; mov eax, 1 ; ret
0x00000000000c26ac : push rbx ; je 0xc2681 ; mov eax, 1 ; ret
0x00000000001783f9 : push rbx ; jmp qword ptr [rax]
0x0000000000178411 : push rbx ; jmp rax
0x00000000000a348c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009dfd2 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000006cd85 : push rbx ; or al, 0xf6 ; ret 0x7404
0x000000000006d4c2 : push rbx ; or al, 0xf6 ; ret 0xf04
0x00000000000f5412 : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000007b32e : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003c90 : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000037bec : push rbx ; ret
0x000000000014ab39 : push rbx ; ret 3
0x00000000001862e5 : push rbx ; sti ; call rax
0x0000000000078bcf : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000001793cc : push rbx ; wait ; hlt ; lcall ptr [rdi - 0x65] ; hlt ; call rsi
0x00000000001757fc : push rbx ; xchg eax, edx ; jae 0x1757db ; push rsi ; pop rdx ; je 0x1757d0 ; ret 0xacfc
0x00000000000d7734 : push rbx ; xor al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0x538b
0x000000000012e9ca : push rbx ; xor ebx, ebx ; call 0x12ac65
0x0000000000123b0d : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x000000000008b66d : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000096c92 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000174a85 : push rcx ; call qword ptr [rsi]
0x00000000001aaae5 : push rcx ; cmc ; jmp qword ptr [rdx]
0x0000000000123aab : push rcx ; cmp esp, 0xff ; jmp 0x123a79
0x0000000000188599 : push rcx ; jmp 0x18859d
0x00000000001932bd : push rcx ; jmp 0x1932c1
0x0000000000193305 : push rcx ; jmp 0x193309
0x00000000000869f3 : push rcx ; jne 0x86a32 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000001b28 : push rcx ; jns 0x1b35 ; ret
0x000000000008581b : push rcx ; mov bl, 0x33 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000186517 : push rcx ; mov ebx, 0xbbf1fffd ; std ; call qword ptr [rcx]
0x000000000018660b : push rcx ; mov ebx, 0xdc48fffd ; sti ; call qword ptr [rax]
0x00000000000a76eb : push rcx ; or eax, 0x3d8d4800 ; ret
0x000000000019b585 : push rcx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001898d9 : push rcx ; out dx, eax ; call rsp
0x000000000019c14e : push rcx ; ret
0x000000000012328b : push rcx ; ret 0xffef
0x00000000001b0289 : push rcx ; sti ; call rsi
0x00000000000fc807 : push rcx ; sub al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000a0e92 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009f422 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000c4978 : push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000a0ff0 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a3666 : push rdi ; adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x00000000000a0cc8 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0cda : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x0000000000096974 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009f26a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000014ccd9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000968e4 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000968d4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002f96c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x00000000000a0c9a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009e4ec : push rdi ; add eax, 0xc478d48 ; ret
0x000000000009f32c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000a0cf8 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000178491 : push rdi ; call qword ptr [rax]
0x00000000001b65f1 : push rdi ; call qword ptr [rcx]
0x0000000000144128 : push rdi ; clc ; ret
0x00000000000038a7 : push rdi ; clc ; salc ; jb 0x392d ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000186dc1 : push rdi ; cld ; call qword ptr [rax]
0x0000000000186fc1 : push rdi ; cld ; jmp qword ptr [rax + 0x10fffc56]
0x0000000000186e41 : push rdi ; cld ; jmp rdx
0x0000000000186e3d : push rdi ; cld ; push qword ptr [rdx + 0x57] ; cld ; jmp rdx
0x00000000001442a0 : push rdi ; cld ; ret
0x0000000000144dc7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014c5b9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000127f35 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x000000000019fd2c : push rdi ; fcomi st(0) ; jmp qword ptr [rdx]
0x00000000000ad5b8 : push rdi ; fild word ptr [rcx + 0x29] ; ret
0x0000000000036649 : push rdi ; fisttp dword ptr [rdi] ; ret
0x0000000000085d6a : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000014c539 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000188a31 : push rdi ; in eax, dx ; call rsp
0x00000000001784bd : push rdi ; inc dword ptr [rax] ; pop rax ; jmp qword ptr [rax]
0x00000000001784b5 : push rdi ; inc eax ; push rdi ; jmp rax
0x000000000014c38a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000178495 : push rdi ; jmp qword ptr [rax]
0x00000000001784b9 : push rdi ; jmp rax
0x000000000018c239 : push rdi ; jmp rsp
0x00000000001ae13c : push rdi ; mov dh, ch ; jmp qword ptr [rdx]
0x000000000007b064 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000014c41a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001176e6 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000004e744 : push rdi ; or bl, ch ; ret 0x8348
0x0000000000035c31 : push rdi ; or byte ptr [rax - 0x77], cl ; or byte ptr [r8 + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d4c
0x00000000000a0d3c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0d7a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0d1a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b0095 : push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x0000000000039c6a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000384da : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000131272 : push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x00000000000384e1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000059f6d : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000055df6 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000055175 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000055a36 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x0000000000073650 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000004cda9 : push rdi ; or cl, ch ; jmp rcx
0x000000000009e6d0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000009f520 : push rdi ; or eax, 0x1d478d48 ; ret
0x00000000000c4b07 : push rdi ; ret
0x00000000000d470e : push rdi ; ret 0
0x0000000000033b65 : push rdi ; ret 0x38
0x00000000001610be : push rdi ; ret 0xff3
0x000000000003d6fa : push rdi ; ret 0xffef
0x0000000000058a3d : push rdi ; ret 0xffff
0x000000000012e2a5 : push rdi ; sbb bl, dh ; ret
0x000000000012e2d0 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00000000001027d9 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f5572 : push rdi ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x000000000003571c : push rdi ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000144fc7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001447ea : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000144bc7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000127f7d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000cfee6 : push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000f6d8c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a0fd0 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008a7db : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000010a22a : push rdx ; adc al, 0xf7 ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000000e3473 : push rdx ; adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x00000000001b3435 : push rdx ; add al, byte ptr [rax] ; mov byte ptr [rbp - 9], ah ; jmp qword ptr [rbx]
0x00000000001b3465 : push rdx ; add al, byte ptr [rax] ; mov byte ptr [rsi - 9], ah ; call rdi
0x0000000000189e7d : push rdx ; add dword ptr [rax], eax ; xchg eax, esp ; xor esi, eax ; call rsp
0x0000000000117e4e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000b3752 : push rdx ; idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x00000000001783f5 : push rdx ; inc dword ptr [rax] ; push rbx ; jmp qword ptr [rax]
0x00000000001783ed : push rdx ; inc eax ; push rdx ; jmp rax
0x00000000001783f1 : push rdx ; jmp rax
0x0000000000187624 : push rdx ; mov al, 0xfc ; jmp rdx
0x00000000001651f6 : push rdx ; mov esp, 0x25 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000018712c : push rdx ; mov esp, edi ; jmp rdx
0x0000000000086af6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000ef5da : push rdx ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000186e3b : push rdx ; push rdi ; cld ; push qword ptr [rdx + 0x57] ; cld ; jmp rdx
0x00000000001903f6 : push rdx ; ret
0x00000000001862e1 : push rdx ; sti ; push rax ; push rbx ; sti ; call rax
0x000000000010d62e : push rdx ; sub eax, dword ptr [rax] ; add ecx, ebp ; ret
0x0000000000187813 : push rdx ; test al, 0xfc ; push qword ptr [rdx - 0x58] ; cld ; jmp rdx
0x0000000000001b0d : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x000000000015fd04 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000745bd : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000017913f : push rsi ; add al, 0xf4 ; dec edx ; add al, 0xf4 ; call qword ptr [rdi]
0x000000000014cf71 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000014cfe1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000009cea5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000014cf01 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000009ce43 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000015fd19 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000178481 : push rsi ; call rax
0x000000000018a781 : push rsi ; call rsp
0x0000000000144252 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000186f89 : push rsi ; cld ; call qword ptr [rax + 0x20fffc55]
0x0000000000186fc5 : push rsi ; cld ; call qword ptr [rax]
0x0000000000186f85 : push rsi ; cld ; jmp qword ptr [rax]
0x0000000000186b9c : push rsi ; cld ; jmp rsi
0x00000000001449c1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001445f5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001447d5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001449b5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144415 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001763a0 : push rsi ; cli ; push 0x6e ; ja 0x17632f ; ret 0x48f
0x0000000000163666 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000163656 : push rsi ; hlt ; sub eax, edx ; ret
0x00000000001a9924 : push rsi ; in eax, dx ; hlt ; jmp qword ptr [rdx]
0x000000000017848d : push rsi ; inc dword ptr [rax] ; push rdi ; call qword ptr [rax]
0x000000000017847d : push rsi ; inc eax ; push rsi ; call rax
0x0000000000163626 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000001063d2 : push rsi ; je 0x1063e8 ; mov eax, 7 ; ret
0x00000000001885f1 : push rsi ; jmp 0x1885f5
0x00000000001885f0 : push rsi ; jmp 0x1885f6
0x0000000000178485 : push rsi ; jmp rax
0x00000000000e448b : push rsi ; js 0xe44df ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000e4de8 : push rsi ; js 0xe4e3c ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000001875c0 : push rsi ; lodsd eax, dword ptr [rsi] ; cld ; jmp rsi
0x00000000001a1274 : push rsi ; mov cl, dh ; jmp qword ptr [rdx]
0x0000000000050260 : push rsi ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000091d2d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000b0092 : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x0000000000177f05 : push rsi ; out dx, eax ; call qword ptr [rax + 0x10ffef56]
0x0000000000177f71 : push rsi ; out dx, eax ; call qword ptr [rax - 0x2f0010aa]
0x0000000000177f09 : push rsi ; out dx, eax ; call qword ptr [rax]
0x0000000000177f75 : push rsi ; out dx, eax ; call rax
0x0000000000177f35 : push rsi ; out dx, eax ; inc dword ptr [rax] ; push rsi ; out dx, eax ; call qword ptr [rax]
0x0000000000177f61 : push rsi ; out dx, eax ; push qword ptr [rax] ; push rsi ; out dx, eax ; call qword ptr [rax]
0x0000000000175800 : push rsi ; pop rdx ; je 0x1757cc ; ret 0xacfc
0x000000000003642f : push rsi ; ret
0x00000000000ddd86 : push rsi ; ret 0x7408
0x00000000000ddd95 : push rsi ; ret 0x7420
0x000000000009806a : push rsi ; ret 0x7518
0x0000000000178f3c : push rsi ; sal ebx, cl ; jmp qword ptr [rsi]
0x000000000012f7ea : push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000163636 : push rsi ; sub eax, edx ; ret
0x00000000001870c8 : push rsi ; xchg ah, bh ; jmp rsi
0x00000000000efcb7 : push rsi ; xor ax, ax ; ret
0x000000000015fd2e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018cea0 : push rsp ; adc edi, ecx ; call rsp
0x000000000018cafb : push rsp ; add al, byte ptr fs:[rax] ; ret 0xf88a
0x000000000018a5cb : push rsp ; add byte ptr [rcx], 0 ; xor al, 0x9b ; call rsp
0x000000000018ceec : push rsp ; add byte ptr [rdx], 0 ; xor al, 0x2a ; stc ; jmp rsp
0x0000000000050432 : push rsp ; add cl, byte ptr es:[rax + 1] ; ret 0x8348
0x00000000001b62fc : push rsp ; add dword ptr [rdx], 0xf7f43000 ; call rcx
0x00000000000e7621 : push rsp ; add eax, 0xbe0f4101 ; ret 0xe883
0x000000000010726d : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000001072ed : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000102185 : push rsp ; and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x0000000000102088 : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000bdc12 : push rsp ; and al, 0x28 ; call rax
0x000000000008083e : push rsp ; and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x00000000000f2316 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000368f0 : push rsp ; and al, 0xf0 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000039e40 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000039dfa : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000e42d5 : push rsp ; and al, 4 ; jmp 0xe42a0
0x000000000018cdc8 : push rsp ; cld ; clc ; jmp rsp
0x00000000001a1dfc : push rsp ; cmp al, 1 ; add al, ah ; int1 ; jmp qword ptr [rdx]
0x0000000000178435 : push rsp ; inc dword ptr [rax] ; push rbp ; jmp qword ptr [rax]
0x000000000017842d : push rsp ; inc eax ; push rsp ; jmp rax
0x0000000000194efc : push rsp ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; loopne 0x194e9e ; in eax, dx ; call qword ptr [rax]
0x00000000001886e0 : push rsp ; jmp 0x1886e6
0x0000000000178419 : push rsp ; jmp qword ptr [rax]
0x0000000000178431 : push rsp ; jmp rax
0x00000000000c2476 : push rsp ; jne 0xc2403 ; mov eax, 0x7d00 ; ret
0x00000000001958dc : push rsp ; jns 0x1958cf ; jmp qword ptr [rdx]
0x00000000000c6438 : push rsp ; jns 0xc6444 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000096fbb : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000001871f4 : push rsp ; mov ah, bh ; jmp rsp
0x00000000001aa8fc : push rsp ; mov dword ptr [rcx], 0xf5d6f000 ; jmp qword ptr [rsi]
0x00000000001276b7 : push rsp ; mov eax, 1 ; ret
0x0000000000103d4b : push rsp ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x000000000019d0fc : push rsp ; out dx, eax ; add byte ptr [rax], al ; loopne 0x19d105 ; stc ; call qword ptr [rax]
0x00000000001898f9 : push rsp ; out dx, eax ; jmp rsp
0x0000000000186ef8 : push rsp ; pop rax ; cld ; call rsp
0x0000000000186ee0 : push rsp ; pop rbx ; cld ; call rsp
0x0000000000186ef0 : push rsp ; pop rcx ; cld ; call rsp
0x0000000000186ee8 : push rsp ; pop rdx ; cld ; call rsp
0x00000000001a7dfc : push rsp ; pushfq ; add dword ptr [rax], eax ; push rax ; xor ebp, esi ; jmp qword ptr [rcx]
0x00000000000257ae : push rsp ; ret
0x000000000018afb0 : push rsp ; ret 0xfff5
0x00000000001aa3fc : push rsp ; ret 1
0x00000000001876ec : push rsp ; scasd eax, dword ptr [rdi] ; cld ; jmp rsp
0x000000000018ae98 : push rsp ; std ; hlt ; call rsp
0x000000000018c5d8 : push rsp ; sub al, bh ; jmp rsp
0x00000000001a0e2e : push rsp ; xor ecx, 0x840d1cff ; jg 0x1a0e31 ; jmp qword ptr [rdx]
0x00000000000a8a03 : pushfq ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000139470 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000018bf74 : pushfq ; adc eax, dword ptr [rdx] ; add byte ptr [rdi], ah ; jp 0x18bf79 ; jmp rsp
0x00000000000714e6 : pushfq ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x714ac
0x0000000000188485 : pushfq ; add byte ptr [rax], al ; out 0x45, al ; jmp 0x188491
0x00000000001a7e8d : pushfq ; add dword ptr [rax], eax ; adc byte ptr [rdx], dh ; cmc ; call qword ptr [rsi]
0x00000000001a7de5 : pushfq ; add dword ptr [rax], eax ; cmp byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7db5 : pushfq ; add dword ptr [rax], eax ; or byte ptr [rcx], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7dfd : pushfq ; add dword ptr [rax], eax ; push rax ; xor ebp, esi ; jmp qword ptr [rcx]
0x000000000018a98d : pushfq ; add dword ptr [rax], eax ; ret 0xf380
0x000000000004554c : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000001782c5 : pushfq ; cld ; jmp qword ptr [rax + 0x10fffc9d]
0x00000000001794e9 : pushfq ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; jmp qword ptr [rbx]
0x0000000000188fac : pushfq ; in al, dx ; add byte ptr [rax], al ; adc al, 0x9b ; out dx, al ; jmp rsp
0x0000000000193ea9 : pushfq ; in al, dx ; jmp qword ptr [rcx]
0x00000000001781e1 : pushfq ; int1 ; call rax
0x000000000018730c : pushfq ; jnp 0x187312 ; ljmp ptr [rbx + rdi*2] ; cld ; call rdx
0x00000000001a5b44 : pushfq ; jns 0x1a5b4f ; add al, ch ; mov al, 0xf4 ; jmp qword ptr [rcx]
0x000000000018d60c : pushfq ; mov ch, 2 ; add byte ptr [rax], dl ; and al, 0xfa ; jmp rsp
0x00000000001aa944 : pushfq ; mov dword ptr [rcx], 0xf5d70800 ; jmp qword ptr [rdi]
0x00000000000787ac : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000018d664 : pushfq ; mov edx, 0x26440002 ; cli ; jmp rsp
0x0000000000189464 : pushfq ; or al, 1 ; add bl, dl ; std ; out dx, al ; jmp rsp
0x000000000013a170 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138124 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000019d144 : pushfq ; out dx, eax ; add byte ptr [rax], al ; js 0x19d14c ; out dx, al ; jmp qword ptr [rsi]
0x000000000019de09 : pushfq ; out dx, eax ; jmp rdi
0x00000000001a5044 : pushfq ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; js 0x1a50bf ; hlt ; jmp qword ptr [rcx]
0x000000000018c92c : pushfq ; push rbp ; add al, byte ptr [rax] ; cwde ; push 0xf8 ; jmp rsp
0x0000000000188484 : pushfq ; pushfq ; add byte ptr [rax], al ; out 0x45, al ; jmp 0x188492
0x000000000018879c : pushfq ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; sub ch, ah ; jmp 0x1887aa
0x000000000018d41c : pushfq ; stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; rcl esp, 1 ; stc ; jmp rsp
0x00000000000f464d : pushfq ; sub al, 0 ; ret
0x00000000001aa644 : pushfq ; vaddps xmm10, xmm15, xmm13 ; cmc ; jmp qword ptr [rsi]
0x00000000001a7344 : pushfq ; xchg eax, ecx ; add dword ptr [rax], eax ; test al, 0xd ; cmc ; jmp qword ptr [rcx]
0x0000000000189b64 : pushfq ; xor dword ptr [rcx], eax ; add dl, ch ; shr bh, 1 ; jmp rsp
0x00000000001a0ee0 : rcl ah, 1 ; int1 ; jmp qword ptr [rbx]
0x000000000017a5b8 : rcl ah, cl ; idiv bh ; adc ah, 0xf6 ; call rdx
0x000000000017a558 : rcl ah, cl ; idiv bh ; insb byte ptr [rdi], dx ; sal esi, cl ; call rdx
0x000000000017a570 : rcl ah, cl ; idiv bh ; sal r14b, cl ; call rdx
0x00000000000b718c : rcl byte ptr [rax + 0x29000001], cl ; ret
0x00000000000b24c1 : rcl byte ptr [rax + 0x39000001], cl ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000177f78 : rcl byte ptr [rbp - 0x11], 1 ; call qword ptr [rax + 0x10ffef56]
0x0000000000179380 : rcl byte ptr [rbp - 0x6a87000c], 1 ; hlt ; call rax
0x000000000019e620 : rcl byte ptr [rcx - 0x10], 1 ; jmp qword ptr [rdi]
0x0000000000071aca : rcl byte ptr [rdi - 0x3d770000], cl ; jmp 0x71a96
0x0000000000178480 : rcl byte ptr [rsi - 0xe], 0xff ; rcl byte ptr [rsi - 0xe], 1 ; jmp rax
0x0000000000178484 : rcl byte ptr [rsi - 0xe], 1 ; jmp rax
0x000000000000c2a0 : rcl ch, 1 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001aa6c0 : rcl ch, 1 ; cmc ; jmp qword ptr [rsi]
0x00000000001aa8d0 : rcl dh, 0xf5 ; jmp qword ptr [rsi]
0x0000000000186788 : rcl dh, 0xfb ; call qword ptr [rax]
0x000000000018677c : rcl dl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000080bb3 : rcl dword ptr [rip + 0x33d60f], -0x7d ; ret 0x8b01
0x00000000001757ff : rcl dword ptr [rsi + 0x5a], cl ; je 0x1757cd ; ret 0xacfc
0x000000000018d420 : rcl esp, 1 ; stc ; jmp rsp
0x00000000001757fb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x1757d1 ; ret 0xacfc
0x00000000000f395c : rcr ah, 1 ; sub al, 0 ; add rsp, 8 ; ret
0x00000000000367a0 : rcr bl, 0x3f ; fsubp st(1) ; ret
0x000000000001b1f8 : rcr byte ptr [rax + rbx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x00000000001784f4 : rcr byte ptr [rax - 0xe], 0xff ; rcr byte ptr [rax - 0xe], 1 ; jmp rax
0x00000000001784f8 : rcr byte ptr [rax - 0xe], 1 ; jmp rax
0x000000000019fb50 : rcr byte ptr [rax], 0xf1 ; jmp qword ptr [rcx]
0x00000000000384e7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000001fff2 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000010ac32 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000007387d : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; ret
0x0000000000070c69 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000002474e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003c3fe : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000005365c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000049350 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000005de5c : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000d1c3f : rcr byte ptr [rbx - 0x7d], 1 ; loopne 0xd1c4c ; pop rbp ; ret
0x0000000000048a54 : rcr byte ptr [rbx - 9], 0xd8 ; pop rbp ; ret
0x0000000000186248 : rcr byte ptr [rbx], 0xfb ; jmp rax
0x0000000000186ae0 : rcr byte ptr [rcx], 0xfc ; call qword ptr [rax]
0x0000000000175c1d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000186b28 : rcr byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x00000000001794d0 : rcr dword ptr [rbx - 0x6422000c], cl ; hlt ; jmp rdi
0x0000000000038519 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000117ad6 : rcr dword ptr [rcx], -0x40 ; ret
0x000000000000028f : ret
0x000000000000edb0 : ret 0
0x00000000000047d1 : ret 0x10
0x000000000002f0bf : ret 0x100
0x000000000002e968 : ret 0x101
0x00000000000007bf : ret 0x102
0x000000000006d51f : ret 0x107
0x0000000000034b8a : ret 0x1074
0x0000000000041bc4 : ret 0x1075
0x0000000000008bb1 : ret 0x11
0x00000000000801c2 : ret 0x110
0x00000000000384bc : ret 0x114d
0x00000000000bd894 : ret 0x1174
0x000000000005f4ba : ret 0x1183
0x00000000000a5529 : ret 0x11e9
0x000000000016e3c8 : ret 0x12
0x000000000005d85a : ret 0x127f
0x000000000005c665 : ret 0x12e9
0x00000000000406a3 : ret 0x13
0x000000000004f462 : ret 0x1368
0x00000000000e0d99 : ret 0x1372
0x00000000000dab48 : ret 0x1376
0x00000000000494db : ret 0x13eb
0x00000000000330dd : ret 0x14
0x000000000008869d : ret 0x144
0x00000000000d958b : ret 0x1476
0x0000000000048349 : ret 0x1477
0x0000000000096ff9 : ret 0x147c
0x00000000000548db : ret 0x148
0x00000000000e30bb : ret 0x148d
0x000000000007bdd2 : ret 0x149
0x00000000000ec3b8 : ret 0x14c
0x00000000000365ca : ret 0x14fb
0x000000000000a138 : ret 0x15
0x0000000000036460 : ret 0x1575
0x000000000007f87b : ret 0x1589
0x00000000000283fa : ret 0x15d2
0x000000000001ff10 : ret 0x15d7
0x0000000000056a9a : ret 0x16
0x000000000003d7bf : ret 0x1676
0x000000000003c596 : ret 0x1677
0x00000000000e84d4 : ret 0x16e9
0x000000000001a1f1 : ret 0x17
0x000000000001ac28 : ret 0x17c5
0x000000000001bf00 : ret 0x17c6
0x0000000000018768 : ret 0x17cf
0x00000000000eb4e3 : ret 0x17e8
0x00000000000af983 : ret 0x17e9
0x000000000008be25 : ret 0x1876
0x0000000000047267 : ret 0x18b9
0x00000000000c7701 : ret 0x18eb
0x0000000000010720 : ret 0x19
0x000000000008bac5 : ret 0x1974
0x00000000000c41a2 : ret 0x19eb
0x00000000000965d4 : ret 0x1a75
0x000000000017617a : ret 0x1ad4
0x0000000000056d8a : ret 0x1b
0x000000000017490d : ret 0x1b49
0x00000000000fbbe2 : ret 0x1b72
0x00000000000eb192 : ret 0x1b75
0x0000000000050c13 : ret 0x1b8
0x0000000000001bf1 : ret 0x1bb7
0x00000000000220b4 : ret 0x1be
0x00000000000da26f : ret 0x1be8
0x000000000004c74e : ret 0x1beb
0x000000000000346f : ret 0x1bf9
0x000000000016fe00 : ret 0x1d4
0x0000000000170598 : ret 0x1d5
0x000000000008b9c6 : ret 0x1d74
0x00000000000021c9 : ret 0x1dd4
0x00000000000d1a1e : ret 0x1de9
0x000000000003e9ea : ret 0x1e
0x00000000000c4fca : ret 0x1e73
0x0000000000095a09 : ret 0x1e75
0x00000000000e3ad9 : ret 0x1e8
0x00000000001303da : ret 0x1f
0x0000000000027048 : ret 0x1f0f
0x00000000000c5019 : ret 0x1f73
0x00000000000b7321 : ret 0x1fbf
0x000000000002f0ce : ret 0x200
0x00000000001115ca : ret 0x201
0x00000000000dfbc9 : ret 0x2041
0x0000000000086c3d : ret 0x2074
0x000000000003602e : ret 0x2148
0x0000000000194bd1 : ret 0x21a
0x00000000000cb5d9 : ret 0x21e8
0x0000000000086bcb : ret 0x2275
0x0000000000086cf8 : ret 0x2288
0x0000000000161222 : ret 0x2373
0x0000000000096c6a : ret 0x2374
0x00000000000d8dff : ret 0x237e
0x00000000000025c7 : ret 0x23cb
0x00000000000a74ef : ret 0x23eb
0x000000000016ee08 : ret 0x24
0x00000000000027b8 : ret 0x244f
0x0000000000165208 : ret 0x25
0x00000000001650c9 : ret 0x25b8
0x00000000000f7c5c : ret 0x25eb
0x0000000000004b10 : ret 0x26
0x00000000001601ca : ret 0x261
0x00000000000d94c1 : ret 0x267e
0x00000000000f7d2d : ret 0x26eb
0x0000000000088cb6 : ret 0x2774
0x00000000000eb6d3 : ret 0x27e8
0x0000000000131c2f : ret 0x28
0x000000000000054f : ret 0x2800
0x0000000000098855 : ret 0x280f
0x000000000008be15 : ret 0x2876
0x00000000000b512a : ret 0x28f5
0x0000000000060409 : ret 0x29
0x00000000000adf48 : ret 0x2941
0x00000000000a7192 : ret 0x2944
0x00000000000d7bdf : ret 0x2945
0x000000000003e780 : ret 0x2948
0x000000000004425f : ret 0x2949
0x0000000000092e75 : ret 0x294c
0x0000000000079026 : ret 0x294d
0x0000000000038c44 : ret 0x2973
0x000000000005df92 : ret 0x2975
0x0000000000111c4c : ret 0x2a
0x0000000000001b15 : ret 0x2a63
0x0000000000031d40 : ret 0x2ae8
0x000000000010eca2 : ret 0x2af1
0x0000000000107c14 : ret 0x2b
0x000000000010daa2 : ret 0x2b03
0x00000000001117a2 : ret 0x2b17
0x0000000000110662 : ret 0x2b27
0x00000000001117ad : ret 0x2b28
0x00000000000b1a4e : ret 0x2b3c
0x00000000001101ad : ret 0x2b3e
0x000000000010e612 : ret 0x2b44
0x0000000000024ed6 : ret 0x2b49
0x0000000000127332 : ret 0x2b74
0x00000000000a1a42 : ret 0x2b77
0x0000000000100392 : ret 0x2bf5
0x00000000000f1c04 : ret 0x2c
0x0000000000100aad : ret 0x2c35
0x0000000000082db1 : ret 0x2c75
0x00000000000f3ea2 : ret 0x2c9f
0x00000000000f3cfa : ret 0x2ca5
0x0000000000047f9b : ret 0x2ce9
0x000000000005de24 : ret 0x2d75
0x00000000000f10d4 : ret 0x2d77
0x00000000000d1b0c : ret 0x2e
0x0000000000044ee5 : ret 0x2e66
0x00000000000d3f8c : ret 0x2e9
0x00000000000f9f79 : ret 0x2eb
0x0000000000085d6e : ret 0x2f74
0x000000000007e218 : ret 0x2fe9
0x00000000000af11b : ret 0x30
0x00000000000bf7ad : ret 0x3048
0x0000000000001b84 : ret 0x306a
0x00000000000b3aaa : ret 0x30d4
0x00000000000055a8 : ret 0x31
0x000000000011a627 : ret 0x3108
0x000000000005ffec : ret 0x3145
0x0000000000125957 : ret 0x3148
0x000000000012558d : ret 0x314c
0x00000000000e3557 : ret 0x3173
0x00000000000e9539 : ret 0x31e9
0x000000000004c5ea : ret 0x31eb
0x000000000000ffb8 : ret 0x33
0x0000000000082d9a : ret 0x33b0
0x000000000000f3e8 : ret 0x34
0x000000000007e16a : ret 0x3428
0x000000000007a4aa : ret 0x3453
0x0000000000096fd9 : ret 0x347c
0x0000000000057daa : ret 0x348
0x0000000000077fad : ret 0x34c0
0x00000000000078e8 : ret 0x35
0x0000000000085d78 : ret 0x3574
0x0000000000051b96 : ret 0x36
0x000000000006e877 : ret 0x3675
0x00000000000059c8 : ret 0x37
0x00000000000463a2 : ret 0x377a
0x0000000000069efa : ret 0x37d
0x00000000000fb4c3 : ret 0x37e8
0x0000000000033b55 : ret 0x38
0x0000000000175a5a : ret 0x3827
0x00000000000f54ba : ret 0x3845
0x000000000010a0d5 : ret 0x3875
0x000000000008be05 : ret 0x3876
0x000000000010a20b : ret 0x3877
0x00000000001740e6 : ret 0x38ae
0x000000000006eb8f : ret 0x38b
0x0000000000021cb7 : ret 0x39
0x00000000000478cb : ret 0x3901
0x0000000000113b85 : ret 0x3904
0x0000000000117cc7 : ret 0x3941
0x00000000000d887d : ret 0x3944
0x0000000000060e57 : ret 0x3945
0x000000000003ea0b : ret 0x3948
0x000000000002ed42 : ret 0x3949
0x00000000001044c0 : ret 0x394c
0x0000000000035a0a : ret 0x394d
0x0000000000033e0a : ret 0x39a
0x00000000000a1202 : ret 0x3a01
0x000000000016120b : ret 0x3a73
0x0000000000004a08 : ret 0x3b
0x000000000005a47a : ret 0x3b01
0x00000000000d85e0 : ret 0x3b42
0x000000000002c6fa : ret 0x3b48
0x00000000001273a2 : ret 0x3b74
0x00000000000f1f73 : ret 0x3b8
0x0000000000103084 : ret 0x3bf
0x0000000000035aff : ret 0x3c01
0x0000000000086bb1 : ret 0x3c75
0x000000000003fa01 : ret 0x3ce9
0x00000000000df862 : ret 0x3d
0x00000000000360d0 : ret 0x3d75
0x0000000000024532 : ret 0x3d83
0x0000000000046ea7 : ret 0x3dbe
0x00000000000a54fd : ret 0x3de9
0x00000000000ae7e6 : ret 0x3e89
0x00000000000e81d1 : ret 0x3ee9
0x00000000000700eb : ret 0x3f7
0x000000000002445e : ret 0x3f74
0x00000000000b1327 : ret 0x400
0x00000000000d3c6a : ret 0x4001
0x00000000000d45b1 : ret 0x402
0x00000000000009f5 : ret 0x4021
0x00000000000e73f9 : ret 0x403c
0x000000000002299a : ret 0x4101
0x0000000000117e52 : ret 0x4102
0x00000000000645f5 : ret 0x4104
0x000000000004a258 : ret 0x4108
0x000000000002082b : ret 0x4110
0x00000000000cf3b8 : ret 0x4118
0x00000000000c5d26 : ret 0x4164
0x0000000000088a10 : ret 0x4166
0x000000000002586e : ret 0x41c3
0x000000000008693a : ret 0x4201
0x00000000000b14f3 : ret 0x4240
0x0000000000097dfa : ret 0x4266
0x00000000000d89a9 : ret 0x428b
0x00000000000b2312 : ret 0x428d
0x00000000000de821 : ret 0x42c7
0x000000000005b958 : ret 0x42e8
0x00000000000ed530 : ret 0x43f6
0x000000000005517d : ret 0x4401
0x00000000000c1af5 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x0000000000000456 : ret 0x4412
0x000000000012dd78 : ret 0x4489
0x0000000000123862 : ret 0x448b
0x00000000000e7cab : ret 0x44c6
0x0000000000029f95 : ret 0x44c7
0x00000000000249b9 : ret 0x44f6
0x0000000000050837 : ret 0x4501
0x0000000000130034 : ret 0x4502
0x0000000000064c57 : ret 0x4504
0x00000000000ad03e : ret 0x4505
0x00000000000d7c0d : ret 0x4510
0x00000000000edee0 : ret 0x4574
0x00000000000ea7cd : ret 0x4576
0x00000000000c59a0 : ret 0x45e9
0x00000000000cb7ef : ret 0x460f
0x00000000000a1e97 : ret 0x4675
0x00000000000098b0 : ret 0x47
0x0000000000174be4 : ret 0x474c
0x00000000000bc30b : ret 0x4775
0x0000000000091605 : ret 0x4788
0x00000000000fb3b3 : ret 0x47e8
0x000000000000fb68 : ret 0x48
0x0000000000027a30 : ret 0x4801
0x0000000000027cde : ret 0x4802
0x0000000000050a32 : ret 0x4803
0x0000000000027a95 : ret 0x4804
0x0000000000091bbd : ret 0x4805
0x00000000000285ea : ret 0x4806
0x00000000000fe2a2 : ret 0x4807
0x00000000000218a8 : ret 0x4808
0x00000000000fe102 : ret 0x4809
0x00000000000fe3c2 : ret 0x480a
0x00000000000fdf62 : ret 0x480b
0x00000000000b060e : ret 0x480e
0x0000000000039ac6 : ret 0x4810
0x00000000000ff6e4 : ret 0x4811
0x000000000012a033 : ret 0x4812
0x00000000000fbffd : ret 0x4814
0x000000000008117e : ret 0x4817
0x00000000000ccaf0 : ret 0x481e
0x00000000000b89e3 : ret 0x4830
0x0000000000096e2d : ret 0x4840
0x0000000000021fd5 : ret 0x4847
0x00000000000c0f35 : ret 0x4864
0x0000000000036115 : ret 0x4866
0x00000000000a894e : ret 0x4890
0x00000000000f0b80 : ret 0x48b
0x00000000001261e4 : ret 0x48bf
0x00000000000bf3ba : ret 0x48c
0x00000000000889ef : ret 0x48c3
0x000000000003cc24 : ret 0x48d
0x0000000000050d32 : ret 0x48e8
0x0000000000023681 : ret 0x48e9
0x00000000001763a6 : ret 0x48f
0x000000000002a9e4 : ret 0x4901
0x0000000000092021 : ret 0x4902
0x0000000000025ee5 : ret 0x4904
0x00000000001250c5 : ret 0x4907
0x000000000004ded5 : ret 0x4908
0x00000000000ab690 : ret 0x4909
0x00000000001372f2 : ret 0x4910
0x00000000000ae410 : ret 0x491e
0x0000000000085eb1 : ret 0x49e8
0x00000000000038af : ret 0x49ec
0x00000000000f4d6f : ret 0x4b01
0x000000000004a6f5 : ret 0x4b77
0x00000000001115d1 : ret 0x4b78
0x00000000000867fb : ret 0x4b80
0x0000000000005848 : ret 0x4c
0x00000000000292a2 : ret 0x4c01
0x0000000000091d81 : ret 0x4c02
0x000000000006827a : ret 0x4c04
0x00000000000326a5 : ret 0x4c08
0x0000000000049a2e : ret 0x4c10
0x000000000005024f : ret 0x4c30
0x00000000000bca0c : ret 0x4c48
0x00000000000e6a96 : ret 0x4c6
0x0000000000127bb1 : ret 0x4c74
0x0000000000125067 : ret 0x4c8b
0x000000000005d86e : ret 0x4ce8
0x0000000000025974 : ret 0x4d02
0x000000000010c84e : ret 0x4d04
0x000000000007d47f : ret 0x4d07
0x000000000003fe16 : ret 0x4d09
0x000000000009d112 : ret 0x4d10
0x00000000001039cb : ret 0x4d30
0x0000000000052d67 : ret 0x4d64
0x000000000004fbbd : ret 0x4de8
0x000000000004fd1b : ret 0x4e0f
0x0000000000175e07 : ret 0x4e27
0x0000000000020822 : ret 0x4eb
0x00000000000fa6ad : ret 0x5077
0x00000000001611f4 : ret 0x5173
0x0000000000046fd4 : ret 0x5174
0x0000000000113619 : ret 0x51e8
0x000000000000315a : ret 0x52c0
0x00000000000e6ee8 : ret 0x52e9
0x0000000000033a7a : ret 0x532
0x000000000006d6a7 : ret 0x5389
0x00000000000d773a : ret 0x538b
0x000000000011167b : ret 0x53e9
0x00000000001221db : ret 0x53ff
0x00000000000ad011 : ret 0x5441
0x0000000000049524 : ret 0x5474
0x0000000000096fb9 : ret 0x547c
0x0000000000039df8 : ret 0x5489
0x0000000000128b81 : ret 0x548d
0x0000000000067ba6 : ret 0x54e8
0x000000000017406c : ret 0x5508
0x0000000000002442 : ret 0x5576
0x00000000000b0161 : ret 0x5589
0x00000000000475b7 : ret 0x5641
0x0000000000086b97 : ret 0x5675
0x000000000009374a : ret 0x56e9
0x00000000000d4abc : ret 0x574
0x0000000000109f12 : ret 0x577
0x00000000001273cd : ret 0x57b
0x00000000000c0da3 : ret 0x57e8
0x0000000000176338 : ret 0x5803
0x00000000000afcba : ret 0x583
0x0000000000073e9d : ret 0x5877
0x0000000000080814 : ret 0x58b
0x0000000000173d40 : ret 0x591c
0x0000000000132157 : ret 0x59e9
0x0000000000003239 : ret 0x5a51
0x000000000002c3da : ret 0x5ab
0x0000000000174aa7 : ret 0x5ae4
0x00000000000e314c : ret 0x5ba
0x0000000000002f67 : ret 0x5bdb
0x0000000000095fdb : ret 0x5be9
0x0000000000104bcd : ret 0x5bf
0x00000000000b2e2b : ret 0x5c89
0x0000000000003021 : ret 0x5cbe
0x000000000005ae2f : ret 0x5ce9
0x00000000000b66ca : ret 0x5e
0x00000000000f3555 : ret 0x5e9
0x00000000000ae874 : ret 0x5ee9
0x00000000000b64ca : ret 0x60
0x00000000000004b9 : ret 0x6080
0x0000000000076ea4 : ret 0x60e9
0x0000000000002705 : ret 0x617e
0x00000000000fae99 : ret 0x61e8
0x00000000001767d2 : ret 0x62c1
0x0000000000040173 : ret 0x6348
0x0000000000053754 : ret 0x6349
0x00000000000a1e7a : ret 0x6375
0x000000000008ab8f : ret 0x63be
0x0000000000096fa9 : ret 0x647c
0x00000000000b9284 : ret 0x64b8
0x0000000000033d78 : ret 0x65e9
0x00000000000d65c8 : ret 0x6601
0x000000000009705a : ret 0x6610
0x000000000008bd92 : ret 0x6620
0x000000000000280b : ret 0x6642
0x000000000011e15a : ret 0x665
0x000000000011e05a : ret 0x666
0x0000000000086eb3 : ret 0x66c3
0x00000000000c0914 : ret 0x676
0x00000000000d8186 : ret 0x677e
0x0000000000173d5f : ret 0x67b2
0x00000000000b2291 : ret 0x67ba
0x00000000000eaba3 : ret 0x67e8
0x00000000000b14f0 : ret 0x6948
0x00000000000d3f19 : ret 0x697e
0x00000000000737e9 : ret 0x6ae9
0x00000000000c1a4a : ret 0x6b74
0x00000000000c2e99 : ret 0x6b8
0x0000000000003c96 : ret 0x6bba
0x0000000000102db2 : ret 0x6bf
0x00000000001858f3 : ret 0x6e1f
0x0000000000176961 : ret 0x6f9
0x00000000000a3918 : ret 0x6fe9
0x0000000000034624 : ret 0x70e9
0x000000000004f406 : ret 0x71eb
0x00000000000794da : ret 0x721
0x00000000000217c0 : ret 0x7401
0x0000000000037673 : ret 0x7402
0x000000000006cd88 : ret 0x7404
0x000000000007540e : ret 0x7408
0x000000000006e261 : ret 0x7420
0x0000000000050267 : ret 0x7450
0x0000000000098347 : ret 0x7501
0x0000000000037634 : ret 0x7502
0x000000000008c57d : ret 0x7504
0x0000000000072ea8 : ret 0x7508
0x000000000016217b : ret 0x7510
0x000000000008c578 : ret 0x7518
0x0000000000162188 : ret 0x7520
0x00000000000d3969 : ret 0x7540
0x00000000000f0951 : ret 0x7577
0x0000000000082537 : ret 0x7675
0x00000000001600e2 : ret 0x7677
0x00000000000b0501 : ret 0x76c
0x0000000000024eca : ret 0x774
0x00000000000c533c : ret 0x775
0x000000000002c237 : ret 0x7773
0x000000000006d366 : ret 0x778d
0x00000000000b2366 : ret 0x77e
0x00000000000ebf83 : ret 0x77e8
0x00000000000826c5 : ret 0x7874
0x00000000000a63ea : ret 0x7901
0x0000000000002eb4 : ret 0x793b
0x000000000006d3e9 : ret 0x7a8b
0x0000000000116d67 : ret 0x7a8d
0x00000000000365a5 : ret 0x7c7
0x00000000000eea33 : ret 0x7c83
0x00000000000dbcf6 : ret 0x7c8b
0x000000000012f3d0 : ret 0x7de9
0x000000000008bd22 : ret 0x7e20
0x00000000000fb0f3 : ret 0x7e8
0x00000000000d8dca : ret 0x7eb
0x000000000008717c : ret 0x7f10
0x00000000000ff0b3 : ret 0x7fd
0x000000000014a86e : ret 0x80
0x0000000000088359 : ret 0x8000
0x0000000000033f5c : ret 0x8001
0x00000000000b4223 : ret 0x8010
0x0000000000034c5b : ret 0x8040
0x000000000009d54d : ret 0x8072
0x0000000000115958 : ret 0x8080
0x0000000000003870 : ret 0x80fc
0x0000000000042c74 : ret 0x8136
0x000000000004559b : ret 0x8141
0x0000000000051f03 : ret 0x8166
0x00000000000cb579 : ret 0x81e8
0x00000000000fb838 : ret 0x81e9
0x0000000000066086 : ret 0x820f
0x000000000011f063 : ret 0x828d
0x00000000000ca855 : ret 0x82e9
0x00000000000d0c99 : ret 0x82eb
0x000000000002d2c5 : ret 0x8301
0x00000000001130f9 : ret 0x8303
0x000000000001fc6e : ret 0x8304
0x0000000000096261 : ret 0x8305
0x000000000005620f : ret 0x8308
0x00000000000475ec : ret 0x830f
0x000000000002ea88 : ret 0x8310
0x00000000000525ea : ret 0x832d
0x000000000001f63f : ret 0x8341
0x000000000008b8e6 : ret 0x8348
0x00000000000514d5 : ret 0x8349
0x0000000000134bfc : ret 0x8366
0x000000000013341a : ret 0x8380
0x00000000000d7cac : ret 0x839
0x00000000000d7f1c : ret 0x83b
0x00000000000979fb : ret 0x8401
0x0000000000053746 : ret 0x8404
0x0000000000021a92 : ret 0x840f
0x0000000000049a01 : ret 0x841
0x000000000007d538 : ret 0x8441
0x00000000000789f5 : ret 0x8445
0x00000000000cbb13 : ret 0x84e9
0x000000000006cbbf : ret 0x8502
0x0000000000053815 : ret 0x8504
0x000000000006d5be : ret 0x8508
0x000000000002e248 : ret 0x850f
0x00000000000b257e : ret 0x8545
0x0000000000055da1 : ret 0x8548
0x000000000004902f : ret 0x854d
0x00000000000cbae9 : ret 0x8589
0x0000000000050ae3 : ret 0x858b
0x000000000004b92e : ret 0x860f
0x00000000000f87ea : ret 0x861
0x0000000000036dc5 : ret 0x870f
0x000000000017367e : ret 0x871e
0x000000000008be35 : ret 0x876
0x00000000001092bc : ret 0x87e
0x0000000000022835 : ret 0x8801
0x0000000000098082 : ret 0x8802
0x00000000000c70b2 : ret 0x8804
0x00000000000c8b5d : ret 0x880f
0x00000000000b0d8f : ret 0x8840
0x000000000011a385 : ret 0x8841
0x00000000001257ce : ret 0x8844
0x00000000000ea4f9 : ret 0x8845
0x0000000000002594 : ret 0x88ad
0x000000000002dbbd : ret 0x8901
0x000000000004bf25 : ret 0x8908
0x000000000004bf95 : ret 0x8910
0x00000000000ae837 : ret 0x8941
0x00000000000373a6 : ret 0x8944
0x00000000000213a8 : ret 0x8948
0x00000000000217f0 : ret 0x8949
0x000000000001f88f : ret 0x894c
0x000000000007d483 : ret 0x894d
0x000000000003911b : ret 0x894e
0x000000000003d39d : ret 0x8966
0x0000000000103bfe : ret 0x89eb
0x000000000008b99a : ret 0x8a04
0x0000000000002537 : ret 0x8a4c
0x00000000000a3900 : ret 0x8aeb
0x0000000000025d07 : ret 0x8b01
0x00000000001061fb : ret 0x8b02
0x00000000000a354f : ret 0x8b04
0x000000000002f92e : ret 0x8b05
0x00000000001027fe : ret 0x8b28
0x0000000000175eae : ret 0x8b36
0x000000000002e9f2 : ret 0x8b41
0x000000000004b731 : ret 0x8b44
0x0000000000094bd3 : ret 0x8b46
0x00000000000d24d8 : ret 0x8b47
0x0000000000022ad9 : ret 0x8b48
0x00000000000211ac : ret 0x8b49
0x000000000003909e : ret 0x8b4a
0x0000000000031cc5 : ret 0x8b4c
0x000000000006ea58 : ret 0x8b64
0x00000000000e330e : ret 0x8c0f
0x000000000000377a : ret 0x8cba
0x00000000000c72f8 : ret 0x8d01
0x000000000005e5a7 : ret 0x8d04
0x0000000000050eca : ret 0x8d0f
0x00000000000b92e3 : ret 0x8d41
0x00000000000b8ea0 : ret 0x8d44
0x00000000000cf2f9 : ret 0x8d47
0x0000000000021e88 : ret 0x8d48
0x0000000000031cde : ret 0x8d49
0x000000000005ea9f : ret 0x8d4a
0x00000000000ae2f1 : ret 0x8d4b
0x0000000000024d1b : ret 0x8d4c
0x0000000000051ef5 : ret 0x8d4d
0x000000000005f722 : ret 0x8d89
0x00000000000e8dcd : ret 0x8de9
0x00000000000273b6 : ret 0x8e0f
0x00000000001210dc : ret 0x8ee8
0x000000000006199c : ret 0x8f0f
0x00000000000f24dd : ret 0x8feb
0x000000000002f91d : ret 0x90c3
0x00000000000dbfd9 : ret 0x91e8
0x00000000001326df : ret 0x9274
0x000000000005c2e5 : ret 0x92e9
0x00000000000e3477 : ret 0x930f
0x00000000000b22c5 : ret 0x93ba
0x00000000000850fe : ret 0x93be
0x00000000000b0e6f : ret 0x943a
0x00000000000e3481 : ret 0x944
0x000000000008168f : ret 0x948
0x000000000008a878 : ret 0x94c
0x00000000000577fb : ret 0x9529
0x00000000000218f9 : ret 0x9539
0x00000000000323e6 : ret 0x953d
0x0000000000174cd3 : ret 0x9576
0x0000000000112672 : ret 0x9588
0x000000000010c8a9 : ret 0x96eb
0x00000000000e7326 : ret 0x970
0x00000000000cb501 : ret 0x970f
0x000000000000375c : ret 0x975
0x00000000000c44c3 : ret 0x97e9
0x00000000000f9a40 : ret 0x9848
0x0000000000086be5 : ret 0x9874
0x000000000005d7b6 : ret 0x98e9
0x00000000000c4733 : ret 0x9aeb
0x00000000000ebadf : ret 0x9be
0x0000000000032dfd : ret 0x9be9
0x000000000009d530 : ret 0x9d72
0x0000000000056516 : ret 0x9d8b
0x00000000000b0c32 : ret 0x9e0f
0x00000000000f08bf : ret 0x9e75
0x00000000001210cc : ret 0x9ee8
0x000000000008cc1e : ret 0xa
0x000000000019265c : ret 0xa03
0x000000000005d7ae : ret 0xa0e9
0x00000000000f1c59 : ret 0xa1e8
0x0000000000077462 : ret 0xa1eb
0x00000000000460af : ret 0xa274
0x00000000001749c3 : ret 0xa514
0x00000000000a5497 : ret 0xa6eb
0x0000000000041bba : ret 0xa77
0x0000000000080bc3 : ret 0xa7e
0x000000000013411e : ret 0xa802
0x0000000000051335 : ret 0xa9e9
0x000000000003dd14 : ret 0xaba
0x0000000000174e47 : ret 0xac65
0x0000000000175804 : ret 0xacfc
0x0000000000004531 : ret 0xb
0x00000000000fad49 : ret 0xb1e8
0x00000000000800c4 : ret 0xb48b
0x00000000000781ee : ret 0xb4eb
0x0000000000071c3b : ret 0xb5eb
0x00000000000296d7 : ret 0xb60f
0x00000000000f9228 : ret 0xb6e9
0x00000000000777c3 : ret 0xb6eb
0x0000000000029a85 : ret 0xb70f
0x0000000000037c4e : ret 0xb74
0x0000000000022282 : ret 0xb8
0x000000000012e29c : ret 0xb804
0x0000000000036031 : ret 0xb848
0x00000000000472b5 : ret 0xb87f
0x00000000000d421a : ret 0xb880
0x00000000000b3eb2 : ret 0xb8e9
0x0000000000070a7f : ret 0xb8eb
0x00000000000be1d3 : ret 0xb9
0x000000000004fd1e : ret 0xb941
0x0000000000174d0e : ret 0xb9b9
0x0000000000036d9c : ret 0xba41
0x00000000000756a3 : ret 0xba74
0x0000000000003155 : ret 0xba88
0x00000000000bf571 : ret 0xbae9
0x00000000000714ea : ret 0xbbeb
0x0000000000078044 : ret 0xbceb
0x0000000000002464 : ret 0xbd07
0x000000000005fb8c : ret 0xbd83
0x000000000005214a : ret 0xbe07
0x00000000000b89ed : ret 0xbe41
0x0000000000174a64 : ret 0xbe57
0x00000000000bf764 : ret 0xbe7
0x0000000000071acf : ret 0xbfeb
0x000000000003e73a : ret 0xc
0x000000000004c9c3 : ret 0xc0
0x0000000000088219 : ret 0xc000
0x000000000011b361 : ret 0xc001
0x00000000000d6478 : ret 0xc030
0x00000000000203c1 : ret 0xc031
0x0000000000047772 : ret 0xc083
0x000000000004f479 : ret 0xc085
0x00000000000af505 : ret 0xc0e9
0x0000000000029207 : ret 0xc101
0x00000000000224bd : ret 0xc141
0x0000000000036167 : ret 0xc148
0x000000000011ef87 : ret 0xc166
0x0000000000037113 : ret 0xc189
0x000000000002d065 : ret 0xc1e9
0x00000000000daf83 : ret 0xc209
0x000000000003cc2a : ret 0xc229
0x000000000003cdd8 : ret 0xc269
0x00000000000e414b : ret 0xc283
0x00000000001610c4 : ret 0xc2b2
0x00000000000dc5c0 : ret 0xc339
0x000000000004877b : ret 0xc35b
0x00000000000f9b03 : ret 0xc383
0x0000000000101fdb : ret 0xc3f3
0x0000000000172902 : ret 0xc4c3
0x0000000000174618 : ret 0xc4ff
0x0000000000022855 : ret 0xc601
0x0000000000036bc7 : ret 0xc748
0x0000000000130c44 : ret 0xc749
0x00000000000a1ed1 : ret 0xc75
0x0000000000080328 : ret 0xc789
0x00000000000eb733 : ret 0xc7e8
0x0000000000042c7e : ret 0xc801
0x000000000008c3e9 : ret 0xc88
0x000000000007b420 : ret 0xc883
0x000000000002a7f1 : ret 0xc889
0x00000000000c86a1 : ret 0xc8d
0x00000000000e4a15 : ret 0xc8e9
0x00000000000d7633 : ret 0xc931
0x0000000000136451 : ret 0xc984
0x000000000011266b : ret 0xc985
0x00000000000f7b81 : ret 0xc9e8
0x00000000000a5474 : ret 0xc9eb
0x0000000000086c56 : ret 0xc9ff
0x000000000013cb0c : ret 0xca39
0x00000000000373a9 : ret 0xca81
0x00000000000cbad7 : ret 0xca83
0x00000000000a85fa : ret 0xcad
0x00000000000f9ec9 : ret 0xcad9
0x00000000000847d4 : ret 0xcb8
0x000000000003bd7a : ret 0xcbc
0x000000000001f72c : ret 0xcbeb
0x00000000000f0258 : ret 0xcc80
0x00000000001740aa : ret 0xcca7
0x000000000017618d : ret 0xcd11
0x000000000009d500 : ret 0xcd72
0x000000000003a1ba : ret 0xcde
0x0000000000033a31 : ret 0xce80
0x000000000001f8c2 : ret 0xce89
0x00000000000a5bf9 : ret 0xceb
0x000000000004f5a6 : ret 0xcee9
0x000000000012f36a : ret 0xcf89
0x00000000000f38ee : ret 0xcfeb
0x00000000000c2342 : ret 0xd029
0x000000000007d2f5 : ret 0xd075
0x00000000000364c3 : ret 0xd089
0x00000000000cf9f1 : ret 0xd101
0x000000000011259c : ret 0xd120
0x00000000000b0bc5 : ret 0xd138
0x000000000005b8d4 : ret 0xd189
0x00000000000fb529 : ret 0xd1e8
0x0000000000035720 : ret 0xd231
0x00000000000b7104 : ret 0xd269
0x0000000000032a9d : ret 0xd284
0x00000000000dbe6c : ret 0xd285
0x000000000003e3d0 : ret 0xd349
0x00000000000aca4a : ret 0xd3a
0x000000000000089a : ret 0xd5a4
0x00000000000cd44a : ret 0xd5e9
0x00000000000d776c : ret 0xd675
0x000000000010b248 : ret 0xd72
0x00000000000f7e96 : ret 0xd74
0x00000000000f0ff6 : ret 0xd77
0x00000000000d2193 : ret 0xd7e8
0x00000000000485f0 : ret 0xd7e9
0x00000000000fce05 : ret 0xd889
0x0000000000175c25 : ret 0xd8f
0x00000000000acade : ret 0xd96
0x0000000000113b04 : ret 0xd975
0x00000000000a3e7f : ret 0xd9d
0x00000000000e103f : ret 0xd9e9
0x0000000000082380 : ret 0xda29
0x0000000000108243 : ret 0xda75
0x00000000000d94e7 : ret 0xda7f
0x00000000000366ed : ret 0xdaf7
0x00000000000bc47b : ret 0xdb31
0x0000000000124242 : ret 0xdb78
0x00000000000cacd5 : ret 0xdb84
0x00000000000af8b0 : ret 0xdc00
0x0000000000175d06 : ret 0xdcd9
0x00000000000d8e22 : ret 0xdd7f
0x0000000000174c82 : ret 0xde5d
0x000000000004759d : ret 0xde8
0x0000000000173a11 : ret 0xde9e
0x000000000002c31a : ret 0xdf89
0x000000000002ed9a : ret 0xe
0x00000000000880d9 : ret 0xe000
0x0000000000162139 : ret 0xe074
0x000000000003e315 : ret 0xe083
0x00000000000ed64b : ret 0xe0e9
0x00000000001211da : ret 0xe0ff
0x0000000000055ef6 : ret 0xe181
0x000000000005fe79 : ret 0xe183
0x00000000000faa19 : ret 0xe1e8
0x0000000000076965 : ret 0xe274
0x00000000000285d0 : ret 0xe281
0x0000000000028a7e : ret 0xe283
0x00000000000e2d23 : ret 0xe2c1
0x0000000000022b72 : ret 0xe2ff
0x00000000000587a8 : ret 0xe3e9
0x0000000000175e26 : ret 0xe71f
0x0000000000022371 : ret 0xe783
0x00000000001a3160 : ret 0xe7da
0x000000000006f792 : ret 0xe8
0x00000000000ef871 : ret 0xe801
0x00000000000ae965 : ret 0xe877
0x00000000000e7627 : ret 0xe883
0x0000000000021be4 : ret 0xe8c1
0x00000000000229ab : ret 0xe901
0x000000000006ccac : ret 0xe902
0x000000000006769b : ret 0xe908
0x00000000001392d6 : ret 0xe910
0x0000000000174187 : ret 0xe970
0x00000000000a550c : ret 0xe974
0x000000000004ab2e : ret 0xe9c0
0x00000000000b0c35 : ret 0xe9c1
0x000000000002ec81 : ret 0xe9e8
0x000000000003c5ac : ret 0xea76
0x00000000000a1a3a : ret 0xea81
0x000000000012f2ff : ret 0xea83
0x000000000005fe72 : ret 0xeac0
0x0000000000021a89 : ret 0xeac1
0x00000000000b7290 : ret 0xeaf7
0x00000000000d7604 : ret 0xeb01
0x000000000006cb60 : ret 0xeb02
0x000000000001fca3 : ret 0xeb04
0x0000000000057dce : ret 0xeb08
0x0000000000137316 : ret 0xeb10
0x00000000000beb92 : ret 0xeb11
0x000000000003d832 : ret 0xeb75
0x0000000000176938 : ret 0xec2
0x00000000000d959f : ret 0xec77
0x0000000000130061 : ret 0xec7c
0x00000000000d8282 : ret 0xece9
0x00000000000ad248 : ret 0xed77
0x00000000001969dc : ret 0xed84
0x00000000001998e6 : ret 0xedf8
0x000000000019b1dc : ret 0xee3c
0x000000000019a6de : ret 0xee68
0x000000000006ca74 : ret 0xee83
0x000000000007fafc : ret 0xee9
0x0000000000177bd0 : ret 0xeed4
0x00000000000f9fb9 : ret 0xeed9
0x00000000000bd79d : ret 0xeee9
0x00000000000e4bc5 : ret 0xeeeb
0x00000000001765da : ret 0xef32
0x000000000006c8ae : ret 0xef83
0x0000000000022365 : ret 0xefc1
0x000000000008183b : ret 0xf
0x0000000000087f99 : ret 0xf000
0x00000000000310ff : ret 0xf01
0x000000000007c0d3 : ret 0xf02
0x000000000005ba30 : ret 0xf039
0x000000000006d4c5 : ret 0xf04
0x0000000000098063 : ret 0xf077
0x000000000012ea32 : ret 0xf08
0x0000000000092f39 : ret 0xf0e9
0x00000000001005c1 : ret 0xf0eb
0x0000000000087132 : ret 0xf10
0x00000000001a0da6 : ret 0xf17f
0x00000000000970bc : ret 0xf188
0x0000000000076fe0 : ret 0xf189
0x0000000000102a2a : ret 0xf1ca
0x0000000000097a15 : ret 0xf1eb
0x0000000000098364 : ret 0xf20
0x00000000000f9cca : ret 0xf257
0x00000000000dae79 : ret 0xf2e9
0x000000000003a403 : ret 0xf301
0x000000000003762c : ret 0xf304
0x0000000000102a8a : ret 0xf375
0x000000000018a990 : ret 0xf380
0x0000000000114818 : ret 0xf3c3
0x00000000000f9a8a : ret 0xf3c5
0x0000000000178d18 : ret 0xf3c8
0x000000000004f677 : ret 0xf3f
0x000000000006eda3 : ret 0xf40
0x000000000002c599 : ret 0xf41
0x000000000005a178 : ret 0xf44
0x000000000002644f : ret 0xf48
0x000000000017942c : ret 0xf49a
0x0000000000050911 : ret 0xf4a
0x00000000000d1e2a : ret 0xf4d6
0x00000000001ab2a6 : ret 0xf55b
0x00000000001acb6e : ret 0xf57a
0x00000000001ad774 : ret 0xf582
0x00000000001ade7c : ret 0xf589
0x00000000000f70ea : ret 0xf5d1
0x00000000001af294 : ret 0xf5e1
0x00000000000e512d : ret 0xf601
0x00000000000bd39f : ret 0xf631
0x0000000000025192 : ret 0xf641
0x000000000003647b : ret 0xf66
0x00000000001b257e : ret 0xf683
0x00000000000a15e6 : ret 0xf685
0x000000000017a2f8 : ret 0xf68a
0x0000000000121faa : ret 0xf6f6
0x00000000000b22dc : ret 0xf741
0x000000000003daaf : ret 0xf748
0x00000000000b18ac : ret 0xf749
0x00000000000c0e03 : ret 0xf7e8
0x00000000000e2398 : ret 0xf7e9
0x0000000000087e59 : ret 0xf800
0x000000000010be3a : ret 0xf807
0x000000000018c490 : ret 0xf81a
0x00000000001738f0 : ret 0xf869
0x000000000018ca58 : ret 0xf880
0x00000000000a44f4 : ret 0xf883
0x0000000000032cb1 : ret 0xf889
0x000000000018cb00 : ret 0xf88a
0x00000000000ab72a : ret 0xf8cd
0x000000000008c5ba : ret 0xf95b
0x00000000000e22b2 : ret 0xf980
0x00000000000a60fe : ret 0xf983
0x00000000000427a4 : ret 0xf9e9
0x000000000011c44a : ret 0xfa58
0x000000000008887a : ret 0xfa7d
0x00000000000885fd : ret 0xfa80
0x00000000000422fd : ret 0xfa81
0x000000000004f614 : ret 0xfac1
0x0000000000057391 : ret 0xfae9
0x0000000000069dba : ret 0xfb56
0x0000000000083a1a : ret 0xfb99
0x0000000000061c2a : ret 0xfbd8
0x000000000012ca3a : ret 0xfbf3
0x0000000000087d19 : ret 0xfc00
0x00000000000f3c81 : ret 0xfc07
0x0000000000088a99 : ret 0xfc3
0x0000000000186e4c : ret 0xfc55
0x0000000000186c3c : ret 0xfc61
0x000000000018733c : ret 0xfc7d
0x0000000000187334 : ret 0xfc7e
0x000000000018732c : ret 0xfc7f
0x0000000000187324 : ret 0xfc80
0x000000000018731c : ret 0xfc81
0x0000000000187128 : ret 0xfc89
0x0000000000187620 : ret 0xfcb0
0x00000000000c36aa : ret 0xfcdf
0x00000000000807a2 : ret 0xfcf
0x000000000004c0ca : ret 0xfd33
0x000000000011673a : ret 0xfd56
0x00000000000d0c18 : ret 0xfd83
0x00000000000310d1 : ret 0xfdf
0x0000000000087bd9 : ret 0xfe00
0x00000000000ba2fa : ret 0xfe79
0x00000000000d78d6 : ret 0xfe83
0x00000000000a7ccb : ret 0xfe9
0x00000000000a8335 : ret 0xfeb
0x00000000000366f9 : ret 0xfeb8
0x0000000000087a99 : ret 0xff00
0x0000000000045ff0 : ret 0xff2
0x0000000000097d2a : ret 0xff3
0x0000000000048ed9 : ret 0xff31
0x000000000009679e : ret 0xff41
0x0000000000086b94 : ret 0xff48
0x000000000001f9b5 : ret 0xff49
0x000000000007e01a : ret 0xff4f
0x0000000000087959 : ret 0xff80
0x000000000011a076 : ret 0xff81
0x00000000000cee23 : ret 0xff83
0x000000000002532a : ret 0xffa1
0x000000000005a6bc : ret 0xffb7
0x0000000000048771 : ret 0xffb8
0x0000000000043958 : ret 0xffbf
0x0000000000087819 : ret 0xffc0
0x00000000000a6dfe : ret 0xffc1
0x000000000002312a : ret 0xffc3
0x00000000000573d2 : ret 0xffd8
0x000000000012937a : ret 0xffd9
0x000000000008124a : ret 0xffdb
0x00000000000667ea : ret 0xffdc
0x00000000000876d9 : ret 0xffe0
0x0000000000060a91 : ret 0xffec
0x0000000000197951 : ret 0xffed
0x0000000000189279 : ret 0xffee
0x000000000003d6fc : ret 0xffef
0x0000000000067695 : ret 0xfff0
0x000000000004445a : ret 0xfff1
0x0000000000051750 : ret 0xfff2
0x00000000000b7ea3 : ret 0xfff3
0x00000000001a6289 : ret 0xfff4
0x00000000000618b5 : ret 0xfff5
0x00000000000b32aa : ret 0xfff6
0x000000000004201a : ret 0xfff7
0x000000000005088d : ret 0xfff8
0x00000000000cde37 : ret 0xfff9
0x0000000000030f9b : ret 0xfffa
0x000000000011d47a : ret 0xfffb
0x000000000004daaa : ret 0xfffc
0x000000000008b2ea : ret 0xfffd
0x0000000000027fae : ret 0xfffe
0x00000000000c244a : ret 0xffff
0x0000000000000e20 : ret 1
0x0000000000001010 : ret 2
0x000000000000ecd8 : ret 3
0x000000000008bef9 : ret 4
0x0000000000001588 : ret 5
0x0000000000001728 : ret 6
0x00000000000066c1 : ret 7
0x000000000008bf15 : ret 8
0x0000000000162bea : ret 9
0x000000000001f727 : retf -0x31c7 ; cmovge eax, edx ; jmp 0x1f6ff
0x000000000018774c : retf -0x355 ; push qword ptr [rax - 0x55] ; cld ; jmp rax
0x000000000008fe7f : retf -0x7af1 ; call qword ptr [rsi]
0x0000000000179144 : retf -0xbfc ; call qword ptr [rdi]
0x0000000000178da8 : retf -0xc35 ; call qword ptr [rcx - 0x2f000c2c]
0x000000000018de35 : retf ; add dword ptr [rax], eax ; in al, -0x15 ; cli ; jmp rsp
0x00000000001aad4d : retf ; add dword ptr [rax], eax ; sbb ah, 0xf5 ; call qword ptr [rax]
0x0000000000178da9 : retf ; call qword ptr [rcx - 0x2f000c2c]
0x00000000001a63c1 : retf ; hlt ; jmp qword ptr [rdx]
0x00000000000e4121 : retf ; jmp 0xffffffffc3484129
0x00000000001937c4 : retf ; jrcxz 0x1937b5 ; jmp qword ptr [rdx]
0x000000000019c46c : retf ; pop rbp ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6120 : rol al, 0xf4 ; jmp qword ptr [rcx]
0x00000000000a12c5 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000096f5d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a3c3d : rol bl, 0x90 ; mov eax, 1 ; ret
0x000000000007522c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008bf8d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000886be : rol bl, 1 ; xor edx, edx ; mov eax, edx ; ret
0x0000000000048747 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000097d02 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000088cb2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000001717c0 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000c62bc : rol byte ptr [rax - 0x6bf0a207], cl ; ret 0x8d48
0x00000000000a380d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000010be76 : rol byte ptr [rax*4 + 0x753089f6], 0xea ; ret
0x000000000015ffed : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000005e19c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000001203e3 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x00000000000f75d5 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b1507 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000036dd3 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000000ba084 : rol byte ptr [rbp + 0x31], cl ; fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000f9f73 : rol byte ptr [rbp + 0x490f48d2], 0xc2 ; jmp 0xf9f84
0x0000000000093922 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000008958 : rol byte ptr [rbp + 8], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000088cd9 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x0000000000037979 : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; xor eax, eax ; ret
0x0000000000020241 : rol byte ptr [rbp - 0x6af0be40], cl ; ret 0x8341
0x00000000000f5770 : rol byte ptr [rbp - 0x77], 0xf7 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000178280 : rol byte ptr [rbp - 0x790f0004], 1 ; cld ; call qword ptr [rax]
0x00000000000c7447 : rol byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], 0x95 ; ret 0x8944
0x00000000000577f5 : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x000000000005c89f : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x00000000000cc6dd : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8944
0x00000000000cd1b2 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8b48
0x00000000000cd443 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000116a19 : rol byte ptr [rbx + rbx*2], 1 ; ret
0x0000000000070697 : rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x00000000000a4a36 : rol byte ptr [rbx + rcx*4], 0x10 ; test edx, edx ; jne 0xa4a39 ; ret
0x000000000003851b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x000000000010ab89 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x00000000000fd924 : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000002ff51 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000c60b4 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x0000000000027f2c : rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x000000000003461b : rol byte ptr [rbx - 0x77cfc20], cl ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x00000000000a2f02 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000114075 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000121025 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00000000000f63d2 : rol byte ptr [rbx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000b792b : rol byte ptr [rcx + 0x29], 1 ; ret
0x000000000004b8ae : rol byte ptr [rcx + 0x39], 1 ; ret
0x000000000005dfc1 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x0000000000070271 : rol byte ptr [rcx + 0x5c], cl ; jmp rax
0x000000000009415d : rol byte ptr [rcx + 0x5e], 1 ; ret
0x00000000000a1a31 : rol byte ptr [rcx + 0xbfff], cl ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000800a8 : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000020243 : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x8341
0x00000000000d3ade : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x840f
0x00000000000c744a : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x8944
0x000000000008865d : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x00000000000b22d8 : rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x00000000000ae2b8 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret
0x0000000000095550 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0x5474
0x00000000000d3f15 : rol byte ptr [rcx + rax*2], 0x39 ; ret 0x697e
0x00000000000bb4b9 : rol byte ptr [rcx + rbp - 0x16], 0xf ; ret 0x144
0x00000000000ba373 : rol byte ptr [rcx + rbp - 0x1e], 0xf ; ret 0x144
0x0000000000103dba : rol byte ptr [rcx + rbp - 0x38], 1 ; ret
0x000000000002bcd9 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000dad2e : rol byte ptr [rcx - 0x77], 1 ; ret
0x00000000001227bb : rol byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x89 ; ret
0x000000000009625e : rol byte ptr [rcx - 0x7d], cl ; ret 0x8305
0x00000000000b731a : rol byte ptr [rcx - 0x7d], cl ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x00000000000a2ee2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e3719 : rol byte ptr [rcx], 0x39 ; ret
0x00000000000472b2 : rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x00000000000dc5ba : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0xc339
0x00000000000381ca : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x381c9 ; xor eax, eax ; ret
0x00000000000382aa : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x382a9 ; xor eax, eax ; ret
0x00000000000d3c67 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000a1897 : rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000002d2c2 : rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000106349 : rol byte ptr [rcx], 0x89 ; ret 0x8948
0x00000000001019d2 : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000037405 : rol byte ptr [rcx], 0xf7 ; ret 0
0x00000000001ab4a5 : rol byte ptr [rcx], cl ; add al, bl ; in eax, -0xb ; call qword ptr [rax]
0x00000000000cb73c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000018707c : rol byte ptr [rdi - 0x78af0004], 0xfc ; jmp rax
0x00000000000a2f42 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d988e : rol byte ptr [rdx + 0x39], 0x34 ; xchg dword ptr [rbx + rbp*8 + 0x39], edi ; ret 0xc189
0x00000000000a2ef2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000fa375 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000c1cf6 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000000b4356 : rol byte ptr [rip + 0x16e], 1 ; ret
0x00000000000a2f32 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000172900 : rol cl, 0xc2 ; ret
0x0000000000037627 : rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000012a138 : rol cl, 1 ; call 0xffffffff80d59854
0x000000000012a302 : rol cl, 1 ; call 0xffffffff80d59a1e
0x000000000012a3af : rol cl, 1 ; call 0xffffffff80d59acb
0x00000000000b21d6 : rol cl, 1 ; clc ; add eax, 0x89d02944 ; ret
0x00000000000b23cb : rol cl, 1 ; clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000046d2f : rol cl, 1 ; loopne 0x46d58 ; or eax, esi ; ret
0x0000000000111061 : rol dh, 2 ; add byte ptr [rcx + 0x5c], al ; ret
0x00000000000a2e8c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000000d40c7 : rol dword ptr [rax], 0 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000019a36d : rol dword ptr [rax], 0 ; mov al, 0x25 ; out dx, al ; jmp qword ptr [rax]
0x0000000000116d57 : rol dword ptr [rax], 1 ; ror byte ptr [rax - 0x73], 5 ; pop rdi ; ret 0x2a
0x0000000000096f57 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000f0874 : rol dword ptr [rcx + 0x5c], 0x44 ; mov eax, ecx ; pop r13 ; ret
0x000000000005fe6b : rol dword ptr [rcx + 0xf], -0x4a ; or al, 0x89 ; ret 0xeac0
0x00000000000e347d : rol dword ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x944
0x00000000000346a2 : rol dword ptr [rcx], -0x7d ; cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000000d7769 : rol dword ptr [rcx], 0x39 ; ret 0xd675
0x000000000010bdd8 : rol dword ptr [rcx], 0x45 ; test eax, eax ; jne 0x10bdd0 ; ret
0x0000000000097527 : rol dword ptr [rcx], 0x48 ; sub eax, 1 ; jne 0x97529 ; ret
0x0000000000049b6a : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000001ab4bd : rol dword ptr [rcx], cl ; add al, dl ; in eax, -0xb ; jmp rbx
0x000000000009ef19 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000000dabee : rol dword ptr [rdx + 0x39], 0x2c ; mov dr1, word ptr [rbx + rbp*8 + 0x39] ; ret 0xc789
0x0000000000117ef6 : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x000000000018d9fd : rol dword ptr [rdx], 1 ; add byte ptr [rsi + rbp*2], ah ; cli ; jmp rsp
0x00000000000377d5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000000377d4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000018679c : ror al, 0xfb ; call qword ptr [rax]
0x000000000010c552 : ror ax, 8 ; ret
0x000000000003ba28 : ror byte ptr [r15], 0x84 ; ret 1
0x00000000000375f4 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00000000000377d6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000036112 : ror byte ptr [rax + 0x21], cl ; ret 0x4866
0x000000000008be02 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8be49 ; add rax, rdi ; ret
0x0000000000088b5f : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000009833e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000fbbf5 : ror byte ptr [rax + 0x39], 0xca ; cmovae rax, rsi ; ret
0x00000000000f10e2 : ror byte ptr [rax + 0x39], 0xd6 ; ja 0xf10f7 ; ret
0x0000000000107a78 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000cb73e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x0000000000082352 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000003945f : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x0000000000038f77 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000b0c2f : ror byte ptr [rax + 0x39], 1 ; ret 0x9e0f
0x000000000002619a : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000097a7b : ror byte ptr [rax + 0x48c07503], 0x83 ; ret
0x0000000000108bba : ror byte ptr [rax + 0x48e97507], 0x89 ; clc ; ret
0x00000000000c7c16 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000b4c6a : ror byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000046ec5 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000f794e : ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000000f9f75 : ror byte ptr [rax + 0xf], cl ; ret 0x2eb
0x00000000000a3eb4 : ror byte ptr [rax + 0xf], cl ; ret 0x8548
0x000000000011d1f8 : ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x00000000000f99ab : ror byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000000000970a3 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x00000000000937fc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008a709 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000117ec3 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000a5509 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000088b5c : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000054e1f : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000004bf1c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x000000000004bf8c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x000000000003c8ca : ror byte ptr [rax + 9], 0xd0 ; ret
0x000000000008bf85 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000b0265 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc2344bb3
0x00000000000b5122 : ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000b0483 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000c2690 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008bdc2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008bdf2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000096f92 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008bde2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000010ad3c : ror byte ptr [rax - 0x73], 1 ; cmp eax, 0xfffffe8c ; call rax
0x0000000000116d59 : ror byte ptr [rax - 0x73], 5 ; pop rdi ; ret 0x2a
0x000000000007ba9a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000096bd9 : ror byte ptr [rax - 0x77], 0xa ; ret
0x0000000000121669 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12160b ; xor eax, eax ; pop rbx ; ret
0x00000000001245d8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x000000000010abc2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000003cd28 : ror byte ptr [rax - 0x77], 0xf ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000010acd6 : ror byte ptr [rax - 0x77], 1 ; adc eax, 0x2b7ae2 ; pop rbp ; ret
0x00000000000857bc : ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000050d2f : ror byte ptr [rax - 0x77], 1 ; ret 0x48e8
0x000000000003d39a : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00000000000792a5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000b3e65 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000035499 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000127746 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x0000000000070694 : ror byte ptr [rax - 0x7b], cl ; rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x00000000000f4b0d : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rbx + 0x5b], dh ; ret
0x000000000003ce44 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000075acf : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ecdf0 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000003c23d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000465b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000135dbd : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000001298f8 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; pop rbp ; ret
0x00000000001365b1 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000051809 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000012e7c7 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000113743 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000096ff2 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000096fd2 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000096fb2 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000c091e : ror byte ptr [rax - 0x7d], 0xfa ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000000811d6 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc29159f5
0x000000000012e77c : ror byte ptr [rax - 0x7d], 1 ; in al, dx ; or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x0000000000023124 : ror byte ptr [rax - 0x7d], 1 ; jmp 0x23167
0x0000000000023124 : ror byte ptr [rax - 0x7d], 1 ; jmp 0x23168
0x000000000003f526 : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000003c310 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000050a2f : ror byte ptr [rax - 0x7d], 1 ; ret 0x4803
0x000000000010c6ed : ror byte ptr [rax - 0x7d], 1 ; ret 0xf01
0x0000000000071948 : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000eb583 : ror byte ptr [rax - 0x7d], cl ; in al, dx ; jo 0xeb585 ; ret 0x4840
0x0000000000047d40 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000296da : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000285e7 : ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000009d526 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000738ba : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6e42 : ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000117f41 : ror byte ptr [rax], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000008aa64 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000094ece : ror byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x0000000000066678 : ror byte ptr [rbp + 1], 1 ; ret 0x8d4a
0x000000000004735d : ror byte ptr [rbp - 0x75], 1 ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000048f04 : ror byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x00000000000a5464 : ror byte ptr [rbp - 0x7bf0febe], 1 ; ret 0
0x00000000001312f7 : ror byte ptr [rbx + 0x453b0840], cl ; or byte ptr [rdi], 0x94 ; ret 0xea83
0x00000000000d1b07 : ror byte ptr [rbx + rcx*4 + 0x15], 1 ; int1 ; ret 0x2e
0x0000000000187254 : ror byte ptr [rbx - 0x74af0004], 0xfc ; jmp rax
0x00000000001783b0 : ror byte ptr [rbx - 0xe], 1 ; push rax ; call qword ptr [rax]
0x0000000000186904 : ror byte ptr [rbx], 1 ; cld ; call rax
0x00000000000c242a : ror byte ptr [rbx], 1 ; mov ax, 0xfde8 ; jne 0xc2404 ; ret
0x00000000000c76fb : ror byte ptr [rcx + 0x29], cl ; cli ; sub r10, rax ; jmp 0xc7722
0x00000000000f13a2 : ror byte ptr [rcx + 0x29], cl ; fimul dword ptr [rcx + 0x39] ; ret 0x820f
0x0000000000088cdf : ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000000eb18f : ror byte ptr [rcx + 0x39], 1 ; ret 0x1b75
0x00000000000a3877 : ror byte ptr [rcx + 0x48c47503], 0x83 ; ret
0x00000000001227be : ror byte ptr [rcx + rcx*4 - 1], 0x89 ; ret
0x0000000000036734 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000007b42f : ror byte ptr [rcx - 0x3b7cb7ed], 1 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036a6e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x00000000001176e4 : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x0000000000123bf1 : ror byte ptr [rcx - 0x77], 0 ; mov eax, 1 ; ret
0x00000000000b084c : ror byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x0000000000092180 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x000000000009d10f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000954c7 : ror byte ptr [rcx - 0x7d], 1 ; ret 0xe901
0x00000000000a3810 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000b00c0 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00000000000fa4fc : ror byte ptr [rcx], 0xf8 ; ret
0x000000000008c779 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000007d61c : ror byte ptr [rdi], 0x1f ; add bl, dh ; ret
0x0000000000048e04 : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000094301 : ror byte ptr [rdi], 0x84 ; add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000003ba36 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000dde42 : ror byte ptr [rdi], 0x84 ; ret 0
0x000000000003ba29 : ror byte ptr [rdi], 0x84 ; ret 1
0x00000000000e0269 : ror byte ptr [rdi], 0x84 ; ret 5
0x000000000015702a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000000ab44d : ror byte ptr [rdi], 0x85 ; call qword ptr [rsi]
0x00000000000952e3 : ror byte ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000096f1c : ror byte ptr [rdi], 0x85 ; jge 0x96f2a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009bd71 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000009a386 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000986b7 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000d69a1 : ror byte ptr [rdi], 0x85 ; ret 2
0x00000000000adc1a : ror byte ptr [rdi], 0x85 ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000131f67 : ror byte ptr [rdi], 0x88 ; ret 0
0x000000000006f8ff : ror byte ptr [rdi], 0x88 ; ret 1
0x00000000001306af : ror byte ptr [rdi], 0x89 ; ret
0x00000000000c233f : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000012959f : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000b0d8c : ror byte ptr [rdi], 0x94 ; ret 0x8840
0x0000000000021e85 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00000000000b0e6c : ror byte ptr [rdi], 0x94 ; ret 0x943a
0x000000000013caae : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000005b8d1 : ror byte ptr [rdi], 0x94 ; ret 0xd189
0x000000000001f912 : ror byte ptr [rdi], 0x95 ; ret
0x0000000000076ea1 : ror byte ptr [rdi], 0x95 ; ret 0x60e9
0x00000000001228fd : ror byte ptr [rdi], 0x95 ; ret 0x8348
0x0000000000121b02 : ror byte ptr [rdi], 0x95 ; ret 0xd089
0x0000000000076e06 : ror byte ptr [rdi], 0x95 ; ret 0xd284
0x000000000006de95 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000a44f1 : ror byte ptr [rdi], 0x95 ; ret 0xf883
0x00000000000577f8 : ror byte ptr [rdi], 0x9f ; ret 0x9529
0x00000000000c268d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000005db7b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000cb7cf : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000ed3ea : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000354ae : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x35498 ; ret
0x00000000000d7737 : ror byte ptr [rdi], 1 ; ret 0x538b
0x00000000000dddee : ror byte ptr [rdi], 1 ; ret 0x8944
0x00000000000dc5bd : ror byte ptr [rdi], 1 ; ret 0xc339
0x00000000000b23d1 : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret
0x00000000000b228e : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret 0x67ba
0x00000000000499fe : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0x841
0x000000000005c8a2 : ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x000000000009703d : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000f7ff0 : ror byte ptr [rdi], cl ; ret 0x66c3
0x00000000000f9a3d : ror byte ptr [rdi], cl ; ret 0x9848
0x0000000000048778 : ror byte ptr [rdi], cl ; ret 0xc35b
0x00000000000dae76 : ror byte ptr [rdi], cl ; ret 0xf2e9
0x00000000000ff86f : ror byte ptr [rdi], cl ; test eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ff93f : ror byte ptr [rdi], cl ; test esi, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e61de : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000b0f49 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000daf80 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc209
0x00000000000b0bc2 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd138
0x0000000000085b9d : ror byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000001783d0 : ror byte ptr [rdx + rsi*8 - 1], 1 ; call qword ptr [rax]
0x0000000000178370 : ror byte ptr [rdx - 0xe], 0xff ; ror byte ptr [rdx - 0xe], 1 ; jmp rax
0x0000000000178374 : ror byte ptr [rdx - 0xe], 1 ; jmp rax
0x000000000018704c : ror byte ptr [rsi - 4], 0xff ; sahf ; test edi, esp ; jmp qword ptr [rax]
0x000000000000ecd0 : ror dl, 1 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000cb709 : ror dword ptr [r8 + 0x39], -0xd ; ja 0xcb6a9 ; pop rbx ; pop rbp ; ret
0x00000000000cb70a : ror dword ptr [rax + 0x39], -0xd ; ja 0xcb6a8 ; pop rbx ; pop rbp ; ret
0x000000000012ebfd : ror dword ptr [rax + 0x4800154c], -0x7d ; ret 0x4101
0x00000000000c1e61 : ror dword ptr [rax + 0x63], cl ; ret
0x00000000000f78ac : ror dword ptr [rax + 0xf], cl ; ret
0x000000000013cbf8 : ror dword ptr [rax + 1], -8 ; ret
0x000000000013cab8 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x000000000003dfd4 : ror dword ptr [rax + 1], 1 ; ret 0x8b48
0x0000000000131a82 : ror dword ptr [rax + 1], cl ; ret
0x000000000012ae52 : ror dword ptr [rax - 0x39], 1 ; ret 0xfffe
0x000000000007491e : ror dword ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000000d4ab5 : ror dword ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000000f7ebd : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000002ad1c : ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000e22f2 : ror dword ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000029a82 : ror dword ptr [rax - 0x77], 1 ; ret 0xb70f
0x00000000000c6784 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000007409d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x74097 ; ret
0x000000000007ae3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7ae37 ; ret
0x0000000000039715 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x7401
0x0000000000044f2f : ror dword ptr [rax - 0x7d], cl ; ret
0x0000000000057dc5 : ror dword ptr [rax], -0x17 ; and ebp, 0x8348ffff ; ret 0xeb08
0x0000000000067692 : ror dword ptr [rax], -0x17 ; ret 0xfff0
0x00000000000d1b79 : ror dword ptr [rcx + 0x47892c47], 0x30 ; ret
0x00000000000265ae : ror dword ptr [rcx + 0x7b808], 1 ; add byte ptr [rax], al ; jmp 0x26583
0x0000000000051ef2 : ror dword ptr [rcx + 1], 1 ; ret 0x8d4d
0x000000000003e855 : ror dword ptr [rcx - 0x3f], cl ; sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000c7bd1 : ror dword ptr [rcx - 0x77], cl ; ret 0x1f0f
0x0000000000162137 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000096eb5 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000003e3cd : ror dword ptr [rdi], -0x6b ; ret 0xd349
0x00000000000f0255 : ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000d2e69 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000160858 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160f64 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160d36 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000161e60 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160cb6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000160ff4 : ror dword ptr [rdi], -0x7b ; je 0x161004 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160aeb : ror dword ptr [rdi], -0x7b ; jno 0x160b00 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160bb3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160830 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012f1f4 : ror dword ptr [rdi], -0x7c ; wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000133c2b : ror dword ptr [rdi], 0x1f ; add bl, sil ; ret
0x00000000000ed3cc : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x00000000000b24c7 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000819d6 : ror dword ptr [rdi], cl ; xchg dword ptr [rcx - 0x9fffffb], edi ; ret
0x000000000007ffca : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000010c553 : ror eax, 8 ; ret
0x000000000007409c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x74098 ; ret
0x000000000007ae3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7ae38 ; ret
0x0000000000061d8b : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x0000000000061a3c : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x00000000001a803d : sahf ; add dword ptr [rax], eax ; jo 0x1a807d ; cmc ; jmp qword ptr [rcx]
0x0000000000192a3c : sahf ; and al, 0xeb ; jmp qword ptr [rdx]
0x0000000000105615 : sahf ; int1 ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000000025c2 : sahf ; jl 0x2557 ; loop 0x25a2 ; ret 0x23cb
0x00000000000025c1 : sahf ; jl 0x2558 ; loop 0x25a3 ; ret 0x23cb
0x000000000013da2e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000438be : sahf ; ret
0x00000000000b7320 : sahf ; ret 0x1fbf
0x00000000001740e5 : sahf ; ret 0x38ae
0x00000000000b0c34 : sahf ; ret 0xe9c1
0x000000000000243f : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x0000000000187050 : sahf ; test edi, esp ; jmp qword ptr [rax]
0x0000000000186968 : sal ah, 0xfb ; call qword ptr [rax]
0x000000000018ae41 : sal ah, cl ; jmp rsp
0x000000000018695c : sal al, 1 ; sti ; jmp qword ptr [rax]
0x00000000000b4354 : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000f212d : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001295d5 : sal bh, 0xd8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000129bb4 : sal bh, 0xd8 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000101e92 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005db7e : sal bh, 0xd8 ; pop rbx ; ret
0x0000000000022caa : sal bh, 0xd8 ; ret
0x00000000000a1b86 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x0000000000088357 : sal bh, 1 ; ret 0x8000
0x0000000000088217 : sal bh, 1 ; ret 0xc000
0x00000000000880d7 : sal bh, 1 ; ret 0xe000
0x0000000000087f97 : sal bh, 1 ; ret 0xf000
0x0000000000087e57 : sal bh, 1 ; ret 0xf800
0x0000000000087d17 : sal bh, 1 ; ret 0xfc00
0x0000000000087bd7 : sal bh, 1 ; ret 0xfe00
0x0000000000087a97 : sal bh, 1 ; ret 0xff00
0x0000000000087957 : sal bh, 1 ; ret 0xff80
0x0000000000087817 : sal bh, 1 ; ret 0xffc0
0x00000000000876d7 : sal bh, 1 ; ret 0xffe0
0x0000000000087597 : sal bh, 1 ; ret 0xfff0
0x0000000000087457 : sal bh, 1 ; ret 0xfff8
0x0000000000087317 : sal bh, 1 ; ret 0xfffc
0x00000000000871d7 : sal bh, 1 ; ret 0xfffe
0x000000000004f20c : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000178de1 : sal bl, 0xff ; std ; ret 0xfff3
0x000000000003857b : sal bl, 1 ; ret
0x00000000000a368f : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00000000000e22a9 : sal byte ptr [rax + rdi + 0xf], 0xb6 ; xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x0000000000129265 : sal byte ptr [rax + rsi*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x000000000018631c : sal byte ptr [rax - 5], 1 ; jmp qword ptr [rax]
0x00000000000b3d52 : sal byte ptr [rax], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008bdb8 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000008aae0 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000005d550 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000050263 : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000107a87 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000036b37 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x0000000000121564 : sal byte ptr [rbp + 9], 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000108164 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000011f696 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000126726 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000121265 : sal byte ptr [rbp + rax + 0x4c], cl ; mov edi, esp ; call rdx
0x00000000000887c1 : sal byte ptr [rbp + rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000096ac8 : sal byte ptr [rbp + rbp*8 + 0x41], 1 ; cmp eax, ecx ; je 0x96ac1 ; ret
0x0000000000041bbf : sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000007c585 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000969b5 : sal byte ptr [rbp - 0x10], cl ; ret
0x00000000000381ce : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000010836e : sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x0000000000177184 : sal byte ptr [rbp - 0x12], 1 ; call qword ptr [rax]
0x00000000000a1430 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000740a0 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000096c7a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000010bddc : sal byte ptr [rbp - 0x17], 0xf3 ; ret
0x0000000000113265 : sal byte ptr [rbp - 0x18], 0x4c ; mov edi, edi ; call 0x1f4f8
0x000000000012b866 : sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x0000000000096ce7 : sal byte ptr [rbp - 0x1a], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000096a5a : sal byte ptr [rbp - 0x1d], 0xf3 ; ret
0x0000000000097eab : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000c6010 : sal byte ptr [rbp - 0x21], cl ; ret
0x00000000000c5fe6 : sal byte ptr [rbp - 0x24], cl ; ret
0x00000000000354b3 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000a356a : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000010846c : sal byte ptr [rbp - 0x3f], 0xc9 ; ret
0x000000000012d47f : sal byte ptr [rbp - 0x44], 0xeb ; ret 0x1f0f
0x00000000000e42d0 : sal byte ptr [rbp - 0x60], cl ; mov edx, dword ptr [r12 + 4] ; jmp 0xe42a5
0x00000000000973bb : sal byte ptr [rbp - 0x63], 0x48 ; mov eax, edi ; ret
0x0000000000086afa : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000a4a3b : sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000108070 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x00000000000f3132 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x0000000000088c82 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000c0399 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret
0x00000000000f38c5 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000012abe2 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x0000000000031971 : sal byte ptr [rbx + rdx + 0x48], 0x83 ; ret 0x4901
0x00000000001869a0 : sal byte ptr [rbx], 1 ; cld ; call rax
0x000000000012012a : sal byte ptr [rcx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000103462 : sal byte ptr [rcx + rcx + 0x48], 0x8b ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000103d37 : sal byte ptr [rcx + rcx - 0x77], cl ; ret 0xeac1
0x000000000012ab6d : sal byte ptr [rcx + rdx*8 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000107a76 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000001869a8 : sal byte ptr [rdi], 1 ; cld ; call rax
0x00000000000217bc : sal byte ptr [rdx + rax*2 - 0xa], cl ; ret 0x7401
0x000000000013cbf3 : sal byte ptr [rdx + rbx*8 + 0x48], 0x63 ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000088a93 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000098343 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x0000000000086cf3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000009703b : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000001a7ef0 : sal byte ptr [rdx], 0xf5 ; jmp qword ptr [rcx]
0x00000000001869a4 : sal byte ptr [rip + 0x37d0fffc], 1 ; cld ; call rax
0x00000000001305c7 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x000000000012463a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x124658 ; call rax
0x000000000012b8ea : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x12b908 ; call rax
0x000000000012bff3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x12c011 ; call rax
0x000000000012765e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x1276d4 ; call rax
0x000000000012808e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x1280f4 ; call rax
0x0000000000088a37 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x00000000001b6350 : sal ch, 0xf7 ; call rdx
0x000000000018af99 : sal ch, 0xff ; enter 1, 0x14 ; ret 0xfff5
0x000000000018a371 : sal cl, 1 ; call rsp
0x00000000000d1d71 : sal dh, 0xc1 ; add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x00000000000fa155 : sal dh, cl ; and al, 0x29 ; or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x000000000017a575 : sal dh, cl ; call rdx
0x0000000000096aa5 : sal dword ptr [rax + rsi*8 - 0xd], 1 ; ret
0x0000000000036621 : sal dword ptr [rbp + 0xc], 0x48 ; add esp, 8 ; ret
0x0000000000036346 : sal dword ptr [rbp + 7], 0x48 ; add esp, 8 ; ret
0x00000000000a30c8 : sal dword ptr [rbp - 0x1b], 1 ; sub eax, r8d ; nop ; ret
0x0000000000096bd7 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x000000000008897d : sal dword ptr [rcx], 1 ; ret
0x0000000000037625 : sal dword ptr [rcx], 1 ; rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000007ba98 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000086883 : sal dword ptr [rsi + 0x33], 0 ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000018a031 : sal eax, -1 ; add al, 0x5c ; add dword ptr [rax], eax ; ret 0xfff0
0x0000000000178f3d : sal ebx, cl ; jmp qword ptr [rsi]
0x00000000001a0b69 : sal ecx, cl ; call rsi
0x000000000017a57d : sal esi, 1 ; call rdx
0x000000000017a555 : sal esi, cl ; call rdx
0x000000000017a574 : sal r14b, cl ; call rdx
0x00000000000ac232 : salc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000162176 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000001f725 : salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f701
0x00000000001245db : salc ; add rdi, 0x10 ; jmp rcx
0x00000000001427e6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000164f11 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007dea3 : salc ; call qword ptr [rax]
0x00000000001063f9 : salc ; call rax
0x000000000018dcf9 : salc ; cli ; jmp rsp
0x00000000001aa6f1 : salc ; cmc ; jmp qword ptr [rsi]
0x00000000001a1111 : salc ; int1 ; call rsp
0x0000000000117e8f : salc ; ja 0x117e7c ; mov eax, 0xffffffff ; ret
0x00000000000f10e5 : salc ; ja 0xf10f4 ; ret
0x00000000000038a9 : salc ; jb 0x392b ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000f72b7 : salc ; jl 0xf72c8 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000002e322 : salc ; jmp r14
0x000000000003fc06 : salc ; loope 0x3fc0e ; dec dword ptr [rax - 0x77] ; ret
0x00000000000828d2 : salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x00000000000753c0 : salc ; mov eax, 0xffffffff ; ja 0x753d9 ; ret
0x00000000000886bc : salc ; mov eax, edx ; ret
0x0000000000001bec : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000a36a9 : salc ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x00000000000b8282 : salc ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000e3b25 : salc ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000022d4 : salc ; ret
0x00000000000025c6 : salc ; ret 0x23cb
0x000000000010bba6 : salc ; ret 0xfff6
0x0000000000186789 : salc ; sti ; call qword ptr [rax]
0x0000000000136a63 : salc ; sub byte ptr [rax], al ; test eax, eax ; jne 0x136a79 ; xor eax, eax ; ret
0x000000000006cdd6 : salc ; sub dh, byte ptr [rip + 0x48b4800] ; ret 0x8548
0x00000000001797c4 : salc ; wait ; hlt ; call rsi
0x00000000001797bc : salc ; wait ; hlt ; ljmp ptr [rax] ; wait ; hlt ; call rsi
0x000000000019a7bc : sar ah, 0xed ; jmp qword ptr [rdx]
0x0000000000176bc1 : sar bh, 1 ; jmp qword ptr [rdi]
0x000000000004c5e5 : sar bh, cl ; dec dword ptr [rax - 0x77] ; ret 0x31eb
0x0000000000068a5f : sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000018677d : sar bl, cl ; jmp qword ptr [rax]
0x00000000000d2261 : sar byte ptr [rax + 0x25], 0x89 ; ret 0x8b49
0x0000000000135572 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e8e1 : sar byte ptr [rax + 1], cl ; jne 0x12e8f8 ; ret
0x000000000012e921 : sar byte ptr [rax + 1], cl ; jne 0x12e938 ; ret
0x0000000000083ae7 : sar byte ptr [rax + 6], 0xf3 ; ret
0x000000000007140c : sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000d1d45 : sar byte ptr [rax], 0xe ; je 0xd1cd8 ; pop rbx ; ret
0x00000000001a8310 : sar byte ptr [rbx], 0xf5 ; jmp qword ptr [rcx]
0x00000000000fa343 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x00000000001a5330 : sar byte ptr [rdx - 0xc], 1 ; jmp qword ptr [rcx]
0x0000000000002b61 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x00000000000f60e6 : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000000c1ccc : sar byte ptr [rsi + 2], 1 ; ret
0x0000000000174a7f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000000e4a73 : sar ch, cl ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000001a6ee0 : sar dh, 1 ; hlt ; jmp rax
0x0000000000186948 : sar dh, 1 ; sti ; jmp qword ptr [rax]
0x00000000000721f8 : sar dl, cl ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000001ad174 : sar dword ptr [rbp - 0xb], cl ; jmp qword ptr [rdx]
0x000000000011fa7b : sar dword ptr [rdx + rbp], 0 ; add rsp, 8 ; ret
0x000000000019b074 : sar dword ptr [rdx], cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000195c4e : sar dword ptr [rsi - 0x13], -1 ; sbb al, 0xd ; outsb dx, byte ptr [rsi] ; jle 0x195c4d ; jmp qword ptr [rdx]
0x0000000000036701 : sar eax, 0x10 ; ret
0x00000000000363cb : sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x00000000000bf709 : sar eax, 0x1f ; pop rbx ; ret
0x0000000000132ce4 : sar eax, 0x1f ; ret
0x00000000000366ba : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003600d : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000003aa9 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000007510c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000771d0 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000072e8a : sar eax, 2 ; ret
0x00000000000a38fb : sar eax, 2 ; sub rdx, rax ; jmp 0xa3892
0x000000000010aafd : sar eax, 6 ; ret
0x0000000000189468 : sar ebp, cl ; out dx, al ; jmp rsp
0x0000000000186779 : sar ebx, 1 ; call rax
0x00000000001867bd : sar ebx, cl ; call qword ptr [rax - 0x1f00042c]
0x00000000001747e3 : sar ecx, 1 ; jnp 0x1747a4 ; ret
0x000000000004c749 : sar edi, 1 ; dec dword ptr [rax - 0x77] ; ret 0x1beb
0x0000000000073348 : sar edx, -1 ; xor eax, eax ; pop rbx ; ret
0x000000000003c874 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000003c887 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000f6ce7 : sar edx, cl ; dec dword ptr [rax + 0x39] ; ret
0x000000000008bf87 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000007510b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000003600c : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000072e89 : sar rax, 2 ; ret
0x00000000000a38fa : sar rax, 2 ; sub rdx, rax ; jmp 0xa3893
0x000000000010aafc : sar rax, 6 ; ret
0x000000000008bf86 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000001aad50 : sbb ah, 0xf5 ; call qword ptr [rax]
0x0000000000186add : sbb ah, bh ; inc eax ; sbb esp, edi ; call qword ptr [rax]
0x0000000000022f0a : sbb ah, byte ptr [rax] ; call rax
0x00000000000f51d2 : sbb ah, byte ptr [rbx - 0x74b6000e] ; call rbx
0x0000000000179345 : sbb ah, dh ; jmp qword ptr [rbx]
0x00000000001aa498 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret 1
0x00000000000cb609 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000001063fe : sbb al, 0x20 ; je 0x106466 ; xor eax, eax ; pop rbx ; ret
0x00000000001063fd : sbb al, 0x20 ; je 0x106467 ; xor eax, eax ; pop rbx ; ret
0x00000000001923c4 : sbb al, 0x42 ; add byte ptr [rax], al ; call 0x11190e8d
0x0000000000002f64 : sbb al, 0x44 ; nop ; ret 0x5bdb
0x00000000001b2ac4 : sbb al, 0x49 ; add al, byte ptr [rax] ; or byte ptr [rbx - 9], cl ; jmp qword ptr [rax]
0x0000000000192dc4 : sbb al, 0x4c ; add byte ptr [rax], al ; or byte ptr [rdx - 0x15], bl ; jmp qword ptr [rsi]
0x00000000001a45c4 : sbb al, 0x64 ; add dword ptr [rax], eax ; call 0x171a39d2
0x00000000001948c4 : sbb al, 0x67 ; add byte ptr [rax], al ; call 0x13193662
0x00000000001a4bc4 : sbb al, 0x6a ; add dword ptr [rax], eax ; fsub dword ptr [rbx - 0xc] ; jmp qword ptr [rcx]
0x000000000018cc24 : sbb al, 0x6d ; add al, byte ptr [rax] ; mov ah, 0xa6 ; clc ; jmp rsp
0x00000000001a62c4 : sbb al, 0x81 ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000000f3bc3 : sbb al, 0x83 ; ret
0x00000000001a69c4 : sbb al, 0x88 ; add dword ptr [rax], eax ; or bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000000e2b50 : sbb al, 0x9a ; add rbx, r10 ; jmp rbx
0x00000000001a7cc4 : sbb al, 0x9b ; add dword ptr [rax], eax ; mov byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a82c4 : sbb al, 0xa1 ; add dword ptr [rax], eax ; js 0x1a830c ; cmc ; jmp qword ptr [rcx]
0x00000000000d0b93 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000001aa7c4 : sbb al, 0xc6 ; add dword ptr [rax], eax ; sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x000000000019973a : sbb al, 0xd ; adc ah, bl ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019683a : sbb al, 0xd ; adc al, 0x85 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ace62 : sbb al, 0xd ; adc byte ptr [rbx - 0xb], bh ; jmp qword ptr [rdx]
0x00000000001949ba : sbb al, 0xd ; adc byte ptr [rdi - 0x13], ch ; jmp qword ptr [rdx]
0x00000000001a8fa2 : sbb al, 0xd ; add al, 0xe3 ; hlt ; jmp qword ptr [rdx]
0x000000000019a6e2 : sbb al, 0xd ; add bh, dl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ab1da : sbb al, 0xd ; add bl, byte ptr [rbx - 0xb] ; jmp qword ptr [rdx]
0x000000000018e722 : sbb al, 0xd ; add bl, byte ptr [rsi - 0x17] ; jmp qword ptr [rdx]
0x00000000001ac9a2 : sbb al, 0xd ; add byte ptr [rbx - 0xb], dh ; jmp qword ptr [rdx]
0x000000000019985a : sbb al, 0xd ; add ch, bl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a6722 : sbb al, 0xd ; add ch, byte ptr [rcx - 0xc] ; jmp qword ptr [rdx]
0x00000000001ac792 : sbb al, 0xd ; add ch, byte ptr [rsi - 0xb] ; jmp qword ptr [rdx]
0x000000000019304a : sbb al, 0xd ; add ecx, dword ptr [rdx - 0x15] ; jmp qword ptr [rdx]
0x0000000000198fb2 : sbb al, 0xd ; add esi, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a0532 : sbb al, 0xd ; and al, 0x76 ; int1 ; jmp qword ptr [rdx]
0x00000000001b0f22 : sbb al, 0xd ; and bh, byte ptr [rsi + rsi*8] ; jmp qword ptr [rdx]
0x0000000000194d22 : sbb al, 0xd ; and byte ptr [rdx - 0x13], dh ; jmp qword ptr [rdx]
0x00000000001a8a72 : sbb al, 0xd ; and dh, bl ; hlt ; jmp qword ptr [rdx]
0x00000000001a9842 : sbb al, 0xd ; and ebp, ebp ; hlt ; jmp qword ptr [rdx]
0x00000000001accaa : sbb al, 0xd ; and edi, dword ptr [rdx - 0xb] ; jmp qword ptr [rdx]
0x00000000001ac222 : sbb al, 0xd ; call 0x231ab797
0x0000000000195d4a : sbb al, 0xd ; cdq ; jle 0x195d41 ; jmp qword ptr [rdx]
0x000000000019ad5a : sbb al, 0xd ; cdq ; xor dh, ch ; jmp qword ptr [rdx]
0x0000000000194022 : sbb al, 0xd ; clc ; jg 0x194018 ; jmp qword ptr [rdx]
0x00000000001ab222 : sbb al, 0xd ; clc ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x000000000019b26a : sbb al, 0xd ; cld ; out dx, al ; jmp qword ptr [rdx]
0x000000000019492a : sbb al, 0xd ; cld ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001951fa : sbb al, 0xd ; cli ; jae 0x1951f1 ; jmp qword ptr [rdx]
0x00000000001aaa9a : sbb al, 0xd ; cli ; push rax ; cmc ; jmp qword ptr [rdx]
0x0000000000195fe2 : sbb al, 0xd ; cmc ; jle 0x195fd9 ; jmp qword ptr [rdx]
0x00000000001a141a : sbb al, 0xd ; cmc ; xchg ecx, esi ; jmp qword ptr [rdx]
0x00000000001a1032 : sbb al, 0xd ; cmp al, 0x80 ; int1 ; jmp qword ptr [rdx]
0x00000000001af07a : sbb al, 0xd ; cmp al, 0xe1 ; cmc ; jmp qword ptr [rdx]
0x00000000001a0daa : sbb al, 0xd ; cmp bh, byte ptr [rdi - 0xf] ; jmp qword ptr [rdx]
0x000000000019b102 : sbb al, 0xd ; cmp byte ptr [rbx], bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001999c2 : sbb al, 0xd ; cmp ch, bh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a8db2 : sbb al, 0xd ; cmp cl, ah ; hlt ; jmp qword ptr [rdx]
0x000000000019b38a : sbb al, 0xd ; cmp dword ptr [rdx - 0x12], eax ; jmp qword ptr [rdx]
0x0000000000199a52 : sbb al, 0xd ; cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019ae32 : sbb al, 0xd ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xor ebp, esi ; jmp qword ptr [rdx]
0x00000000001aff22 : sbb al, 0xd ; cwde ; and dh, dh ; jmp qword ptr [rdx]
0x000000000019b462 : sbb al, 0xd ; dec dword ptr [rcx - 0x12] ; jmp qword ptr [rdx]
0x000000000019fc9a : sbb al, 0xd ; fcomi st(0) ; jmp qword ptr [rdx]
0x00000000001acfaa : sbb al, 0xd ; fdivr dword ptr [rbp - 0xb] ; jmp qword ptr [rdx]
0x000000000019419a : sbb al, 0xd ; fdivr dword ptr [rdi - 0x14] ; jmp qword ptr [rdx]
0x00000000001960aa : sbb al, 0xd ; fdivr qword ptr [rsi - 0x13] ; jmp qword ptr [rdx]
0x00000000001a0d62 : sbb al, 0xd ; fidivr word ptr [rsi - 0xf] ; jmp qword ptr [rdx]
0x0000000000193002 : sbb al, 0xd ; fmul dword ptr [rcx - 0x15] ; jmp qword ptr [rdx]
0x0000000000193922 : sbb al, 0xd ; fucom st(4) ; jmp 0x19392c
0x000000000019457a : sbb al, 0xd ; fucomi st(4) ; jmp qword ptr [rdx]
0x00000000001ab59a : sbb al, 0xd ; hlt ; pop rsp ; cmc ; jmp qword ptr [rdx]
0x00000000001a1a82 : sbb al, 0xd ; hlt ; xchg eax, ecx ; int1 ; jmp qword ptr [rdx]
0x000000000019a8da : sbb al, 0xd ; idiv dh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a8f12 : sbb al, 0xd ; in al, -0x1e ; hlt ; jmp qword ptr [rdx]
0x0000000000199b72 : sbb al, 0xd ; in al, -0xd ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001928d2 : sbb al, 0xd ; in al, 0x22 ; jmp 0x1928dc
0x00000000001968d2 : sbb al, 0xd ; in al, dx ; test ch, ch ; jmp qword ptr [rdx]
0x00000000001ab33a : sbb al, 0xd ; in eax, 0x5a ; cmc ; jmp qword ptr [rdx]
0x0000000000198ffa : sbb al, 0xd ; in eax, dx ; fsubp st(5) ; jmp qword ptr [rdx]
0x00000000001a98da : sbb al, 0xd ; in eax, dx ; hlt ; jmp qword ptr [rdx]
0x00000000001998ea : sbb al, 0xd ; in eax, dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad03a : sbb al, 0xd ; in eax, dx ; jge 0x1ad039 ; jmp qword ptr [rdx]
0x00000000001ad082 : sbb al, 0xd ; in eax, dx ; jge 0x1ad081 ; jmp qword ptr [rdx]
0x00000000001a8e3a : sbb al, 0xd ; in eax, dx ; loop 0x1a8e38 ; jmp qword ptr [rdx]
0x00000000001ab3ba : sbb al, 0xd ; in eax, dx ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x000000000019291a : sbb al, 0xd ; insb byte ptr [rdi], dx ; and ebp, ebx ; jmp qword ptr [rdx]
0x0000000000196d0a : sbb al, 0xd ; insb byte ptr [rdi], dx ; test ebp, ebp ; jmp qword ptr [rdx]
0x0000000000192962 : sbb al, 0xd ; insd dword ptr [rdi], dx ; and ebp, ebx ; jmp qword ptr [rdx]
0x00000000001980d2 : sbb al, 0xd ; int1 ; stosd dword ptr [rdi], eax ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad1ba : sbb al, 0xd ; iretd ; jge 0x1ad1b9 ; jmp qword ptr [rdx]
0x0000000000198622 : sbb al, 0xd ; ja 0x1985e7 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199a0a : sbb al, 0xd ; ja 0x199a02 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a18d2 : sbb al, 0xd ; ja 0x1a1865 ; int1 ; jmp qword ptr [rdx]
0x0000000000195892 : sbb al, 0xd ; jae 0x195913 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199932 : sbb al, 0xd ; jae 0x199928 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad862 : sbb al, 0xd ; jae 0x1ad7ef ; cmc ; jmp qword ptr [rdx]
0x0000000000194d6a : sbb al, 0xd ; jb 0x194d61 ; jmp qword ptr [rdx]
0x00000000001985da : sbb al, 0xd ; jb 0x19859f ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a057a : sbb al, 0xd ; jbe 0x1a0575 ; jmp qword ptr [rdx]
0x00000000001a072a : sbb al, 0xd ; jbe 0x1a0725 ; jmp qword ptr [rdx]
0x0000000000195392 : sbb al, 0xd ; je 0x195389 ; jmp qword ptr [rdx]
0x000000000019544a : sbb al, 0xd ; je 0x195441 ; jmp qword ptr [rdx]
0x0000000000199782 : sbb al, 0xd ; je 0x199767 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001af722 : sbb al, 0xd ; je 0x1af71c ; cmc ; jmp qword ptr [rdx]
0x0000000000196192 : sbb al, 0xd ; jg 0x196189 ; jmp qword ptr [rdx]
0x00000000001961da : sbb al, 0xd ; jg 0x1961d1 ; jmp qword ptr [rdx]
0x0000000000196222 : sbb al, 0xd ; jg 0x196219 ; jmp qword ptr [rdx]
0x000000000019aa42 : sbb al, 0xd ; jg 0x19aa4a ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000193f7a : sbb al, 0xd ; jge 0x194002 ; in al, dx ; jmp qword ptr [rdx]
0x00000000001945c2 : sbb al, 0xd ; jge 0x1945a6 ; in al, dx ; jmp qword ptr [rdx]
0x0000000000196c7a : sbb al, 0xd ; jge 0x196c08 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196cc2 : sbb al, 0xd ; jge 0x196c50 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001acf62 : sbb al, 0xd ; jge 0x1acf61 ; jmp qword ptr [rdx]
0x0000000000195b42 : sbb al, 0xd ; jl 0x195b39 ; jmp qword ptr [rdx]
0x00000000001a1aca : sbb al, 0xd ; jl 0x1a1a65 ; int1 ; jmp qword ptr [rdx]
0x0000000000195402 : sbb al, 0xd ; jle 0x19547f ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195e42 : sbb al, 0xd ; jle 0x195e39 ; jmp qword ptr [rdx]
0x000000000019af52 : sbb al, 0xd ; jle 0x19af92 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a93b2 : sbb al, 0xd ; jle 0x1a93a5 ; hlt ; jmp qword ptr [rdx]
0x00000000001ae83a : sbb al, 0xd ; jle 0x1ae7de ; cmc ; jmp qword ptr [rdx]
0x0000000000192f72 : sbb al, 0xd ; jmp 0x192f7c
0x000000000019a922 : sbb al, 0xd ; jmp 0x2319972d
0x0000000000195d02 : sbb al, 0xd ; jne 0x195d89 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a09f2 : sbb al, 0xd ; jne 0x1a0a72 ; int1 ; jmp qword ptr [rdx]
0x00000000001a0c92 : sbb al, 0xd ; jne 0x1a0d19 ; int1 ; jmp qword ptr [rdx]
0x00000000001a94b2 : sbb al, 0xd ; jne 0x1a94a5 ; hlt ; jmp qword ptr [rdx]
0x00000000001a9702 : sbb al, 0xd ; jne 0x1a96f6 ; hlt ; jmp qword ptr [rdx]
0x000000000019873a : sbb al, 0xd ; jno 0x1986ff ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001af64a : sbb al, 0xd ; jno 0x1af643 ; cmc ; jmp qword ptr [rdx]
0x000000000019a69a : sbb al, 0xd ; jnp 0x19a6a0 ; jmp qword ptr [rdx]
0x00000000001abe5a : sbb al, 0xd ; jnp 0x1abecc ; cmc ; jmp qword ptr [rdx]
0x000000000019961a : sbb al, 0xd ; jns 0x1995fe ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001997ca : sbb al, 0xd ; jns 0x1997af ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019ae7a : sbb al, 0xd ; jns 0x19aeba ; out dx, al ; jmp qword ptr [rdx]
0x0000000000193f02 : sbb al, 0xd ; jp 0x193f8a ; in al, dx ; jmp qword ptr [rdx]
0x0000000000195922 : sbb al, 0xd ; jp 0x195919 ; jmp qword ptr [rdx]
0x00000000001acd82 : sbb al, 0xd ; jp 0x1acd81 ; jmp qword ptr [rdx]
0x000000000019534a : sbb al, 0xd ; js 0x1953c7 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019584a : sbb al, 0xd ; js 0x195841 ; jmp qword ptr [rdx]
0x000000000019afe2 : sbb al, 0xd ; js 0x19b025 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab44a : sbb al, 0xd ; js 0x1ab4ae ; cmc ; jmp qword ptr [rdx]
0x00000000001addd2 : sbb al, 0xd ; js 0x1add64 ; cmc ; jmp qword ptr [rdx]
0x00000000001af1ea : sbb al, 0xd ; js 0x1af1d4 ; cmc ; jmp qword ptr [rdx]
0x00000000001ab0ca : sbb al, 0xd ; lcall ptr [rdx - 0xb] ; jmp qword ptr [rdx]
0x00000000001aaffa : sbb al, 0xd ; lea ebx, dword ptr [rdx - 0xb] ; jmp qword ptr [rdx]
0x0000000000194baa : sbb al, 0xd ; lea esi, dword ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x00000000001a0cda : sbb al, 0xd ; leave ; jle 0x1a0cd5 ; jmp qword ptr [rdx]
0x000000000019ac3a : sbb al, 0xd ; ljmp ptr [rax] ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196b6a : sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; test ch, ch ; jmp qword ptr [rdx]
0x000000000019771a : sbb al, 0xd ; loop 0x1976b1 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195afa : sbb al, 0xd ; loope 0x195b7f ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019ac82 : sbb al, 0xd ; loope 0x19acb3 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ad12a : sbb al, 0xd ; loope 0x1ad1b0 ; cmc ; jmp qword ptr [rdx]
0x00000000001aefa2 : sbb al, 0xd ; loope 0x1aefa1 ; jmp qword ptr [rdx]
0x00000000001aefea : sbb al, 0xd ; loope 0x1aefe9 ; jmp qword ptr [rdx]
0x00000000001af032 : sbb al, 0xd ; loope 0x1af031 ; jmp qword ptr [rdx]
0x00000000001af24a : sbb al, 0xd ; loope 0x1af249 ; jmp qword ptr [rdx]
0x000000000019b41a : sbb al, 0xd ; loopne 0x19b466 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6692 : sbb al, 0xd ; loopne 0x1a66ff ; hlt ; jmp qword ptr [rdx]
0x0000000000199812 : sbb al, 0xd ; mov ah, 0xdc ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001abffa : sbb al, 0xd ; mov al, 0x69 ; cmc ; jmp qword ptr [rdx]
0x0000000000194532 : sbb al, 0xd ; mov al, 0x87 ; in al, dx ; jmp qword ptr [rdx]
0x00000000001ae7f2 : sbb al, 0xd ; mov al, 0x9b ; cmc ; jmp qword ptr [rdx]
0x00000000001abea2 : sbb al, 0xd ; mov bh, 0x69 ; cmc ; jmp qword ptr [rdx]
0x00000000001996aa : sbb al, 0xd ; mov bl, bl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ade32 : sbb al, 0xd ; mov bp, si ; jmp qword ptr [rdx]
0x00000000001ac7da : sbb al, 0xd ; mov byte ptr [rsi - 0xb], ch ; jmp qword ptr [rdx]
0x00000000001a0c32 : sbb al, 0xd ; mov byte ptr [rsi - 0xf], bh ; jmp qword ptr [rdx]
0x00000000001aabe2 : sbb al, 0xd ; mov ch, 0x51 ; cmc ; jmp qword ptr [rdx]
0x000000000019b612 : sbb al, 0xd ; mov ch, 0x51 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196ada : sbb al, 0xd ; mov ch, 0x84 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a96a : sbb al, 0xd ; mov ch, 0xff ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aaa0a : sbb al, 0xd ; mov cl, 0x22 ; sti ; jmp qword ptr [rdx]
0x000000000019b02a : sbb al, 0xd ; mov cl, 0x3a ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab7ba : sbb al, 0xd ; mov cl, 0x5c ; cmc ; jmp qword ptr [rdx]
0x0000000000199ae2 : sbb al, 0xd ; mov cl, 0xef ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001af6da : sbb al, 0xd ; mov cl, 0xf1 ; cmc ; jmp qword ptr [rdx]
0x00000000001ab802 : sbb al, 0xd ; mov dh, 0x5c ; cmc ; jmp qword ptr [rdx]
0x00000000001a1612 : sbb al, 0xd ; mov dh, 0x89 ; int1 ; jmp qword ptr [rdx]
0x0000000000194c1a : sbb al, 0xd ; mov dh, byte ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x00000000001b588a : sbb al, 0xd ; mov dh, byte ptr [rdi + rsi*8] ; jmp qword ptr [rdx]
0x000000000019ad12 : sbb al, 0xd ; mov dl, 0x2b ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ae51a : sbb al, 0xd ; mov dl, 0x97 ; cmc ; jmp qword ptr [rdx]
0x00000000001a95a2 : sbb al, 0xd ; mov dl, 0xea ; hlt ; jmp qword ptr [rdx]
0x000000000019a9fa : sbb al, 0xd ; mov dl, 0xff ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a9b2 : sbb al, 0xd ; mov dr1, edi ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019abf2 : sbb al, 0xd ; mov dword ptr [rbx], edx ; out dx, al ; jmp qword ptr [rdx]
0x000000000019736a : sbb al, 0xd ; mov ebp, ebp ; jmp qword ptr [rdx]
0x000000000019a802 : sbb al, 0xd ; mov edi, esi ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019377a : sbb al, 0xd ; mov fs, ebx ; jmp 0x193784
0x00000000001adcf2 : sbb al, 0xd ; mov r13, r14 ; jmp qword ptr [rdx]
0x00000000001adbd2 : sbb al, 0xd ; mov r13d, esi ; jmp qword ptr [rdx]
0x00000000001a12ba : sbb al, 0xd ; mov r9b, r14b ; jmp qword ptr [rdx]
0x00000000001a1302 : sbb al, 0xd ; mov r9b, sil ; jmp qword ptr [rdx]
0x00000000001adfd2 : sbb al, 0xd ; mov sil, bpl ; jmp qword ptr [rdx]
0x00000000001ae01a : sbb al, 0xd ; mov sil, r13b ; jmp qword ptr [rdx]
0x00000000001a064a : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x1a0645 ; jmp qword ptr [rdx]
0x0000000000192fba : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x192fc4
0x00000000001a191a : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; mov dh, cl ; jmp qword ptr [rdx]
0x00000000001ae562 : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edi ; cmc ; jmp qword ptr [rdx]
0x000000000019abaa : sbb al, 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; adc ebp, esi ; jmp qword ptr [rdx]
0x000000000019364a : sbb al, 0xd ; movsxd rax, edi ; jmp 0x193654
0x00000000001a8e82 : sbb al, 0xd ; mul dl ; hlt ; jmp qword ptr [rdx]
0x0000000000198f6a : sbb al, 0xd ; neg ch ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001afc6a : sbb al, 0xd ; nop ; and dh, dh ; jmp qword ptr [rdx]
0x0000000000195d92 : sbb al, 0xd ; nop ; jle 0x195d89 ; jmp qword ptr [rdx]
0x00000000001b5c2a : sbb al, 0xd ; nop ; xor esi, edi ; jmp qword ptr [rdx]
0x00000000001ac8da : sbb al, 0xd ; or al, 0x72 ; cmc ; jmp qword ptr [rdx]
0x000000000018fc1a : sbb al, 0xd ; or bpl, r10b ; jmp qword ptr [rdx]
0x00000000001ab5e2 : sbb al, 0xd ; or byte ptr [rbp - 0xb], bl ; jmp qword ptr [rdx]
0x000000000018e64a : sbb al, 0xd ; or dword ptr [rbp - 0x17], ebx ; jmp qword ptr [rdx]
0x00000000001a9c8a : sbb al, 0xd ; or ebx, esi ; hlt ; jmp qword ptr [rdx]
0x00000000001a91b2 : sbb al, 0xd ; or ecx, ebp ; hlt ; jmp qword ptr [rdx]
0x00000000001996f2 : sbb al, 0xd ; out -0x25, eax ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ab84a : sbb al, 0xd ; out 0x5c, al ; cmc ; jmp qword ptr [rdx]
0x0000000000196062 : sbb al, 0xd ; out 0x7e, al ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a8d6a : sbb al, 0xd ; out 0xdf, al ; hlt ; jmp qword ptr [rdx]
0x000000000019ab62 : sbb al, 0xd ; out dx, al ; adc ch, dh ; jmp qword ptr [rdx]
0x00000000001a8bea : sbb al, 0xd ; out dx, al ; fdivrp st(4) ; jmp qword ptr [rdx]
0x000000000019b342 : sbb al, 0xd ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab2aa : sbb al, 0xd ; out dx, eax ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x000000000019691a : sbb al, 0xd ; out dx, eax ; test ch, ch ; jmp qword ptr [rdx]
0x0000000000195c52 : sbb al, 0xd ; outsb dx, byte ptr [rsi] ; jle 0x195c49 ; jmp qword ptr [rdx]
0x0000000000194a02 : sbb al, 0xd ; outsd dx, dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000192f2a : sbb al, 0xd ; pop rax ; jmp 0x192f34
0x000000000019c542 : sbb al, 0xd ; pop rax ; pop rdi ; out dx, al ; jmp qword ptr [rdx]
0x00000000001adae2 : sbb al, 0xd ; pop rbp ; mov ebp, esi ; jmp qword ptr [rdx]
0x000000000019c422 : sbb al, 0xd ; pop rbp ; out dx, al ; jmp qword ptr [rdx]
0x00000000001913f2 : sbb al, 0xd ; pop rbx ; jge 0x1913e6 ; jmp qword ptr [rdx]
0x00000000001ab192 : sbb al, 0xd ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000195f52 : sbb al, 0xd ; pop rdx ; jle 0x195f49 ; jmp qword ptr [rdx]
0x00000000001971da : sbb al, 0xd ; pop rdx ; mov ebp, ebp ; jmp qword ptr [rdx]
0x00000000001b5c72 : sbb al, 0xd ; pop rsi ; xor esi, edi ; jmp qword ptr [rdx]
0x000000000019596a : sbb al, 0xd ; pop rsp ; jp 0x195961 ; jmp qword ptr [rdx]
0x00000000001af10a : sbb al, 0xd ; pop rsp ; loope 0x1af109 ; jmp qword ptr [rdx]
0x00000000001955d2 : sbb al, 0xd ; push 0x76 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a8b1a : sbb al, 0xd ; push 0xde ; hlt ; jmp qword ptr [rdx]
0x000000000019b582 : sbb al, 0xd ; push r9 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001adb2a : sbb al, 0xd ; push rax ; mov ebp, esi ; jmp qword ptr [rdx]
0x00000000001ad9ea : sbb al, 0xd ; push rax ; xchg ebp, esi ; jmp qword ptr [rdx]
0x000000000018fcf2 : sbb al, 0xd ; push rbp ; adc edx, ebp ; jmp qword ptr [rdx]
0x00000000001aaae2 : sbb al, 0xd ; push rcx ; cmc ; jmp qword ptr [rdx]
0x000000000019fd2a : sbb al, 0xd ; push rdi ; fcomi st(0) ; jmp qword ptr [rdx]
0x00000000001ae13a : sbb al, 0xd ; push rdi ; mov dh, ch ; jmp qword ptr [rdx]
0x00000000001a9922 : sbb al, 0xd ; push rsi ; in eax, dx ; hlt ; jmp qword ptr [rdx]
0x00000000001a1272 : sbb al, 0xd ; push rsi ; mov cl, dh ; jmp qword ptr [rdx]
0x00000000001958da : sbb al, 0xd ; push rsp ; jns 0x1958d1 ; jmp qword ptr [rdx]
0x0000000000194c62 : sbb al, 0xd ; ret
0x00000000001969da : sbb al, 0xd ; ret 0xed84
0x000000000019b1da : sbb al, 0xd ; ret 0xee3c
0x00000000001ad772 : sbb al, 0xd ; ret 0xf582
0x00000000001ade7a : sbb al, 0xd ; ret 0xf589
0x00000000001af292 : sbb al, 0xd ; ret 0xf5e1
0x00000000001937c2 : sbb al, 0xd ; retf ; jrcxz 0x1937b7 ; jmp qword ptr [rdx]
0x000000000019c46a : sbb al, 0xd ; retf ; pop rbp ; out dx, al ; jmp qword ptr [rdx]
0x0000000000192a3a : sbb al, 0xd ; sahf ; and al, 0xeb ; jmp qword ptr [rdx]
0x000000000019a7ba : sbb al, 0xd ; sar ah, 0xed ; jmp qword ptr [rdx]
0x00000000001ad172 : sbb al, 0xd ; sar dword ptr [rbp - 0xb], cl ; jmp qword ptr [rdx]
0x000000000019b072 : sbb al, 0xd ; sar dword ptr [rdx], cl ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a9c42 : sbb al, 0xd ; sbb al, 0xf3 ; hlt ; jmp qword ptr [rdx]
0x00000000001abd42 : sbb al, 0xd ; sbb dword ptr [rcx - 0xb], ebp ; jmp qword ptr [rdx]
0x0000000000195c0a : sbb al, 0xd ; sbb dword ptr [rsi - 0x13], edi ; jmp qword ptr [rdx]
0x00000000001a916a : sbb al, 0xd ; sbb ecx, ebp ; hlt ; jmp qword ptr [rdx]
0x000000000019c4b2 : sbb al, 0xd ; scasb al, byte ptr [rdi] ; pop rsi ; out dx, al ; jmp qword ptr [rdx]
0x00000000001929aa : sbb al, 0xd ; shl dword ptr [rbx], -0x15 ; jmp qword ptr [rdx]
0x00000000001a962a : sbb al, 0xd ; shr dl, 1 ; hlt ; jmp qword ptr [rdx]
0x00000000001ac592 : sbb al, 0xd ; shr dword ptr [rdx - 0xb], cl ; jmp qword ptr [rdx]
0x000000000019997a : sbb al, 0xd ; shr ebp, cl ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019558a : sbb al, 0xd ; std ; jne 0x195581 ; jmp qword ptr [rdx]
0x0000000000199b2a : sbb al, 0xd ; sti ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad24a : sbb al, 0xd ; sti ; jge 0x1ad249 ; jmp qword ptr [rdx]
0x000000000019b53a : sbb al, 0xd ; sti ; out dx, al ; jmp qword ptr [rdx]
0x000000000018fc62 : sbb al, 0xd ; stosb byte ptr [rdi], al ; or al, 0xea ; jmp qword ptr [rdx]
0x000000000019b3d2 : sbb al, 0xd ; stosb byte ptr [rdi], al ; out dx, al ; jmp qword ptr [rdx]
0x0000000000194a4a : sbb al, 0xd ; sub al, 0x6f ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019515a : sbb al, 0xd ; sub al, 0x74 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a0602 : sbb al, 0xd ; sub al, 0x76 ; int1 ; jmp qword ptr [rdx]
0x000000000019673a : sbb al, 0xd ; sub al, 0x83 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001adc62 : sbb al, 0xd ; sub al, 0x89 ; cmc ; jmp qword ptr [rdx]
0x000000000019a72a : sbb al, 0xd ; sub al, 0xfb ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018e602 : sbb al, 0xd ; sub bl, byte ptr [rbp - 0x17] ; jmp qword ptr [rdx]
0x00000000001acc1a : sbb al, 0xd ; sub byte ptr [rdx - 0xb], bh ; jmp qword ptr [rdx]
0x00000000001a97fa : sbb al, 0xd ; sub ch, ah ; hlt ; jmp qword ptr [rdx]
0x0000000000198852 : sbb al, 0xd ; test al, 0xbc ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199a9a : sbb al, 0xd ; test al, 0xef ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a0e32 : sbb al, 0xd ; test byte ptr [rdi - 0xf], bh ; jmp qword ptr [rdx]
0x00000000001af1a2 : sbb al, 0xd ; test esp, ecx ; cmc ; jmp qword ptr [rdx]
0x000000000019b14a : sbb al, 0xd ; xchg byte ptr [rsi + rbp*8], bh ; jmp qword ptr [rdx]
0x00000000001ad9a2 : sbb al, 0xd ; xchg ch, dh ; jmp qword ptr [rdx]
0x00000000001a8ba2 : sbb al, 0xd ; xchg dh, bl ; hlt ; jmp qword ptr [rdx]
0x000000000019c4fa : sbb al, 0xd ; xchg dword ptr [rdi - 0x12], ebx ; jmp qword ptr [rdx]
0x00000000001a06e2 : sbb al, 0xd ; xchg dword ptr [rsi - 0xf], esi ; jmp qword ptr [rdx]
0x00000000001a0bea : sbb al, 0xd ; xchg eax, ebp ; jle 0x1a0be5 ; jmp qword ptr [rdx]
0x00000000001ace1a : sbb al, 0xd ; xchg eax, ebp ; jp 0x1ace19 ; jmp qword ptr [rdx]
0x00000000001aaa52 : sbb al, 0xd ; xchg eax, ebx ; and bh, bl ; jmp qword ptr [rdx]
0x0000000000192a82 : sbb al, 0xd ; xchg eax, ecx ; and al, 0xeb ; jmp qword ptr [rdx]
0x000000000019b0ba : sbb al, 0xd ; xchg eax, edi ; cmp ch, dh ; jmp qword ptr [rdx]
0x00000000001a1b5a : sbb al, 0xd ; xchg eax, edx ; int1 ; jmp qword ptr [rdx]
0x00000000001a17fa : sbb al, 0xd ; xchg eax, esi ; mov dh, cl ; jmp qword ptr [rdx]
0x00000000001a9bfa : sbb al, 0xd ; xchg eax, esp ; hlt ; jmp qword ptr [rdx]
0x00000000001944ea : sbb al, 0xd ; xchg r12d, r13d ; jmp qword ptr [rdx]
0x00000000001a0a3a : sbb al, 0xd ; xlatb ; ja 0x1a0a35 ; jmp qword ptr [rdx]
0x00000000001a8f5a : sbb al, 0xd ; xlatb ; loop 0x1a8f58 ; jmp qword ptr [rdx]
0x0000000000194322 : sbb al, 0xd ; xor al, 0x80 ; in al, dx ; jmp qword ptr [rdx]
0x00000000001ae0aa : sbb al, 0xd ; xor al, 0x8a ; cmc ; jmp qword ptr [rdx]
0x00000000001b591a : sbb al, 0xd ; xor al, 0xf7 ; jmp qword ptr [rdx]
0x000000000019adea : sbb al, 0xd ; xor bpl, sil ; jmp qword ptr [rdx]
0x00000000001b5962 : sbb al, 0xd ; xor byte ptr [rdi + rsi*8], dh ; jmp qword ptr [rdx]
0x00000000001acc62 : sbb al, 0xd ; xor dword ptr [rdx - 0xb], edi ; jmp qword ptr [rdx]
0x000000000019b4f2 : sbb al, 0xd ; xor ecx, dword ptr [rdi - 0x12] ; jmp qword ptr [rdx]
0x000000000019a892 : sbb al, 0xd ; xor edi, esi ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b5cd2 : sbb al, 0xd ; xor esi, r15d ; jmp qword ptr [rdx]
0x000000000019bdc4 : sbb al, 0xdc ; add byte ptr [rax], al ; cmp byte ptr [rax - 0x12], dh ; call qword ptr [rsi]
0x00000000001ac3c4 : sbb al, 0xe2 ; add dword ptr [rax], eax ; cwde ; cld ; cmc ; call qword ptr [rax]
0x00000000001ac4c4 : sbb al, 0xe3 ; add dword ptr [rax], eax ; js 0x1ac4ce ; cmc ; call qword ptr [rax]
0x0000000000029c8c : sbb al, 0xeb ; ret 0x8948
0x0000000000177004 : sbb al, 0xf1 ; in eax, dx ; jmp rax
0x0000000000177000 : sbb al, 0xf1 ; in eax, dx ; lcall ptr [rcx + rsi*8] ; in eax, dx ; jmp rax
0x00000000001a9c44 : sbb al, 0xf3 ; hlt ; jmp qword ptr [rdx]
0x000000000018c4c9 : sbb al, 0xf8 ; jmp rsp
0x00000000001867cc : sbb al, 0xfb ; lcall ptr [rax + 4] ; cld ; jmp qword ptr [rax]
0x0000000000186b29 : sbb al, 0xfc ; jmp qword ptr [rax]
0x00000000000b6d42 : sbb al, 0xfd ; dec dword ptr [rax - 0x77] ; jmp 0x48cdf69c
0x0000000000007c88 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000fa19 : sbb al, byte ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; call qword ptr [rax]
0x00000000000a369c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000001afbbd : sbb al, byte ptr [rdx] ; add al, al ; mov bl, 0xf6 ; call qword ptr [rcx]
0x00000000001afbd5 : sbb al, byte ptr [rdx] ; add al, cl ; mov bl, 0xf6 ; jmp qword ptr [rcx]
0x000000000000fa18 : sbb al, byte ptr cs:[rax] ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; call qword ptr [rax]
0x0000000000041d87 : sbb al, ch ; ret
0x00000000001a6a10 : sbb bh, 0xf4 ; jmp qword ptr [rcx]
0x00000000000ae1a9 : sbb bh, al ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000018c491 : sbb bh, al ; jmp rsp
0x0000000000186245 : sbb bh, bl ; inc eax ; sbb edi, ebx ; jmp rax
0x000000000006da22 : sbb bh, bl ; lcall ptr [rbx - 0x77] ; call 0xffffffffc3631b92
0x00000000000d0b4a : sbb bh, byte ptr [rax + 2] ; ret
0x0000000000173565 : sbb bl, byte ptr [rsi] ; ret
0x0000000000027046 : sbb bl, ch ; ret 0x1f0f
0x00000000000eb09b : sbb bl, dh ; ret
0x0000000000091f6b : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x000000000012e66d : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000725de : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000012e302 : sbb byte ptr [r8 + 1], r15b ; ret
0x00000000001641fa : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000a0f14 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0f36 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0f74 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000725f3 : sbb byte ptr [r9 + r9*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012c429 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000012c581 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000000725df : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000373a0 : sbb byte ptr [rax + 0x450f4402], ch ; ret 0x8944
0x000000000012e2d1 : sbb byte ptr [rax + 1], bh ; ret
0x0000000000023421 : sbb byte ptr [rax - 0x77], cl ; cwde ; call rcx
0x000000000007d79a : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e4f10 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007b061 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001027da : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000035a07 : sbb byte ptr [rax - 0x77], cl ; ret 0x394d
0x00000000000bc308 : sbb byte ptr [rax - 0x77], cl ; ret 0x4775
0x00000000000e8324 : sbb byte ptr [rax - 0x77], cl ; ret 0x4c6
0x0000000000053751 : sbb byte ptr [rax - 0x77], cl ; ret 0x6349
0x000000000012171a : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000ed7a7 : sbb byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000b4e21 : sbb byte ptr [rax - 0x7bf0f706], al ; ret
0x0000000000081c3b : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d644b
0x0000000000081c3a : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d644c
0x0000000000082fcf : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d77df
0x0000000000082fce : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d77e0
0x0000000000078e56 : sbb byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000da323 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000ed945 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000091b0e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000082987 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000091b0d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000112111 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000001b16a : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x3b
0x000000000001b34a : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x000000000001b04a : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x3b
0x000000000001b332 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000001b032 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x3b
0x000000000001b28a : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x000000000001af8a : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x3b
0x000000000001b272 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x000000000001af72 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x3b
0x000000000001b242 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001af42 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x000000000007b9fa : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001038d0 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000072ebb : sbb byte ptr [rax], al ; setne al ; ret
0x0000000000002440 : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a0f15 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0f37 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0f75 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000d3339 : sbb byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000001af28 : sbb byte ptr [rbx + 0x18], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x3b
0x00000000000a4027 : sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3668195
0x00000000000a3ae2 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000a3950 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000072552 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008697a : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000012e66e : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003d1ba : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000037637 : sbb byte ptr [rbx + 0xb7501e2], al ; xor eax, eax ; nop ; ret
0x00000000001b51d8 : sbb byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x000000000002ae58 : sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x0000000000029c88 : sbb byte ptr [rbx - 0x14e3dbbc], cl ; ret 0x8948
0x000000000007c5c7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000828d6 : sbb byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x000000000013051e : sbb byte ptr [rbx - 0x6bf0f502], al ; ret
0x0000000000186b24 : sbb byte ptr [rbx], 0xfc ; call rax
0x00000000001a8268 : sbb byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7928 : sbb byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x000000000012e243 : sbb byte ptr [rcx + 0x1b02857], cl ; ret
0x0000000000041d99 : sbb byte ptr [rcx + 0x39], cl ; ret 0x840f
0x00000000000e4f96 : sbb byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000074f7b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000012f7eb : sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000001231a2 : sbb byte ptr [rcx + rcx*4 + 0x44], al ; and al, 8 ; call 0x1f478
0x00000000000725f4 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001898d8 : sbb byte ptr [rcx - 0x11], dl ; call rsp
0x0000000000104953 : sbb byte ptr [rcx - 0x75], al ; or r14b, r14b ; ret 0x7508
0x00000000000af7ce : sbb byte ptr [rcx - 0x75], cl ; jge 0xaf7d9 ; call r12
0x000000000012c42a : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000012c582 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000001076eb : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000967c6 : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x00000000000a3691 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000f5573 : sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000000001ad6e0 : sbb byte ptr [rcx], 0xf6 ; call rdi
0x00000000000f0f50 : sbb byte ptr [rcx], al ; ret 0x8d48
0x0000000000102bee : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000102187 : sbb byte ptr [rdi + 0x2000004], bh ; call rax
0x000000000011bcb3 : sbb byte ptr [rdi + 0x2a], dh ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000005db48 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000012e7cb : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000003571d : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000008278e : sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000002047 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00000000000f5d4c : sbb byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000013513d : sbb byte ptr [rip - 0x3fcf0000], al ; pop rbx ; pop rbp ; ret
0x000000000013510b : sbb byte ptr [rip - 0x76b80000], al ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000199d08 : sbb byte ptr [rsi + rbp*8], dl ; jmp qword ptr [rcx]
0x0000000000193208 : sbb byte ptr [rsi - 0x15], ah ; jmp qword ptr [rbx]
0x00000000000fcac2 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000fcac1 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00000000001a4d68 : sbb byte ptr [rsi - 0xc], ah ; jmp qword ptr [rcx]
0x00000000001a36d8 : sbb byte ptr [rsi], ch ; call qword ptr [rcx]
0x00000000001a2038 : sbb ch, bh ; int1 ; jmp qword ptr [rcx]
0x0000000000199ec1 : sbb ch, dh ; call qword ptr [rdi]
0x000000000012ff10 : sbb cl, byte ptr [rax + 0x39] ; ret
0x00000000001252de : sbb cl, byte ptr [rax - 0x3f] ; out dx, al ; add cl, byte ptr [rcx - 0x77] ; ret 0xc148
0x0000000000132a66 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000000000c8bd2 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000011cb43 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000a5c58 : sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000000000009d96f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000137cbd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139e2d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001378ad : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001373b9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000137bc9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ddca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000013d5ea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000013d9da : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d1fa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a98d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013a16d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000013763d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013994d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000013797d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000137c99 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d399 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137d69 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a4ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000139c8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013946d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000013a64d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000137b1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013730d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000013770d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000013d88a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d0aa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e1ba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000137bed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001373dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001397ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013747f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001377dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00000000001398e3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a5e3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a103 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d78b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013e0bb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137a4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013a923 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139c23 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000139743 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a443 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000013d8db : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013d0fb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001374a3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000019fb51 : sbb cl, dh ; jmp qword ptr [rcx]
0x00000000001b0e90 : sbb dh, 0xf6 ; jmp qword ptr [rcx]
0x00000000000eb201 : sbb dh, bl ; ret
0x000000000008c774 : sbb dh, byte ptr [rbx] ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000000eefcb : sbb dh, dh ; ret
0x00000000001025d2 : sbb dh, dh ; ret 0x7504
0x00000000001aa708 : sbb dh, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a0838 : sbb dl, cl ; int1 ; call qword ptr [rsi]
0x000000000013b0e8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d0b23 : sbb dword ptr [rax + 1], edi ; ret
0x00000000000f7e76 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x000000000013b071 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b0e9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c2475 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00000000001115c3 : sbb dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x201
0x0000000000175e1d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000117e4a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000011b58b : sbb dword ptr [rcx - 0x80], eax ; jmp qword ptr [rbx]
0x00000000001abd44 : sbb dword ptr [rcx - 0xb], ebp ; jmp qword ptr [rdx]
0x000000000019fb4d : sbb dword ptr [rcx], eax ; add al, al ; sbb cl, dh ; jmp qword ptr [rcx]
0x000000000009f08e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001caf : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce1 ; ret
0x000000000002227a : sbb dword ptr [rdx], edi ; add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x0000000000195c0c : sbb dword ptr [rsi - 0x13], edi ; jmp qword ptr [rdx]
0x000000000015e43c : sbb eax, -1 ; ret
0x000000000010ad5b : sbb eax, 0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000066b9 : sbb eax, 0x120000 ; or al, 0 ; push rax ; ret 7
0x00000000000fc631 : sbb eax, 0x2c1cca ; pop rbx ; ret
0x000000000009d9f9 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000001063f2 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x000000000009f14d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000000f7efa : sbb eax, 0x865af ; mov rax, rbx ; pop rbx ; ret
0x00000000000428de : sbb eax, 0x89000001 ; ret
0x000000000007803f : sbb eax, 0x89ffffc4 ; ret 0xbceb
0x000000000018fcef : sbb eax, 0xd1cffea ; push rbp ; adc edx, ebp ; jmp qword ptr [rdx]
0x000000000018fc5f : sbb eax, 0xd1cffea ; stosb byte ptr [rdi], al ; or al, 0xea ; jmp qword ptr [rdx]
0x000000000013ae91 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013af09 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001afd75 : sbb eax, dword ptr [rdx] ; add al, bh ; mov dh, 0xf6 ; call qword ptr [rdi]
0x0000000000124860 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x000000000003851a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000117ad7 : sbb eax, eax ; ret
0x0000000000163b45 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000000fc722 : sbb ebp, dword ptr [rax + rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000fc774 : sbb ebp, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000199ef1 : sbb ebp, esi ; call qword ptr [rcx]
0x000000000018623d : sbb ebx, edi ; jmp qword ptr [rax]
0x0000000000053820 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00000000000dab64 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001ae016 : sbb ecx, dword ptr [rbp + rsi*8 + 0x490d1cff] ; mov dh, ch ; jmp qword ptr [rdx]
0x00000000001a916c : sbb ecx, ebp ; hlt ; jmp qword ptr [rdx]
0x0000000000022133 : sbb ecx, ebx ; cmp dword ptr [rax], eax ; test rax, rax ; je 0x22147 ; jmp rax
0x0000000000186249 : sbb edi, ebx ; jmp rax
0x000000000007de9b : sbb edi, edi ; xor eax, dword ptr [rax] ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x0000000000186b25 : sbb edi, esp ; call rax
0x00000000000e0263 : sbb edx, esi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 5
0x00000000000025bf : sbb esi, dword ptr [rdx] ; sahf ; jl 0x255a ; loop 0x25a5 ; ret 0x23cb
0x00000000000eb1a8 : sbb esi, ebx ; ret
0x000000000018b9a1 : sbb esi, edi ; call rsp
0x00000000001ad6e1 : sbb esi, esi ; call rdi
0x0000000000188891 : sbb esp, ebp ; call rsp
0x00000000001888b1 : sbb esp, ebp ; jmp rsp
0x0000000000186ae1 : sbb esp, edi ; call qword ptr [rax]
0x0000000000179299 : sbb esp, esi ; inc dword ptr [rdi] ; sbb esp, esi ; jmp rsp
0x000000000017929d : sbb esp, esi ; jmp rsp
0x000000000015e43b : sbb rax, -1 ; ret
0x0000000000138e12 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018acbd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; cmp esp, esi ; call rsp
0x00000000001a8fed : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; mov al, 0x63 ; cmc ; call rsp
0x000000000013de1e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000187635 : scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rdx]
0x0000000000187579 : scasb al, byte ptr [rdi] ; cld ; jmp rax
0x000000000019c4b4 : scasb al, byte ptr [rdi] ; pop rsi ; out dx, al ; jmp qword ptr [rdx]
0x00000000000630d8 : scasb al, byte ptr [rdi] ; ret
0x0000000000186411 : scasb al, byte ptr [rdi] ; std ; call qword ptr [rsi]
0x0000000000186491 : scasb al, byte ptr [rdi] ; std ; jmp rax
0x00000000000e3174 : scasb al, byte ptr [rdi] ; sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x0000000000002f62 : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000085c80 : scasb al, byte ptr [rdi] ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000085d33 : scasb al, byte ptr [rdi] ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000000eda9 : scasd eax, dword ptr [rdi] ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000003d395 : scasd eax, dword ptr [rdi] ; adc byte ptr [rax + 1], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x000000000013df1d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000019919d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; adc ch, bh ; in eax, dx ; call qword ptr [rax]
0x00000000000c6172 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000adc1d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000018879d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; sub ch, ah ; jmp 0x1887a9
0x000000000018acfd : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; and al, 0x3d ; hlt ; jmp rsp
0x00000000000b15cf : scasd eax, dword ptr [rdi] ; add eax, esi ; ret
0x0000000000165bf9 : scasd eax, dword ptr [rdi] ; and eax, 0xf31e7500 ; ret
0x0000000000187631 : scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcae]
0x00000000001875ad : scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rsi]
0x000000000018776d : scasd eax, dword ptr [rdi] ; cld ; call rax
0x0000000000187769 : scasd eax, dword ptr [rdi] ; cld ; inc dword ptr [rax - 0x51] ; cld ; call rax
0x00000000001876ed : scasd eax, dword ptr [rdi] ; cld ; jmp rsp
0x00000000001a5a29 : scasd eax, dword ptr [rdi] ; hlt ; jmp qword ptr [rdi]
0x0000000000196b89 : scasd eax, dword ptr [rdi] ; in eax, dx ; call qword ptr [rcx]
0x000000000011c7fb : scasd eax, dword ptr [rdi] ; or bl, ch ; ret 0x4890
0x00000000000f7efb : scasd eax, dword ptr [rdi] ; or byte ptr gs:[rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000012abac : scasd eax, dword ptr [rdi] ; pop rbx ; ret
0x000000000003a34c : scasd eax, dword ptr [rdi] ; ret
0x00000000000b2290 : scasd eax, dword ptr [rdi] ; ret 0x67ba
0x00000000000a18a4 : scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000b6fdd : scasd eax, dword ptr [rdi] ; ret 0x8941
0x00000000000b8e9f : scasd eax, dword ptr [rdi] ; ret 0x8d44
0x0000000000035c39 : scasd eax, dword ptr [rdi] ; ret 0x8d4c
0x000000000003571f : scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000010599d : scasd eax, dword ptr [rdi] ; ret 0xffff
0x0000000000002bab : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efad ; ret
0x000000000000258c : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000010378d : scasd eax, dword ptr [rdi] ; xor eax, 0x8548fff8 ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000fcaf5 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000ed3e8 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000107a7c : setae al ; ret
0x00000000000fd928 : setbe al ; ret
0x0000000000122586 : sete al ; movzx eax, al ; ret
0x000000000002ff55 : sete al ; ret
0x000000000004d62f : sete cl ; call 0x498e5
0x0000000000103bfc : sete dl ; jmp 0x103b8c
0x00000000000d0c97 : setg dl ; jmp 0xd0c20
0x00000000001794e8 : setl ah ; ljmp ptr [rcx - 0x65] ; hlt ; jmp qword ptr [rbx]
0x000000000005db79 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000cb7cd : setne al ; movzx eax, al ; neg eax ; ret
0x00000000000f4bb3 : setne al ; movzx eax, al ; pop rbx ; ret
0x00000000000375b6 : setne al ; movzx eax, al ; ret
0x0000000000072ebd : setne al ; ret
0x00000000000cb7ed : setne dl ; cmovbe eax, edx ; ret
0x00000000000a5bf7 : setne dl ; jmp 0xa5c0a
0x00000000000a8333 : setne dl ; jmp 0xa8349
0x00000000000aa957 : setne dl ; jmp 0xaa96a
0x00000000000fa15b : setne dl ; jmp 0xfa131
0x0000000000088dc8 : sgdt ptr [rax] ; ret
0x00000000001866c4 : shl ah, 1 ; sti ; call rax
0x00000000001aae30 : shl al, 0xf5 ; call qword ptr [rax]
0x00000000001a4771 : shl bh, cl ; jmp qword ptr [rax]
0x00000000001a7530 : shl byte ptr [rax], 0xf5 ; jmp qword ptr [rsi]
0x0000000000186b34 : shl byte ptr [rax], 0xfc ; call qword ptr [rax]
0x0000000000186308 : shl byte ptr [rbx + rdi*8 - 1], 1 ; add byte ptr [rcx - 5], cl ; jmp rax
0x0000000000186d68 : shl byte ptr [rbx - 4], 0xff ; push rax ; movsxd rdi, esp ; jmp rax
0x0000000000036479 : shl byte ptr [rcx], cl ; ret 0xf66
0x000000000019ad56 : shl byte ptr [rdx - 0x12], 0xff ; sbb al, 0xd ; cdq ; xor dh, ch ; jmp qword ptr [rdx]
0x00000000001add40 : shl byte ptr [rdx], 0xf6 ; call rdi
0x00000000000a134f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x00000000000360e3 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000162133 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000086f35 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000001611eb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000161202 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000036500 : shl byte ptr [rsi + 0xf], 1 ; outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000008a816 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008a827 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000096e78 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000001610e1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000006af35 : shl byte ptr [rsi + 0xf], cl ; outsd dx, dword ptr [rsi] ; mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x00000000000a4a0d : shl byte ptr [rsi - 0x70], 0xc3 ; mov eax, 1 ; ret
0x00000000001ab4c0 : shl ch, 1 ; cmc ; jmp rbx
0x00000000001866c8 : shl dh, 1 ; sti ; call rax
0x000000000016ee00 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000001929ac : shl dword ptr [rbx], -0x15 ; jmp qword ptr [rdx]
0x0000000000179f48 : shl dword ptr [rdi - 0x582c000b], cl ; cmc ; call qword ptr [rax]
0x0000000000179ec4 : shl dword ptr [rdi - 0x582c000b], cl ; cmc ; call rbx
0x0000000000179f8c : shl dword ptr [rdi - 0x582c000b], cl ; cmc ; jmp qword ptr [rax]
0x000000000017a00c : shl dword ptr [rdi - 0x58af000b], cl ; cmc ; call rbx
0x000000000017a000 : shl dword ptr [rdi - 0x58bf000b], cl ; cmc ; call rbx
0x0000000000179f90 : shl dword ptr [rdi - 0x58df000b], cl ; cmc ; call rbx
0x0000000000179f4c : shl dword ptr [rdi - 0x58ef000b], cl ; cmc ; call rbx
0x0000000000179f24 : shl dword ptr [rdi - 0x59af000b], cl ; cmc ; call rbx
0x0000000000174968 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000161166 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a11ab : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000008a812 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000016121d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000161206 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001611ef : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000015fcab : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000161181 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008bbdc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000000970b8 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x0000000000161041 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000046d30 : shl eax, 0x1e ; or eax, esi ; ret
0x00000000001180da : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000117f3d : shl eax, 4 ; add eax, 8 ; ret
0x000000000010c5af : shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x0000000000037793 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000038b0c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000038a97 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000038a66 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000001a4891 : shl edi, 1 ; jmp qword ptr [rax]
0x000000000003c8c6 : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000000dbb1b : shl edx, 2 ; xor esi, esi ; call 0x8c4b9
0x0000000000021fd8 : shl edx, 4 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x000000000011810c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000038b0b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000038a96 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000038a65 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000037792 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001a4890 : shl rdi, 1 ; jmp qword ptr [rax]
0x000000000003c8c5 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000021fd7 : shl rdx, 4 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x000000000011810b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000001a1c10 : shr ah, 0xf1 ; jmp qword ptr [rcx]
0x00000000001059d6 : shr al, 0x24 ; ret
0x0000000000105a9c : shr al, 0x5e ; ret 0xffff
0x0000000000132151 : shr al, cl ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x59e9
0x00000000001079f6 : shr ax, 0xe ; and eax, 1 ; ret
0x00000000001abb90 : shr bh, 0xf5 ; call qword ptr [rax]
0x0000000000189b69 : shr bh, 1 ; jmp rsp
0x0000000000189bd9 : shr bh, cl ; call rsp
0x00000000001365c1 : shr bl, 0xdb ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000497e8 : shr bl, 0xec ; mov rax, rsi ; nop ; ret
0x000000000019e020 : shr byte ptr [rax - 5], 1 ; call qword ptr [rax]
0x0000000000178694 : shr byte ptr [rbp - 0xe], 1 ; push rax ; insd dword ptr [rdi], dx ; call qword ptr [rax]
0x000000000018778c : shr byte ptr [rbx - 0x5e9f0004], 0xfc ; jmp qword ptr [rax]
0x0000000000178644 : shr byte ptr [rbx - 0xe], 0xff ; shr byte ptr [rbx - 0xe], 1 ; jmp rax
0x0000000000178648 : shr byte ptr [rbx - 0xe], 1 ; jmp rax
0x0000000000107f93 : shr byte ptr [rbx], 0 ; test eax, eax ; jne 0x107fa9 ; xor eax, eax ; ret
0x0000000000107fc3 : shr byte ptr [rbx], 0 ; test eax, eax ; jne 0x107fd9 ; xor eax, eax ; ret
0x0000000000107ff3 : shr byte ptr [rbx], 0 ; test eax, eax ; jne 0x108009 ; xor eax, eax ; ret
0x0000000000108023 : shr byte ptr [rbx], 0 ; test eax, eax ; jne 0x108039 ; xor eax, eax ; ret
0x0000000000097eaf : shr byte ptr [rcx], 0xc8 ; ret
0x000000000002bdb8 : shr byte ptr [rcx], cl ; ret
0x000000000008bf8b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000ed3ed : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000178708 : shr byte ptr [rdi - 0xe], 0xff ; shr byte ptr [rdi - 0xe], 1 ; jmp rax
0x000000000017870c : shr byte ptr [rdi - 0xe], 1 ; jmp rax
0x00000000001864b8 : shr byte ptr [rdx - 0x54af0003], 0xfd ; jmp rax
0x0000000000187574 : shr byte ptr [rsi - 0x51af0004], 0xfc ; jmp rax
0x00000000001786b4 : shr byte ptr [rsi - 0xe], 1 ; push rax ; outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x0000000000186914 : shr ch, 0xfb ; call qword ptr [rax]
0x00000000000ca94c : shr cl, 0xf7 ; idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000d19f0 : shr cl, 1 ; ret 0xfffd
0x000000000011ad54 : shr cl, 1 ; ret 0xfffe
0x000000000010c8a2 : shr cl, 1 ; sub eax, 0x89ffffff ; ret 0x96eb
0x00000000000cde35 : shr cl, cl ; ret 0xfff9
0x00000000001a962c : shr dl, 1 ; hlt ; jmp qword ptr [rdx]
0x0000000000133765 : shr dword ptr [rax], 0 ; call qword ptr [rax]
0x0000000000051929 : shr dword ptr [rbp + 0x1480001], cl ; ret
0x0000000000107ea3 : shr dword ptr [rbx], 0 ; test eax, eax ; jne 0x107eb9 ; xor eax, eax ; ret
0x0000000000107ed3 : shr dword ptr [rbx], 0 ; test eax, eax ; jne 0x107ee9 ; xor eax, eax ; ret
0x0000000000107f03 : shr dword ptr [rbx], 0 ; test eax, eax ; jne 0x107f19 ; xor eax, eax ; ret
0x0000000000107f33 : shr dword ptr [rbx], 0 ; test eax, eax ; jne 0x107f49 ; xor eax, eax ; ret
0x0000000000107f63 : shr dword ptr [rbx], 0 ; test eax, eax ; jne 0x107f79 ; xor eax, eax ; ret
0x00000000001ac594 : shr dword ptr [rdx - 0xb], cl ; jmp qword ptr [rdx]
0x000000000004d631 : shr eax, -0x57 ; ret 0xffff
0x000000000010c5e8 : shr eax, 0x18 ; ret
0x00000000000363f1 : shr eax, 0x1f ; ret
0x00000000001620ac : shr eax, 0x20 ; cmp ecx, eax ; jne 0x1620bf ; xor eax, eax ; ret
0x0000000000036040 : shr eax, 0x3f ; ret
0x00000000000fa4f8 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000a1aba : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000001079f7 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000735f2 : shr eax, 4 ; and eax, 1 ; ret
0x00000000001180e0 : shr eax, 4 ; ret
0x0000000000073602 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000a1a99 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000000375cf : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000fdcb8 : shr eax, cl ; and eax, 1 ; nop dword ptr [rax] ; ret
0x000000000019997c : shr ebp, cl ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000038c1c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000038ba1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000038b70 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000f66bc : shr ecx, cl ; ret
0x00000000000d2d1c : shr ecx, cl ; ret 0xfffc
0x00000000001222ab : shr edi, 1 ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x0000000000075213 : shr edx, 2 ; sub eax, edx ; ret
0x000000000012ef3a : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000002f969 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2f980 ; ret
0x00000000000712a0 : shr esi, 4 ; and esi, 1 ; mov eax, esi ; ret
0x00000000000713a0 : shr esi, 5 ; and esi, 1 ; mov eax, esi ; ret
0x0000000000038c1b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000038ba0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000038b6f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000011ad53 : shr r9b, 1 ; ret 0xfffe
0x000000000003603f : shr rax, 0x3f ; ret
0x00000000000fa4f7 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000001180df : shr rax, 4 ; ret
0x0000000000075212 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000012ef39 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000096961 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000968c1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x0000000000023765 : sldt word ptr [r8] ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x0000000000023766 : sldt word ptr [rax] ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000016dfc5 : sldt word ptr [rax] ; ret 0xf
0x00000000001adfa5 : stc ; add dword ptr [rax], eax ; jmp qword ptr [rdi]
0x00000000000b731d : stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000019d0d2 : stc ; call qword ptr [rax]
0x0000000000179161 : stc ; call rsp
0x00000000000eeff3 : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f25d3 : stc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000085a16 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000095909 : stc ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000095dcb : stc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000018d062 : stc ; dec dword ptr [rdi + rcx*4 + 2] ; add byte ptr [rcx + rbp*2], ah ; stc ; call rsp
0x000000000018cff2 : stc ; dec dword ptr [rsi + rax*4 + 0x5d3d0002] ; stc ; call rsp
0x000000000018d0ba : stc ; dec esp ; xchg eax, ebx ; add al, byte ptr [rax] ; in al, 0x71 ; stc ; jmp rsp
0x000000000013437f : stc ; imul dword ptr [rax] ; add byte ptr [rax - 0x9ffffff], al ; ret
0x000000000018d3d2 : stc ; inc dword ptr [rax + rbp*4 - 0x326bfffe] ; stc ; call rsp
0x00000000000f3c09 : stc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000013ced2 : stc ; je 0x13ce9e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013e562 : stc ; je 0x13e52e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000007d64b : stc ; je 0x7d485 ; ret
0x00000000001a4331 : stc ; jmp qword ptr [rax]
0x000000000018cdfa : stc ; jmp rsp
0x00000000001747e4 : stc ; jnp 0x1747a3 ; ret
0x000000000018ca18 : stc ; js 0x18ca16 ; call rsp
0x000000000018d072 : stc ; lcall ptr [rax + rdx*4 + 2] ; add byte ptr [rdx + rbp*2], ah ; stc ; jmp rsp
0x000000000018d41a : stc ; lcall ptr [rdx + rbp*4 - 0x2b2efffe] ; stc ; jmp rsp
0x000000000017915d : stc ; lcall ptr [rsi] ; stc ; call rsp
0x000000000018d17a : stc ; ljmp ptr [rax + rbx*4 - 0x784bfffe] ; stc ; jmp rsp
0x000000000018d322 : stc ; ljmp ptr [rbx - 0x4f0bfffe] ; stc ; jmp rsp
0x0000000000144fc8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000096bc5 : stc ; mov qword ptr [rdx], rcx ; ret
0x000000000011b242 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096843 : stc ; mov rax, rdi ; ret
0x0000000000070ee2 : stc ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x000000000003879e : stc ; pop r15 ; ret
0x000000000018d50a : stc ; push qword ptr [rax + rsi*4 - 0x3dbfffe] ; stc ; jmp rsp
0x0000000000038c5d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x0000000000107ac3 : stc ; ret
0x0000000000186939 : stc ; sti ; jmp rax
0x0000000000133703 : stc ; sub dword ptr [rax], 0 ; jmp rax
0x000000000018ba1d : std ; add dword ptr [rax], eax ; sub dil, r14b ; jmp rsp
0x0000000000111e1a : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000000000017835a : std ; call qword ptr [rax]
0x00000000001863f6 : std ; call qword ptr [rcx]
0x00000000001863b6 : std ; call qword ptr [rdx]
0x0000000000186412 : std ; call qword ptr [rsi]
0x000000000018e0da : std ; call rsp
0x00000000001ac481 : std ; cmc ; call qword ptr [rax]
0x00000000001ac5b1 : std ; cmc ; jmp rsp
0x00000000000df314 : std ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000018660e : std ; dec dword ptr [rax - 0x24] ; sti ; call qword ptr [rax]
0x00000000000e4a74 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000b6d43 : std ; dec dword ptr [rax - 0x77] ; jmp 0x48cdf69b
0x0000000000121bd9 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000072497 : std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000003686d : std ; fstp st(1) ; ret
0x000000000018ae99 : std ; hlt ; call rsp
0x00000000001991a1 : std ; in eax, dx ; call qword ptr [rax]
0x00000000001863b2 : std ; inc dword ptr [rdx - 0x5b] ; std ; call qword ptr [rdx]
0x0000000000186446 : std ; inc dword ptr [rsi - 0x53] ; std ; jmp rsi
0x00000000001a2039 : std ; int1 ; jmp qword ptr [rcx]
0x0000000000178316 : std ; jmp qword ptr [rax - 0x3d]
0x000000000018f39a : std ; jmp qword ptr [rax]
0x000000000018f212 : std ; jmp qword ptr [rdi]
0x000000000018eaf2 : std ; jmp qword ptr [rdx]
0x000000000017831a : std ; jmp rax
0x0000000000186416 : std ; jmp rsi
0x000000000018e142 : std ; jmp rsp
0x000000000019558c : std ; jne 0x19557f ; jmp qword ptr [rdx]
0x00000000000c242f : std ; jne 0xc23ff ; ret
0x0000000000198736 : std ; mov esp, 0xd1cffed ; jno 0x198703 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001447eb : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000008cbf8 : std ; or al, 0 ; ret
0x0000000000189469 : std ; out dx, al ; jmp rsp
0x00000000001864c2 : std ; push qword ptr [rax - 0x54] ; std ; call qword ptr [rax]
0x0000000000186516 : std ; push rcx ; mov ebx, 0xbbf1fffd ; std ; call qword ptr [rcx]
0x000000000018660a : std ; push rcx ; mov ebx, 0xdc48fffd ; sti ; call qword ptr [rax]
0x0000000000178de4 : std ; ret 0xfff3
0x0000000000186945 : std ; sti ; call rax
0x0000000000083e61 : sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000084041 : sti ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x000000000003e858 : sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000001add3d : sti ; add dword ptr [rax], eax ; shl byte ptr [rdx], 0xf6 ; call rdi
0x00000000000b7964 : sti ; add eax, 0x2941c229 ; ret
0x00000000001866ea : sti ; call qword ptr [rax + 0x20fffbe8]
0x000000000018664a : sti ; call qword ptr [rax + 0x20fffbe9]
0x0000000000186936 : sti ; call qword ptr [rax - 0x1f000407]
0x00000000001867be : sti ; call qword ptr [rax - 0x1f00042c]
0x000000000018676a : sti ; call qword ptr [rax - 0x1f000433]
0x000000000018678e : sti ; call qword ptr [rax - 0x3d]
0x0000000000186646 : sti ; call qword ptr [rax - 0x6f000419]
0x00000000001866e6 : sti ; call qword ptr [rax - 0x6f00041a]
0x000000000018622a : sti ; call qword ptr [rax]
0x0000000000186946 : sti ; call rax
0x00000000000dbb23 : sti ; call rcx
0x00000000001b028a : sti ; call rsi
0x00000000001ac369 : sti ; cmc ; call qword ptr [rax]
0x00000000000c0f9a : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000caad0 : sti ; dec dword ptr [rax + 1] ; ret
0x00000000000c0f5e : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000132180 : sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000199b2c : sti ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000186212 : sti ; inc dword ptr [rax + 0x11] ; sti ; call qword ptr [rax]
0x0000000000186226 : sti ; inc dword ptr [rax + 0x15] ; sti ; call qword ptr [rax]
0x0000000000186286 : sti ; inc dword ptr [rax + 0x2b] ; sti ; push qword ptr [rax + 0x1d] ; sti ; jmp rax
0x00000000001862aa : sti ; inc dword ptr [rax + 0x3a] ; sti ; jmp rax
0x0000000000186236 : sti ; inc dword ptr [rax + 0x50fffb18] ; sbb ebx, edi ; jmp qword ptr [rax]
0x00000000001867ca : sti ; inc dword ptr [rax + 0x58fffbd8] ; add al, 0xfc ; jmp qword ptr [rax]
0x0000000000186346 : sti ; inc dword ptr [rax + 0x7f] ; sti ; call rax
0x000000000018668a : sti ; inc dword ptr [rax - 0x17] ; sti ; call rax
0x0000000000186686 : sti ; inc dword ptr [rax - 0x19] ; sti ; inc dword ptr [rax - 0x17] ; sti ; call rax
0x000000000018671e : sti ; inc dword ptr [rax - 0x1e] ; sti ; call qword ptr [rax]
0x00000000001866b6 : sti ; inc dword ptr [rax - 0x21] ; sti ; jmp qword ptr [rax]
0x000000000018662e : sti ; inc dword ptr [rax - 0x24] ; sti ; inc dword ptr [rax] ; fdivp st(3) ; jmp rax
0x00000000001867ba : sti ; inc dword ptr [rax - 0x2d] ; sti ; call qword ptr [rax - 0x1f00042c]
0x0000000000186776 : sti ; inc dword ptr [rax - 0x2f00042f] ; sar bl, cl ; jmp qword ptr [rax]
0x0000000000186316 : sti ; inc dword ptr [rax - 0x2f000491] ; jo 0x186323 ; jmp qword ptr [rax]
0x0000000000186766 : sti ; inc dword ptr [rax - 0x34] ; sti ; call qword ptr [rax - 0x1f000433]
0x0000000000186932 : sti ; inc dword ptr [rax - 8] ; sti ; call qword ptr [rax - 0x1f000407]
0x0000000000186256 : sti ; inc dword ptr [rax] ; and bl, bh ; push rax ; and bl, bh ; jmp rax
0x0000000000186632 : sti ; inc dword ptr [rax] ; fdivp st(3) ; jmp rax
0x00000000001866be : sti ; inc dword ptr [rax] ; jrcxz 0x1866c3 ; call rax
0x000000000018630a : sti ; inc dword ptr [rax] ; sti ; jmp rax
0x0000000000186966 : sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x0000000000186912 : sti ; inc eax ; in eax, dx ; sti ; call qword ptr [rax]
0x0000000000186326 : sti ; inc eax ; je 0x18632b ; call qword ptr [rax]
0x0000000000186786 : sti ; inc eax ; salc ; sti ; call qword ptr [rax]
0x0000000000186246 : sti ; inc eax ; sbb edi, ebx ; jmp rax
0x0000000000179c78 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x000000000007b47b : sti ; je 0x7b48f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ad24c : sti ; jge 0x1ad247 ; jmp qword ptr [rdx]
0x000000000018623e : sti ; jmp qword ptr [rax]
0x000000000018df5a : sti ; jmp qword ptr [rdi + rdx*2 + 1]
0x00000000001a4419 : sti ; jmp qword ptr [rdi]
0x00000000001aaa0e : sti ; jmp qword ptr [rdx]
0x00000000001aac2a : sti ; jmp qword ptr [rsi]
0x000000000018622e : sti ; jmp rax
0x000000000018df62 : sti ; jmp rsp
0x00000000000a4341 : sti ; jns 0xa437b ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001867ce : sti ; lcall ptr [rax + 4] ; cld ; jmp qword ptr [rax]
0x00000000000d2307 : sti ; lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000006da23 : sti ; lcall ptr [rbx - 0x77] ; call 0xffffffffc3631b91
0x0000000000144bc8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009680d : sti ; mov rax, rdi ; ret
0x00000000001012ee : sti ; nop ; jmp 0x101034
0x000000000019d131 : sti ; out dx, al ; call qword ptr [rax]
0x000000000019b53c : sti ; out dx, al ; jmp qword ptr [rdx]
0x000000000019d149 : sti ; out dx, al ; jmp qword ptr [rsi]
0x0000000000186222 : sti ; push qword ptr [rax + 0x14] ; sti ; inc dword ptr [rax + 0x15] ; sti ; call qword ptr [rax]
0x000000000018628a : sti ; push qword ptr [rax + 0x1d] ; sti ; jmp rax
0x0000000000186322 : sti ; push qword ptr [rax + 0x73] ; sti ; inc eax ; je 0x18632f ; call qword ptr [rax]
0x0000000000186782 : sti ; push qword ptr [rax - 0x2b] ; sti ; inc eax ; salc ; sti ; call qword ptr [rax]
0x0000000000186386 : sti ; push qword ptr [rax - 0x68] ; sti ; jmp qword ptr [rax]
0x0000000000186962 : sti ; push qword ptr [rax - 0xd] ; sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x000000000018669e : sti ; push qword ptr [rax] ; jrcxz 0x1866a3 ; call qword ptr [rax]
0x00000000001862fa : sti ; push qword ptr [rax] ; pop rdi ; sti ; call qword ptr [rax]
0x00000000001862da : sti ; push qword ptr [rax] ; push rax ; sti ; call qword ptr [rax]
0x000000000018625a : sti ; push rax ; and bl, bh ; jmp rax
0x0000000000186342 : sti ; push rax ; jge 0x18634b ; inc dword ptr [rax + 0x7f] ; sti ; call rax
0x00000000001862e2 : sti ; push rax ; push rbx ; sti ; call rax
0x0000000000186242 : sti ; push rax ; sbb bh, bl ; inc eax ; sbb edi, ebx ; jmp rax
0x0000000000186382 : sti ; push rax ; xchg eax, esi ; sti ; push qword ptr [rax - 0x68] ; sti ; jmp qword ptr [rax]
0x000000000017496a : sti ; ret
0x0000000000043957 : sti ; ret 0xffbf
0x00000000000a8332 : sti ; setne dl ; jmp 0xa834a
0x000000000002e827 : sti ; test rax, rax ; je 0x2e835 ; call rax
0x000000000018d41d : stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; rcl esp, 1 ; stc ; jmp rsp
0x000000000018abe5 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; hlt ; ret
0x0000000000174e44 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000018fc64 : stosb byte ptr [rdi], al ; or al, 0xea ; jmp qword ptr [rdx]
0x000000000019b3d4 : stosb byte ptr [rdi], al ; out dx, al ; jmp qword ptr [rdx]
0x0000000000107cc2 : stosb byte ptr [rdi], al ; ret
0x00000000001863f5 : stosb byte ptr [rdi], al ; std ; call qword ptr [rcx]
0x000000000007d479 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x0000000000187611 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rdx]
0x0000000000187551 : stosd dword ptr [rdi], eax ; cld ; inc dword ptr [rax - 0x4e] ; cld ; call rax
0x000000000018760d : stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rdx + 0x12fffcab]
0x0000000000187591 : stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rsi]
0x0000000000187751 : stosd dword ptr [rdi], eax ; cld ; jmp rax
0x000000000018774d : stosd dword ptr [rdi], eax ; cld ; push qword ptr [rax - 0x55] ; cld ; jmp rax
0x000000000011c49d : stosd dword ptr [rdi], eax ; idiv bh ; xor eax, eax ; ret
0x00000000001980d5 : stosd dword ptr [rdi], eax ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000175f4c : stosd dword ptr [rdi], eax ; ret
0x00000000000ac761 : stosd dword ptr [rdi], eax ; ret 0xfff8
0x000000000018643d : stosd dword ptr [rdi], eax ; std ; call qword ptr [rsi]
0x00000000001864bd : stosd dword ptr [rdi], eax ; std ; jmp rax
0x00000000001864c1 : stosd dword ptr [rdi], eax ; std ; push qword ptr [rax - 0x54] ; std ; call qword ptr [rax]
0x0000000000083573 : str word ptr [rax + 0x63] ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x00000000001286d5 : str word ptr [rax - 0x77] ; ret 0x8348
0x0000000000086701 : str word ptr [rax - 0x77] ; ret 0xff31
0x000000000019401f : sub ah, 0xff ; sbb al, 0xd ; clc ; jg 0x19401b ; jmp qword ptr [rdx]
0x0000000000194197 : sub ah, 0xff ; sbb al, 0xd ; fdivr dword ptr [rdi - 0x14] ; jmp qword ptr [rdx]
0x000000000019431f : sub ah, 0xff ; sbb al, 0xd ; xor al, 0x80 ; in al, dx ; jmp qword ptr [rdx]
0x0000000000176331 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000d1894 : sub ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000172a9d : sub ah, ch ; call qword ptr [rax]
0x0000000000172aa9 : sub ah, ch ; jmp rcx
0x00000000000fc723 : sub al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000fc775 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000135c60 : sub al, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000001aa508 : sub al, 0 ; add byte ptr [rax], al ; ret
0x00000000000f9d12 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000f2443 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fc808 : sub al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000f3c4c : sub al, 0 ; jne 0xf465a ; ret
0x00000000000f94fd : sub al, 0 ; lea rax, qword ptr [rip + 0x2c82b2] ; ret
0x00000000000f933d : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8472] ; ret
0x00000000000fd425 : sub al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000fcd0d : sub al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f24d9 : sub al, 0 ; mov rdx, rax ; jmp 0xf2473
0x00000000000f38ea : sub al, 0 ; mov rdx, rax ; jmp 0xf38c4
0x00000000000f34d6 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f96fc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc634 : sub al, 0 ; pop rbx ; ret
0x00000000000f464e : sub al, 0 ; ret
0x00000000001a00d4 : sub al, 0x1f ; add dword ptr [rax], eax ; pop rax ; int1 ; call qword ptr [rdx]
0x0000000000172ab0 : sub al, 0x28 ; in al, dx ; call qword ptr [rax]
0x00000000000a2b72 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000001a22d4 : sub al, 0x41 ; add dword ptr [rax], eax ; sub byte ptr [rdi], al ; jmp rdx
0x000000000007ad6b : sub al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013355b : sub al, 0x48 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000001a36d4 : sub al, 0x55 ; add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; call qword ptr [rcx]
0x00000000001b44d4 : sub al, 0x63 ; add al, byte ptr [rax] ; clc ; nop ; idiv edi ; ret
0x0000000000194a4c : sub al, 0x6f ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b51d4 : sub al, 0x70 ; add al, byte ptr [rax] ; sbb byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x00000000000c4782 : sub al, 0x74 ; cmp eax, dword ptr [rax - 0x6bf08406] ; ret 0xb60f
0x00000000000c4571 : sub al, 0x74 ; fmul qword ptr [rax - 0x7d] ; ret 0x3c01
0x000000000019515c : sub al, 0x74 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000011b1ba : sub al, 0x74 ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a2b75 : sub al, 0x75 ; pop rax ; ret
0x00000000001a0604 : sub al, 0x76 ; int1 ; jmp qword ptr [rdx]
0x00000000001a5cd4 : sub al, 0x7b ; add dword ptr [rax], eax ; call 0x171a5198
0x0000000000187310 : sub al, 0x7b ; cld ; call rdx
0x00000000000f9d10 : sub al, 0x7b ; sub al, 0 ; add rsp, 0x18 ; ret
0x000000000019673c : sub al, 0x83 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000d7567 : sub al, 0x83 ; ret 0x4801
0x00000000001adc64 : sub al, 0x89 ; cmc ; jmp qword ptr [rdx]
0x0000000000160833 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001aa6d4 : sub al, 0xc5 ; add dword ptr [rax], eax ; call 0x271a9cb9
0x00000000001b012d : sub al, 0xf6 ; jmp qword ptr [rdx]
0x000000000018bab1 : sub al, 0xf7 ; jmp rsp
0x000000000019a72c : sub al, 0xfb ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000186ab5 : sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x00000000001869d1 : sub al, 0xfc ; inc dword ptr [rax] ; cld ; jmp rax
0x00000000001869b1 : sub al, 0xfc ; jmp qword ptr [rax]
0x00000000001869f1 : sub al, 0xfc ; jmp rax
0x0000000000186991 : sub al, 0xfc ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x0000000000080201 : sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000018c5d9 : sub al, bh ; jmp rsp
0x000000000011ed35 : sub al, byte ptr [r8] ; pop rbx ; ret
0x000000000003576a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x000000000010fad5 : sub al, byte ptr [rax] ; add byte ptr [rbp - 0x3e], dh ; jmp 0x10fa98
0x0000000000112033 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000001188f4 : sub al, byte ptr [rax] ; jne 0x118970 ; add rsp, 8 ; ret
0x000000000011c135 : sub al, byte ptr [rax] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x11c149 ; ret
0x000000000011c415 : sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000011ed36 : sub al, byte ptr [rax] ; pop rbx ; ret
0x00000000001121b5 : sub al, byte ptr [rax] ; ret
0x000000000011bc9e : sub al, byte ptr [rax] ; test eax, eax ; je 0x11bcae ; ret
0x000000000011fa64 : sub al, byte ptr [rax] ; test eax, eax ; je 0x11fa76 ; ret
0x00000000000551fa : sub al, byte ptr [rbx - 0x1ef43] ; call qword ptr [rax]
0x000000000018c235 : sub al, byte ptr [rdx] ; add byte ptr [rdi + rdi*8 - 9], al ; jmp rsp
0x0000000000128bf1 : sub al, ch ; cdq ; push -0x76b70011 ; ret
0x0000000000186958 : sub bh, 0xfb ; call rax
0x000000000018cef1 : sub bh, cl ; jmp rsp
0x000000000018ba21 : sub bh, dh ; jmp rsp
0x00000000001ac368 : sub bl, bh ; cmc ; call qword ptr [rax]
0x000000000018e604 : sub bl, byte ptr [rbp - 0x17] ; jmp qword ptr [rdx]
0x00000000000af114 : sub bl, ch ; test eax, 0xe2058d48 ; ret 0x30
0x00000000000a2b66 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000012e5c1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e220b : sub byte ptr [r8 - 0x77], r9b ; ret
0x00000000001333ed : sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000373af : sub byte ptr [rax + 0x44c88904], 0xf ; ret 0x8d48
0x0000000000127f7e : sub byte ptr [rax + 1], bh ; ret
0x00000000000f975a : sub byte ptr [rax + rax], 0x48 ; add esp, 8 ; ret
0x000000000012e5c2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e92f7 : sub byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax - 0x77] ; ret
0x000000000012e66a : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000bc577 : sub byte ptr [rax - 0x77], cl ; and cl, r13b ; ret 0xfffe
0x00000000000fb300 : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000b53cd : sub byte ptr [rax - 0x77], cl ; jmp 0x48cddd23
0x00000000000b5724 : sub byte ptr [rax - 0x77], cl ; jmp 0x4ccde07a
0x0000000000123d89 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000e220c : sub byte ptr [rax - 0x77], cl ; ret
0x00000000001333ee : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000027043 : sub byte ptr [rax - 0x77], cl ; sbb bl, ch ; ret 0x1f0f
0x000000000002ae55 : sub byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x0000000000029c85 : sub byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14e3dbbc], cl ; ret 0x8948
0x0000000000070b38 : sub byte ptr [rax - 0x78], al ; cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x0000000000073623 : sub byte ptr [rax - 0x78], r8b ; cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x00000000000cfee7 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000022d1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x0000000000134381 : sub byte ptr [rax], al ; add byte ptr [rcx], 0 ; add dh, dh ; ret
0x00000000001335ef : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000001335aa : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000133766 : sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000101f9c : sub byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000133705 : sub byte ptr [rax], al ; jmp rax
0x0000000000135d55 : sub byte ptr [rax], al ; mov rax, qword ptr [rax + 0x108] ; jmp rax
0x00000000001336fe : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2883f9] ; jmp rax
0x0000000000133655 : sub byte ptr [rax], al ; pop r12 ; jmp rax
0x0000000000136a64 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136a78 ; xor eax, eax ; ret
0x0000000000136a94 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136aa8 ; xor eax, eax ; ret
0x0000000000136ac4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136ad8 ; xor eax, eax ; ret
0x0000000000136af4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136b08 ; xor eax, eax ; ret
0x0000000000136b24 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136b38 ; xor eax, eax ; ret
0x0000000000136b54 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136b68 ; xor eax, eax ; ret
0x00000000000022d2 : sub byte ptr [rax], dl ; salc ; ret
0x00000000000a2b6a : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000a2b69 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000d9a99 : sub byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000d0bb2 : sub byte ptr [rbp - 0xf], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000105b8e : sub byte ptr [rbx + 0x2b87ff35], cl ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000b26ba : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021dcb : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000045f28 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000012d0d7 : sub byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; ret
0x00000000000d4d83 : sub byte ptr [rbx + rcx*4 + 0x76], cl ; xor byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000019e888 : sub byte ptr [rbx - 0x10], bl ; jmp rsi
0x0000000000135c33 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000135c32 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000001797c0 : sub byte ptr [rbx - 0x6429000c], bl ; hlt ; call rsi
0x0000000000186a50 : sub byte ptr [rbx], 0xfc ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x00000000000a2b67 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000b375d : sub byte ptr [rcx + 0x39], cl ; ret
0x00000000000a83f5 : sub byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000007ff32 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000012e697 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a3bad : sub byte ptr [rcx + rcx*4 - 0x12], cl ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000833b8 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000103d87 : sub byte ptr [rcx + rcx*4 - 0x38], al ; sub eax, edx ; ret
0x000000000008080c : sub byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x0000000000036b25 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x00000000000cbe32 : sub byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000001a0aa5 : sub byte ptr [rcx], al ; add byte ptr [rax - 0x33], ch ; int1 ; jmp qword ptr [rax]
0x0000000000189825 : sub byte ptr [rcx], al ; add byte ptr [rsi + rcx*2 - 0x11], dh ; jmp rsp
0x0000000000105c57 : sub byte ptr [rcx], ch ; ret 0x8941
0x0000000000070d47 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e19c7 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000105c56 : sub byte ptr [rcx], r13b ; ret 0x8941
0x0000000000121b8c : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000186318 : sub byte ptr [rdi - 5], 0xff ; sal byte ptr [rax - 5], 1 ; jmp qword ptr [rax]
0x00000000001a22d8 : sub byte ptr [rdi], al ; jmp rdx
0x00000000000a5cb3 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000001acc1c : sub byte ptr [rdx - 0xb], bh ; jmp qword ptr [rdx]
0x000000000017861c : sub byte ptr [rdx - 0xe], 0xff ; mov al, 0x6a ; jmp rax
0x00000000001a7828 : sub byte ptr [rdx], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019c24a : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x00000000001a5188 : sub byte ptr [rsi - 0xc], dh ; jmp qword ptr [rcx]
0x00000000001a7bc0 : sub byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x0000000000002be8 : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x000000000019618f : sub ch, 0xff ; sbb al, 0xd ; jg 0x19618c ; jmp qword ptr [rdx]
0x00000000001a97fc : sub ch, ah ; hlt ; jmp qword ptr [rdx]
0x00000000001887a0 : sub ch, ah ; jmp 0x1887a6
0x000000000010cf54 : sub ch, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000019a459 : sub ch, dh ; call qword ptr [rsi]
0x00000000001aa618 : sub ch, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000186910 : sub cl, 0xfb ; inc eax ; in eax, dx ; sti ; call qword ptr [rax]
0x0000000000036345 : sub cl, al ; jne 0x36358 ; add rsp, 8 ; ret
0x0000000000036620 : sub cl, al ; jne 0x36638 ; add rsp, 8 ; ret
0x00000000000361c8 : sub cl, al ; ret
0x0000000000133764 : sub cl, al ; sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000000f7e64 : sub cl, bh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d135f : sub cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000000bd39a : sub cl, byte ptr [rax - 0x77] ; loope 0xbd32d ; ret 0xf631
0x00000000000fc3cf : sub cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000e73f6 : sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x00000000000f6d8d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018ba69 : sub dh, bh ; jmp rsp
0x000000000006cdd7 : sub dh, byte ptr [rip + 0x48b4800] ; ret 0x8548
0x00000000001a78c9 : sub dh, ch ; call qword ptr [rcx]
0x00000000001a7829 : sub dh, ch ; jmp qword ptr [rcx]
0x000000000019ac3d : sub dh, ch ; jmp qword ptr [rdx]
0x000000000018ba20 : sub dil, r14b ; jmp rsp
0x0000000000186f50 : sub dl, byte ptr [rbp - 4] ; call rax
0x00000000001a0868 : sub dl, cl ; int1 ; call qword ptr [rbx]
0x00000000000f96fb : sub dword ptr [rax + rax], 0x5c415d5b ; ret
0x000000000007c854 : sub dword ptr [rax + rax], esi ; ret
0x000000000017a16c : sub dword ptr [rax - 0x57d6000b], ebp ; cmc ; call rsp
0x0000000000092706 : sub dword ptr [rax - 0x77], ecx ; jmp 0x4ccbb060
0x0000000000133704 : sub dword ptr [rax], 0 ; jmp rax
0x000000000017a54f : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbx + rdx*8 - 0xa], ch ; call rdx
0x000000000012abf5 : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000012b805 : sub dword ptr [rax], eax ; cmp dword ptr fs:[rax], 0x18 ; je 0x12b818 ; ret
0x000000000012ab1c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001211d5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001305c4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x1305d8 ; xor eax, eax ; ret
0x0000000000187a88 : sub dword ptr [rbx - 0x17], edi ; call rsp
0x000000000015a323 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x00000000001898f5 : sub dword ptr [rcx], eax ; add ah, ah ; push rsp ; out dx, eax ; jmp rsp
0x00000000001a0b65 : sub dword ptr [rcx], eax ; add byte ptr [rax], bh ; sal ecx, cl ; call rsi
0x0000000000142e17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x142e2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000142f67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x142f7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001430b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1430cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143207 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14321d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143357 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14336d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001434a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1434bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001435f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14360d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143747 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14375d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143897 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1438ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001439e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1439fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143b37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143b4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143c87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143c9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143dd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143ded ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143f27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143f3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144077 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14408d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001457e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1457fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145937 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14594d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145a87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x145a9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145bd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x145bed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145d27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x145d3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145e77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x145e8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145fc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x145fdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146117 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14612d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146267 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14627d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001463b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1463cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146507 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14651d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146657 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14666d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001467a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1467bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001468f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14690d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146a47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146a5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001481b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1481cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148307 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14831d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148457 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14846d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001485a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1485bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001486f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14870d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148847 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14885d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148997 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1489ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148ae7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x148afd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148c37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x148c4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148d87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x148d9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148ed7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x148eed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149027 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14903d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149177 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14918d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001492c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1492dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14942d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000000258b : sub dword ptr [rdi + 0x2009646], -0x7a ; out dx, al ; ret 0x88ad
0x0000000000142d73 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000142d6f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000142e1d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000161e89 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161016 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000019a696 : sub dword ptr [rsp + rdi*8 - 1], edi ; sbb al, 0xd ; jnp 0x19a6a4 ; jmp qword ptr [rdx]
0x000000000012b804 : sub dword ptr es:[rax], eax ; cmp dword ptr fs:[rax], 0x18 ; je 0x12b819 ; ret
0x000000000012ac16 : sub eax, -0x80 ; add rsp, 8 ; ret
0x000000000012e40a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3175 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x000000000018c305 : sub eax, 0x4340002 ; clc ; jmp rsp
0x000000000008024a : sub eax, 0x448d48fe ; ret
0x00000000000b42df : sub eax, 0x48ffffd1 ; add esp, 0x18 ; ret
0x0000000000036409 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x000000000009566f : sub eax, 0x89ffff19 ; ret
0x000000000010c8a4 : sub eax, 0x89ffffff ; ret 0x96eb
0x00000000001a0edd : sub eax, 0xd4d00001 ; int1 ; jmp qword ptr [rbx]
0x00000000000769c6 : sub eax, 0xf8830000 ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000129c85 : sub eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000047057 : sub eax, 1 ; cmp rax, rbx ; jne 0x47059 ; pop rbx ; ret
0x000000000009752a : sub eax, 1 ; jne 0x97526 ; ret
0x000000000002cb24 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000011d521 : sub eax, 1 ; pop r13 ; ret
0x000000000003851f : sub eax, 1 ; ret
0x0000000000194196 : sub eax, dword ptr [rax + 0xd1cffec] ; fdivr dword ptr [rdi - 0x14] ; jmp qword ptr [rdx]
0x0000000000196b85 : sub eax, dword ptr [rax] ; add al, ch ; scasd eax, dword ptr [rdi] ; in eax, dx ; call qword ptr [rcx]
0x0000000000108532 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010d62f : sub eax, dword ptr [rax] ; add ecx, ebp ; ret
0x000000000010c4aa : sub eax, dword ptr [rax] ; add rsp, 0x28 ; jmp rax
0x00000000001117ea : sub eax, dword ptr [rax] ; call rax
0x00000000001082ef : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x1082d8 ; ret
0x000000000010acdc : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000107ab4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107ac8 ; xor eax, eax ; ret
0x0000000000107ae4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107af8 ; xor eax, eax ; ret
0x0000000000107b14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107b28 ; xor eax, eax ; ret
0x0000000000107b44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107b58 ; xor eax, eax ; ret
0x0000000000107b74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107b88 ; xor eax, eax ; ret
0x0000000000107ba4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107bb8 ; xor eax, eax ; ret
0x0000000000107bd4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107be8 ; xor eax, eax ; ret
0x0000000000107c04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107c18 ; xor eax, eax ; ret
0x0000000000107c34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107c48 ; xor eax, eax ; ret
0x0000000000107c64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107c78 ; xor eax, eax ; ret
0x0000000000107c94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107ca8 ; xor eax, eax ; ret
0x0000000000107cc4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107cd8 ; xor eax, eax ; ret
0x0000000000107cf4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107d08 ; xor eax, eax ; ret
0x0000000000107d24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107d38 ; xor eax, eax ; ret
0x0000000000107d54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107d68 ; xor eax, eax ; ret
0x0000000000107d84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107d98 ; xor eax, eax ; ret
0x0000000000107db4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107dc8 ; xor eax, eax ; ret
0x0000000000107de4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107df8 ; xor eax, eax ; ret
0x0000000000107e14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107e28 ; xor eax, eax ; ret
0x0000000000107e44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107e58 ; xor eax, eax ; ret
0x0000000000107ea4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107eb8 ; xor eax, eax ; ret
0x0000000000107ed4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107ee8 ; xor eax, eax ; ret
0x0000000000107f04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107f18 ; xor eax, eax ; ret
0x0000000000107f34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107f48 ; xor eax, eax ; ret
0x0000000000107f64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107f78 ; xor eax, eax ; ret
0x0000000000107f94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107fa8 ; xor eax, eax ; ret
0x0000000000107fc4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107fd8 ; xor eax, eax ; ret
0x0000000000107ff4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108008 ; xor eax, eax ; ret
0x0000000000108024 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108038 ; xor eax, eax ; ret
0x0000000000108545 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x108558 ; ret
0x000000000003087f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a1ca3 : sub eax, dword ptr [rcx + r8*4] ; je 0xa1c87 ; ret
0x00000000000a1ca4 : sub eax, dword ptr [rcx + rax*4] ; je 0xa1c86 ; ret
0x000000000007d08e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000072fa5 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000072e95 : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000075875 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000072f96 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000072e86 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000a1c5c : sub eax, dword ptr [rdx + rcx*4] ; je 0xa1c46 ; ret
0x000000000018c285 : sub eax, dword ptr [rdx] ; add byte ptr [rcx + rax], dh ; clc ; call rsp
0x000000000007c5a3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000039d91 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000103da1 : sub eax, eax ; mov eax, r8d ; ret
0x00000000000a30cc : sub eax, eax ; nop ; ret
0x00000000000a3081 : sub eax, eax ; ret
0x000000000007b7fd : sub eax, ebp ; pop r13 ; pop r14 ; ret
0x00000000000a3de3 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a402a : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007be09 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000883bc : sub eax, ecx ; ret
0x0000000000088b61 : sub eax, edi ; ret
0x00000000000a38f8 : sub eax, edi ; sar rax, 2 ; sub rdx, rax ; jmp 0xa3895
0x000000000003c879 : sub eax, edx ; ret
0x00000000000366ff : sub eax, edx ; sar eax, 0x10 ; ret
0x00000000000363ef : sub eax, edx ; shr eax, 0x1f ; ret
0x000000000003603d : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000070efa : sub eax, esi ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000074c2e : sub eax, esi ; pop r14 ; pop r15 ; ret
0x0000000000103f62 : sub eax, esi ; ret
0x00000000000792f9 : sub eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a30cb : sub eax, r8d ; nop ; ret
0x00000000000a3080 : sub eax, r8d ; ret
0x0000000000103dbb : sub eax, r9d ; ret
0x0000000000196737 : sub ebp, -1 ; sbb al, 0xd ; sub al, 0x83 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000174bde : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000019a4d1 : sub ebp, esi ; call qword ptr [rdx]
0x000000000019accd : sub ebp, esi ; jmp qword ptr [rdx]
0x0000000000117de0 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x0000000000173675 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f63 : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000007ef67 : sub ecx, dword ptr [rax + 0x39] ; ret
0x00000000000f6b6c : sub ecx, dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000003c744 : sub ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000009d6b1 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000816a4 : sub ecx, dword ptr [rax] ; add ebx, ebp ; ret
0x00000000000bd4e4 : sub ecx, dword ptr [rcx + rcx*4 - 1] ; call r14
0x0000000000083e64 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000103d0c : sub ecx, eax ; mov eax, ecx ; ret
0x00000000000a1efc : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000018c601 : sub edi, eax ; call rsp
0x0000000000186289 : sub edi, ebx ; push qword ptr [rax + 0x1d] ; sti ; jmp rax
0x000000000018d681 : sub edi, edx ; jmp rsp
0x00000000000c419d : sub edi, esp ; dec dword ptr [rax - 0x77] ; ret 0x19eb
0x0000000000186a51 : sub edi, esp ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x000000000007c5d0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007c5c5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000117962 : sub edx, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008be04 : sub edx, eax ; jbe 0x8be47 ; add rax, rdi ; ret
0x000000000008be14 : sub edx, eax ; jbe 0x8be49 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008be24 : sub edx, eax ; jbe 0x8be49 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008be34 : sub edx, eax ; jbe 0x8be49 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a38ff : sub edx, eax ; jmp 0xa388e
0x00000000000c7700 : sub edx, eax ; jmp 0xc771d
0x000000000002081e : sub edx, ebx ; inc rdx ; jmp 0x2082d
0x00000000000366bd : sub edx, ecx ; not eax ; and eax, edx ; ret
0x00000000000c76fd : sub edx, edi ; sub r10, rax ; jmp 0xc7720
0x0000000000078bd2 : sub edx, esi ; mov rdi, rbx ; call rax
0x000000000009737a : sub esi, 1 ; jne 0x97377 ; xor eax, eax ; ret
0x0000000000097442 : sub esi, 1 ; jne 0x9743f ; xor eax, eax ; ret
0x0000000000117c2e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000133237 : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001a7989 : sub esi, ebp ; call qword ptr [rax]
0x00000000001a7911 : sub esi, ebp ; jmp qword ptr [rcx]
0x000000000001f724 : sub esi, edx ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f702
0x000000000001f6e1 : sub esp, -0x80 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e77e : sub esp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x00000000000a394e : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116214 : sub esp, -0x80 ; pop rbx ; ret
0x0000000000116221 : sub esp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000ebe1a : sub esp, 8 ; call 0x1080a5
0x00000000000aebdf : sub esp, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000007c853 : sub qword ptr [r8 + rax], rsi ; ret
0x00000000000c76ff : sub r10, rax ; jmp 0xc771e
0x00000000000c76fc : sub r10, rdi ; sub r10, rax ; jmp 0xc7721
0x0000000000117961 : sub r10d, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000af113 : sub r11b, r13b ; test eax, 0xe2058d48 ; ret 0x30
0x00000000000aebde : sub r12d, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000007be08 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000103da0 : sub r8d, eax ; mov eax, r8d ; ret
0x00000000000816a3 : sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x00000000000fc3ce : sub r9b, byte ptr [r8] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000f7e63 : sub r9b, dil ; dec dword ptr [rax + 0x39] ; ret
0x000000000012ac15 : sub rax, -0x80 ; add rsp, 8 ; ret
0x0000000000097529 : sub rax, 1 ; jne 0x97527 ; ret
0x00000000000a1583 : sub rax, 1 ; ret
0x000000000007d08d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000072fa4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000072e94 : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000075874 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000072f95 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000072e85 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000792f8 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b7fc : sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000070ef9 : sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000074c2d : sub rax, r14 ; pop r14 ; pop r15 ; ret
0x00000000000a4029 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000088b60 : sub rax, rdi ; ret
0x00000000000a38f7 : sub rax, rdi ; sar rax, 2 ; sub rdx, rax ; jmp 0xa3896
0x000000000003c88d : sub rax, rdx ; ret
0x000000000003603c : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000013cabc : sub rax, rsi ; ret
0x00000000000a1efb : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008be03 : sub rdx, rax ; jbe 0x8be48 ; add rax, rdi ; ret
0x00000000000a38fe : sub rdx, rax ; jmp 0xa388f
0x000000000002081d : sub rdx, rbx ; inc rdx ; jmp 0x2082e
0x0000000000078bd1 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000097379 : sub rsi, 1 ; jne 0x97378 ; xor eax, eax ; ret
0x0000000000097441 : sub rsi, 1 ; jne 0x97440 ; xor eax, eax ; ret
0x00000000001a7958 : sub rsi, rbp ; jmp qword ptr [rcx]
0x000000000012e77d : sub rsp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x00000000000a394d : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116213 : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000116220 : sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000ebe19 : sub rsp, 8 ; call 0x1080a6
0x00000000001a7840 : sub sil, bpl ; jmp qword ptr [rcx]
0x0000000000036120 : subps xmm0, xmm1 ; ret
0x000000000003611f : subsd xmm0, xmm1 ; ret
0x0000000000036484 : subss xmm0, xmm1 ; ret
0x0000000000118fa1 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000cb60d : syscall ; neg eax ; ret
0x0000000000108097 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000c1d05 : syscall ; ret
0x00000000000fa33f : syscall ; test rax, rax ; jl 0xfa38e ; je 0xfa352 ; ret
0x000000000007d243 : sysenter
0x00000000001143f3 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x0000000000102be1 : test ah, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000012ac77 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000123c0a : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000002cd70 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000001a7b18 : test al, 0x2d ; cmc ; jmp qword ptr [rcx]
0x00000000001a7d88 : test al, 0x30 ; cmc ; jmp qword ptr [rcx]
0x00000000000863f4 : test al, 0x33 ; add byte ptr [rax], al ; je 0x86406 ; ret
0x000000000010b544 : test al, 0x35 ; cmc ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x0000000000003c8e : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001a82f8 : test al, 0x3b ; cmc ; jmp qword ptr [rcx]
0x00000000000d43b1 : test al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000bd913 : test al, 0x48 ; mov edi, dword ptr [rbp - 0x68] ; call r14
0x00000000001a4cb8 : test al, 0x65 ; hlt ; jmp qword ptr [rcx]
0x00000000001a5078 : test al, 0x6e ; hlt ; jmp qword ptr [rcx]
0x00000000001a2b18 : test al, 0x8c ; call qword ptr [rdi]
0x00000000001793b0 : test al, 0x95 ; hlt ; jmp rsi
0x0000000000173f37 : test al, 0x97 ; xchg eax, esp ; ret
0x0000000000179f38 : test al, 0xa6 ; cmc ; inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rax
0x00000000001a5928 : test al, 0xac ; hlt ; call qword ptr [rbx]
0x0000000000198854 : test al, 0xbc ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a5ff8 : test al, 0xbd ; hlt ; jmp qword ptr [rcx]
0x00000000001a6108 : test al, 0xc0 ; hlt ; jmp qword ptr [rcx]
0x00000000001a7348 : test al, 0xd ; cmc ; jmp qword ptr [rcx]
0x00000000001aa8b8 : test al, 0xd6 ; cmc ; jmp qword ptr [rsi]
0x00000000001962c9 : test al, 0xed ; jmp rbx
0x00000000001abb48 : test al, 0xef ; cmc ; call qword ptr [rdi]
0x0000000000199a9c : test al, 0xef ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000a3489 : test al, 0xf0 ; jne 0xa34e8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a3488 : test al, 0xf0 ; jne 0xa34e9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000017a171 : test al, 0xf5 ; call rsp
0x000000000017a16d : test al, 0xf5 ; ljmp ptr [rcx] ; test al, 0xf5 ; call rsp
0x000000000017a091 : test al, 0xf5 ; push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp rcx
0x000000000018779d : test al, 0xfc ; call qword ptr [rax + 0x10fffca7]
0x0000000000187799 : test al, 0xfc ; call qword ptr [rax]
0x0000000000187999 : test al, 0xfc ; jmp qword ptr [rax + 0x20fffca7]
0x0000000000187819 : test al, 0xfc ; jmp rdx
0x0000000000187815 : test al, 0xfc ; push qword ptr [rdx - 0x58] ; cld ; jmp rdx
0x0000000000186425 : test al, 0xfd ; jmp rsi
0x0000000000081de2 : test al, ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000103d84 : test al, al ; je 0x103db9 ; mov eax, r9d ; sub eax, edx ; ret
0x0000000000096a59 : test al, al ; jne 0x96a45 ; ret
0x0000000000096b50 : test al, al ; jne 0x96b3e ; xor eax, eax ; ret
0x00000000000973ba : test al, al ; jne 0x97362 ; mov rax, rdi ; ret
0x0000000000097eaa : test al, al ; jne 0x97e98 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000108bb9 : test al, al ; mov byte ptr [rdi], al ; jne 0x108bb1 ; mov rax, rdi ; ret
0x0000000000108d79 : test al, al ; mov byte ptr [rdi], al ; jne 0x108d71 ; mov rax, r10 ; ret
0x000000000006f6c4 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001aa92c : test al, bh ; add dword ptr [rax], eax ; push rax ; ret 0xfff8
0x000000000018af14 : test al, bl ; add dword ptr [rax], eax ; xchg eax, esp ; cmc ; call rsp
0x0000000000094682 : test al, dh ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000018d7ac : test al, dl ; add al, byte ptr [rax] ; cli ; call rsp
0x000000000017827d : test bh, ah ; call rax
0x00000000000bc474 : test bl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000f2a50 : test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000018dbbc : test bl, ch ; add al, byte ptr [rax] ; and al, 0xbb ; cli ; jmp rsp
0x0000000000121704 : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000210ce : test bl, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000001336b3 : test byte ptr [r8], bpl ; add byte ptr [rcx + 0x5c], al ; jmp rax
0x000000000012f78b : test byte ptr [rax + 0x1000001], al ; ret 0x894c
0x000000000002ff16 : test byte ptr [rax + 0x200], bh ; ret
0x00000000000c286a : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000001276a5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000127f05 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000af97c : test byte ptr [rax + 0xf], 0x45 ; ret 0x8948
0x000000000005ab88 : test byte ptr [rax + rax - 0x76b40000], ah ; ret 0x894c
0x00000000000c9013 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000dc440 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f9343 : test byte ptr [rax + rax], ch ; ret
0x00000000000485e9 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000b1009 : test byte ptr [rax + rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000eadb2 : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000188a78 : test byte ptr [rax - 0x13], ah ; jmp rsp
0x000000000018d3d4 : test byte ptr [rax - 0x326bfffe], ch ; stc ; call rsp
0x00000000000242bb : test byte ptr [rax - 0x39], cl ; ret
0x00000000000da8b3 : test byte ptr [rax - 0x3f], 0xe6 ; add ch, al ; ret
0x00000000000d3107 : test byte ptr [rax - 0x3f], 0xe6 ; add ebp, eax ; outsd dx, dword ptr [rsi] ; ret
0x00000000001870b0 : test byte ptr [rax - 0x77790004], 0xfc ; call qword ptr [rsi]
0x000000000011dabf : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x00000000000f5bbe : test byte ptr [rax - 0x77], 0xef ; call rbx
0x00000000000db9d6 : test byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000016230a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000015a4ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009cdda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009ddaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000015a4ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000009ddca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009ddda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000015a52a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009de1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007c87a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000015a4ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009ddba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000021c89 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000711aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000005d55a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000046d3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009700a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000103d08 : test byte ptr [rax], al ; add byte ptr [rax], al ; sub ecx, eax ; mov eax, ecx ; ret
0x00000000000e54cb : test byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000133654 : test byte ptr [rax], ch ; add byte ptr [rcx + 0x5c], al ; jmp rax
0x0000000000172a9c : test byte ptr [rax], ch ; in al, dx ; call qword ptr [rax]
0x000000000018c620 : test byte ptr [rax], dh ; clc ; call rsp
0x00000000000241e9 : test byte ptr [rbp + rcx*4 + 0x2c], cl ; ret
0x000000000018ae94 : test byte ptr [rbp - 0x2abffff], bh ; hlt ; call rsp
0x00000000000f4f68 : test byte ptr [rbp - 0x74b6000e], ah ; call rbx
0x00000000001063fc : test byte ptr [rbx + 0x1c], 0x20 ; je 0x106468 ; xor eax, eax ; pop rbx ; ret
0x00000000001a752c : test byte ptr [rbx + 0x20c00001], dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a852c : test byte ptr [rbx + 0x47200001], ah ; cmc ; jmp rax
0x000000000019752c : test byte ptr [rbx - 0x42800000], dl ; in eax, dx ; jmp qword ptr [rax]
0x000000000018be40 : test byte ptr [rbx - 9], ah ; jmp rsp
0x00000000000a4c60 : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f2aa8 : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000025261 : test byte ptr [rbx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a5100 : test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a7b2c : test byte ptr [rcx + 0x2dc00001], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018caf8 : test byte ptr [rcx + 0x64f4fff8], cl ; add al, byte ptr [rax] ; ret 0xf88a
0x00000000001886dc : test byte ptr [rcx + 0x66540000], ch ; jmp 0x1886ea
0x00000000001a432c : test byte ptr [rcx + 1], ah ; add byte ptr [rax - 7], dl ; jmp qword ptr [rax]
0x00000000001a5b2c : test byte ptr [rcx + 1], bh ; add al, dl ; mov al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a532c : test byte ptr [rcx + 1], dh ; add al, dl ; jp 0x1a532e ; jmp qword ptr [rcx]
0x00000000000f29ef : test byte ptr [rcx + rax - 0x7cb80000], bh ; ret 0x3c01
0x00000000000f298f : test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0x3c01
0x000000000008b13e : test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x000000000008508f : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000039414 : test byte ptr [rcx + rcx*4 - 9], 0xe8 ; ret
0x0000000000101fd4 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x000000000003fef6 : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000006dc52 : test byte ptr [rcx - 0x76ffffff], cl ; ret 0xe283
0x0000000000133414 : test byte ptr [rcx - 0x7d000000], bl ; ret 0x8380
0x00000000000bc88a : test byte ptr [rcx - 0x7d], 0xc4 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000018bd58 : test byte ptr [rcx - 9], cl ; jmp rsp
0x00000000001374a6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000010c5c5 : test byte ptr [rcx], 0xf0 ; bswap eax ; ret
0x00000000000aaf2d : test byte ptr [rcx], al ; add eax, 0xb8480000 ; ret 0xffff
0x0000000000045b1d : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x0000000000088c14 : test byte ptr [rdi + 0x48000000], dl ; bsf eax, edx ; ret
0x00000000000962e0 : test byte ptr [rdi + 0xffffffd], bl ; mov dh, 0x45 ; ret
0x00000000001b392c : test byte ptr [rdi + 2], dl ; add byte ptr [rax + 0x76], dl ; idiv edi ; ret 0
0x00000000000409a4 : test byte ptr [rdi + rbx*8 - 1], bl ; dec dword ptr [rax + 0x39] ; ret
0x00000000001a692c : test byte ptr [rdi - 0x22efffff], al ; hlt ; call qword ptr [rdx]
0x000000000018a988 : test byte ptr [rdi - 0xd], bh ; call rsp
0x00000000001a0e34 : test byte ptr [rdi - 0xf], bh ; jmp qword ptr [rdx]
0x00000000000c4597 : test byte ptr [rdi*8 - 0x7cb70001], al ; ret 0xeb02
0x000000000003aa1b : test byte ptr [rdi], 0x84 ; ret
0x00000000000f528a : test byte ptr [rdi], 0x84 ; ret 0
0x000000000003e601 : test byte ptr [rdi], 0x84 ; ret 0x15
0x00000000000789f2 : test byte ptr [rdi], 0x95 ; ret 0x8445
0x00000000000dae56 : test byte ptr [rdi], 0x95 ; ret 0xd284
0x000000000005800a : test byte ptr [rdi], 0x9f ; ret 0x9529
0x0000000000072ee2 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000072ef2 : test byte ptr [rdi], 8 ; sete al ; ret
0x000000000009d758 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000018c4c4 : test byte ptr [rdi], dh ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0xf8 ; jmp rsp
0x000000000002fea4 : test byte ptr [rdx + 0x200], al ; ret
0x00000000000e73f0 : test byte ptr [rdx + 0x3c000015], dh ; sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x00000000001a942c : test byte ptr [rdx + 0x69e00001], dh ; cmc ; call rcx
0x00000000000962cd : test byte ptr [rdx + 0xffffffd], dh ; mov dh, 0x45 ; ret 0x8349
0x00000000000c65a7 : test byte ptr [rdx - 0x76fffffd], dl ; ret 0x8349
0x00000000001b65ed : test byte ptr [rdx], al ; add byte ptr [rax], dl ; push rdi ; call qword ptr [rcx]
0x0000000000093244 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000113c06 : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000045b26 : test byte ptr [rdx], bl ; out 0xff, al ; dec dword ptr [rax + 0x39] ; ret
0x0000000000028e80 : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001b65ec : test byte ptr [rdx], r8b ; add byte ptr [rax], dl ; push rdi ; call qword ptr [rcx]
0x0000000000021a17 : test byte ptr [rip + 0x5b000001], dl ; pop rbp ; pop r12 ; ret
0x00000000000428dd : test byte ptr [rip - 0x76ffffff], bl ; ret
0x00000000000e6466 : test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001a502c : test byte ptr [rsi + 1], ch ; add byte ptr [rax + 0x6e], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b402c : test byte ptr [rsi + 2], bl ; add al, ah ; mov dh, bh ; call qword ptr [rdx]
0x00000000000a70c4 : test byte ptr [rsi], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000fa156 : test byte ptr [rsp + 0x29], 0x80 ; setne dl ; jmp 0xfa136
0x0000000000048e06 : test byte ptr [rsp + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000179140 : test byte ptr [rsp + rsi*8], 0xff ; retf -0xbfc ; call qword ptr [rdi]
0x00000000000a1a82 : test ch, 0xf0 ; je 0xa1a7b ; movzx eax, cl ; pop rbx ; ret
0x000000000019d12c : test ch, bh ; add byte ptr [rax], al ; cmp bl, 0xee ; call qword ptr [rax]
0x00000000001967f5 : test ch, ch ; jmp qword ptr [rdx]
0x0000000000189d10 : test ch, cl ; out dx, eax ; call rsp
0x00000000000d1d72 : test cl, 1 ; jne 0xd1d04 ; pop rbx ; ret
0x00000000001aae2c : test cl, ah ; add dword ptr [rax], eax ; shl al, 0xf5 ; call qword ptr [rax]
0x0000000000097a09 : test cl, cl ; je 0x979d1 ; mov byte ptr [r10 + 1], 0 ; ret
0x0000000000096a00 : test cl, cl ; jne 0x969f5 ; ret
0x00000000000a120f : test cl, cl ; jne 0xa1204 ; ret
0x00000000000a12bf : test cl, cl ; jne 0xa12b4 ; ret
0x00000000000a157f : test cl, cl ; jne 0xa1578 ; sub rax, 1 ; ret
0x00000000000a1aaa : test dh, 0xf0 ; je 0xa1a79 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a1aaa : test dh, 0xf0 ; je 0xa1a7b ; movzx eax, dl ; pop rbx ; ret
0x000000000018cd40 : test dh, al ; clc ; call rsp
0x00000000001ad865 : test dh, ch ; jmp qword ptr [rdx]
0x0000000000096bb0 : test dh, dh ; jne 0x96ba7 ; mov qword ptr [rdx], rcx ; ret
0x0000000000025865 : test dh, dh ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000162194 : test dl, 0x40 ; jne 0x162159 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001621c2 : test dl, 4 ; jne 0x162159 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000ac231 : test dl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000009748e : test dl, dl ; cmovne rax, rdi ; ret
0x00000000000354b2 : test dl, dl ; jne 0x35494 ; ret
0x00000000000969b4 : test dl, dl ; jne 0x969ad ; ret
0x00000000000a142f : test dl, dl ; jne 0xa1428 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000c5fe5 : test dl, dl ; jne 0xc5fca ; ret
0x00000000000c600f : test dl, dl ; jne 0xc5ff7 ; ret
0x000000000010a8c8 : test dword ptr [rax + 0x29], 0x89c701c8 ; ret 0x850f
0x000000000008ca49 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00000000000e2d1c : test dword ptr [rax + 0xf000000], esp ; xchg eax, ebp ; ret 0xe2c1
0x000000000009da8b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000009ef9b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000009ee9b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x000000000004dd21 : test dword ptr [rax - 0x16000006], ebx ; ret
0x000000000006a63b : test dword ptr [rax - 0x76000002], ebx ; ret
0x0000000000054e22 : test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000004bf1f : test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x000000000004bf8f : test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x00000000000d94e0 : test dword ptr [rax - 0x7d], 0x394101c0 ; ret 0xda7f
0x00000000000c3619 : test dword ptr [rax - 0x8ffffff], esp ; ret
0x00000000000c4b1f : test dword ptr [rax - 0x900000c], eax ; ret
0x000000000010bd59 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10bd2f
0x00000000000838c2 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x00000000001b7508 : test dword ptr [rax], ecx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000838c1 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000000919cf : test dword ptr [rbp - 0xc000004], esp ; ret
0x0000000000096f1e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000133789 : test dword ptr [rbx + 0x48000001], edx ; add esp, 8 ; ret
0x0000000000001b0e : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000a2a80 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000a3378 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000015a408 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000015a3e8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000015a300 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009f090 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000160b17 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160f66 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002b5f : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000096e88 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000fb750 : test dword ptr [rbx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000587f2 : test dword ptr [rbx], ebp ; ret
0x00000000000fc773 : test dword ptr [rbx], ebx ; sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000008bd7a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000008c760 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x000000000015a10a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000160aed : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009d672 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000001609fd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016090d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a2ac7 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000164047 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000a2a97 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000121fa2 : test dword ptr [rcx + rcx*4 - 0x1e], 0xe8e5014c ; ret 0xf6f6
0x000000000015a4aa : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x00000000001333ea : test dword ptr [rcx - 0x75], ecx ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x000000000018b8e5 : test dword ptr [rcx], 0xf704a400 ; jmp rsp
0x00000000000c42e5 : test dword ptr [rcx], 0xfa800000 ; jnp 0xc4305 ; xchg eax, esp ; ret 0xb60f
0x0000000000082acd : test dword ptr [rdi + 0x48000022], eax ; mov eax, ebx ; pop rbx ; ret
0x000000000008c94a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x00000000000634e3 : test dword ptr [rdi + rax*8 + 0x6ae9ffff], esi ; ret 0xffff
0x00000000000375b3 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x000000000009d7d7 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009d7b7 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00000000000917e5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000037816 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000003c950 : test dword ptr [rdx + 0x48000001], ebp ; add esp, 8 ; ret
0x000000000009d971 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000009ed79 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x000000000007c913 : test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x0000000000161e62 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160832 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000004e841 : test dword ptr [rdx + rdi*8 + 0x1ffff], eax ; add byte ptr [rax], al ; jmp rax
0x000000000004baa8 : test dword ptr [rdx + rdi*8 + 0x1ffff], ebp ; add byte ptr [rax], al ; jmp rax
0x000000000004e98d : test dword ptr [rdx + rdi*8 + 0x1ffff], edx ; add byte ptr [rax], al ; jmp rax
0x000000000004ed75 : test dword ptr [rdx + rdi*8 + 0xffff], edx ; add byte ptr [rax], al ; jmp rax
0x000000000015a3c7 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000000a341d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001639d2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009d795 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000009d775 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000009d68d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x0000000000068186 : test dword ptr [rsi + rdi*8 + 0x20e9ffff], eax ; ret
0x0000000000091ace : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000006f853 : test dword ptr [rsi - 0xcfffffc], esp ; ret
0x000000000007e466 : test dword ptr [rsi], eax ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000007de47 : test dword ptr [rsi], ebx ; imul eax, dword ptr [rax], 0 ; ret
0x000000000011b155 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000160d38 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000164b3a : test eax, 0x1f0fffeb ; add bl, dh ; ret
0x00000000001211d3 : test eax, 0x480029c9 ; mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000011edf3 : test eax, 0x5b002a48 ; ret
0x00000000001886dd : test eax, 0x66540000 ; jmp 0x1886e9
0x0000000000175c20 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000014a866 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000364b1 : test eax, 0x7fffff ; je 0x364ae ; ret
0x000000000006bbf3 : test eax, 0x89000088 ; ret
0x000000000011ab0b : test eax, 0x8900064b ; out dx, al ; call 0x86d48
0x0000000000187795 : test eax, 0xa8a0fffc ; cld ; call qword ptr [rax]
0x0000000000179c76 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000000af116 : test eax, 0xe2058d48 ; ret 0x30
0x0000000000108548 : test eax, eax ; je 0x108555 ; ret
0x0000000000109fca : test eax, eax ; je 0x109fe0 ; add rsp, 8 ; ret
0x000000000011141d : test eax, eax ; je 0x11142d ; mov rdi, rbx ; call rax
0x0000000000111704 : test eax, eax ; je 0x111714 ; mov rdi, rbx ; call rax
0x000000000011bca0 : test eax, eax ; je 0x11bcac ; ret
0x000000000011ed01 : test eax, eax ; je 0x11ed11 ; mov rdi, rsp ; call rax
0x000000000011eddc : test eax, eax ; je 0x11edec ; mov rdi, rsp ; call rax
0x000000000011f695 : test eax, eax ; je 0x11f6a5 ; mov rdi, rbp ; call rax
0x000000000011fa66 : test eax, eax ; je 0x11fa74 ; ret
0x0000000000120733 : test eax, eax ; je 0x120743 ; mov rdi, r14 ; call rax
0x00000000001209b1 : test eax, eax ; je 0x1209c1 ; mov rdi, rbx ; call rax
0x000000000012445b : test eax, eax ; je 0x12446b ; mov rdi, r12 ; call rax
0x0000000000124639 : test eax, eax ; je 0x12464b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000126916 : test eax, eax ; je 0x126926 ; mov rdi, rbp ; call rax
0x0000000000126b36 : test eax, eax ; je 0x126b46 ; mov rdi, rbp ; call rax
0x000000000012765d : test eax, eax ; je 0x12766f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000127d1c : test eax, eax ; je 0x127d2c ; mov rdi, r12 ; call rax
0x000000000012808d : test eax, eax ; je 0x12809f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012ab6c : test eax, eax ; je 0x12ab4a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012ab3d : test eax, eax ; je 0x12ab4d ; pop rbx ; ret
0x000000000012aba9 : test eax, eax ; je 0x12ab61 ; pop rbx ; ret
0x000000000012b8e9 : test eax, eax ; je 0x12b8fb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012bff2 : test eax, eax ; je 0x12c004 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001305c6 : test eax, eax ; je 0x1305d6 ; xor eax, eax ; ret
0x0000000000137eb3 : test eax, eax ; je 0x137ebf ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000138e98 : test eax, eax ; je 0x138ea4 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000022108 : test eax, eax ; je 0x22112 ; jmp rax
0x0000000000022138 : test eax, eax ; je 0x22142 ; jmp rax
0x000000000002d1fe : test eax, eax ; je 0x2d208 ; call rax
0x000000000002e829 : test eax, eax ; je 0x2e833 ; call rax
0x000000000007882d : test eax, eax ; je 0x7883d ; pop rbx ; ret
0x00000000000837c7 : test eax, eax ; je 0x837d1 ; call rax
0x00000000000887c0 : test eax, eax ; je 0x887d1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c0e7c : test eax, eax ; je 0xc0e86 ; call rax
0x00000000000c1079 : test eax, eax ; je 0xc1087 ; call rax
0x00000000000f1a5c : test eax, eax ; je 0xf1a67 ; ret
0x00000000000f3131 : test eax, eax ; je 0xf3140 ; mov qword ptr [rax], rdx ; ret
0x00000000000f756b : test eax, eax ; je 0xf7610 ; call rax
0x00000000000f76e2 : test eax, eax ; je 0xf77e8 ; call rax
0x00000000000fa342 : test eax, eax ; jl 0xfa38b ; je 0xfa34f ; ret
0x0000000000107a86 : test eax, eax ; jne 0x107a99 ; mov eax, 1 ; ret
0x0000000000107ab6 : test eax, eax ; jne 0x107ac6 ; xor eax, eax ; ret
0x0000000000107ae6 : test eax, eax ; jne 0x107af6 ; xor eax, eax ; ret
0x0000000000107b16 : test eax, eax ; jne 0x107b26 ; xor eax, eax ; ret
0x0000000000107b46 : test eax, eax ; jne 0x107b56 ; xor eax, eax ; ret
0x0000000000107b76 : test eax, eax ; jne 0x107b86 ; xor eax, eax ; ret
0x0000000000107ba6 : test eax, eax ; jne 0x107bb6 ; xor eax, eax ; ret
0x0000000000107bd6 : test eax, eax ; jne 0x107be6 ; xor eax, eax ; ret
0x0000000000107c06 : test eax, eax ; jne 0x107c16 ; xor eax, eax ; ret
0x0000000000107c36 : test eax, eax ; jne 0x107c46 ; xor eax, eax ; ret
0x0000000000107c66 : test eax, eax ; jne 0x107c76 ; xor eax, eax ; ret
0x0000000000107c96 : test eax, eax ; jne 0x107ca6 ; xor eax, eax ; ret
0x0000000000107cc6 : test eax, eax ; jne 0x107cd6 ; xor eax, eax ; ret
0x0000000000107cf6 : test eax, eax ; jne 0x107d06 ; xor eax, eax ; ret
0x0000000000107d26 : test eax, eax ; jne 0x107d36 ; xor eax, eax ; ret
0x0000000000107d56 : test eax, eax ; jne 0x107d66 ; xor eax, eax ; ret
0x0000000000107d86 : test eax, eax ; jne 0x107d96 ; xor eax, eax ; ret
0x0000000000107db6 : test eax, eax ; jne 0x107dc6 ; xor eax, eax ; ret
0x0000000000107de6 : test eax, eax ; jne 0x107df6 ; xor eax, eax ; ret
0x0000000000107e16 : test eax, eax ; jne 0x107e26 ; xor eax, eax ; ret
0x0000000000107e46 : test eax, eax ; jne 0x107e56 ; xor eax, eax ; ret
0x0000000000107ea6 : test eax, eax ; jne 0x107eb6 ; xor eax, eax ; ret
0x0000000000107ed6 : test eax, eax ; jne 0x107ee6 ; xor eax, eax ; ret
0x0000000000107f06 : test eax, eax ; jne 0x107f16 ; xor eax, eax ; ret
0x0000000000107f36 : test eax, eax ; jne 0x107f46 ; xor eax, eax ; ret
0x0000000000107f66 : test eax, eax ; jne 0x107f76 ; xor eax, eax ; ret
0x0000000000107f96 : test eax, eax ; jne 0x107fa6 ; xor eax, eax ; ret
0x0000000000107fc6 : test eax, eax ; jne 0x107fd6 ; xor eax, eax ; ret
0x0000000000107ff6 : test eax, eax ; jne 0x108006 ; xor eax, eax ; ret
0x0000000000108026 : test eax, eax ; jne 0x108036 ; xor eax, eax ; ret
0x000000000010806f : test eax, eax ; jne 0x10806b ; pop rdx ; pop r10 ; ret
0x0000000000108163 : test eax, eax ; jne 0x108175 ; ret
0x000000000010846b : test eax, eax ; jne 0x108435 ; leave ; ret
0x000000000010bddb : test eax, eax ; jne 0x10bdcd ; ret
0x0000000000113264 : test eax, eax ; jne 0x113259 ; mov rdi, r15 ; call 0x1f4f9
0x000000000011c13a : test eax, eax ; jne 0x11c144 ; ret
0x0000000000124846 : test eax, eax ; jne 0x124854 ; ret
0x000000000012bad6 : test eax, eax ; jne 0x12bae4 ; ret
0x000000000012d47e : test eax, eax ; jne 0x12d443 ; jmp 0x12d44b
0x0000000000136a66 : test eax, eax ; jne 0x136a76 ; xor eax, eax ; ret
0x0000000000136a96 : test eax, eax ; jne 0x136aa6 ; xor eax, eax ; ret
0x0000000000136ac6 : test eax, eax ; jne 0x136ad6 ; xor eax, eax ; ret
0x0000000000136af6 : test eax, eax ; jne 0x136b06 ; xor eax, eax ; ret
0x0000000000136b26 : test eax, eax ; jne 0x136b36 ; xor eax, eax ; ret
0x0000000000136b56 : test eax, eax ; jne 0x136b66 ; xor eax, eax ; ret
0x0000000000165356 : test eax, eax ; jne 0x165365 ; ret
0x0000000000036b36 : test eax, eax ; jne 0x36b45 ; ret
0x000000000005d54f : test eax, eax ; jne 0x5d568 ; mov rax, rbx ; pop rbx ; ret
0x000000000007c584 : test eax, eax ; jne 0x7c57d ; ret
0x0000000000086a3f : test eax, eax ; jne 0x86a36 ; xor eax, eax ; ret
0x000000000008aadf : test eax, eax ; jne 0x8aaf8 ; add rsp, 8 ; ret
0x000000000008bdb7 : test eax, eax ; jne 0x8be17 ; xor rax, rax ; ret
0x0000000000096f58 : test eax, eax ; jne 0x96fd6 ; xor eax, eax ; ret
0x00000000000a3569 : test eax, eax ; jne 0xa353d ; ret
0x00000000000a3636 : test eax, eax ; jne 0xa362e ; xor eax, eax ; ret
0x00000000000a49f9 : test eax, eax ; jne 0xa49b8 ; nop dword ptr [rax] ; ret
0x00000000000f92cf : test eax, eax ; jne 0xf92a7 ; xor eax, eax ; pop rbx ; ret
0x00000000000f9490 : test eax, eax ; jne 0xf9467 ; xor eax, eax ; pop rbx ; ret
0x000000000007140b : test eax, eax ; js 0x7141d ; ret
0x0000000000083ae6 : test eax, eax ; js 0x83af5 ; ret
0x00000000000d40c6 : test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000ff871 : test eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019683d : test ebp, ebp ; jmp qword ptr [rdx]
0x00000000000a832e : test ebp, ebp ; mov rbx, r15 ; setne dl ; jmp 0xa834e
0x000000000008bce0 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000e6f91 : test ebp, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000187eb1 : test ebp, edx ; jmp rsp
0x000000000010a216 : test ebx, ebx ; jne 0x10a228 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000164ebb : test ebx, ebx ; jne 0x164eb0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016530f : test ebx, ebx ; jne 0x165306 ; pop rbx ; ret
0x0000000000073854 : test ebx, ebx ; jne 0x73868 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000162182 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000016218f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000002d585 : test ecx, ecx ; je 0x2d58f ; call rcx
0x000000000005dc98 : test ecx, ecx ; je 0x5dca5 ; ret
0x00000000000a3553 : test ecx, ecx ; jne 0xa354d ; ret
0x0000000000103db5 : test ecx, ecx ; jns 0x103d91 ; mov eax, edx ; sub eax, r9d ; ret
0x00000000000a2fb8 : test ecx, ecx ; mov dword ptr [r8 + 4], ecx ; jne 0xa2f91 ; ret
0x00000000000a1d83 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xa1d7f ; ret
0x00000000001116f1 : test edi, edi ; jne 0x1116e5 ; pop rbx ; ret
0x000000000016504b : test edi, edi ; jne 0x16503f ; pop rbx ; ret
0x000000000010c5e2 : test edi, edi ; js 0x10c5f9 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000001871d1 : test edi, esp ; call rsp
0x0000000000187051 : test edi, esp ; jmp qword ptr [rax]
0x0000000000178281 : test edi, esp ; push rax ; xchg ah, bh ; call qword ptr [rax]
0x0000000000082af8 : test edx, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000847b3 : test edx, edi ; je 0x847c6 ; pop rbx ; ret
0x00000000000721f7 : test edx, edx ; cli ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000f7fef : test edx, edx ; cmovne eax, edx ; ret
0x0000000000048777 : test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000f9f74 : test edx, edx ; cmovns rax, rdx ; jmp 0xf9f83
0x0000000000121264 : test edx, edx ; je 0x121274 ; mov rdi, r12 ; call rdx
0x0000000000126725 : test edx, edx ; je 0x126735 ; mov rdi, rbp ; call rdx
0x0000000000164c44 : test edx, edx ; je 0x164c4e ; call rdx
0x0000000000164d4d : test edx, edx ; je 0x164d5c ; call rdx
0x00000000000732da : test edx, edx ; je 0x732f1 ; mov eax, 0xffffffff ; ret
0x000000000007e563 : test edx, edx ; je 0x7e56d ; call rdx
0x00000000000889e9 : test edx, edx ; je 0x889f7 ; bsf eax, edx ; ret
0x00000000000889e9 : test edx, edx ; je 0x889f8 ; bsf eax, edx ; ret
0x0000000000088a92 : test edx, edx ; je 0x88aa7 ; bsf rax, rdx ; ret
0x0000000000088a92 : test edx, edx ; je 0x88aa8 ; bsf rax, rdx ; ret
0x0000000000088a36 : test edx, edx ; je 0x88ab8 ; bsf rax, rdx ; ret
0x0000000000088c81 : test edx, edx ; je 0x88ca7 ; bsf rax, rdx ; ret
0x0000000000088c81 : test edx, edx ; je 0x88ca8 ; bsf rax, rdx ; ret
0x00000000000c0ff9 : test edx, edx ; je 0xc1007 ; call rdx
0x000000000010836d : test edx, edx ; jne 0x108365 ; leave ; ret
0x000000000012b865 : test edx, edx ; jne 0x12b855 ; pop rbx ; ret
0x000000000007409f : test edx, edx ; jne 0x74095 ; ret
0x000000000007ae3f : test edx, edx ; jne 0x7ae35 ; ret
0x0000000000086af9 : test edx, edx ; jne 0x86af5 ; ret
0x00000000000a4a3a : test edx, edx ; jne 0xa4a35 ; ret
0x0000000000021bdb : test edx, edx ; jns 0x21ac2 ; jmp 0x21bb0
0x00000000000a380f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xa380f ; ret
0x00000000000b00bf : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xb00c0 ; ret
0x000000000012e8e0 : test edx, edx ; mov eax, 1 ; jne 0x12e8f9 ; ret
0x000000000012e920 : test edx, edx ; mov eax, 1 ; jne 0x12e939 ; ret
0x000000000003797a : test edx, edx ; sete al ; ret
0x0000000000162175 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000000ff941 : test esi, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002cb10 : test esi, esi ; je 0x2cade ; pop rbx ; ret
0x000000000012ea1c : test esi, esi ; jle 0x12ea5e ; call 0x12ac36
0x000000000012e9dd : test esi, esi ; jne 0x12e9f6 ; call 0x12ac36
0x0000000000088b71 : test esi, esi ; jne 0x88b80 ; xor rax, rax ; ret
0x0000000000093d3e : test esi, esi ; jne 0x93d51 ; jmp 0x93d0b
0x000000000010be78 : test esi, esi ; mov dword ptr [rax], esi ; jne 0x10be6f ; ret
0x00000000001af1a4 : test esp, ecx ; cmc ; jmp qword ptr [rdx]
0x0000000000086ab2 : test esp, esp ; jne 0x86add ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a5bf2 : test esp, esp ; mov r13, r14 ; setne dl ; jmp 0xa5c0f
0x00000000000aa952 : test esp, esp ; mov r13, r14 ; setne dl ; jmp 0xaa96f
0x0000000000037815 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x0000000000086ab1 : test r12, r12 ; jne 0x86ade ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a5bf1 : test r12d, r12d ; mov r13, r14 ; setne dl ; jmp 0xa5c10
0x00000000000aa951 : test r12d, r12d ; mov r13, r14 ; setne dl ; jmp 0xaa970
0x000000000012ea1b : test r14d, r14d ; jle 0x12ea5f ; call 0x12ac37
0x000000000012e9dc : test r14d, r14d ; jne 0x12e9f7 ; call 0x12ac37
0x000000000010846a : test r8, r8 ; jne 0x108436 ; leave ; ret
0x0000000000096a58 : test r8b, r8b ; jne 0x96a46 ; ret
0x0000000000096b4f : test r8b, r8b ; jne 0x96b3f ; xor eax, eax ; ret
0x00000000000973b9 : test r8b, r8b ; jne 0x97363 ; mov rax, rdi ; ret
0x0000000000137eb2 : test r8d, r8d ; je 0x137ec0 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000138e97 : test r8d, r8d ; je 0x138ea5 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000010bdda : test r8d, r8d ; jne 0x10bdce ; ret
0x00000000000a3568 : test r8d, r8d ; jne 0xa353e ; ret
0x00000000000a49f8 : test r8d, r8d ; jne 0xa49b9 ; nop dword ptr [rax] ; ret
0x0000000000108547 : test rax, rax ; je 0x108556 ; ret
0x0000000000109fc9 : test rax, rax ; je 0x109fe1 ; add rsp, 8 ; ret
0x000000000011141c : test rax, rax ; je 0x11142e ; mov rdi, rbx ; call rax
0x0000000000111703 : test rax, rax ; je 0x111715 ; mov rdi, rbx ; call rax
0x000000000011ed00 : test rax, rax ; je 0x11ed12 ; mov rdi, rsp ; call rax
0x000000000011eddb : test rax, rax ; je 0x11eded ; mov rdi, rsp ; call rax
0x000000000011f694 : test rax, rax ; je 0x11f6a6 ; mov rdi, rbp ; call rax
0x0000000000120732 : test rax, rax ; je 0x120744 ; mov rdi, r14 ; call rax
0x00000000001209b0 : test rax, rax ; je 0x1209c2 ; mov rdi, rbx ; call rax
0x000000000012445a : test rax, rax ; je 0x12446c ; mov rdi, r12 ; call rax
0x0000000000124638 : test rax, rax ; je 0x12464c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000126915 : test rax, rax ; je 0x126927 ; mov rdi, rbp ; call rax
0x0000000000126b35 : test rax, rax ; je 0x126b47 ; mov rdi, rbp ; call rax
0x000000000012765c : test rax, rax ; je 0x127670 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000127d1b : test rax, rax ; je 0x127d2d ; mov rdi, r12 ; call rax
0x000000000012808c : test rax, rax ; je 0x1280a0 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012ab3c : test rax, rax ; je 0x12ab4e ; pop rbx ; ret
0x000000000012aba8 : test rax, rax ; je 0x12ab62 ; pop rbx ; ret
0x000000000012b8e8 : test rax, rax ; je 0x12b8fc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012bff1 : test rax, rax ; je 0x12c005 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000022107 : test rax, rax ; je 0x22113 ; jmp rax
0x0000000000022137 : test rax, rax ; je 0x22143 ; jmp rax
0x000000000002d1fd : test rax, rax ; je 0x2d209 ; call rax
0x000000000002e828 : test rax, rax ; je 0x2e834 ; call rax
0x000000000007882c : test rax, rax ; je 0x7883e ; pop rbx ; ret
0x00000000000837c6 : test rax, rax ; je 0x837d2 ; call rax
0x00000000000887bf : test rax, rax ; je 0x887d2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c0e7b : test rax, rax ; je 0xc0e87 ; call rax
0x00000000000c1078 : test rax, rax ; je 0xc1088 ; call rax
0x00000000000f1a5b : test rax, rax ; je 0xf1a68 ; ret
0x00000000000f3130 : test rax, rax ; je 0xf3141 ; mov qword ptr [rax], rdx ; ret
0x00000000000f756a : test rax, rax ; je 0xf7611 ; call rax
0x00000000000f76e1 : test rax, rax ; je 0xf77e9 ; call rax
0x00000000000fa341 : test rax, rax ; jl 0xfa38c ; je 0xfa350 ; ret
0x000000000007c583 : test rax, rax ; jne 0x7c57e ; ret
0x0000000000086a3e : test rax, rax ; jne 0x86a37 ; xor eax, eax ; ret
0x00000000000f92ce : test rax, rax ; jne 0xf92a8 ; xor eax, eax ; pop rbx ; ret
0x00000000000f948f : test rax, rax ; jne 0xf9468 ; xor eax, eax ; pop rbx ; ret
0x000000000010a215 : test rbx, rbx ; jne 0x10a229 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000164eba : test rbx, rbx ; jne 0x164eb1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016530e : test rbx, rbx ; jne 0x165307 ; pop rbx ; ret
0x0000000000073853 : test rbx, rbx ; jne 0x73869 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002d584 : test rcx, rcx ; je 0x2d590 ; call rcx
0x00000000001116f0 : test rdi, rdi ; jne 0x1116e6 ; pop rbx ; ret
0x00000000001116ef : test rdi, rdi ; jne 0x1116e7 ; pop rbx ; ret
0x000000000016504a : test rdi, rdi ; jne 0x165040 ; pop rbx ; ret
0x00000000000847b2 : test rdx, rdi ; je 0x847c7 ; pop rbx ; ret
0x0000000000121263 : test rdx, rdx ; je 0x121275 ; mov rdi, r12 ; call rdx
0x0000000000126724 : test rdx, rdx ; je 0x126736 ; mov rdi, rbp ; call rdx
0x0000000000164c43 : test rdx, rdx ; je 0x164c4f ; call rdx
0x0000000000164d4c : test rdx, rdx ; je 0x164d5d ; call rdx
0x000000000007e562 : test rdx, rdx ; je 0x7e56e ; call rdx
0x0000000000088a91 : test rdx, rdx ; je 0x88aa8 ; bsf rax, rdx ; ret
0x0000000000088a91 : test rdx, rdx ; je 0x88aa9 ; bsf rax, rdx ; ret
0x0000000000088a35 : test rdx, rdx ; je 0x88ab9 ; bsf rax, rdx ; ret
0x0000000000088c80 : test rdx, rdx ; je 0x88ca8 ; bsf rax, rdx ; ret
0x0000000000088c80 : test rdx, rdx ; je 0x88ca9 ; bsf rax, rdx ; ret
0x00000000000c0ff8 : test rdx, rdx ; je 0xc1008 ; call rdx
0x000000000010836c : test rdx, rdx ; jne 0x108366 ; leave ; ret
0x000000000012b864 : test rdx, rdx ; jne 0x12b856 ; pop rbx ; ret
0x000000000007409e : test rdx, rdx ; jne 0x74096 ; ret
0x000000000007ae3e : test rdx, rdx ; jne 0x7ae36 ; ret
0x0000000000086af8 : test rdx, rdx ; jne 0x86af6 ; ret
0x0000000000088b70 : test rsi, rsi ; jne 0x88b81 ; xor rax, rax ; ret
0x0000000000093d3d : test rsi, rsi ; jne 0x93d52 ; jmp 0x93d0c
0x0000000000096baf : test sil, sil ; jne 0x96ba8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b5e : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00000000001aa645 : vaddps xmm10, xmm15, xmm13 ; cmc ; jmp qword ptr [rsi]
0x000000000007a727 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x0000000000021b1d : vmptrst qword ptr [rcx] ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000012ca36 : vpandn xmm5, xmm14, xmm0 ; ret 0xfbf3
0x000000000013ced1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000002c113 : wait ; adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x00000000000ff999 : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012f1f7 : wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001a7cad : wait ; add dword ptr [rax], eax ; jo 0x1a7ce7 ; cmc ; jmp qword ptr [rcx]
0x00000000001a7cc5 : wait ; add dword ptr [rax], eax ; mov byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7d6d : wait ; add dword ptr [rax], eax ; nop ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000001a7d85 : wait ; add dword ptr [rax], eax ; test al, 0x30 ; cmc ; jmp qword ptr [rcx]
0x000000000018a985 : wait ; add dword ptr [rax], eax ; test byte ptr [rdi - 0xd], bh ; call rsp
0x00000000001a7d3d : wait ; add dword ptr [rax], eax ; xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x000000000004c9ab : wait ; call qword ptr [rdx]
0x000000000018a5d1 : wait ; call rsp
0x00000000001ae7f5 : wait ; cmc ; jmp qword ptr [rdx]
0x00000000001794a9 : wait ; hlt ; call qword ptr [rcx]
0x00000000001794cd : wait ; hlt ; call rbx
0x0000000000179591 : wait ; hlt ; call rdi
0x00000000001793d1 : wait ; hlt ; call rsi
0x00000000001794c9 : wait ; hlt ; dec ecx ; wait ; hlt ; call rbx
0x0000000000179541 : wait ; hlt ; inc dword ptr [rdi] ; popfq ; hlt ; call qword ptr [rcx]
0x00000000001794ed : wait ; hlt ; jmp qword ptr [rbx]
0x00000000001794d5 : wait ; hlt ; jmp rdi
0x00000000001793cd : wait ; hlt ; lcall ptr [rdi - 0x65] ; hlt ; call rsi
0x00000000001797bd : wait ; hlt ; ljmp ptr [rax] ; wait ; hlt ; call rsi
0x00000000001794a5 : wait ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call qword ptr [rcx]
0x0000000000179791 : wait ; hlt ; ljmp ptr [rcx - 0x65] ; hlt ; call rsi
0x0000000000188fb1 : wait ; out dx, al ; jmp rsp
0x00000000000a0e4d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0ecf : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a0fd1 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bb0 : xabort -0xd ; ret
0x0000000000002bac : xbegin 0xfffffffff8c6efac ; ret
0x0000000000178285 : xchg ah, bh ; call qword ptr [rax]
0x0000000000187149 : xchg ah, bh ; call rdx
0x0000000000187145 : xchg ah, bh ; inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x00000000001870c9 : xchg ah, bh ; jmp rsi
0x0000000000137cbf : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001384e3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139e2f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001378af : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001385d3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001383f3 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001373bb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002e9eb : xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000137bcb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000071c36 : xchg ax, si ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71bf8
0x000000000013ddcc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000013d5ec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000013d9dc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d1fc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000adc94 : xchg bh, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x000000000013fcfd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000035a5d : xchg bl, al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000013e801 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000013fa01 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f101 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f401 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013eaf9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f916f : xchg byte ptr [r8 + rax], r13b ; add rsp, 8 ; ret
0x0000000000138e3b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000013a98f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f9170 : xchg byte ptr [rax + rax], ch ; add rsp, 8 ; ret
0x000000000013a16f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000013763f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013994f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000013797f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000138993 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000186bc8 : xchg byte ptr [rax - 4], ah ; call qword ptr [rsi]
0x0000000000137c9b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d39b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137d6b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001969d6 : xchg byte ptr [rbp + 0xd1cffed], al ; ret 0xed84
0x000000000013a4af : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138123 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000139c8f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013946f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000013a64f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000137b1f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000138b73 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000138303 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000013730f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000035b9b : xchg byte ptr [rbx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000138d53 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000129376 : xchg byte ptr [rcx], al ; add al, ch ; ret 0xffd9
0x000000000000d040 : xchg byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018a6ad : xchg byte ptr [rcx], al ; add byte ptr [rsi + rax - 0xd], dh ; jmp rsp
0x000000000008272e : xchg byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013770f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000000c4041 : xchg byte ptr [rdi - 0xa000000], bh ; ret
0x000000000013d88c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d0ac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007a9f0 : xchg byte ptr [rdi], bl ; add byte ptr [rax], al ; jmp 0x7aa0c
0x000000000013e1bc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000137bef : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000138c63 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001373df : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001397af : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137481 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001385a5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000117384 : xchg byte ptr [rdx], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000138695 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001384b5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004b9cd : xchg byte ptr [rip - 0x77cb800], al ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000001377df : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000019b14c : xchg byte ptr [rsi + rbp*8], bh ; jmp qword ptr [rdx]
0x000000000013eda6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001398e5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a5e5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013fca6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f3a6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f0a6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013a105 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d78d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013ea9e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e0bd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137a4f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000138213 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000013c13f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013bf5f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c937 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001ad9a5 : xchg ch, dh ; jmp qword ptr [rdx]
0x000000000013b857 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013c757 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000095354 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x000000000013a925 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139c25 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000139745 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a445 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00000000001a8ba4 : xchg dh, bl ; hlt ; jmp qword ptr [rdx]
0x000000000013d8dd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000002591 : xchg dh, ch ; ret 0x88ad
0x000000000013d0fd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001af441 : xchg dh, dh ; jmp rdx
0x00000000001374a5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001383c5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001381e5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187f01 : xchg dl, ch ; call rsp
0x00000000001382d5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001380f5 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000187f00 : xchg dl, r13b ; call rsp
0x000000000006d0bb : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000a8a02 : xchg dword ptr [rax + rdx - 0x7cb80000], ebx ; ret
0x00000000000dc8eb : xchg dword ptr [rax - 0x76fffff4], esi ; ret 0x8d48
0x000000000006750c : xchg dword ptr [rax - 0x76fffff5], ebp ; ret 0x348
0x0000000000023c84 : xchg dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000067485 : xchg dword ptr [rbp - 0x76ffffe9], edx ; ret 0x348
0x0000000000067934 : xchg dword ptr [rbp - 0x76fffffd], ebp ; ret 0x348
0x00000000000a3567 : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000002dbb7 : xchg dword ptr [rbp - 0x7c000004], esi ; ret 0x8901
0x00000000000d9892 : xchg dword ptr [rbx + rbp*8 + 0x39], edi ; ret 0xc189
0x00000000000659bd : xchg dword ptr [rbx - 0x7cfffff4], eax ; ret 0x8308
0x0000000000105b92 : xchg dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000005c2a0 : xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000131755 : xchg dword ptr [rcx + 0x2948fff1], eax ; ret
0x00000000001738ec : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000e4d21 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000597d0 : xchg dword ptr [rcx - 0x77000000], edi ; ret 0x348
0x00000000000819d8 : xchg dword ptr [rcx - 0x9fffffb], edi ; ret
0x00000000001a68cd : xchg dword ptr [rcx], eax ; add byte ptr [rax - 0x24], dh ; hlt ; call qword ptr [rax]
0x000000000019c4fc : xchg dword ptr [rdi - 0x12], ebx ; jmp qword ptr [rdx]
0x000000000006757e : xchg dword ptr [rdi - 0x76fffff6], esp ; ret 0x348
0x0000000000058e92 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x000000000006764c : xchg dword ptr [rdi - 0x7d000000], eax ; ret 0x8308
0x000000000010806d : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x10806d ; pop rdx ; pop r10 ; ret
0x00000000000f9e1c : xchg dword ptr [rdi], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f985c : xchg dword ptr [rdi], edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000082ace : xchg dword ptr [rdx], esp ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000067853 : xchg dword ptr [rip - 0x76fffffd], ecx ; ret 0x348
0x000000000006717b : xchg dword ptr [rip - 0x7cfffffb], edi ; ret 0x8308
0x000000000005900b : xchg dword ptr [rsi - 0x77000000], esp ; ret 0x348
0x00000000001a06e4 : xchg dword ptr [rsi - 0xf], esi ; jmp qword ptr [rdx]
0x0000000000173a8b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000059e7d : xchg dword ptr [rsp + rax], ebp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013b498 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000273b9 : xchg eax, ebp ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x00000000000bd9b3 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005ffe5 : xchg eax, ebp ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x0000000000188345 : xchg eax, ebp ; add byte ptr [rax], al ; mov ah, 0x10 ; jmp 0x188351
0x00000000001782b1 : xchg eax, ebp ; cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x00000000001ae48d : xchg eax, ebp ; cmc ; jmp qword ptr [rdx]
0x000000000017937d : xchg eax, ebp ; hlt ; call rax
0x0000000000179389 : xchg eax, ebp ; hlt ; jmp rsi
0x0000000000194f01 : xchg eax, ebp ; in eax, dx ; call qword ptr [rax]
0x0000000000194e89 : xchg eax, ebp ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a0bec : xchg eax, ebp ; jle 0x1a0be3 ; jmp qword ptr [rdx]
0x00000000001ace1c : xchg eax, ebp ; jp 0x1ace17 ; jmp qword ptr [rdx]
0x00000000000020c3 : xchg eax, ebp ; ret
0x00000000000dfbc8 : xchg eax, ebp ; ret 0x2041
0x000000000003e77f : xchg eax, ebp ; ret 0x2948
0x00000000000a74ff : xchg eax, ebp ; ret 0x294c
0x00000000000b1861 : xchg eax, ebp ; ret 0x3145
0x00000000000cb7ee : xchg eax, ebp ; ret 0x460f
0x000000000006d6a6 : xchg eax, ebp ; ret 0x5389
0x0000000000095553 : xchg eax, ebp ; ret 0x5474
0x0000000000128b80 : xchg eax, ebp ; ret 0x548d
0x0000000000076ea3 : xchg eax, ebp ; ret 0x60e9
0x0000000000020246 : xchg eax, ebp ; ret 0x8341
0x0000000000049025 : xchg eax, ebp ; ret 0x8348
0x00000000000d3ae1 : xchg eax, ebp ; ret 0x840f
0x000000000007d537 : xchg eax, ebp ; ret 0x8441
0x00000000000789f4 : xchg eax, ebp ; ret 0x8445
0x000000000004902e : xchg eax, ebp ; ret 0x854d
0x00000000000c744d : xchg eax, ebp ; ret 0x8944
0x00000000000cf2f8 : xchg eax, ebp ; ret 0x8d47
0x000000000008168e : xchg eax, ebp ; ret 0x948
0x00000000000323e5 : xchg eax, ebp ; ret 0x953d
0x0000000000032dfc : xchg eax, ebp ; ret 0x9be9
0x000000000003e205 : xchg eax, ebp ; ret 0xb60f
0x0000000000048f09 : xchg eax, ebp ; ret 0xc031
0x00000000000af504 : xchg eax, ebp ; ret 0xc0e9
0x00000000000daf82 : xchg eax, ebp ; ret 0xc209
0x000000000011266a : xchg eax, ebp ; ret 0xc985
0x00000000000a5bf8 : xchg eax, ebp ; ret 0xceb
0x00000000000fa15c : xchg eax, ebp ; ret 0xcfeb
0x0000000000121b04 : xchg eax, ebp ; ret 0xd089
0x000000000011259b : xchg eax, ebp ; ret 0xd120
0x00000000000b0bc4 : xchg eax, ebp ; ret 0xd138
0x0000000000032a9c : xchg eax, ebp ; ret 0xd284
0x000000000003e3cf : xchg eax, ebp ; ret 0xd349
0x000000000006de97 : xchg eax, ebp ; ret 0xdaf7
0x000000000003e314 : xchg eax, ebp ; ret 0xe083
0x00000000000e2d22 : xchg eax, ebp ; ret 0xe2c1
0x00000000000b18ab : xchg eax, ebp ; ret 0xf749
0x00000000000a44f3 : xchg eax, ebp ; ret 0xf883
0x00000000000a8334 : xchg eax, ebp ; ret 0xfeb
0x0000000000048ed8 : xchg eax, ebp ; ret 0xff31
0x000000000012291c : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000005db7a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000cb7ce : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f212c : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001295d4 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000008cbf7 : xchg eax, ebp ; std ; or al, 0 ; ret
0x000000000013217f : xchg eax, ebp ; sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000002b5d : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00000000000f3c07 : xchg eax, ebp ; xor edi, ecx ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000018d0bd : xchg eax, ebx ; add al, byte ptr [rax] ; in al, 0x71 ; stc ; jmp rsp
0x000000000007b682 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000001974bd : xchg eax, ebx ; add byte ptr [rax], al ; call 0xffffffffd3195d54
0x00000000001a752d : xchg eax, ebx ; add dword ptr [rax], eax ; shl byte ptr [rax], 0xf5 ; jmp qword ptr [rsi]
0x000000000015fc80 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000001aaa54 : xchg eax, ebx ; and bh, bl ; jmp qword ptr [rdx]
0x0000000000003911 : xchg eax, ebx ; and cl, ah ; ret
0x00000000000d8c59 : xchg eax, ebx ; fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x000000000009cc9c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000142922 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000074924 : xchg eax, ebx ; ret 0x3948
0x000000000003a3cf : xchg eax, ebx ; ret 0x3949
0x000000000003a6b7 : xchg eax, ebx ; ret 0x8348
0x0000000000049a00 : xchg eax, ebx ; ret 0x841
0x00000000000e3480 : xchg eax, ebx ; ret 0x944
0x00000000000634c0 : xchg eax, ebx ; ret 0xffff
0x00000000000f9759 : xchg eax, ebx ; sub byte ptr [rax + rax], 0x48 ; add esp, 8 ; ret
0x000000000012166e : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x000000000010e3fb : xchg eax, ecx ; adc eax, 0x8948002b ; ret 0xb9
0x000000000007a3af : xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000071f26 : xchg eax, ecx ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71eec
0x00000000001a7345 : xchg eax, ecx ; add dword ptr [rax], eax ; test al, 0xd ; cmc ; jmp qword ptr [rcx]
0x000000000006d296 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x0000000000192a84 : xchg eax, ecx ; and al, 0xeb ; jmp qword ptr [rdx]
0x00000000001788c9 : xchg eax, ecx ; call rax
0x000000000018ad79 : xchg eax, ecx ; hlt ; jmp rsp
0x00000000001a1a85 : xchg eax, ecx ; int1 ; jmp qword ptr [rdx]
0x00000000001886f9 : xchg eax, ecx ; jmp 0x1886fd
0x000000000013aa31 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000044f8b : xchg eax, ecx ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000021c7e : xchg eax, ecx ; push -0xcfffff7 ; ret
0x00000000000c1ad3 : xchg eax, ecx ; ret
0x000000000013915f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000e6a90 : xchg eax, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x4c6
0x000000000005f94b : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x000000000005fc5f : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x0000000000188395 : xchg eax, edi ; add byte ptr [rax], al ; and al, 0x21 ; jmp 0x1883a1
0x0000000000071acb : xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71a95
0x00000000000e4dec : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001a790d : xchg eax, edi ; add dword ptr [rax], eax ; add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000083e9d : xchg eax, edi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001a7925 : xchg eax, edi ; add dword ptr [rax], eax ; sbb byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7955 : xchg eax, edi ; add dword ptr [rax], eax ; sub rsi, rbp ; jmp qword ptr [rcx]
0x00000000001a793d : xchg eax, edi ; add dword ptr [rax], eax ; xor byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000b4c6e : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000001ae51d : xchg eax, edi ; cmc ; jmp qword ptr [rdx]
0x0000000000037bf5 : xchg eax, edi ; cmp byte ptr fs:[rax], al ; mov eax, edx ; ret
0x000000000019b0bc : xchg eax, edi ; cmp ch, dh ; jmp qword ptr [rdx]
0x00000000001960d7 : xchg eax, edi ; ret
0x0000000000021de1 : xchg eax, edi ; ret 0x39
0x0000000000113255 : xchg eax, edi ; ret 0xfff0
0x00000000000c233e : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000fcaf6 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000ed3e9 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000f0254 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000d2e68 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000022279 : xchg eax, edi ; sbb dword ptr [rdx], edi ; add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x0000000000173f38 : xchg eax, edi ; xchg eax, esp ; ret
0x00000000001882c5 : xchg eax, edx ; add byte ptr [rax], al ; hlt ; add ch, bl ; jmp rsp
0x00000000001973ed : xchg eax, edx ; add byte ptr [rax], al ; mov al, 0xba ; in eax, dx ; jmp qword ptr [rdx]
0x000000000010e60b : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2b44
0x00000000001a73bd : xchg eax, edx ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000039a9a : xchg eax, edx ; idiv edi ; dec ecx ; ret
0x00000000000c49dc : xchg eax, edx ; idiv edi ; push rsi ; ret
0x00000000001788c5 : xchg eax, edx ; inc edi ; xchg eax, ecx ; call rax
0x00000000001a1acd : xchg eax, edx ; int1 ; jmp qword ptr [rdx]
0x00000000001757fd : xchg eax, edx ; jae 0x1757da ; push rsi ; pop rdx ; je 0x1757cf ; ret 0xacfc
0x000000000018734c : xchg eax, edx ; jnp 0x18734e ; jmp qword ptr [rdx]
0x00000000001273c4 : xchg eax, edx ; lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000127403 : xchg eax, edx ; lock dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00000000000288ba : xchg eax, edx ; ret
0x000000000011f4ba : xchg eax, edx ; ret 0
0x00000000000ae836 : xchg eax, edx ; ret 0x8941
0x00000000000ed3ce : xchg eax, edx ; ret 0x970f
0x00000000000f0257 : xchg eax, edx ; ret 0xcc80
0x00000000000c2341 : xchg eax, edx ; ret 0xd029
0x00000000000d2e6b : xchg eax, edx ; ret 0xd138
0x00000000001738ef : xchg eax, edx ; ret 0xf869
0x000000000013caad : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000187634 : xchg eax, edx ; scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rdx]
0x0000000000137eb7 : xchg eax, edx ; sub eax, edx ; ret
0x000000000018713c : xchg eax, edx ; xchg esp, edi ; jmp qword ptr [rdx]
0x000000000018d135 : xchg eax, esi ; add al, byte ptr [rax] ; mov ah, 0x7f ; stc ; call rsp
0x000000000015ff80 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008379e : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014c063 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000071c37 : xchg eax, esi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71bf7
0x000000000000258e : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001a7825 : xchg eax, esi ; add dword ptr [rax], eax ; sub byte ptr [rdx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a783d : xchg eax, esi ; add dword ptr [rax], eax ; sub sil, bpl ; jmp qword ptr [rcx]
0x000000000018cb89 : xchg eax, esi ; clc ; call rsp
0x00000000001782b5 : xchg eax, esi ; cld ; jmp rax
0x0000000000194f49 : xchg eax, esi ; in eax, dx ; jmp rsp
0x000000000016003d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a17fc : xchg eax, esi ; mov dh, cl ; jmp qword ptr [rdx]
0x0000000000187098 : xchg eax, esi ; mov edi, esp ; jmp qword ptr [rsi]
0x00000000001863b0 : xchg eax, esi ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; inc dword ptr [rdx - 0x5b] ; std ; call qword ptr [rdx]
0x0000000000186bac : xchg eax, esi ; movsxd rdi, esp ; jmp qword ptr [rsi]
0x000000000015ff9b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c6074 : xchg eax, esi ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000110cef : xchg eax, esi ; ret
0x000000000003377e : xchg eax, esi ; ret 0x14
0x000000000008869c : xchg eax, esi ; ret 0x144
0x0000000000109bdc : xchg eax, esi ; ret 0x394c
0x000000000007d530 : xchg eax, esi ; ret 0x8348
0x000000000017618c : xchg eax, esi ; ret 0xcd11
0x000000000015ffec : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b9f78 : xchg eax, esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000186385 : xchg eax, esi ; sti ; push qword ptr [rax - 0x68] ; sti ; jmp qword ptr [rax]
0x000000000018c440 : xchg eax, esp ; adc al, 0xf8 ; call rsp
0x00000000001af43c : xchg eax, esp ; adc al, byte ptr [rdx] ; add al, ah ; xchg dh, dh ; jmp rdx
0x000000000018c61c : xchg eax, esp ; add al, byte ptr [rax] ; test byte ptr [rax], dh ; clc ; call rsp
0x00000000000f2990 : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000008b13f : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000e1e84 : xchg eax, esp ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000027486 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000003ffc7 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000073ce8 : xchg eax, esp ; and al, 0xf0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000018af18 : xchg eax, esp ; cmc ; call rsp
0x00000000001ae3fd : xchg eax, esp ; cmc ; jmp qword ptr [rdx]
0x00000000001a9bfc : xchg eax, esp ; hlt ; jmp qword ptr [rdx]
0x000000000018a464 : xchg eax, esp ; ja 0x18a46f ; add ah, dl ; jb 0x18a464 ; jmp rsp
0x000000000018af84 : xchg eax, esp ; mov dword ptr [rcx], 0xf5bfa400 ; call rsp
0x000000000018d67c : xchg eax, esp ; mov ebx, 0x2bc40002 ; cli ; jmp rsp
0x0000000000108e4b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x000000000019d03c : xchg eax, esp ; out dx, al ; add byte ptr [rax], al ; cli ; out dx, al ; call qword ptr [rcx]
0x00000000001a3d3c : xchg eax, esp ; pop rbx ; add dword ptr [rax], eax ; push rax ; jb 0x1a3d3d ; jmp rax
0x000000000018cb84 : xchg eax, esp ; push -0x69cbfffe ; clc ; call rsp
0x000000000018a780 : xchg eax, esp ; push rsi ; call rsp
0x000000000017639f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x176330 ; ret 0x48f
0x000000000001f543 : xchg eax, esp ; ret
0x000000000007f87a : xchg eax, esp ; ret 0x1589
0x00000000000a9b5d : xchg eax, esp ; ret 0x294c
0x0000000000116d28 : xchg eax, esp ; ret 0x2a
0x00000000000b1a4d : xchg eax, esp ; ret 0x2b3c
0x00000000000ceb47 : xchg eax, esp ; ret 0x38b
0x00000000000df861 : xchg eax, esp ; ret 0x3d
0x00000000001295a1 : xchg eax, esp ; ret 0x3d83
0x00000000000e73f8 : xchg eax, esp ; ret 0x403c
0x00000000000c599f : xchg eax, esp ; ret 0x45e9
0x0000000000034623 : xchg eax, esp ; ret 0x70e9
0x00000000000eea32 : xchg eax, esp ; ret 0x7c83
0x0000000000047b73 : xchg eax, esp ; ret 0x8341
0x00000000000c3e85 : xchg eax, esp ; ret 0x8548
0x00000000000b0d8e : xchg eax, esp ; ret 0x8840
0x00000000000cc6e3 : xchg eax, esp ; ret 0x8944
0x00000000000b1c16 : xchg eax, esp ; ret 0x894c
0x0000000000103bfd : xchg eax, esp ; ret 0x89eb
0x00000000000cd1b8 : xchg eax, esp ; ret 0x8b48
0x0000000000021e87 : xchg eax, esp ; ret 0x8d48
0x00000000000b0e6e : xchg eax, esp ; ret 0x943a
0x00000000000296d6 : xchg eax, esp ; ret 0xb60f
0x00000000000d6477 : xchg eax, esp ; ret 0xc030
0x0000000000021f81 : xchg eax, esp ; ret 0xc031
0x000000000013cab0 : xchg eax, esp ; ret 0xc085
0x000000000005b8d3 : xchg eax, esp ; ret 0xd189
0x000000000004a5b0 : xchg eax, esp ; ret 0xd284
0x00000000000cd449 : xchg eax, esp ; ret 0xd5e9
0x000000000007069c : xchg eax, esp ; ret 0xdaf7
0x000000000012f2fe : xchg eax, esp ; ret 0xea83
0x000000000007fafb : xchg eax, esp ; ret 0xee9
0x00000000000a60fd : xchg eax, esp ; ret 0xf983
0x00000000000d0c17 : xchg eax, esp ; ret 0xfd83
0x00000000000cee22 : xchg eax, esp ; ret 0xff83
0x00000000000a3c3c : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000b710e : xchg eax, esp ; ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000ecdef : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000465b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000012e7c6 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001a803c : xchg eax, esp ; sahf ; add dword ptr [rax], eax ; jo 0x1a807e ; cmc ; jmp qword ptr [rcx]
0x000000000004c748 : xchg eax, esp ; sar edi, 1 ; dec dword ptr [rax - 0x77] ; ret 0x1beb
0x000000000004d630 : xchg eax, esp ; shr eax, -0x57 ; ret 0xffff
0x00000000001add3c : xchg eax, esp ; sti ; add dword ptr [rax], eax ; shl byte ptr [rdx], 0xf6 ; call rdi
0x00000000001898f4 : xchg eax, esp ; sub dword ptr [rcx], eax ; add ah, ah ; push rsp ; out dx, eax ; jmp rsp
0x00000000001a7d3c : xchg eax, esp ; wait ; add dword ptr [rax], eax ; xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a793c : xchg eax, esp ; xchg eax, edi ; add dword ptr [rax], eax ; xor byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a783c : xchg eax, esp ; xchg eax, esi ; add dword ptr [rax], eax ; sub sil, bpl ; jmp qword ptr [rcx]
0x00000000001ab93c : xchg eax, esp ; xlatb ; add dword ptr [rax], eax ; jo 0x1ab932 ; cmc ; call qword ptr [rax]
0x000000000018e0d8 : xchg eax, esp ; xlatb ; std ; call rsp
0x000000000007d3e4 : xchg eax, esp ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000189e80 : xchg eax, esp ; xor esi, eax ; call rsp
0x0000000000121bd8 : xchg ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000005356e : xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001ad9ed : xchg ebp, esi ; jmp qword ptr [rdx]
0x000000000018d181 : xchg ecx, edi ; jmp rsp
0x00000000000a7826 : xchg ecx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001a122d : xchg ecx, esi ; jmp qword ptr [rdx]
0x000000000018a1c9 : xchg ecx, esi ; jmp rsp
0x00000000000acc26 : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ab1d9 : xchg edi, esp ; idiv edi ; dec dword ptr [rcx - 0x7d] ; ret 0x4104
0x000000000005a610 : xchg edx, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001944ed : xchg esp, ebp ; jmp qword ptr [rdx]
0x00000000000d4262 : xchg esp, ecx ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x000000000018713d : xchg esp, edi ; jmp qword ptr [rdx]
0x0000000000187081 : xchg esp, edi ; jmp rax
0x00000000001944ec : xchg r12d, r13d ; jmp qword ptr [rdx]
0x0000000000187148 : xchg spl, dil ; call rdx
0x000000000019b9a5 : xlatb ; add byte ptr [rax], al ; xor rbp, rsi ; call qword ptr [rsi]
0x0000000000170e29 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001ab93d : xlatb ; add dword ptr [rax], eax ; jo 0x1ab931 ; cmc ; call qword ptr [rax]
0x00000000001ab925 : xlatb ; add dword ptr [rax], eax ; js 0x1ab919 ; cmc ; call qword ptr [rax]
0x00000000001427e9 : xlatb ; add r9, r11 ; jmp r9
0x00000000001aa949 : xlatb ; cmc ; jmp qword ptr [rdi]
0x00000000001aa919 : xlatb ; cmc ; jmp qword ptr [rsi]
0x00000000001a0a3c : xlatb ; ja 0x1a0a33 ; jmp qword ptr [rdx]
0x00000000000496db : xlatb ; jbe 0x496d9 ; nop ; mov rax, rsi ; pop rbx ; ret
0x00000000000847b4 : xlatb ; je 0x847c5 ; pop rbx ; ret
0x0000000000178ecd : xlatb ; jmp qword ptr [rsi]
0x0000000000108179 : xlatb ; jmp rax
0x0000000000117bcc : xlatb ; jne 0x117ba8 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000f8276 : xlatb ; jne 0xf826f ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000174963 : xlatb ; jo 0x1749df ; mov ebp, 0xfb67d10d ; ret
0x00000000001a8f5c : xlatb ; loop 0x1a8f56 ; jmp qword ptr [rdx]
0x00000000000499a2 : xlatb ; mov byte ptr [rsi], al ; jne 0x49988 ; mov rax, rsi ; ret
0x0000000000117ec6 : xlatb ; mov qword ptr [r9], rdi ; ret
0x000000000007decf : xlatb ; neg rdi ; call qword ptr [rax]
0x0000000000179594 : xlatb ; popfq ; hlt ; jmp rcx
0x0000000000086e89 : xlatb ; ret
0x000000000001a2b0 : xlatb ; ret 0x17
0x0000000000088a0f : xlatb ; ret 0x4166
0x0000000000175e06 : xlatb ; ret 0x4e27
0x0000000000003238 : xlatb ; ret 0x5a51
0x000000000008a877 : xlatb ; ret 0x94c
0x000000000008bbdf : xlatb ; ret 0xc085
0x0000000000086e80 : xlatb ; ret 0xc148
0x00000000000970bb : xlatb ; ret 0xf188
0x0000000000093921 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000096f56 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000009d10e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000162136 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000096eb4 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000088356 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000088216 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000000880d6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000087f96 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000087e56 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000087d16 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000087bd6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000087a96 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000087956 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000087816 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000000876d6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000087596 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000087456 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000087316 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000000871d6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00000000000fc721 : xlatb ; sbb ebp, dword ptr [rax + rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000162132 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008a815 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008a826 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000018e0d9 : xlatb ; std ; call rsp
0x00000000000375f8 : xlatb ; xor eax, eax ; ret
0x00000000000c4b20 : xor ah, 0xff ; push rsi ; ret
0x000000000009c908 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000009c89e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000186abd : xor ah, bh ; call qword ptr [rax]
0x00000000001869b9 : xor ah, bh ; jmp rax
0x0000000000186999 : xor ah, bh ; push rax ; xor esp, edi ; call rax
0x00000000000025c0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2559 ; loop 0x25a4 ; ret 0x23cb
0x0000000000178f04 : xor ah, dl ; jmp qword ptr [rsi]
0x000000000007c939 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007d345 : xor al, 0 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007c8d4 : xor al, 0 ; add dword ptr [rip + 0x3440e7], 1 ; ret
0x000000000007a985 : xor al, 0 ; jne 0x7c964 ; ret
0x000000000007c910 : xor al, 0 ; jne 0x7cb8d ; ret
0x000000000007de44 : xor al, 0 ; jne 0x84973 ; ret
0x000000000007c855 : xor al, 0 ; ret
0x00000000001117e8 : xor al, 0x17 ; sub eax, dword ptr [rax] ; call rax
0x00000000000828d5 : xor al, 0x18 ; pop rbx ; ret
0x00000000001738ea : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000082ddc : xor al, 0x24 ; jmp rax
0x0000000000093d3b : xor al, 0x24 ; test rsi, rsi ; jne 0x93d54 ; jmp 0x93d0e
0x00000000000c1cf4 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000018cef0 : xor al, 0x2a ; stc ; jmp rsp
0x00000000001a0edc : xor al, 0x2d ; add dword ptr [rax], eax ; rcl ah, 1 ; int1 ; jmp qword ptr [rbx]
0x000000000005d516 : xor al, 0x36 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000048876 : xor al, 0x37 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000002041 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000d7735 : xor al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0x538b
0x00000000001a1cdc : xor al, 0x3b ; add dword ptr [rax], eax ; mov al, 0xee ; int1 ; jmp qword ptr [rcx]
0x00000000001a29dc : xor al, 0x48 ; add dword ptr [rax], eax ; mov edx, dr0 ; jmp qword ptr [rdi]
0x0000000000096fdb : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000018a03c : xor al, 0x5c ; add dword ptr [rax], eax ; hlt ; ret 0xfff0
0x0000000000194324 : xor al, 0x80 ; in al, dx ; jmp qword ptr [rdx]
0x00000000000a1b41 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x00000000000a1b01 : xor al, 0x82 ; add rdx, rsi ; jmp rdx
0x0000000000020c72 : xor al, 0x89 ; inc dword ptr [rdi + 4] ; ret
0x00000000001ae0ac : xor al, 0x8a ; cmc ; jmp qword ptr [rdx]
0x00000000001a6edc : xor al, 0x8d ; add dword ptr [rax], eax ; sar dh, 1 ; hlt ; jmp rax
0x000000000018a588 : xor al, 0x8d ; jmp rsp
0x000000000018ad78 : xor al, 0x91 ; hlt ; jmp rsp
0x000000000018cb88 : xor al, 0x96 ; clc ; call rsp
0x000000000018a5d0 : xor al, 0x9b ; call rsp
0x00000000001a82dc : xor al, 0xa1 ; add dword ptr [rax], eax ; nop ; cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000001899f0 : xor al, 0xa7 ; out dx, eax ; call rsp
0x000000000018db10 : xor al, 0xa9 ; cli ; jmp rsp
0x00000000001276a8 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x000000000002e31e : xor al, 0xb2 ; add r14, r10 ; jmp r14
0x000000000018afa8 : xor al, 0xc2 ; cmc ; call rsp
0x00000000001aa7dc : xor al, 0xc6 ; add dword ptr [rax], eax ; ret
0x0000000000174aca : xor al, 0xd8 ; ret
0x00000000001ac3dc : xor al, 0xe2 ; add dword ptr [rax], eax ; nop ; cld ; cmc ; call qword ptr [rax]
0x000000000018ddd8 : xor al, 0xe4 ; cli ; call rsp
0x00000000001ad6dc : xor al, 0xf5 ; add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf6 ; call rdi
0x00000000001b5845 : xor al, 0xf7 ; jmp qword ptr [rdx]
0x00000000000a2a98 : xor al, 1 ; add byte ptr [rax], al ; ret
0x000000000018c288 : xor al, 1 ; clc ; call rsp
0x000000000018c308 : xor al, 4 ; clc ; jmp rsp
0x00000000000fa4fb : xor al, al ; or eax, edi ; ret
0x00000000000e44c3 : xor al, al ; ret
0x000000000018c621 : xor al, bh ; call rsp
0x00000000000eafea : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000178358 : xor al, ch ; std ; call qword ptr [rax]
0x00000000000efcb8 : xor ax, ax ; ret
0x0000000000186ac1 : xor bh, ah ; jmp rax
0x0000000000033d72 : xor bh, byte ptr [rbx - 0x76b6ffc8] ; ret 0x65e9
0x00000000001866a0 : xor bl, ah ; sti ; call qword ptr [rax]
0x000000000008be3c : xor bl, al ; nop ; xor rax, rax ; ret
0x00000000001079a2 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000186295 : xor bl, bh ; jmp qword ptr [rax]
0x000000000019adec : xor bpl, sil ; jmp qword ptr [rdx]
0x00000000000a2b8c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008bcfd : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000111292 : xor byte ptr [r8 + 1], dil ; pop rbx ; ret
0x00000000000471a7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x4721d ; xor eax, eax ; ret
0x00000000000d4c4f : xor byte ptr [r9], sil ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000001b438 : xor byte ptr [rax + 0x18], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x00000000000721db : xor byte ptr [rax + 0x29], cl ; ret
0x000000000004425c : xor byte ptr [rax + 0x29], cl ; ret 0x2949
0x00000000000d4d87 : xor byte ptr [rax + 0x39], cl ; ret 0x830f
0x00000000000b8b7f : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x0000000000086eaf : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000086d91 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000111293 : xor byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000096fb6 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000187998 : xor byte ptr [rax - 0x585f0004], ch ; cld ; jmp qword ptr [rax]
0x000000000011ee27 : xor byte ptr [rax - 0x73], cl ; add eax, 0x2a4871 ; pop rbx ; ret
0x000000000011edef : xor byte ptr [rax - 0x73], cl ; add eax, 0x2a48a9 ; pop rbx ; ret
0x000000000011ed30 : xor byte ptr [rax - 0x73], cl ; add eax, 0x2a4968 ; pop rbx ; ret
0x000000000009f7e7 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000178198 : xor byte ptr [rax - 0x757f000f], cl ; int1 ; call rax
0x00000000000474e8 : xor byte ptr [rax - 0x75], cl ; jbe 0x47564 ; xor eax, eax ; ret
0x00000000000471a8 : xor byte ptr [rax - 0x75], cl ; jg 0x4721c ; xor eax, eax ; ret
0x00000000000474e7 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47565 ; xor eax, eax ; ret
0x0000000000086cbf : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000105efb : xor byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x72128
0x000000000012e75a : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000b54e6 : xor byte ptr [rax - 0x77], cl ; jmp 0x48cdde3c
0x00000000000b5d7e : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccde6d4
0x00000000000b5e0a : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccde760
0x00000000000b5e8b : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccde7e1
0x00000000000b6dab : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccdf701
0x00000000000dd2e9 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000b6287 : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000e5d00 : xor byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000006ca71 : xor byte ptr [rax - 0x77], cl ; ret 0xee83
0x00000000000e22af : xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x0000000000059f72 : xor byte ptr [rax - 0x7d], cl ; ret
0x000000000018eaf0 : xor byte ptr [rax - 3], ah ; jmp qword ptr [rdx]
0x00000000001862dc : xor byte ptr [rax - 5], dl ; call qword ptr [rax]
0x0000000000186294 : xor byte ptr [rax], 0xfb ; jmp qword ptr [rax]
0x00000000000e44fc : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000008ab08 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021f63 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000031e1d : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000036b53 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000a1b65 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000074e11 : xor byte ptr [rax], al ; je 0x74e28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a7d40 : xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000a1067 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a2b90 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000a2b8f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000088659 : xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x000000000010be7b : xor byte ptr [rbp - 0x16], dh ; ret
0x00000000000837da : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c2c13 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019bb07 : xor byte ptr [rbx + 0xae60206], al ; ret
0x000000000008c9ab : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000007bdbe : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000187980 : xor byte ptr [rbx - 0x5d5f0004], ah ; cld ; call qword ptr [rax]
0x00000000001a5390 : xor byte ptr [rbx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001868b0 : xor byte ptr [rbx], al ; cld ; push rax ; add al, 0xfc ; call rax
0x00000000001a8280 : xor byte ptr [rbx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000a2b8d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001a7940 : xor byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000a7973 : xor byte ptr [rcx + 0x39], cl ; ret 0x840f
0x0000000000001b20 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000000cee1c : xor byte ptr [rcx + 0xf40247c], cl ; xchg eax, esp ; ret 0xff83
0x0000000000059c6c : xor byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000080840 : xor byte ptr [rcx + rcx*4 + 0x5c], al ; and al, 0x28 ; call rax
0x0000000000055dfb : xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000005517a : xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000055a3b : xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x00000000000e19e2 : xor byte ptr [rcx], 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116223 : xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000000f067c : xor byte ptr [rcx], 0xc0 ; ret
0x000000000018687c : xor byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000001a4850 : xor byte ptr [rcx], cl ; hlt ; jmp rdx
0x00000000000d4c50 : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fd922 : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000000d0ba2 : xor byte ptr [rcx], dl ; je 0xd0bb6 ; xor eax, eax ; ret
0x00000000001b5964 : xor byte ptr [rdi + rsi*8], dh ; jmp qword ptr [rdx]
0x0000000000186fc0 : xor byte ptr [rdi - 4], dl ; jmp qword ptr [rax + 0x10fffc56]
0x00000000001862fc : xor byte ptr [rdi - 5], bl ; call qword ptr [rax]
0x0000000000092f14 : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x000000000018c37d : xor byte ptr [rdx], al ; add byte ptr [rax + rcx - 8], ah ; jmp rsp
0x00000000001918b7 : xor byte ptr [rdx], al ; ret
0x000000000015fd2f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008a7dc : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008bcfe : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000177f64 : xor byte ptr [rsi - 0x11], dl ; call qword ptr [rax]
0x0000000000179ec0 : xor byte ptr [rsi - 0x582c000b], ah ; cmc ; call rbx
0x00000000001a4d80 : xor byte ptr [rsi - 0xc], ah ; jmp qword ptr [rcx]
0x00000000001868f8 : xor byte ptr [rsi], al ; cld ; call qword ptr [rax]
0x0000000000186994 : xor byte ptr [rsi], ch ; cld ; call qword ptr [rax]
0x00000000001782c4 : xor byte ptr [rsp + rdi*8 - 0x3625f01], bl ; call qword ptr [rax]
0x00000000001ad0df : xor ch, 0xff ; sbb al, 0xd ; fdivr dword ptr [rbp - 0xb] ; jmp qword ptr [rdx]
0x00000000000a0df8 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a0e0e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0e30 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0e4e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0e6e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0e94 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0eb0 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a0ed0 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a0ef0 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a0f16 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0f38 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0f56 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a0f76 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a0f92 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a0fb2 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a0fd2 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a0ff2 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1018 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1068 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a0d3e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0d5c : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0d7c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0d9e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a0dbe : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a0dde : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a0c74 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a0c86 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a0c9c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0cb4 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a0cca : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0cdc : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a0cfa : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a0d06 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a0d1c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a0c60 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001a7d41 : xor ch, dh ; jmp qword ptr [rcx]
0x000000000019ada5 : xor ch, dh ; jmp qword ptr [rdx]
0x00000000001a0d5f : xor cl, 0xff ; sbb al, 0xd ; fidivr word ptr [rsi - 0xf] ; jmp qword ptr [rdx]
0x00000000001276ef : xor cl, byte ptr [rax - 0x77] ; jp 0x127701 ; ret
0x0000000000127707 : xor cl, byte ptr [rax - 0x77] ; jp 0x127719 ; ret
0x0000000000127f4f : xor cl, byte ptr [rax - 0x77] ; jp 0x127f61 ; ret
0x0000000000127f67 : xor cl, byte ptr [rax - 0x77] ; jp 0x127f79 ; ret
0x0000000000127f97 : xor cl, byte ptr [rax - 0x77] ; jp 0x127fa9 ; ret
0x0000000000046ffd : xor cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x00000000000b0276 : xor cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000b803e : xor cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000e85e6 : xor cl, byte ptr [rax - 0x7d] ; ret
0x00000000001234e0 : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000d0bb7 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x000000000010c84b : xor cl, byte ptr [rcx - 0x7d] ; ret 0x4d04
0x000000000007f878 : xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x00000000001034f1 : xor cl, ch ; ret
0x000000000009c780 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a20b0 : xor dh, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a7e91 : xor dh, ch ; call qword ptr [rsi]
0x000000000010b89f : xor dh, ch ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000001a7ec1 : xor dh, ch ; jmp qword ptr [rcx]
0x000000000019ad5d : xor dh, ch ; jmp qword ptr [rdx]
0x000000000003f9fb : xor dl, 0xff ; dec dword ptr [rax + 0x63] ; ret 0x3ce9
0x0000000000029183 : xor dl, byte ptr [rip + 0x3d8d4800] ; ret
0x00000000000e2581 : xor dword ptr [rax - 0x75], ecx ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000096bae : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x000000000004c5ec : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000b32a2 : xor dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x1f4f8
0x00000000000b066b : xor dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000000000b2113 : xor dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000189b65 : xor dword ptr [rcx], eax ; add dl, ch ; shr bh, 1 ; jmp rsp
0x00000000001acc64 : xor dword ptr [rdx - 0xb], edi ; jmp qword ptr [rdx]
0x0000000000046336 : xor eax, 0x195 ; call rax
0x00000000000f0492 : xor eax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000006f7eb : xor eax, 0x30 ; call rax
0x0000000000065aac : xor eax, 0x3584af ; call rax
0x00000000000641b4 : xor eax, 0x359da7 ; call rax
0x000000000005ed38 : xor eax, 0x35f223 ; call rax
0x0000000000055fce : xor eax, 0x367f8d ; call rax
0x000000000004efc4 : xor eax, 0x36ef97 ; call rax
0x0000000000049e90 : xor eax, 0x3740cb ; call rax
0x00000000001869a5 : xor eax, 0x37d0fffc ; cld ; call rax
0x00000000000487ae : xor eax, 0x39480037 ; ret
0x000000000008ab67 : xor eax, 0x39fffad0 ; ret
0x000000000006cdd8 : xor eax, 0x48b4800 ; ret 0x8548
0x00000000000e3c97 : xor eax, 0x48fffff6 ; add esp, 0x18 ; ret
0x00000000000eb5b0 : xor eax, 0x70c48348 ; pop rbx ; ret
0x000000000010b545 : xor eax, 0x8545fff5 ; in al, -0x77 ; ret 0x87e
0x000000000010378e : xor eax, 0x8548fff8 ; ror byte ptr [rdi], 0x95 ; ret
0x000000000006f7ff : xor eax, 0x8994eb00 ; ret 0x8b48
0x00000000000caccc : xor eax, 0x8bffffff ; mov byte ptr [r9 - 0x77], r8b ; ret 0xdb84
0x000000000006f850 : xor eax, 0xa6850f00 ; add al, 0 ; add bl, dh ; ret
0x00000000001b5917 : xor eax, 0xd1cfff7 ; xor al, 0xf7 ; jmp qword ptr [rdx]
0x00000000001b595f : xor eax, 0xd1cfff7 ; xor byte ptr [rdi + rsi*8], dh ; jmp qword ptr [rdx]
0x0000000000189bd5 : xor eax, 0xd2900001 ; out dx, eax ; call rsp
0x000000000000245d : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x000000000007c48b : xor eax, 0xffffe480 ; call rax
0x000000000007c08b : xor eax, 0xffffe880 ; call rax
0x000000000007addb : xor eax, 0xfffffb30 ; call rax
0x000000000006fb47 : xor eax, 0xfffffcd4 ; call rax
0x000000000007ab73 : xor eax, 0xfffffd98 ; call rax
0x0000000000021f60 : xor eax, dword ptr [0x30] ; call rax
0x0000000000036b50 : xor eax, dword ptr [0x30] ; jmp rax
0x000000000012f531 : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000082654 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000085d96 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000085ace : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x0000000000085c81 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008b9dc : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x0000000000085d34 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008aac8 : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000082643 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000008aa7f : xor eax, dword ptr [rax] ; mov qword ptr [rip + 0x3361e8], rax ; ret
0x00000000000867bd : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008aa86 : xor eax, dword ptr [rax] ; ret
0x0000000000083ae4 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x83af7 ; ret
0x0000000000080a6c : xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x000000000007deee : xor eax, dword ptr [rax] ; xor edi, edi ; mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000007de9d : xor eax, dword ptr [rax] ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x0000000000103f3a : xor eax, dword ptr [rcx + rcx*4 - 0x40] ; sub eax, r9d ; ret
0x00000000000adf45 : xor eax, dword ptr [rcx - 0x77] ; ret 0x2941
0x00000000000b0669 : xor eax, dword ptr [rdi] ; xor dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000000000105a6d : xor eax, eax ; add r13, 0x30 ; call 0x101d08
0x000000000007c60b : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125de0 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000841de : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000b43e2 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000113742 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012979a : xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001298f7 : xor eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000001365b0 : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000135dbc : xor eax, eax ; add rsp, 0x58 ; ret
0x000000000003c23c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000083480 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002ff50 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000105a9b : xor eax, eax ; call 0x101d04
0x0000000000070ee7 : xor eax, eax ; call r12
0x000000000012d9b9 : xor eax, eax ; call r8
0x000000000012da03 : xor eax, eax ; call rcx
0x000000000012e760 : xor eax, eax ; call rdx
0x0000000000048746 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x48758 ; pop rbx ; ret
0x00000000000d1d44 : xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd1cd9 ; pop rbx ; ret
0x00000000000fd923 : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000c60b3 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000000f4b0c : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xf4b3b ; pop rbx ; ret
0x00000000000c091d : xor eax, eax ; cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x00000000000fbbf4 : xor eax, eax ; cmp rdx, rcx ; cmovae rax, rsi ; ret
0x0000000000107a77 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000f10e1 : xor eax, eax ; cmp rsi, rdx ; ja 0xf10f8 ; ret
0x00000000000ca94b : xor eax, eax ; jmp 0xca152
0x00000000000de81e : xor eax, eax ; jmp 0xde7e7
0x0000000000121500 : xor eax, eax ; jmp rcx
0x0000000000111060 : xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x00000000001176e3 : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000003cd17 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000003cd27 : xor eax, eax ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000096bd8 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000010abc1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000105a38 : xor eax, eax ; mov rdi, r14 ; call 0x101d07
0x00000000001245d7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000003d3ad : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000003763d : xor eax, eax ; nop ; ret
0x000000000007a352 : xor eax, eax ; pop r12 ; ret
0x00000000000aecf4 : xor eax, eax ; pop r14 ; ret
0x00000000000d4ea6 : xor eax, eax ; pop r15 ; ret
0x000000000011f3d3 : xor eax, eax ; pop rbp ; jmp rcx
0x0000000000120b80 : xor eax, eax ; pop rbp ; jmp rdx
0x000000000010ac31 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000002474d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c3fd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073484 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000357b6 : xor eax, eax ; pop rbx ; ret
0x00000000000bcdee : xor eax, eax ; pop rdx ; ret
0x00000000000375d6 : xor eax, eax ; ret
0x0000000000097eae : xor eax, eax ; sub eax, ecx ; ret
0x0000000000072ee0 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000072ef0 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000d1d70 : xor eax, eax ; test cl, 1 ; jne 0xd1d06 ; pop rbx ; ret
0x00000000000a1aa8 : xor eax, eax ; test dh, 0xf0 ; je 0xa1a7b ; movzx eax, dl ; pop rbx ; ret
0x000000000009748c : xor eax, eax ; test dl, dl ; cmovne rax, rdi ; ret
0x00000000000f9f72 : xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xf9f85
0x0000000000037978 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000003d00d : xor eax, edx ; ret
0x000000000003c877 : xor eax, edx ; sub eax, edx ; ret
0x000000000003c88b : xor eax, edx ; sub rax, rdx ; ret
0x00000000001ad76f : xor ebp, 0xffffffff ; sbb al, 0xd ; ret 0xf582
0x00000000000bcbb9 : xor ebp, dword ptr [rcx] ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000002f69c : xor ebp, ebp ; jmp 0x2f6a8
0x00000000000a5494 : xor ebp, ebp ; mov edx, eax ; jmp 0xa5443
0x00000000000a7c34 : xor ebp, ebp ; mov edx, eax ; jmp 0xa7be3
0x00000000000aa234 : xor ebp, ebp ; mov edx, eax ; jmp 0xaa1e3
0x00000000001896a1 : xor ebp, edi ; call rsp
0x000000000019b9a9 : xor ebp, esi ; call qword ptr [rsi]
0x00000000001a7db9 : xor ebp, esi ; jmp qword ptr [rcx]
0x000000000019ae35 : xor ebp, esi ; jmp qword ptr [rdx]
0x000000000006e569 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ebe17 : xor ebx, eax ; sub rsp, 8 ; call 0x1080a8
0x000000000012e9cb : xor ebx, ebx ; call 0x12ac64
0x00000000000dd9f0 : xor ebx, ebx ; xor r10d, r10d ; jmp 0xdda12
0x00000000000c253e : xor ebx, esi ; ret
0x00000000001a0e2f : xor ecx, 0x840d1cff ; jg 0x1a0e30 ; jmp qword ptr [rdx]
0x00000000001007db : xor ecx, 0x8948002b ; ret 0xbae9
0x000000000017818d : xor ecx, 0xf18390ff ; jmp rax
0x00000000000c4f5f : xor ecx, 0xffffffff ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x0000000000038fc1 : xor ecx, dword ptr [rax + 0x39] ; ret
0x00000000000ba09c : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000103bcb : xor ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000019b4f4 : xor ecx, dword ptr [rdi - 0x12] ; jmp qword ptr [rdx]
0x00000000000bcece : xor ecx, ecx ; jmp 0xbce98
0x000000000011ce8e : xor edi, dword ptr [0x30] ; call rax
0x00000000001790ec : xor edi, ebx ; call qword ptr [rax]
0x00000000000f3c08 : xor edi, ecx ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000080a6e : xor edi, edi ; call qword ptr [rax]
0x000000000007def0 : xor edi, edi ; mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000007de9f : xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x000000000019a894 : xor edi, esi ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001869a1 : xor edi, esp ; call rax
0x0000000000186ac5 : xor edi, esp ; jmp rax
0x0000000000031e1a : xor edx, dword ptr [0x30] ; call rdx
0x000000000010a449 : xor edx, dword ptr [rax - 0xf] ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000001b0c : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000b4a21 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000738b9 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dd9f3 : xor edx, edx ; jmp 0xdda0f
0x00000000000886c0 : xor edx, edx ; mov eax, edx ; ret
0x0000000000096c7d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000007ba99 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000008aa63 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000070270 : xor edx, edx ; pop r12 ; jmp rax
0x000000000007387c : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x00000000000fa154 : xor edx, edx ; test byte ptr [rsp + 0x29], 0x80 ; setne dl ; jmp 0xfa138
0x0000000000189e81 : xor esi, eax ; call rsp
0x00000000001a7f39 : xor esi, ebp ; jmp qword ptr [rcx]
0x00000000001b59f5 : xor esi, edi ; jmp qword ptr [rdx]
0x000000000018bbb1 : xor esi, edi ; jmp rsp
0x00000000000828d1 : xor esi, edx ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x00000000000dbb1e : xor esi, esi ; call 0x8c4b6
0x00000000000f5be2 : xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000f5c07 : xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f5c2b : xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000f5c4b : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f5bbd : xor esi, esi ; mov rdi, rbp ; call rbx
0x00000000001b5cd4 : xor esi, r15d ; jmp qword ptr [rdx]
0x000000000018699d : xor esp, edi ; call rax
0x0000000000186a3d : xor esp, edi ; jmp qword ptr [rax]
0x0000000000186a5d : xor esp, edi ; jmp rax
0x00000000000c75f1 : xor esp, esp ; jmp 0xc75bb
0x000000000012e9c7 : xor esp, esp ; push rbp ; push rbx ; xor ebx, ebx ; call 0x12ac68
0x00000000000dd9f2 : xor r10d, r10d ; jmp 0xdda10
0x00000000000c75f0 : xor r12d, r12d ; jmp 0xc75bc
0x000000000012e9c6 : xor r12d, r12d ; push rbp ; push rbx ; xor ebx, ebx ; call 0x12ac69
0x000000000010b89e : xor r14b, bpl ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x0000000000070ee6 : xor r8d, r8d ; call r12
0x00000000001034f0 : xor r9b, bpl ; ret
0x00000000000d0bb6 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x00000000000f0491 : xor rax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000021f5f : xor rax, qword ptr [0x30] ; call rax
0x0000000000036b4f : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000021f5e : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000036b4e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000088b75 : xor rax, rax ; ret
0x000000000003c88a : xor rax, rdx ; sub rax, rdx ; ret
0x00000000001ad76e : xor rbp, 0xffffffffffffffff ; sbb al, 0xd ; ret 0xf582
0x000000000019b9a8 : xor rbp, rsi ; call qword ptr [rsi]
0x000000000011ce8d : xor rdi, qword ptr [0x30] ; call rax
0x000000000011ce8c : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000031e19 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000031e18 : xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000007026f : xor rdx, rdx ; pop r12 ; jmp rax

Unique gadgets found: 21817
