import angr

#Must be the top of a basic block
end = 0x4014ae
start = 0x401479
avoid = 0x4014c7
string_addr = 0x603780

#Start at phase1
p = angr.Project("./bomb", load_options={'auto_load_libs': False})

state = p.factory.blank_state(addr=start)

#Grab any address on the stack from the start of phase1
buf = angr.claripy.BVS("foo",60*8)

#Store
state.memory.store(string_addr, buf)

#Constrain register to point to our input
state.add_constraints(state.regs.rdi == string_addr)

path = p.factory.path(state=state)

#Do the exploration
explorer = p.surveyors.Explorer(start=path, find=(end,), avoid=(avoid,), enable_veritesting=True)
explorer.run()

if explorer.found:
    result = explorer.found[0].state
    print result.se.any_str(buf)
else:
    print "No Sol"
